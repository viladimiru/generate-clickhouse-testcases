{"total":8116,"result":[{"query":"CREATE TABLE id_values ENGINE MergeTree ORDER BY id1 AS SELECT arrayJoin(range(500000)) AS id1, arrayJoin(range(1000)) AS id2;","fileName":"../ClickHouse/tests/queries/0_stateless/03236_squashing_high_memory.sql","errors":[]},{"query":"CREATE TABLE test_table ENGINE MergeTree ORDER BY id AS SELECT id_values.id1             AS id,\nstring_values.string_val1 AS string_val1,\nstring_values.string_val2 AS string_val2\nFROM id_values\nJOIN (SELECT arrayJoin(range(10)) AS id1,\n'qwe'                AS string_val1,\n'asd'                AS string_val2) AS string_values\nON id_values.id1 = string_values.id1\nSETTINGS join_algorithm = 'hash';","fileName":"../ClickHouse/tests/queries/0_stateless/03236_squashing_high_memory.sql","errors":[]},{"query":"CREATE TABLE t (st FixedString(54)) ENGINE=MergeTree ORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/03235_groupArray_string_consistency.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (st FixedString(54)) ENGINE=MergeTree ORDER BY ()'","startColumn":63,"startLine":1,"endColumn":64,"endLine":1}]},{"query":"create table test (map Map(String, DateTime)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03231_values_respect_format_settings_in_fields_conversion.sql","errors":[]},{"query":"CREATE TABLE checks (\n\\`check_name\\` LowCardinality(String),\n\\`check_status\\` LowCardinality(String),\n\\`check_start_time\\` DateTime,\n\\`test_name\\` LowCardinality(String),\n\\`test_status\\` LowCardinality(String),\n)\nENGINE = ReplicatedMergeTree('/clickhouse/{database}/checks', '{replica}')\nORDER BY check_start_time;","fileName":"../ClickHouse/tests/queries/0_stateless/03231_pr_reverse_in_order.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE checks (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE ANIMAL ( ANIMAL Nullable(String) ) ENGINE = ReplicatedMergeTree('/clickhouse/test/{database}/animal', 'r1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03231_pr_duplicate_announcement_2.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=ReplicatedMergeTree('/clickhouse/test/{database}/test_table', 'r1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03231_pr_duplicate_announcement.sql","errors":[]},{"query":"CREATE TABLE test_table_for_in (\nid UInt64\n) ENGINE=ReplicatedMergeTree('/clickhouse/test/{database}/test_table_for_in', 'r1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03231_pr_duplicate_announcement.sql","errors":[]},{"query":"CREATE TABLE t0 (c0 Int) ENGINE = AggregatingMergeTree() ORDER BY (c0);","fileName":"../ClickHouse/tests/queries/0_stateless/03231_dynamic_not_safe_primary_key.sql","errors":[]},{"query":"CREATE TABLE t1 (c0 Array(Dynamic), c1 Int) ENGINE = MergeTree() ORDER BY (c0);","fileName":"../ClickHouse/tests/queries/0_stateless/03231_dynamic_not_safe_primary_key.sql","errors":[]},{"query":"CREATE TABLE a (x Int64, y Int64 MATERIALIZED 1 SETTINGS (max_compress_block_size = 30000)) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/03231_alter_no_properties_before_remove_modify_reset.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE a (x Int64, y Int64 MATERIALIZED 1 SETTINGS'","startColumn":48,"startLine":1,"endColumn":56,"endLine":1}]},{"query":"CREATE TABLE projections (\nkey String,\nd1 Int,\nPROJECTION improved_sorting_key (\nSELECT *\nORDER BY d1, key\n)\n)\nEngine=MergeTree()\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/03230_system_projections.sql","errors":[]},{"query":"CREATE TABLE projections_2 (\nname String,\nfrequency UInt64,\nPROJECTION agg (\nSELECT name, max(frequency) max_frequency\nGROUP BY name\n),\nPROJECTION agg_no_key (\nSELECT max(frequency) max_frequency\n)\n)\nEngine=MergeTree()\nORDER BY name;","fileName":"../ClickHouse/tests/queries/0_stateless/03230_system_projections.sql","errors":[]},{"query":"CREATE TABLE rawtable (\n\\`Attributes\\` Map(String, String),\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03230_subcolumns_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE rawtable (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE MATERIALIZED VIEW raw_to_attributes_mv TO attributes (\n\\`AttributeKeys\\` Array(String),\n\\`AttributeValues\\` Array(String)\n)\nAS SELECT\nmapKeys(Attributes) AS AttributeKeys,\nmapValues(Attributes) AS AttributeValues\nFROM rawtable;","fileName":"../ClickHouse/tests/queries/0_stateless/03230_subcolumns_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW raw_to_attributes_mv TO attributes ('","startColumn":60,"startLine":1,"endColumn":61,"endLine":1}]},{"query":"CREATE TABLE attributes (\n\\`AttributeKeys\\` Array(String),\n\\`AttributeValues\\` Array(String)\n)\nENGINE = ReplacingMergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03230_subcolumns_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE attributes (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE uk_price_paid (\nprice UInt32,\ndate Date,\npostcode1 LowCardinality(String),\npostcode2 LowCardinality(String),\ntype Enum('terraced' = 1, 'semi-detached' = 2, 'detached' = 3, 'flat' = 4, 'other' = 0),\nis_new UInt8,\nduration Enum('freehold' = 1, 'leasehold' = 2, 'unknown' = 0),\naddr1 String,\naddr2 String,\nstreet LowCardinality(String),\nlocality LowCardinality(String),\ntown LowCardinality(String),\ndistrict LowCardinality(String),\ncounty LowCardinality(String),\nINDEX county_index county TYPE set(10) GRANULARITY 1,\nPROJECTION town_date_projection\n(\nSELECT \ntown,\ndate,\nprice\nORDER BY \ntown,\ndate\n),\nPROJECTION handy_aggs_projection\n(\nSELECT \navg(price),\nmax(price),\nsum(price)\nGROUP BY town\n)\n)\nENGINE = MergeTree\nORDER BY (postcode1, postcode2, date);","fileName":"../ClickHouse/tests/queries/0_stateless/03230_output_format_identifier_quoting_style.sql","errors":[]},{"query":"CREATE TABLE prices_by_year_dest ( price UInt32,\ndate Date,\naddr1 String,\naddr2 String,\nstreet LowCardinality(String),\ntown LowCardinality(String),\ndistrict LowCardinality(String),\ncounty LowCardinality(String)\n)\nENGINE = MergeTree\nPRIMARY KEY (town, date)\nPARTITION BY toYear(date);","fileName":"../ClickHouse/tests/queries/0_stateless/03230_output_format_identifier_quoting_style.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW prices_by_year_view TO prices_by_year_dest\nAS\nSELECT\nprice,\ndate,\naddr1,\naddr2,\nstreet,\ntown,\ndistrict,\ncounty\nFROM uk_price_paid;","fileName":"../ClickHouse/tests/queries/0_stateless/03230_output_format_identifier_quoting_style.sql","errors":[]},{"query":"CREATE TABLE uk_prices_aggs_dest ( month Date,\nmin_price SimpleAggregateFunction(min, UInt32),\nmax_price SimpleAggregateFunction(max, UInt32),\nvolume AggregateFunction(count, UInt32),\navg_price AggregateFunction(avg, UInt32)\n)\nENGINE = AggregatingMergeTree\nPRIMARY KEY month;","fileName":"../ClickHouse/tests/queries/0_stateless/03230_output_format_identifier_quoting_style.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW uk_prices_aggs_view TO uk_prices_aggs_dest\nAS\nWITH\ntoStartOfMonth(date) AS month\nSELECT\nmonth,\nminSimpleState(price) AS min_price,\nmaxSimpleState(price) AS max_price,\ncountState(price) AS volume,\navgState(price) AS avg_price\nFROM uk_price_paid\nGROUP BY month;","fileName":"../ClickHouse/tests/queries/0_stateless/03230_output_format_identifier_quoting_style.sql","errors":[]},{"query":"CREATE TABLE uk_mortgage_rates ( date DateTime64,\nvariable Decimal32(2),\nfixed Decimal32(2),\nbank Decimal32(2)\n)\nENGINE Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03230_output_format_identifier_quoting_style.sql","errors":[]},{"query":"CREATE DICTIONARY uk_mortgage_rates_dict ( date DateTime64,\nvariable Decimal32(2),\nfixed Decimal32(2),\nbank Decimal32(2)\n)\nPRIMARY KEY date\nSOURCE(\nCLICKHOUSE(TABLE 'uk_mortgage_rates')\n)\nLAYOUT(COMPLEX_KEY_HASHED())\nLIFETIME(2628000000);","fileName":"../ClickHouse/tests/queries/0_stateless/03230_output_format_identifier_quoting_style.sql","errors":[]},{"query":"CREATE TABLE t (letter String) ENGINE=MergeTree order by () partition by letter;","fileName":"../ClickHouse/tests/queries/0_stateless/03230_anyHeavy_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (letter String) ENGINE=MergeTree order by ()'","startColumn":58,"startLine":1,"endColumn":59,"endLine":1}]},{"query":"CREATE TABLE a (x String, y String MATERIALIZED 'str') ENGINE = ReplicatedMergeTree('/clickhouse/{database}/a', 'r1') ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/03230_alter_with_mixed_mutations_and_remove_materialized.sql","errors":[]},{"query":"CREATE TABLE test_new_json_type(id UInt32, data JSON, version UInt64) ENGINE=ReplacingMergeTree(version) ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03229_json_structure_comparison.sql","errors":[]},{"query":"CREATE TABLE t_async_insert_alter (id Int64, v1 Int64) ENGINE = MergeTree ORDER BY id SETTINGS async_insert = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03229_async_insert_alter.sql","errors":[]},{"query":"CREATE TABLE t_local_1 (a UInt32) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/03228_virtual_column_merge_dist.sql","errors":[]},{"query":"CREATE TABLE t_local_2 (a UInt32) ENGINE = MergeTree ORDER BY  a;","fileName":"../ClickHouse/tests/queries/0_stateless/03228_virtual_column_merge_dist.sql","errors":[]},{"query":"CREATE TABLE t_merge AS t_local_1 ENGINE = Merge(currentDatabase(), '^(t_local_1|t_local_2)\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/03228_virtual_column_merge_dist.sql","errors":[]},{"query":"CREATE TABLE t_distr AS t_local_1 ENGINE = Distributed('test_shard_localhost', currentDatabase(), t_merge, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/03228_virtual_column_merge_dist.sql","errors":[]},{"query":"CREATE TABLE test_new_json_type(id UInt32, data JSON, version UInt64) ENGINE=ReplacingMergeTree(version) ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03228_variant_permutation_issue.sql","errors":[]},{"query":"CREATE TABLE test_new_json_type(id Nullable(UInt32), data JSON, version UInt64) ENGINE=ReplacingMergeTree(version) ORDER BY id settings allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03228_variant_permutation_issue.sql","errors":[]},{"query":"CREATE TABLE table1 (number UInt64) ENGINE=MergeTree ORDER BY number SETTINGS index_granularity=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03228_pr_subquery_view_order_by.sql","errors":[]},{"query":"CREATE VIEW view1 AS SELECT number FROM table1;","fileName":"../ClickHouse/tests/queries/0_stateless/03228_pr_subquery_view_order_by.sql","errors":[]},{"query":"CREATE TABLE test_left (a Int64, b String, c LowCardinality(String)) ENGINE = MergeTree() ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/03228_join_to_rerange_right_table.sql","errors":[]},{"query":"CREATE TABLE test_right (a Int64, b String, c LowCardinality(String)) ENGINE = MergeTree() ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/03228_join_to_rerange_right_table.sql","errors":[]},{"query":"CREATE TABLE tab ( v0 String,\nv1 String,\nINDEX idx (v0, v1) TYPE full_text GRANULARITY 1)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03228_full_text_with_multi_col.sql","errors":[]},{"query":"CREATE TABLE t_async_insert_params (id UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03228_async_insert_query_params_bad_type.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS table_name (\nid UInt64\n)\nENGINE = MergeTree()\nORDER BY cityHash64(id)\nSAMPLE BY cityHash64(id);","fileName":"../ClickHouse/tests/queries/0_stateless/03227_test_sample_n.sql","errors":[]},{"query":"create table test (json JSON(SKIP REGEXP '[]')) engine=Memory(); -- {serverError CANNOT_COMPILE_REGEXP} create table test (json JSON(SKIP REGEXP '+')) engine=Memory(); -- {serverError CANNOT_COMPILE_REGEXP};","fileName":"../ClickHouse/tests/queries/0_stateless/03227_json_invalid_regexp.sql","errors":[{"message":"no viable alternative at input 'create table test (json JSON(SKIP REGEXP '[]''","startColumn":41,"startLine":1,"endColumn":45,"endLine":1}]},{"query":"create table test (json JSON) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03227_dynamic_subcolumns_enumerate_streams.sql","errors":[]},{"query":"create table test_json_dynamic_aggregate_functions (json JSON(a1 String, max_dynamic_paths=2, max_dynamic_types=2)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03227_distinct_dynamic_types_json_paths.sql","errors":[]},{"query":"create table test (d Dynamic, json JSON) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03226_alter_update_dynamic_json_not_supported.sql","errors":[]},{"query":"create table test (s String) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03225_alter_to_json_not_supported.sql","errors":[]},{"query":"create table test (s Array(String)) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03225_alter_to_json_not_supported.sql","errors":[]},{"query":"create table test (s Tuple(String, String)) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03225_alter_to_json_not_supported.sql","errors":[]},{"query":"create table test (json JSON(max_dynamic_paths=8)) engine=MergeTree order by tuple() settings min_rows_for_wide_part = 1, min_bytes_for_wide_part = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03224_nested_json_merges_new_type_in_shared_data.sql","errors":[]},{"query":"create table test (json JSON(max_dynamic_paths=1)) engine=MergeTree order by tuple() settings min_rows_for_wide_part = 1, min_bytes_for_wide_part = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03224_json_merges_new_type_in_shared_data.sql","errors":[]},{"query":"create table null as system.one engine=Null;","fileName":"../ClickHouse/tests/queries/0_stateless/03223_system_tables_set_not_ready.sql","errors":[{"message":"no viable alternative at input 'create table null'","startColumn":13,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"create table dist as null engine=Distributed(test_cluster_two_shards, currentDatabase(), 'null', rand());","fileName":"../ClickHouse/tests/queries/0_stateless/03223_system_tables_set_not_ready.sql","errors":[{"message":"no viable alternative at input 'create table dist as null'","startColumn":21,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"create table rocksdb (key Int) engine=EmbeddedRocksDB() primary key key;","fileName":"../ClickHouse/tests/queries/0_stateless/03223_system_tables_set_not_ready.sql","errors":[]},{"query":"create table mt (key Int) engine=MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/03223_system_tables_set_not_ready.sql","errors":[]},{"query":"create table rep1 (key Int) engine=ReplicatedMergeTree('/{database}/rep', '{table}') order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/03223_system_tables_set_not_ready.sql","errors":[]},{"query":"create table rep2 (key Int) engine=ReplicatedMergeTree('/{database}/rep', '{table}') order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/03223_system_tables_set_not_ready.sql","errors":[]},{"query":"CREATE TABLE test__fuzz_22 (k Float32, v String) ENGINE = MergeTree ORDER BY k SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03223_parallel_replicas_read_task_size_overflow_bug.sql","errors":[]},{"query":"create table test (json JSON(max_dynamic_paths=8)) engine=MergeTree order by tuple() settings min_bytes_for_wide_part=1, min_rows_for_wide_part=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03223_nested_json_in_shared_data_merges.sql","errors":[]},{"query":"CREATE TABLE t1 (\\`a\\` Int64, \\`b\\` Int64) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/03223_analyzer_with_cube_fuzz.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t2 (\\`key\\` Int32, \\`val\\` Int64) ENGINE = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/03223_analyzer_with_cube_fuzz.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE test (k UInt64, v String) ENGINE = MergeTree\nORDER BY k\nSETTINGS index_granularity=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03222_pr_asan_index_granularity.sql","errors":[]},{"query":"CREATE TABLE test__fuzz_22 (k Float32, v String) ENGINE = ReplicatedMergeTree('/clickhouse/03222/{database}/test__fuzz_22', 'r1') ORDER BY k SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03222_parallel_replicas_min_marks_to_read_overflow.sql","errors":[]},{"query":"CREATE TABLE test_00808 (\n\\`date\\` Date,\n\\`id\\` Int8,\n\\`name\\` String,\n\\`value\\` Int64,\n\\`sign\\` Int8\n)\nENGINE = CollapsingMergeTree(sign)\nORDER BY (id, date);","fileName":"../ClickHouse/tests/queries/0_stateless/03222_parallel_replicas_final_in_subquery.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_00808 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table test (json JSON) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03222_json_squashing.sql","errors":[]},{"query":"create table test (json JSON(max_dynamic_paths=2)) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03222_json_squashing.sql","errors":[]},{"query":"create table test (json JSON(max_dynamic_paths=8)) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03222_json_squashing.sql","errors":[]},{"query":"CREATE TABLE table1(col AggregateFunction(uniq, UInt64)) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03222_json_empty_as_default.sql","errors":[]},{"query":"CREATE TABLE table2(UserID UInt64) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03222_json_empty_as_default.sql","errors":[]},{"query":"CREATE TABLE table1(address IPv6 DEFAULT toIPv6('2001:db8:3333:4444:5555:6666:7777:8888')) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03222_json_empty_as_default.sql","errors":[]},{"query":"create database if not exists shard_0;","fileName":"../ClickHouse/tests/queries/0_stateless/03222_datetime64_small_value_const.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_0;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create database if not exists shard_1;","fileName":"../ClickHouse/tests/queries/0_stateless/03222_datetime64_small_value_const.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_1;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table shard_0.dt64_03222(id UInt64, dt DateTime64(3)) engine = MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/03222_datetime64_small_value_const.sql","errors":[]},{"query":"create table shard_1.dt64_03222(id UInt64, dt DateTime64(3)) engine = MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/03222_datetime64_small_value_const.sql","errors":[]},{"query":"create table distr_03222_dt64 (id UInt64, dt DateTime64(3)) engine = Distributed(test_cluster_two_shards_different_databases, '', dt64_03222);","fileName":"../ClickHouse/tests/queries/0_stateless/03222_datetime64_small_value_const.sql","errors":[]},{"query":"CREATE TABLE 03222_timeseries_table1 ENGINE = TimeSeries FORMAT Null;","fileName":"../ClickHouse/tests/queries/0_stateless/03222_create_timeseries_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03222'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03222_timeseries_table2 ENGINE = TimeSeries SETTINGS store_min_time_and_max_time = 1, aggregate_min_time_and_max_time = 1 FORMAT Null;","fileName":"../ClickHouse/tests/queries/0_stateless/03222_create_timeseries_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03222'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03222_timeseries_table4 ENGINE = TimeSeries SETTINGS store_min_time_and_max_time = 0 FORMAT Null;","fileName":"../ClickHouse/tests/queries/0_stateless/03222_create_timeseries_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03222'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW 03221_rmv REFRESH AFTER 10 SECOND\n(\nx UInt64\n)\nENGINE = Memory\nAS SELECT number AS x\nFROM numbers(3)\nUNION ALL\nSELECT rand64() AS x;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_refreshable_matview_progress.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW 03221'","startColumn":25,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE t_merge_profile_events_1 (id UInt64, v1 UInt64, v2 UInt64) ENGINE = MergeTree ORDER BY id\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_merge_profile_events.sql","errors":[]},{"query":"CREATE TABLE t_merge_profile_events_2 (id UInt64, v1 UInt64, v2 UInt64) ENGINE = MergeTree ORDER BY id\nSETTINGS min_bytes_for_wide_part = 0, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_merge_profile_events.sql","errors":[]},{"query":"CREATE TABLE t_merge_profile_events_3 (id UInt64, v1 UInt64, v2 UInt64, PROJECTION p (SELECT v2, v2 * v2, v2 * 2, v2 * 10, v1 ORDER BY v1)) ENGINE = MergeTree ORDER BY id\nSETTINGS min_bytes_for_wide_part = 0, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_merge_profile_events.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS report_metrics_v2 (\n\t\\`a\\` UInt64\n) Engine = MergeTree()\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_key_condition_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS report_metrics_v2 (\\n\\t\\'","startColumn":1,"startLine":2,"endColumn":2,"endLine":2}]},{"query":"CREATE TABLE example_table (id UInt32) ENGINE=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_create_if_not_exists_setting.sql","errors":[]},{"query":"CREATE TABLE example_table (id UInt32) ENGINE=MergeTree() ORDER BY id; -- { serverError TABLE_ALREADY_EXISTS } DROP DATABASE IF EXISTS example_database;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_create_if_not_exists_setting.sql","errors":[]},{"query":"CREATE DATABASE example_database;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_create_if_not_exists_setting.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE example_database;'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE DATABASE example_database; -- { serverError DATABASE_ALREADY_EXISTS } SET create_if_not_exists=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_create_if_not_exists_setting.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE example_database;'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE example_table (id UInt32) ENGINE=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_create_if_not_exists_setting.sql","errors":[]},{"query":"CREATE TABLE example_table (id UInt32) ENGINE=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_create_if_not_exists_setting.sql","errors":[]},{"query":"CREATE DATABASE example_database;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_create_if_not_exists_setting.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE example_database;'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE DATABASE example_database;","fileName":"../ClickHouse/tests/queries/0_stateless/03221_create_if_not_exists_setting.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE example_database;'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE t_primary_index_memory (s String) ENGINE = MergeTree ORDER BY s SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03217_primary_index_memory_leak.sql","errors":[]},{"query":"CREATE TABLE test_03217_system_tables_replica_1(x UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_03217_system_tables_replica', 'r1')\nORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/03217_filtering_in_system_tables.sql","errors":[]},{"query":"CREATE TABLE test_03217_system_tables_replica_2(x UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_03217_system_tables_replica', 'r2')\nORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/03217_filtering_in_system_tables.sql","errors":[]},{"query":"CREATE TABLE test_03217_merge_replica_1(x UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_03217_merge_replica', 'r1')\nORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/03217_filtering_in_storage_merge.sql","errors":[]},{"query":"CREATE TABLE test_03217_merge_replica_2(x UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_03217_merge_replica', 'r2')\nORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/03217_filtering_in_storage_merge.sql","errors":[]},{"query":"CREATE TABLE test_03217_all_replicas (x UInt32) ENGINE = Merge(currentDatabase(), 'test_03217_merge_replica_*');","fileName":"../ClickHouse/tests/queries/0_stateless/03217_filtering_in_storage_merge.sql","errors":[]},{"query":"CREATE VIEW 03215_test_v AS WITH RECURSIVE test_table AS\n(\nSELECT 1 AS number\nUNION ALL\nSELECT number + 1\nFROM test_table\nWHERE number < 100\n)\nSELECT sum(number)\nFROM test_table;","fileName":"../ClickHouse/tests/queries/0_stateless/03215_view_with_recursive.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW 03215'","startColumn":12,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE VIEW 03215_multi_v AS WITH RECURSIVE\ntask AS\n(\nSELECT\nnumber AS task_id,\nnumber - 1 AS parent_id\nFROM numbers(10)\n),\nrtq AS\n(\nSELECT\ntask_id,\nparent_id\nFROM task AS t\nWHERE t.parent_id = 1\nUNION ALL\nSELECT\nt.task_id,\nt.parent_id\nFROM task AS t, rtq AS r\nWHERE t.parent_id = r.task_id\n)\nSELECT count()\nFROM rtq;","fileName":"../ClickHouse/tests/queries/0_stateless/03215_view_with_recursive.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW 03215'","startColumn":12,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"create table test (id UInt64) engine=MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/03215_validate_type_in_alter_add_modify_column.sql","errors":[]},{"query":"CREATE FUNCTION 03215_udf_with_union AS () -> ( SELECT sum(s)\nFROM\n(\nSELECT 1 AS s\nUNION ALL\nSELECT 1 AS s\n)\n);","fileName":"../ClickHouse/tests/queries/0_stateless/03215_udf_with_union.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE test_parquet (col1 int, col2 String) ENGINE=File(Parquet);","fileName":"../ClickHouse/tests/queries/0_stateless/03215_parquet_index.sql","errors":[]},{"query":"CREATE TABLE test_parquet (col1 int, col2 String) ENGINE=File(Parquet)  SETTINGS output_format_parquet_use_custom_encoder=false, output_format_parquet_write_page_index=true;","fileName":"../ClickHouse/tests/queries/0_stateless/03215_parquet_index.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_parquet (col1 int, col2 String) ENGINE=File(Parquet)  SETTINGS output_format_parquet_use_custom_encoder=false'","startColumn":122,"startLine":1,"endColumn":127,"endLine":1}]},{"query":"CREATE TABLE test_parquet (col1 int, col2 String) ENGINE=File(Parquet)  SETTINGS output_format_parquet_use_custom_encoder=false, output_format_parquet_write_page_index=false;","fileName":"../ClickHouse/tests/queries/0_stateless/03215_parquet_index.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_parquet (col1 int, col2 String) ENGINE=File(Parquet)  SETTINGS output_format_parquet_use_custom_encoder=false'","startColumn":122,"startLine":1,"endColumn":127,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS t (shape Array(Array(Tuple(Float64, Float64))), wkt_string String, ord Float64) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03215_multilinestring_geometry.sql","errors":[]},{"query":"CREATE TABLE t (x Int8) ENGINE MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/03215_key_condition_bug.sql","errors":[]},{"query":"create table t (number UInt64) engine MergeTree order by number;","fileName":"../ClickHouse/tests/queries/0_stateless/03215_analyzer_replace_with_dummy_tables.sql","errors":[]},{"query":"CREATE TABLE test__fuzz_21 (\n\\`x\\` Decimal(18, 10)\n)\nENGINE = MergeTree\nORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/03215_analyzer_materialized_constants_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test__fuzz_21 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table test (json JSON(a Dynamic)) engine=MergeTree order by tuple() settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03214_json_typed_dynamic_path.sql","errors":[]},{"query":"create table test (json JSON(a Dynamic)) engine=MergeTree order by tuple() settings min_rows_for_wide_part=10000000, min_bytes_for_wide_part=10000000;","fileName":"../ClickHouse/tests/queries/0_stateless/03214_json_typed_dynamic_path.sql","errors":[]},{"query":"CREATE TABLE a (key Nullable(String)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03214_join_on_tuple_comparison_elimination_bug.sql","errors":[]},{"query":"CREATE TABLE b (key Nullable(String)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03214_join_on_tuple_comparison_elimination_bug.sql","errors":[]},{"query":"CREATE TABLE testnull (\n\\`a\\` Nullable(String),\n\\`b\\` Nullable(String),\n\\`c\\` Nullable(String)\n)\nENGINE = MergeTree\nPARTITION BY tuple()\nORDER BY c\nSETTINGS index_granularity = 8192, allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03214_count_distinct_null_key_memory_leak.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE testnull (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE product_groups ( \tgroup_id Int64,\n\tgroup_name String\n) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03213_denseRank_percentRank_alias.sql","errors":[]},{"query":"CREATE TABLE products ( \tproduct_id Int64,\n\tproduct_name String,\n\tprice DECIMAL(11, 2),\n\tgroup_id Int64\n) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03213_denseRank_percentRank_alias.sql","errors":[]},{"query":"create table t (d Dynamic) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03212_variant_dynamic_cast_or_default.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/03212_optimize_with_constraints_logical_error.sql","errors":[]},{"query":"CREATE TABLE t0 (c0 Int32, c1 Int32, c2 String) ENGINE = Log() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03211_convert_outer_join_to_inner_join_anti_join.sql","errors":[]},{"query":"CREATE TABLE source  (\nName String,\nValue Int64\n) ENGINE = MergeTree ORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/03210_variant_with_aggregate_function_type.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE source  (\\nName String,\\nValue Int64\\n) ENGINE = MergeTree ORDER BY ()'","startColumn":31,"startLine":4,"endColumn":32,"endLine":4}]},{"query":"CREATE TABLE test_agg_variant (\nName String,\nValue Variant(AggregateFunction(uniqExact, Int64), AggregateFunction(avg, Int64))\n)\nENGINE = MergeTree\nORDER BY (Name);","fileName":"../ClickHouse/tests/queries/0_stateless/03210_variant_with_aggregate_function_type.sql","errors":[]},{"query":"CREATE TABLE a (\n\\`a_id\\` String\n)\nENGINE = MergeTree\nPARTITION BY tuple()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03210_optimize_rewrite_aggregate_function_with_if_return_type_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE a (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE b (\n\\`b_id\\` AggregateFunction(uniq, Nullable(String))\n)\nENGINE = AggregatingMergeTree\nPARTITION BY tuple()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03210_optimize_rewrite_aggregate_function_with_if_return_type_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE b (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE MATERIALIZED VIEW mv TO b (\n\\`b_id\\` AggregateFunction(uniq, Nullable(String))\n)\nAS SELECT uniqState(if(a_id != '', a_id, NULL)) AS b_id\nFROM a;","fileName":"../ClickHouse/tests/queries/0_stateless/03210_optimize_rewrite_aggregate_function_with_if_return_type_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv TO b ('","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"create table test (d Dynamic) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03210_dynamic_squashing.sql","errors":[]},{"query":"create table test (d Dynamic(max_types=1)) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03210_dynamic_squashing.sql","errors":[]},{"query":"CREATE TABLE user_country ( user_id UInt64,\ncountry String\n)\nENGINE = ReplacingMergeTree\nORDER BY user_id;","fileName":"../ClickHouse/tests/queries/0_stateless/03210_convert_outer_join_to_inner_join_any_join.sql","errors":[]},{"query":"CREATE TABLE user_transactions ( user_id UInt64,\ntransaction_id String\n)\nENGINE = MergeTree\nORDER BY user_id;","fileName":"../ClickHouse/tests/queries/0_stateless/03210_convert_outer_join_to_inner_join_any_join.sql","errors":[]},{"query":"create table date_table_pv (id Int32, dt Date) engine = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03209_parameterized_view_with_non_literal_params.sql","errors":[]},{"query":"create view date_pv as select * from date_table_pv where dt =  {dtparam:Date};","fileName":"../ClickHouse/tests/queries/0_stateless/03209_parameterized_view_with_non_literal_params.sql","errors":[{"message":"no viable alternative at input 'create view date_pv as select * from date_table_pv where dt =  {'","startColumn":63,"startLine":1,"endColumn":64,"endLine":1}]},{"query":"create table date32_table_pv (id Int32, dt Date32) engine = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03209_parameterized_view_with_non_literal_params.sql","errors":[]},{"query":"create view date32_pv as select * from date32_table_pv where dt =  {dtparam:Date32};","fileName":"../ClickHouse/tests/queries/0_stateless/03209_parameterized_view_with_non_literal_params.sql","errors":[{"message":"no viable alternative at input 'create view date32_pv as select * from date32_table_pv where dt =  {'","startColumn":67,"startLine":1,"endColumn":68,"endLine":1}]},{"query":"create table uuid_table_pv (id Int32, uu UUID) engine = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03209_parameterized_view_with_non_literal_params.sql","errors":[]},{"query":"create view uuid_pv as select * from uuid_table_pv where uu =  {uuidparam:UUID};","fileName":"../ClickHouse/tests/queries/0_stateless/03209_parameterized_view_with_non_literal_params.sql","errors":[{"message":"no viable alternative at input 'create view uuid_pv as select * from uuid_table_pv where uu =  {'","startColumn":63,"startLine":1,"endColumn":64,"endLine":1}]},{"query":"create view date_pv2 as select * from date_table_pv where dt = {dtparam:Date} and id = {intparam:Int32};","fileName":"../ClickHouse/tests/queries/0_stateless/03209_parameterized_view_with_non_literal_params.sql","errors":[{"message":"no viable alternative at input 'create view date_pv2 as select * from date_table_pv where dt = {'","startColumn":63,"startLine":1,"endColumn":64,"endLine":1}]},{"query":"create table ipv4_table_pv (id Int32, ipaddr IPv4) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03209_parameterized_view_with_non_literal_params.sql","errors":[]},{"query":"create view ipv4_pv as select * from ipv4_table_pv where ipaddr = {ipv4param:IPv4};","fileName":"../ClickHouse/tests/queries/0_stateless/03209_parameterized_view_with_non_literal_params.sql","errors":[{"message":"no viable alternative at input 'create view ipv4_pv as select * from ipv4_table_pv where ipaddr = {'","startColumn":66,"startLine":1,"endColumn":67,"endLine":1}]},{"query":"CREATE TABLE order_by_all (\na String,\nb Nullable(Int32),\nall UInt64\n)\nENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_03210', 'r1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03209_parallel_replicas_order_by_all.sql","errors":[]},{"query":"CREATE TABLE t_03209 ( \\`a\\` Decimal(18, 0), \\`b\\` Decimal(18, 1), \\`c\\` Decimal(36, 0) ) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_03209', 'r1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03209_parallel_replicas_lost_decimal_conversion.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_03209 ( \\'","startColumn":23,"startLine":1,"endColumn":24,"endLine":1}]},{"query":"CREATE TABLE tab ( \\`k\\` Nullable(UInt32), \\`k1\\` Nullable(UInt32), \\`k2\\` Nullable(UInt32), \\`v\\` String ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03208_multiple_joins_with_storage_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab ( \\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE mem ( \\`k\\` UInt64, \\`v\\` String ) ENGINE = Join(ANY, LEFT, k);","fileName":"../ClickHouse/tests/queries/0_stateless/03208_multiple_joins_with_storage_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mem ( \\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE mem2 ( \\`k\\` UInt64, \\`v\\` String ) ENGINE = Join(ANY, RIGHT, k);","fileName":"../ClickHouse/tests/queries/0_stateless/03208_multiple_joins_with_storage_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mem2 ( \\'","startColumn":20,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE mem3 ( \\`k\\` UInt64, \\`v\\` String ) ENGINE = Join(ALL, FULL, k) SETTINGS join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03208_multiple_joins_with_storage_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mem3 ( \\'","startColumn":20,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE mem4 ( \\`k1\\` UInt64, \\`k2\\` UInt64, \\`v\\` String ) ENGINE = Join(ALL, FULL, k1, k2);","fileName":"../ClickHouse/tests/queries/0_stateless/03208_multiple_joins_with_storage_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mem4 ( \\'","startColumn":20,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE grouparray (\n\\`v\\` AggregateFunction(groupArrayIntersect, Array(UInt8))\n)\nENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/03208_groupArrayIntersect_serialization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE grouparray (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE grouparray_string (\n\\`v\\` AggregateFunction(groupArrayIntersect, Array(Tuple(Array(String))))\n)\nENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/03208_groupArrayIntersect_serialization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE grouparray_string (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE realtimedrep (\\`amount\\` Int32) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03208_buffer_over_distributed_type_mismatch.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE realtimedrep (\\'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE TABLE realtimedistributed (\\`amount\\` Int32) ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), realtimedrep, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/03208_buffer_over_distributed_type_mismatch.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE realtimedistributed (\\'","startColumn":34,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"CREATE TABLE realtimebuff__fuzz_19 (\\`amount\\` UInt32) ENGINE = Buffer(currentDatabase(), 'realtimedistributed', 16, 3600, 36000, 10000, 1000000, 10000000, 100000000);","fileName":"../ClickHouse/tests/queries/0_stateless/03208_buffer_over_distributed_type_mismatch.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE realtimebuff__fuzz_19 (\\'","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE realtimebuff__fuzz_20 (\\`amount\\` Nullable(Int32)) ENGINE = Buffer(currentDatabase(), 'realtimedistributed', 16, 3600, 36000, 10000, 1000000, 10000000, 100000000);","fileName":"../ClickHouse/tests/queries/0_stateless/03208_buffer_over_distributed_type_mismatch.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE realtimebuff__fuzz_20 (\\'","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"create table test (id UInt64, json JSON(max_dynamic_paths=8, a.b Array(JSON))) engine=MergeTree order by id settings min_rows_for_wide_part=1000000000, min_bytes_for_wide_part=10000000000;","fileName":"../ClickHouse/tests/queries/0_stateless/03208_array_of_json_read_subcolumns_2_memory.sql","errors":[{"message":"no viable alternative at input 'create table test (id UInt64, json JSON(max_dynamic_paths=8, a.b Array'","startColumn":65,"startLine":1,"endColumn":70,"endLine":1}]},{"query":"create table test (id UInt64, json JSON(max_dynamic_paths=2, a.b.c UInt32)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03207_json_read_subcolumns_2_memory.sql","errors":[]},{"query":"create table test (id UInt64, json JSON(max_dynamic_paths=2, a.b.c UInt32)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03207_json_read_subcolumns_1_memory.sql","errors":[]},{"query":"CREATE DATABASE rdb1 ENGINE = Replicated('/test/test_replication_lag_metric', 'shard1', 'replica1');","fileName":"../ClickHouse/tests/queries/0_stateless/03206_replication_lag_metric.sql","errors":[]},{"query":"CREATE DATABASE rdb2 ENGINE = Replicated('/test/test_replication_lag_metric', 'shard1', 'replica2');","fileName":"../ClickHouse/tests/queries/0_stateless/03206_replication_lag_metric.sql","errors":[]},{"query":"CREATE TABLE rdb1.t (id UInt32) ENGINE = ReplicatedMergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03206_replication_lag_metric.sql","errors":[]},{"query":"CREATE TABLE tp ( type Int32,\neventcnt UInt64,\nPROJECTION p (select sum(eventcnt), type group by type)\n) engine = MergeTree order by type;","fileName":"../ClickHouse/tests/queries/0_stateless/03206_projection_merge_special_mergetree.sql","errors":[]},{"query":"CREATE TABLE tp ( type Int32,\neventcnt UInt64,\nPROJECTION p (select sum(eventcnt), type group by type)\n) engine = MergeTree order by type\nSETTINGS deduplicate_merge_projection_mode = 'drop';","fileName":"../ClickHouse/tests/queries/0_stateless/03206_projection_merge_special_mergetree.sql","errors":[]},{"query":"CREATE TABLE tp ( type Int32,\neventcnt UInt64,\nPROJECTION p (select sum(eventcnt), type group by type)\n) engine = ReplacingMergeTree order by type;  -- { serverError SUPPORT_IS_DISABLED }\nCREATE TABLE tp (\ntype Int32,\neventcnt UInt64,\nPROJECTION p (select sum(eventcnt), type group by type)\n) engine = ReplacingMergeTree order by type\nSETTINGS deduplicate_merge_projection_mode = 'throw';  -- { serverError SUPPORT_IS_DISABLED }\nCREATE TABLE tp (\ntype Int32,\neventcnt UInt64,\nPROJECTION p (select sum(eventcnt), type group by type)\n) engine = ReplacingMergeTree order by type\nSETTINGS deduplicate_merge_projection_mode = 'drop';","fileName":"../ClickHouse/tests/queries/0_stateless/03206_projection_merge_special_mergetree.sql","errors":[]},{"query":"CREATE TABLE tp ( type Int32,\neventcnt UInt64,\nPROJECTION p (select sum(eventcnt), type group by type)\n) engine = ReplacingMergeTree order by type\nSETTINGS deduplicate_merge_projection_mode = 'rebuild';","fileName":"../ClickHouse/tests/queries/0_stateless/03206_projection_merge_special_mergetree.sql","errors":[]},{"query":"CREATE TABLE tp ( type Int32,\neventcnt UInt64\n) engine = ReplacingMergeTree order by type;","fileName":"../ClickHouse/tests/queries/0_stateless/03206_projection_merge_special_mergetree.sql","errors":[]},{"query":"CREATE TABLE left (x UUID) ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03206_is_null_constant_result_old_analyzer_bug.sql","errors":[{"message":"mismatched input 'ORDER' expecting <EOF>","startColumn":27,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE right (x UUID) ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03206_is_null_constant_result_old_analyzer_bug.sql","errors":[{"message":"mismatched input 'ORDER' expecting <EOF>","startColumn":28,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"create table t(c Int32, d Bool) Engine=MergeTree order by c;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_parallel_window_finctions_and_column_sparse_bug.sql","errors":[]},{"query":"create table t ( c Int32 primary key ,\ns Bool ,\nw Float64\n);","fileName":"../ClickHouse/tests/queries/0_stateless/03205_parallel_window_finctions_and_column_sparse_bug.sql","errors":[{"message":"no viable alternative at input 'create table t ( c Int32 primary'","startColumn":25,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE t1__fuzz_26 (\\`a\\` Nullable(Float64), \\`b\\` Nullable(Float32), \\`pk\\` Int64) ENGINE = MergeTree ORDER BY pk;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_parallel_replicas_alter_select_ubsan.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1__fuzz_26 (\\'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE t1 ( a Float64, b Int64, pk String) Engine = MergeTree() ORDER BY pk;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_parallel_replicas_alter_select_ubsan.sql","errors":[]},{"query":"create table test (json JSON) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[]},{"query":"create table test (json JSON(max_dynamic_paths=10)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[]},{"query":"create table test (json JSON(max_dynamic_types=10)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[]},{"query":"create table test (json JSON(a UInt32)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[]},{"query":"create table test (json JSON(aaaaa UInt32)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[]},{"query":"create table test (json JSON(\\`a b c d\\` UInt32)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[{"message":"no viable alternative at input 'create table test (json JSON(\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"create table test (json JSON(a.b.c UInt32)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[]},{"query":"create table test (json JSON(aaaa.b.cccc UInt32)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[]},{"query":"create table test (json JSON(\\`some path\\`.\\`path some\\` UInt32)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[{"message":"no viable alternative at input 'create table test (json JSON(\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"create table test (json JSON(a.b.c Tuple(d UInt32, e UInt32))) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[{"message":"no viable alternative at input 'create table test (json JSON(a.b.c Tuple('","startColumn":40,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"create table test (json JSON(SKIP a)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[]},{"query":"create table test (json JSON(SKIP aaaa)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[]},{"query":"create table test (json JSON(SKIP \\`a b c d\\`)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[{"message":"no viable alternative at input 'create table test (json JSON(SKIP \\'","startColumn":34,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"create table test (json JSON(SKIP a.b.c)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[{"message":"no viable alternative at input 'create table test (json JSON(SKIP a.b'","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"create table test (json JSON(SKIP aaaa.b.cccc)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[{"message":"no viable alternative at input 'create table test (json JSON(SKIP aaaa.b'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"create table test (json JSON(SKIP \\`some path\\`.\\`path some\\`)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[{"message":"no viable alternative at input 'create table test (json JSON(SKIP \\'","startColumn":34,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"create table test (json JSON(SKIP REGEXP '.*a.*')) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[{"message":"no viable alternative at input 'create table test (json JSON(SKIP REGEXP '.*a.*''","startColumn":41,"startLine":1,"endColumn":48,"endLine":1}]},{"query":"create table test (json JSON(max_dynamic_paths=10, max_dynamic_types=10, a.b.c UInt32, b.c.d String, SKIP g.d.a, SKIP o.g.a, SKIP REGEXP '.*u.*', SKIP REGEXP 'abc')) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03205_json_syntax.sql","errors":[{"message":"no viable alternative at input 'create table test (json JSON(max_dynamic_paths=10, max_dynamic_types=10, a.b.c UInt32, b.c.d String, SKIP g.d'","startColumn":108,"startLine":1,"endColumn":109,"endLine":1}]},{"query":"CREATE TABLE dict_03204 (k UInt64, v UInt64) ENGINE = Join(ANY, LEFT, k);","fileName":"../ClickHouse/tests/queries/0_stateless/03204_storage_join_optimize.sql","errors":[]},{"query":"CREATE TABLE t_c3oollc8r (c_k37 Int32, c_y String, c_bou Int32, c_g1 Int32, c_lfntfzg Int32, c_kntw50q Int32) ENGINE = MergeTree ORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/03204_distributed_with_scalar_subquery.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_c3oollc8r (c_k37 Int32, c_y String, c_bou Int32, c_g1 Int32, c_lfntfzg Int32, c_kntw50q Int32) ENGINE = MergeTree ORDER BY ()'","startColumn":139,"startLine":1,"endColumn":140,"endLine":1}]},{"query":"CREATE TABLE foo (i Date) ENGINE MergeTree ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/03203_optimize_disjunctions_chain_to_in.sql","errors":[]},{"query":"CREATE TABLE bugcheck1 ENGINE = MergeTree\nORDER BY tuple()\nAS SELECT\n'c1' as column_a,\n'c2' as column_b;","fileName":"../ClickHouse/tests/queries/0_stateless/03203_multiif_and_where_2_conditions_old_analyzer_bug.sql","errors":[]},{"query":"CREATE TABLE t_missed_subcolumns (x UInt32) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03203_fill_missed_subcolumns.sql","errors":[]},{"query":"CREATE TABLE t_missed_subcolumns (id UInt64, \\`n.a\\` Array(Nullable(String))) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03203_fill_missed_subcolumns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_missed_subcolumns (id UInt64, \\'","startColumn":45,"startLine":1,"endColumn":46,"endLine":1}]},{"query":"CREATE TABLE t_missed_subcolumns (id UInt64) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03203_fill_missed_subcolumns.sql","errors":[]},{"query":"CREATE TABLE t_03203 (p UInt64, v UInt64) ENGINE = MergeTree PARTITION BY p ORDER BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/03203_drop_detached_partition_all.sql","errors":[]},{"query":"CREATE TABLE t (p UInt8, x UInt64) Engine = MergeTree PARTITION BY p ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/03203_count_with_non_deterministic_function.sql","errors":[]},{"query":"CREATE TABLE t_subcolumns_join (id UInt64) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03200_subcolumns_join_use_nulls.sql","errors":[]},{"query":"create table test (d Dynamic) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03200_memory_engine_alter_dynamic.sql","errors":[]},{"query":"CREATE TABLE test ( idx UInt64,\ncoverage Array(UInt64),\ntest_name String\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03199_queries_with_new_analyzer.sql","errors":[]},{"query":"CREATE TABLE seq ( number UInt64\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03199_queries_with_new_analyzer.sql","errors":[]},{"query":"CREATE TABLE t1 (\n\\`s1\\` String,\n\\`s2\\` String,\n\\`s3\\` String\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03199_merge_filters_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t2 (\n\\`fs1\\` FixedString(10),\n\\`fs2\\` FixedString(10)\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03199_merge_filters_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE table_with_materialized (col String MATERIALIZED 'A') ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03199_join_with_materialized_column.sql","errors":[]},{"query":"CREATE TABLE 03199_fixedstring_array (arr Array(LowCardinality(FixedString(8)))) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03199_has_lc_fixed_string.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03199'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE labels_unordered (\nidx Int64,\nscore Float64,\nlabel Int64\n)\nENGINE = MergeTree\nPRIMARY KEY idx\nORDER BY idx;","fileName":"../ClickHouse/tests/queries/0_stateless/03199_fix_auc_tie_handling.sql","errors":[]},{"query":"CREATE TABLE labels_ordered (\nidx Int64,\nscore Float64,\nlabel Int64\n)\nENGINE = MergeTree\nPRIMARY KEY idx\nORDER BY idx;","fileName":"../ClickHouse/tests/queries/0_stateless/03199_fix_auc_tie_handling.sql","errors":[]},{"query":"CREATE TABLE test_numbers__fuzz_29 (\\`a\\` Array(Nullable(FixedString(19)))) ENGINE = MergeTree ORDER BY a SETTINGS allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03198_group_array_intersect.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_numbers__fuzz_29 (\\'","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE test_dynamic (id UInt64, d Dynamic) ENGINE = MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03198_dynamic_read_subcolumns.sql","errors":[]},{"query":"CREATE DICTIONARY \\`test_dictionary0\\` ( \\`n1\\` String,\n\\`n2\\` UInt32\n)\nPRIMARY KEY n1\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT 9000 DB 'test_db' TABLE 'table_01' USER 'default'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/03198_dictionary_validate_primary_key_type.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE DICTIONARY \\`test_dictionary1\\` ( \\`n1\\` String,\n\\`n2\\` UInt32\n)\nPRIMARY KEY n1\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT 9000 DB 'test_db' TABLE 'table_01' USER 'default'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());  -- { serverError 36 }\nCREATE DICTIONARY \\`test_dictionary2\\` (\n\\`n1\\` UInt32,\n\\`n2\\` UInt32\n)\nPRIMARY KEY n1\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT 9000 DB 'test_db' TABLE 'table_01' USER 'default'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT()); -- { serverError 36 }\nCREATE DICTIONARY \\`test_dictionary3\\` (\n\\`n1\\` UInt64,\n\\`n2\\` UInt32\n)\nPRIMARY KEY n1\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT 9000 DB 'test_db' TABLE 'table_01' USER 'default'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/03198_dictionary_validate_primary_key_type.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE my_events (start UInt32, end UInt32) Engine = MergeTree ORDER BY tuple() AS Select * FROM VALUES ('start UInt32, end UInt32', (1, 3), (1, 6), (2, 5), (3, 7));","fileName":"../ClickHouse/tests/queries/0_stateless/03196_max_intersections_arena_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE my_events (start UInt32, end UInt32) Engine = MergeTree ORDER BY tuple() AS Select * FROM VALUES ('start UInt32, end UInt32', ('","startColumn":139,"startLine":1,"endColumn":140,"endLine":1}]},{"query":"CREATE TABLE test_serialization (\nid UInt64,\ntext AggregateFunction(groupConcat, String)\n) ENGINE = AggregatingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03195_group_concat_deserialization_fix.sql","errors":[]},{"query":"CREATE TABLE t_bloom_filter( key UInt64,\nvalue UInt64,\nINDEX key_bf key TYPE bloom_filter(0.01) GRANULARITY 2147483648, -- bloom filter on sorting key column\nINDEX value_bf value TYPE bloom_filter(0.01) GRANULARITY 2147483648  -- bloom filter on no-sorting column\n) ENGINE=MergeTree ORDER BY key\nSETTINGS\nratio_of_defaults_for_sparse_serialization = 0.0\n,vertical_merge_algorithm_min_rows_to_activate = 1\n,vertical_merge_algorithm_min_columns_to_activate = 1\n,allow_vertical_merges_from_compact_to_wide_parts = 1\n,min_bytes_for_wide_part=0\n;","fileName":"../ClickHouse/tests/queries/0_stateless/03175_sparse_and_skip_index.sql","errors":[]},{"query":"create table tab (x DateTime('UTC'), y UInt32, v Int32) engine = ReplacingMergeTree(v) order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/03174_split_parts_ranges_into_intersecting_and_non_intersecting_final_and_read-in-order_bug.sql","errors":[]},{"query":"CREATE TABLE test_projection_deduplicate (\n\\`id\\` Int32,\n\\`string\\` String,\nPROJECTION test_projection\n(\nSELECT id\nGROUP BY id\n)\n)\nENGINE = MergeTree\nPRIMARY KEY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03174_projection_deduplicate.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_projection_deduplicate (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE xxxx_yyy (key UInt32, key_b ALIAS key) ENGINE=MergeTree() ORDER BY key SETTINGS ratio_of_defaults_for_sparse_serialization=0.0;","fileName":"../ClickHouse/tests/queries/0_stateless/03174_merge_join_bug.sql","errors":[]},{"query":"create table test (i int) engine MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03174_exact_rows_before_aggregation.sql","errors":[]},{"query":"create table test (i int) engine MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/03174_exact_rows_before_aggregation.sql","errors":[]},{"query":"CREATE TABLE 03173_single_function ( dt Date,\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY toMonth(dt);","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_nested_function( id Int32,\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY xxHash32(id) % 3;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_nested_function_lc( id LowCardinality(Int32),\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY xxHash32(id) % 3;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_nested_function_null( id Nullable(Int32),\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY xxHash32(id) % 3\nSETTINGS allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_nested_function_lc_null( id LowCardinality(Nullable(Int32)),\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY xxHash32(id) % 3\nSETTINGS allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_nonsafe_cast( id Int64,\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY xxHash32(id) % 3;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_multiple_partition_cols ( key1 Int32,\nkey2 Int32\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY (intDiv(key1, 50), xxHash32(key2) % 3);","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_base_data_source( id Int32,\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY xxHash32(id) % 3;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_low_cardinality_set (id LowCardinality(Int32)) ENGINE=Memory AS SELECT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_nullable_set (id Nullable(Int32)) ENGINE=Memory AS SELECT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_lc_nullable_set (id LowCardinality(Nullable(Int32))) ENGINE=Memory AS SELECT 10 UNION ALL SELECT NULL;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_date_parsing ( id String\n)\nENGINE=MergeTree\nORDER BY tuple()\nPARTITION BY toDate(id);","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_nested_date_parsing ( id String\n)\nENGINE=MergeTree\nORDER BY tuple()\nPARTITION BY toMonth(toDate(id));","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03173_empty_transform( id Int32,\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY xxHash32(id) % 3;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_set_transformed_partition_pruning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03173'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table test_qualify (number Int64) ENGINE = MergeTree ORDER BY (number);","fileName":"../ClickHouse/tests/queries/0_stateless/03173_forbid_qualify.sql","errors":[]},{"query":"CREATE TABLE test (id UInt64, value String) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_check_cyclic_dependencies_on_create_and_rename.sql","errors":[]},{"query":"CREATE DICTIONARY test_dict (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE test))\nLAYOUT(FLAT())\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/03173_check_cyclic_dependencies_on_create_and_rename.sql","errors":[]},{"query":"CREATE TABLE view_source (id UInt64) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_check_cyclic_dependencies_on_create_and_rename.sql","errors":[]},{"query":"CREATE VIEW view AS SELECT id, dictGet('test_dict', 'value', id) as value FROM view_source;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_check_cyclic_dependencies_on_create_and_rename.sql","errors":[]},{"query":"CREATE OR REPLACE DICTIONARY test_dict (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE view))\nLAYOUT(FLAT())\nLIFETIME(MIN 0 MAX 1000); -- {serverError INFINITE_LOOP}\nREPLACE DICTIONARY test_dict\n(\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE view))\nLAYOUT(FLAT())\nLIFETIME(MIN 0 MAX 1000); -- {serverError INFINITE_LOOP}\nDROP DICTIONARY IF EXISTS test_dict_2;","fileName":"../ClickHouse/tests/queries/0_stateless/03173_check_cyclic_dependencies_on_create_and_rename.sql","errors":[]},{"query":"CREATE DICTIONARY test_dict_2 (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE view))\nLAYOUT(FLAT())\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/03173_check_cyclic_dependencies_on_create_and_rename.sql","errors":[]},{"query":"CREATE OR REPLACE DICTIONARY test_dict_2 (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE view))\nLAYOUT(FLAT())\nLIFETIME(MIN 0 MAX 1000); ","fileName":"../ClickHouse/tests/queries/0_stateless/03173_check_cyclic_dependencies_on_create_and_rename.sql","errors":[]},{"query":"CREATE TABLE test_hilbert_encode (x UInt32, y UInt32) ENGINE = MergeTree ORDER BY hilbertEncode(x, y) SETTINGS index_granularity = 8192, index_granularity_bytes = '1Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/03171_indexing_by_hilbert_curve.sql","errors":[]},{"query":"CREATE TABLE test_hilbert_encode (x UInt32, y UInt32) ENGINE = MergeTree ORDER BY hilbertEncode(x, y) SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03171_indexing_by_hilbert_curve.sql","errors":[]},{"query":"CREATE TABLE x ( hash_id UInt64, user_result Decimal(3, 2) ) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03171_hashed_dictionary_short_circuit_bug_fix.sql","errors":[]},{"query":"CREATE TABLE y ( hash_id UInt64, user_result  DECIMAL(18, 6) ) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03171_hashed_dictionary_short_circuit_bug_fix.sql","errors":[]},{"query":"CREATE DICTIONARY d1 (hash_id UInt64, user_result Decimal(3, 2) ) PRIMARY KEY hash_id\nSOURCE(CLICKHOUSE(TABLE 'x'))\nLIFETIME(0)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/03171_hashed_dictionary_short_circuit_bug_fix.sql","errors":[]},{"query":"CREATE DICTIONARY d2 (hash_id UInt64, user_result Decimal(3, 2) ) PRIMARY KEY hash_id\nSOURCE(CLICKHOUSE(TABLE 'x'))\nLIFETIME(0)\nLAYOUT(HASHED_ARRAY());","fileName":"../ClickHouse/tests/queries/0_stateless/03171_hashed_dictionary_short_circuit_bug_fix.sql","errors":[]},{"query":"CREATE TABLE t_func_to_subcolumns_map_2 (id UInt64, m Map(String, UInt64)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03171_function_to_subcolumns_fuzzer.sql","errors":[]},{"query":"CREATE TABLE t_func_to_subcolumns_join (id UInt64, arr Array(UInt64), n Nullable(String), m Map(String, UInt64)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03171_function_to_subcolumns_fuzzer.sql","errors":[]},{"query":"CREATE TABLE t_func_to_subcolumns_use_nulls (arr Array(UInt64), v UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03171_function_to_subcolumns_fuzzer.sql","errors":[]},{"query":"CREATE TABLE simple_key_simple_attributes_source_table (\nid UInt64,\nvalue_first String,\nvalue_second String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/03171_direct_dict_short_circuit_bug.sql","errors":[]},{"query":"CREATE DICTIONARY direct_dictionary_simple_key_simple_attributes (\n\\`id\\` UInt64,\n\\`value_first\\` String DEFAULT 'value_first_default',\n\\`value_second\\` String DEFAULT 'value_second_default'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'simple_key_simple_attributes_source_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/03171_direct_dict_short_circuit_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY direct_dictionary_simple_key_simple_attributes (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_table (\n\\`key\\` UInt32,\n\\`_part_offset\\` DEFAULT 0\n)\nENGINE = MergeTree\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/03170_part_offset_as_table_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE column_modify_test (id UInt64, val String, other_col UInt64) engine=MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/03169_modify_column_data_loss.sql","errors":[]},{"query":"CREATE TABLE complex_key_simple_attributes_source_short_circuit_table (\nid UInt64,\nid_key String,\nvalue_first String,\nvalue_second String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/03169_cache_complex_dict_short_circuit_bug.sql","errors":[]},{"query":"CREATE DICTIONARY cache_dictionary_complex_key_simple_attributes_short_circuit (\n\\`id\\` UInt64,\n\\`id_key\\` String,\n\\`value_first\\` String DEFAULT 'value_first_default',\n\\`value_second\\` String DEFAULT 'value_second_default'\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(TABLE 'complex_key_simple_attributes_source_short_circuit_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(COMPLEX_KEY_CACHE(SIZE_IN_CELLS 10));","fileName":"../ClickHouse/tests/queries/0_stateless/03169_cache_complex_dict_short_circuit_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY cache_dictionary_complex_key_simple_attributes_short_circuit (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_read_in_order_2 (id UInt64, v UInt64) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03168_read_in_order_buffering_2.sql","errors":[]},{"query":"CREATE TABLE t_read_in_order_1 (id UInt64, v UInt64) ENGINE = MergeTree ORDER BY id\nSETTINGS index_granularity = 1024, index_granularity_bytes = '10M';","fileName":"../ClickHouse/tests/queries/0_stateless/03168_read_in_order_buffering_1.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS 03147_db;","fileName":"../ClickHouse/tests/queries/0_stateless/03168_loop_engine_with_parallel_replicas.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS 03147'","startColumn":30,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"CREATE TABLE 03147_db.t (n Int8) ENGINE=MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/03168_loop_engine_with_parallel_replicas.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03147'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table a (x \\`Null\\`); -- { clientError SYNTAX_ERROR } create table a (x f(\\`Null\\`)); -- { clientError SYNTAX_ERROR }\ncreate table a (x Enum8(f(\\`Null\\`, 'World', 2))); -- { clientError SYNTAX_ERROR }\ncreate table a (\\`value2\\` Enum8('Hello' = 1, equals(\\`Null\\`, 'World', 2), '!' = 3)); -- { clientError SYNTAX_ERROR }\ncreate table a (x Int8) engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03168_inconsistent_ast_formatting.sql","errors":[{"message":"no viable alternative at input 'create table a (x \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"create table b empty as a;","fileName":"../ClickHouse/tests/queries/0_stateless/03168_inconsistent_ast_formatting.sql","errors":[{"message":"mismatched input 'empty' expecting <EOF>","startColumn":15,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE null_table (str String) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/03167_transactions_are_really_disabled.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_table (str String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/transactions_disabled_rmt', '{replica}') ORDER BY str AS SELECT str AS str FROM null_table;","fileName":"../ClickHouse/tests/queries/0_stateless/03167_transactions_are_really_disabled.sql","errors":[]},{"query":"CREATE OR REPLACE VIEW param_test AS SELECT {test_str:String} as s_result;","fileName":"../ClickHouse/tests/queries/0_stateless/03167_parametrized_view_with_cte.sql","errors":[{"message":"no viable alternative at input 'CREATE OR REPLACE VIEW param_test AS SELECT {'","startColumn":44,"startLine":1,"endColumn":45,"endLine":1}]},{"query":"CREATE TABLE t_ind_merge_2 ( a UInt64,\nb UInt64,\nc UInt64,\nd UInt64,\ne UInt64,\nf UInt64,\nINDEX idx_a  a TYPE minmax,\nINDEX idx_b  b TYPE minmax,\nINDEX idx_cd c * d TYPE minmax,\nINDEX idx_d1 d TYPE minmax,\nINDEX idx_d2 d + 7 TYPE set(3),\nINDEX idx_e  e * 3 TYPE set(3))\nENGINE = MergeTree\nORDER BY a SETTINGS\nindex_granularity = 64,\nvertical_merge_algorithm_min_rows_to_activate = 1,\nvertical_merge_algorithm_min_columns_to_activate = 1,\nmin_bytes_for_wide_part = 0,\nmin_bytes_for_full_part_storage = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03166_skip_indexes_vertical_merge_2.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_ind_merge_2 ( a UInt64,\\nb UInt64,\\nc UInt64,\\nd UInt64,\\ne UInt64,\\nf UInt64,\\nINDEX idx_a  a TYPE minmax,'","startColumn":26,"startLine":7,"endColumn":27,"endLine":7}]},{"query":"CREATE TABLE t_ind_merge_1 (a UInt64, b UInt64, c UInt64, d UInt64, INDEX idx_b b TYPE minmax) ENGINE = MergeTree\nORDER BY a SETTINGS\nindex_granularity = 64,\nmerge_max_block_size = 8192,\nvertical_merge_algorithm_min_rows_to_activate = 1,\nvertical_merge_algorithm_min_columns_to_activate = 1,\nmin_bytes_for_wide_part = 0,\nmin_bytes_for_full_part_storage = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03166_skip_indexes_vertical_merge_1.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_ind_merge_1 (a UInt64, b UInt64, c UInt64, d UInt64, INDEX idx_b b TYPE minmax)'","startColumn":93,"startLine":1,"endColumn":94,"endLine":1}]},{"query":"CREATE TABLE tab ( name String,\nevent Int8\n) ENGINE = MergeTree\nORDER BY name\nSETTINGS optimize_row_order = true;","fileName":"../ClickHouse/tests/queries/0_stateless/03166_optimize_row_order_during_insert.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab ( name String,\\nevent Int8\\n) ENGINE = MergeTree\\nORDER BY name\\nSETTINGS optimize_row_order = true'","startColumn":30,"startLine":5,"endColumn":34,"endLine":5}]},{"query":"CREATE TABLE tab ( name String,\ntimestamp Int64,\nmoney UInt8,\nflag String\n) ENGINE = MergeTree\nORDER BY ()\nSETTINGS optimize_row_order = True;","fileName":"../ClickHouse/tests/queries/0_stateless/03166_optimize_row_order_during_insert.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab ( name String,\\ntimestamp Int64,\\nmoney UInt8,\\nflag String\\n) ENGINE = MergeTree\\nORDER BY ()'","startColumn":10,"startLine":6,"endColumn":11,"endLine":6}]},{"query":"CREATE TABLE tab ( name FixedString(2),\ntimestamp Float32,\nmoney Float64,\nflag Nullable(Int32)\n) ENGINE = MergeTree\nORDER BY (flag, money)\nSETTINGS optimize_row_order = True, allow_nullable_key = True;","fileName":"../ClickHouse/tests/queries/0_stateless/03166_optimize_row_order_during_insert.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab ( name FixedString(2),\\ntimestamp Float32,\\nmoney Float64,\\nflag Nullable(Int32)\\n) ENGINE = MergeTree\\nORDER BY (flag, money)\\nSETTINGS optimize_row_order = True'","startColumn":30,"startLine":7,"endColumn":34,"endLine":7}]},{"query":"CREATE TABLE tab ( fixed_str FixedString(6),\nevent_date Date,\nvector_array Array(Float32),\nnullable_int Nullable(Int128),\nlow_card_string LowCardinality(String),\nmap_column Map(String, String),\ntuple_column Tuple(UInt256)\n) ENGINE = MergeTree()\nORDER BY (fixed_str, event_date)\nSETTINGS optimize_row_order = True;","fileName":"../ClickHouse/tests/queries/0_stateless/03166_optimize_row_order_during_insert.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab ( fixed_str FixedString(6),\\nevent_date Date,\\nvector_array Array(Float32),\\nnullable_int Nullable(Int128),\\nlow_card_string LowCardinality(String),\\nmap_column Map(String, String),\\ntuple_column Tuple(UInt256)\\n) ENGINE = MergeTree()\\nORDER BY (fixed_str, event_date)\\nSETTINGS optimize_row_order = True'","startColumn":30,"startLine":10,"endColumn":34,"endLine":10}]},{"query":"create table src (x Int64) engine = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/03166_mv_prewhere_duplicating_name_bug.sql","errors":[]},{"query":"create table dst (s String, lc LowCardinality(String)) engine MergeTree order by s;","fileName":"../ClickHouse/tests/queries/0_stateless/03166_mv_prewhere_duplicating_name_bug.sql","errors":[]},{"query":"create materialized view mv to dst (s String, lc String) as select 'a' as s, toLowCardinality('b') as lc from src;","fileName":"../ClickHouse/tests/queries/0_stateless/03166_mv_prewhere_duplicating_name_bug.sql","errors":[{"message":"no viable alternative at input 'create materialized view mv to dst ('","startColumn":35,"startLine":1,"endColumn":36,"endLine":1}]},{"query":"CREATE TABLE 03165_token_bf (\nid Int64,\nmessage String,\nINDEX idx_message message TYPE tokenbf_v1(32768, 3, 2) GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03165_string_functions_with_token_text_indexes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03165'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03165_token_ft (\nid Int64,\nmessage String,\nINDEX idx_message message TYPE full_text() GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY id\nSETTINGS min_bytes_for_full_part_storage=0;","fileName":"../ClickHouse/tests/queries/0_stateless/03165_string_functions_with_token_text_indexes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03165'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE ids (id UUID, whatever String) Engine=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03165_storage_merge_view_prewhere.sql","errors":[]},{"query":"CREATE TABLE data (id UUID, event_time DateTime, status String) Engine=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03165_storage_merge_view_prewhere.sql","errors":[]},{"query":"CREATE TABLE data2 (id UUID, event_time DateTime, status String) Engine=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03165_storage_merge_view_prewhere.sql","errors":[]},{"query":"CREATE TABLE tab ( id Int32,\nscale Int16,\nu8 UInt8, u16 UInt16, u32 UInt32, u64 UInt64,\ni8 Int8, i16 Int16, i32 Int32, i64 Int64,\nf32 Float32, f64 Float64\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03165_round_scale_as_column.sql","errors":[]},{"query":"CREATE TABLE tab ( id Int32,\nscale Int16,\nd32 Decimal32(4), d64 Decimal64(4), d128 Decimal128(4), d256 Decimal256(4)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03165_round_scale_as_column.sql","errors":[]},{"query":"CREATE TABLE test ENGINE = ReplacingMergeTree\nPRIMARY KEY id\nAS SELECT number AS id FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/03165_order_by_duplicate.sql","errors":[]},{"query":"CREATE TABLE atable (\ncdu_date Int16,\nloanx_id String,\nrating_sp String\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03165_distinct_with_window_func_crash.sql","errors":[]},{"query":"CREATE TABLE t_compact_bytes_s3(c1 UInt32, c2 UInt32, c3 UInt32, c4 UInt32, c5 UInt32) ENGINE = MergeTree ORDER BY c1\nSETTINGS index_granularity = 512, min_bytes_for_wide_part = '10G', storage_policy = 's3_no_cache';","fileName":"../ClickHouse/tests/queries/0_stateless/03164_s3_settings_for_queries_and_merges.sql","errors":[]},{"query":"CREATE TABLE range_filter_custom_range_test (k UInt64) ENGINE=MergeTree ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/03164_parallel_replicas_range_filter_min_max.sql","errors":[]},{"query":"CREATE TABLE range_filter_custom_range_test_2 (k UInt64) ENGINE=MergeTree ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/03164_parallel_replicas_range_filter_min_max.sql","errors":[]},{"query":"CREATE TABLE range_filter_custom_range_test_3 (k UInt64) ENGINE=MergeTree ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/03164_parallel_replicas_range_filter_min_max.sql","errors":[]},{"query":"CREATE TABLE 03164_users (uid Nullable(Int16), name String, age Int16) ENGINE=MergeTree ORDER BY (uid) SETTINGS allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03164_optimize_read_in_order_nullable.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03164'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03164_multi_key (c1 Nullable(UInt32), c2 Nullable(UInt32)) ENGINE = MergeTree ORDER BY (c1, c2) SETTINGS allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03164_optimize_read_in_order_nullable.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03164'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t_skip_index_insert (\na UInt64,\nb UInt64,\nINDEX idx_a a TYPE minmax,\nINDEX idx_b b TYPE set(3)\n)\nENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 4;","fileName":"../ClickHouse/tests/queries/0_stateless/03164_materialize_skip_index.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_skip_index_insert (\\na UInt64,\\nb UInt64,\\nINDEX idx_a a TYPE minmax,'","startColumn":25,"startLine":4,"endColumn":26,"endLine":4}]},{"query":"CREATE TABLE checks (\n\\`pull_request_number\\` UInt32,\n\\`commit_sha\\` LowCardinality(String),\n\\`check_name\\` LowCardinality(String),\n\\`check_status\\` LowCardinality(String),\n\\`check_duration_ms\\` UInt64,\n\\`check_start_time\\` DateTime,\n\\`test_name\\` LowCardinality(String),\n\\`test_status\\` LowCardinality(String),\n\\`test_duration_ms\\` UInt64,\n\\`report_url\\` String,\n\\`pull_request_url\\` String,\n\\`commit_url\\` String,\n\\`task_url\\` String,\n\\`base_ref\\` String,\n\\`base_repo\\` String,\n\\`head_ref\\` String,\n\\`head_repo\\` String,\n\\`test_context_raw\\` String,\n\\`instance_type\\` LowCardinality(String),\n\\`instance_id\\` String,\n\\`date\\` Date MATERIALIZED toDate(check_start_time)\n)\nENGINE = MergeTree ORDER BY (date, pull_request_number, commit_sha, check_name, test_name, check_start_time);","fileName":"../ClickHouse/tests/queries/0_stateless/03164_early_constant_folding_analyzer.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE checks (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE src_table (\ntime DateTime('UTC') DEFAULT fromUnixTimestamp(sipTimestamp),\nsipTimestamp UInt64\n)\nENGINE = MergeTree\nORDER BY time;","fileName":"../ClickHouse/tests/queries/0_stateless/03164_create_as_default.sql","errors":[]},{"query":"CREATE TABLE copied_table AS src_table;","fileName":"../ClickHouse/tests/queries/0_stateless/03164_create_as_default.sql","errors":[]},{"query":"CREATE TABLE t (\nc1\tInt64\t,\nc2\tInt64\t,\nc3\tInt64\t,\nc4\tInt64\t,\nc5\tInt64\t,\nc6\tInt64\t,\nc7\tInt64\t,\nc8\tInt64\t,\nc9\tInt64\t,\nc10\tInt64\t,\nc11\tInt64\t,\nc12\tInt64\t,\nc13\tInt64\t,\nc14\tInt64\t,\nc15\tInt64\t,\nc16\tInt64\t,\nc17\tInt64\t,\nc18\tInt64\t,\nc19\tInt64\t,\nc20\tInt64\t,\nc21\tInt64\t,\nc22\tInt64\t,\nc23\tInt64\t,\nc24\tInt64\t,\nc25\tInt64\t,\nc26\tInt64\t,\nc27\tInt64\t,\nc28\tInt64\t,\nc29\tInt64\t,\nc30\tInt64\t,\nc31\tInt64\t,\nc32\tInt64\t,\nc33\tInt64\t,\nc34\tInt64\t,\nc35\tInt64\t,\nc36\tInt64\t,\nc37\tInt64\t,\nc38\tInt64\t,\nc39\tInt64\t,\nc40\tInt64\t,\nc41\tInt64\t,\nc42\tInt64\t,\nc43\tInt64\t,\nc44\tInt64\t,\nc45\tInt64\t,\nc46\tInt64\t,\nc47\tInt64\t,\nc48\tInt64\t,\nc49\tInt64\t,\nc50\tInt64\t,\nc51\tInt64\t,\nc52\tInt64\t,\nc53\tInt64\t,\nc54\tInt64\t,\nc55\tInt64\t,\nc56\tInt64\t,\nc57\tInt64\t,\nc58\tInt64\t,\nc59\tInt64\t,\nc60\tInt64\t,\nc61\tInt64\t,\nc62\tInt64\t,\nc63\tInt64\t,\nc64\tInt64\t,\nc65\tInt64\t,\nc66\tInt64\t,\nc67\tInt64\t,\nc68\tInt64\t,\nc69\tInt64\t,\nc70\tInt64\t,\nc71\tInt64\t,\nc72\tInt64\t,\nc73\tInt64\t,\nc74\tInt64\t,\nc75\tInt64\t,\nc76\tInt64\t,\nc77\tInt64\t,\nc78\tInt64\t,\nc79\tInt64\t,\nc80\tInt64\t,\nc81\tInt64\t,\nc82\tInt64\t,\nc83\tInt64\t,\nc84\tInt64\t,\nc85\tInt64\t,\nc86\tInt64\t,\nc87\tInt64\t,\nc88\tInt64\t,\nc89\tInt64\t,\nc90\tInt64\t,\nc91\tInt64\t,\nc92\tInt64\t,\nc93\tInt64\t,\nc94\tInt64\t,\nc95\tInt64\t,\nc96\tInt64\t,\nc97\tInt64\t,\nc98\tInt64\t,\nc99\tInt64\t,\nc100\tInt64\t,\nc101\tInt64\t,\nc102\tInt64\t,\nc103\tInt64\t,\nc104\tInt64\t,\nc105\tInt64\t,\nc106\tInt64\t,\nc107\tInt64\t,\nc108\tInt64\t,\nc109\tInt64\t,\nc110\tInt64\t,\nc111\tInt64\t,\nc112\tInt64\t,\nc113\tInt64\t,\nc114\tInt64\t,\nc115\tInt64\t,\nc116\tInt64\t,\nc117\tInt64\t,\nc118\tInt64\t,\nc119\tInt64\t,\nc120\tInt64\t,\nc121\tInt64\t,\nc122\tInt64\t,\nc123\tInt64\t,\nc124\tInt64\t,\nc125\tInt64\t,\nc126\tInt64\t,\nc127\tInt64\t,\nc128\tInt64\t,\nc129\tInt64\t,\nc130\tInt64\t,\nc131\tInt64\t,\nc132\tInt64\t,\nc133\tInt64\t,\nc134\tInt64\t,\nc135\tInt64\t,\nc136\tInt64\t,\nc137\tInt64\t,\nc138\tInt64\t,\nc139\tInt64\t,\nc140\tInt64\t,\nc141\tInt64\t,\nc142\tInt64\t,\nc143\tInt64\t,\nc144\tInt64\t,\nc145\tInt64\t,\nc146\tInt64\t,\nc147\tInt64\t,\nc148\tInt64\t,\nc149\tInt64\t,\nc150\tInt64\t,\nc151\tInt64\t,\nc152\tInt64\t,\nc153\tInt64\t,\nc154\tInt64\t,\nc155\tInt64\t,\nc156\tInt64\t,\nc157\tInt64\t,\nc158\tInt64\t,\nc159\tInt64\t,\nc160\tInt64\t,\nc161\tInt64\t,\nc162\tInt64\t,\nc163\tInt64\t,\nc164\tInt64\t,\nc165\tInt64\t,\nc166\tInt64\t,\nc167\tInt64\t,\nc168\tInt64\t,\nc169\tInt64\t,\nc170\tInt64\t,\nc171\tInt64\t,\nc172\tInt64\t,\nc173\tInt64\t,\nc174\tInt64\t,\nc175\tInt64\t,\nc176\tInt64\t,\nc177\tInt64\t,\nc178\tInt64\t,\nc179\tInt64\t,\nc180\tInt64\t,\nc181\tInt64\t,\nc182\tInt64\t,\nc183\tInt64\t,\nc184\tInt64\t,\nc185\tInt64\t,\nc186\tInt64\t,\nc187\tInt64\t,\nc188\tInt64\t,\nc189\tInt64\t,\nc190\tInt64\t,\nc191\tInt64\t,\nc192\tInt64\t,\nc193\tInt64\t,\nc194\tInt64\t,\nc195\tInt64\t,\nc196\tInt64\t,\nc197\tInt64\t,\nc198\tInt64\t,\nc199\tInt64\t,\nc200\tInt64\t,\nc201\tInt64\t,\nc202\tInt64\t,\nc203\tInt64\t,\nc204\tInt64\t,\nc205\tInt64\t,\nc206\tInt64\t,\nc207\tInt64\t,\nc208\tInt64\t,\nc209\tInt64\t,\nc210\tInt64\t,\nc211\tInt64\t,\nc212\tInt64\t,\nc213\tInt64\t,\nc214\tInt64\t,\nc215\tInt64\t,\nc216\tInt64\t,\nc217\tInt64\t,\nc218\tInt64\t,\nc219\tInt64\t,\nc220\tInt64\t,\nc221\tInt64\t,\nc222\tInt64\t,\nc223\tInt64\t,\nc224\tInt64\t,\nc225\tInt64\t,\nc226\tInt64\t,\nc227\tInt64\t,\nc228\tInt64\t,\nc229\tInt64\t,\nc230\tInt64\t,\nc231\tInt64\t,\nc232\tInt64\t,\nc233\tInt64\t,\nc234\tInt64\t,\nc235\tInt64\t,\nc236\tInt64\t,\nc237\tInt64\t,\nc238\tInt64\t,\nc239\tInt64\t,\nc240\tInt64\t,\nc241\tInt64\t,\nc242\tInt64\t,\nc243\tInt64\t,\nc244\tInt64\t,\nc245\tInt64\t,\nc246\tInt64\t,\nc247\tInt64\t,\nc248\tInt64\t,\nc249\tInt64\t,\nc250\tInt64\t,\nc251\tInt64\t,\nc252\tInt64\t,\nc253\tInt64\t,\nc254\tInt64\t,\nc255\tInt64\t,\nc256\tInt64\t,\nc257\tInt64\t,\nc258\tInt64\t,\nc259\tInt64\t,\nc260\tInt64\t,\nc261\tInt64\t,\nc262\tInt64\t,\nc263\tInt64\t,\nc264\tInt64\t,\nc265\tInt64\t,\nc266\tInt64\t,\nc267\tInt64\t,\nc268\tInt64\t,\nc269\tInt64\t,\nc270\tInt64\t,\nc271\tInt64\t,\nc272\tInt64\t,\nc273\tInt64\t,\nc274\tInt64\t,\nc275\tInt64\t,\nc276\tInt64\t,\nc277\tInt64\t,\nc278\tInt64\t,\nc279\tInt64\t,\nc280\tInt64\t,\nc281\tInt64\t,\nc282\tInt64\t,\nc283\tInt64\t,\nc284\tInt64\t,\nc285\tInt64\t,\nc286\tInt64\t,\nc287\tInt64\t,\nc288\tInt64\t,\nc289\tInt64\t,\nc290\tInt64\t,\nc291\tInt64\t,\nc292\tInt64\t,\nc293\tInt64\t,\nc294\tInt64\t,\nc295\tInt64\t,\nc296\tInt64\t,\nc297\tInt64\t,\nc298\tInt64\t,\nc299\tInt64\t,\nc300\tInt64\t,\nc301\tInt64\t,\nc302\tInt64\t,\nc303\tInt64\t,\nc304\tInt64\t,\nc305\tInt64\t,\nc306\tInt64\t,\nc307\tInt64\t,\nc308\tInt64\t,\nc309\tInt64\t,\nc310\tInt64\t,\nc311\tInt64\t,\nc312\tInt64\t,\nc313\tInt64\t,\nc314\tInt64\t,\nc315\tInt64\t,\nc316\tInt64\t,\nc317\tInt64\t,\nc318\tInt64\t,\nc319\tInt64\t,\nc320\tInt64\t,\nc321\tInt64\t,\nc322\tInt64\t,\nc323\tInt64\t,\nc324\tInt64\t,\nc325\tInt64\t,\nc326\tInt64\t,\nc327\tInt64\t,\nc328\tInt64\t,\nc329\tInt64\t,\nc330\tInt64\t,\nc331\tInt64\t,\nc332\tInt64\t,\nc333\tInt64\t,\nc334\tInt64\t,\nc335\tInt64\t,\nc336\tInt64\t,\nc337\tInt64\t,\nc338\tInt64\t,\nc339\tInt64\t,\nc340\tInt64\t,\nc341\tInt64\t,\nc342\tInt64\t,\nc343\tInt64\t,\nc344\tInt64\t,\nc345\tInt64\t,\nc346\tInt64\t,\nc347\tInt64\t,\nc348\tInt64\t,\nc349\tInt64\t,\nc350\tInt64\t,\nc351\tInt64\t,\nc352\tInt64\t,\nc353\tInt64\t,\nc354\tInt64\t,\nc355\tInt64\t,\nc356\tInt64\t,\nc357\tInt64\t,\nc358\tInt64\t,\nc359\tInt64\t,\nc360\tInt64\t,\nc361\tInt64\t,\nc362\tInt64\t,\nc363\tInt64\t,\nc364\tInt64\t,\nc365\tInt64\t,\nc366\tInt64\t,\nc367\tInt64\t,\nc368\tInt64\t,\nc369\tInt64\t,\nc370\tInt64\t,\nc371\tInt64\t,\nc372\tInt64\t,\nc373\tInt64\t,\nc374\tInt64\t,\nc375\tInt64\t,\nc376\tInt64\t,\nc377\tInt64\t,\nc378\tInt64\t,\nc379\tInt64\t,\nc380\tInt64\t,\nc381\tInt64\t,\nc382\tInt64\t,\nc383\tInt64\t,\nc384\tInt64\t,\nc385\tInt64\t,\nc386\tInt64\t,\nc387\tInt64\t,\nc388\tInt64\t,\nc389\tInt64\t,\nc390\tInt64\t,\nc391\tInt64\t,\nc392\tInt64\t,\nc393\tInt64\t,\nc394\tInt64\t,\nc395\tInt64\t,\nc396\tInt64\t,\nc397\tInt64\t,\nc398\tInt64\t,\nc399\tInt64\t,\nc400\tInt64\t,\nc401\tInt64\t,\nc402\tInt64\t,\nc403\tInt64\t,\nc404\tInt64\t,\nc405\tInt64\t,\nc406\tInt64\t,\nc407\tInt64\t,\nc408\tInt64\t,\nc409\tInt64\t,\nc410\tInt64\t,\nc411\tInt64\t,\nc412\tInt64\t,\nc413\tInt64\t,\nc414\tInt64\t,\nc415\tInt64\t,\nc416\tInt64\t,\nc417\tInt64\t,\nc418\tInt64\t,\nc419\tInt64\t,\nc420\tInt64\t,\nc421\tInt64\t,\nc422\tInt64\t,\nc423\tInt64\t,\nc424\tInt64\t,\nc425\tInt64\t,\nc426\tInt64\t,\nc427\tInt64\t,\nc428\tInt64\t,\nc429\tInt64\t,\nc430\tInt64\t,\nc431\tInt64\t,\nc432\tInt64\t,\nc433\tInt64\t,\nc434\tInt64\t,\nc435\tInt64\t,\nc436\tInt64\t,\nc437\tInt64\t,\nc438\tInt64\t,\nc439\tInt64\t,\nc440\tInt64\t,\nc441\tInt64\t,\nc442\tInt64\t,\nc443\tInt64\t,\nc444\tInt64\t,\nc445\tInt64\t,\nc446\tInt64\t,\nc447\tInt64\t,\nc448\tInt64\t,\nc449\tInt64\t,\nc450\tInt64\t,\nc451\tInt64\t,\nc452\tInt64\t,\nc453\tInt64\t,\nc454\tInt64\t,\nc455\tInt64\t,\nc456\tInt64\t,\nc457\tInt64\t,\nc458\tInt64\t,\nc459\tInt64\t,\nc460\tInt64\t,\nc461\tInt64\t,\nc462\tInt64\t,\nc463\tInt64\t,\nc464\tInt64\t,\nc465\tInt64\t,\nc466\tInt64\t,\nc467\tInt64\t,\nc468\tInt64\t,\nc469\tInt64\t,\nc470\tInt64\t,\nc471\tInt64\t,\nc472\tInt64\t,\nc473\tInt64\t,\nc474\tInt64\t,\nc475\tInt64\t,\nc476\tInt64\t,\nc477\tInt64\t,\nc478\tInt64\t,\nc479\tInt64\t,\nc480\tInt64\t,\nc481\tInt64\t,\nc482\tInt64\t,\nc483\tInt64\t,\nc484\tInt64\t,\nc485\tInt64\t,\nc486\tInt64\t,\nc487\tInt64\t,\nc488\tInt64\t,\nc489\tInt64\t,\nc490\tInt64\t,\nc491\tInt64\t,\nc492\tInt64\t,\nc493\tInt64\t,\nc494\tInt64\t,\nc495\tInt64\t,\nc496\tInt64\t,\nc497\tInt64\t,\nc498\tInt64\t,\nc499\tInt64\t,\nc500\tInt64\t,\nb1\tInt64\t,\nb2\tInt64\t,\nb3\tInt64\t,\nb4\tInt64\t,\nb5\tInt64\t,\nb6\tInt64\t,\nb7\tInt64\t,\nb8\tInt64\t,\nb9\tInt64\t,\nb10\tInt64\t,\nb11\tInt64\t,\nb12\tInt64\t,\nb13\tInt64\t,\nb14\tInt64\t,\nb15\tInt64\t,\nb16\tInt64\t,\nb17\tInt64\t,\nb18\tInt64\t,\nb19\tInt64\t,\nb20\tInt64\t,\nb21\tInt64\t,\nb22\tInt64\t,\nb23\tInt64\t,\nb24\tInt64\t,\nb25\tInt64\t,\nb26\tInt64\t,\nb27\tInt64\t,\nb28\tInt64\t,\nb29\tInt64\t,\nb30\tInt64\t,\nb31\tInt64\t,\nb32\tInt64\t,\nb33\tInt64\t,\nb34\tInt64\t,\nb35\tInt64\t,\nb36\tInt64\t,\nb37\tInt64\t,\nb38\tInt64\t,\nb39\tInt64\t,\nb40\tInt64\t,\nb41\tInt64\t,\nb42\tInt64\t,\nb43\tInt64\t,\nb44\tInt64\t,\nb45\tInt64\t,\nb46\tInt64\t,\nb47\tInt64\t,\nb48\tInt64\t,\nb49\tInt64\t,\nb50\tInt64\t,\nb51\tInt64\t,\nb52\tInt64\t,\nb53\tInt64\t,\nb54\tInt64\t,\nb55\tInt64\t,\nb56\tInt64\t,\nb57\tInt64\t,\nb58\tInt64\t,\nb59\tInt64\t,\nb60\tInt64\t,\nb61\tInt64\t,\nb62\tInt64\t,\nb63\tInt64\t,\nb64\tInt64\t,\nb65\tInt64\t,\nb66\tInt64\t,\nb67\tInt64\t,\nb68\tInt64\t,\nb69\tInt64\t,\nb70\tInt64\t,\nb71\tInt64\t,\nb72\tInt64\t,\nb73\tInt64\t,\nb74\tInt64\t,\nb75\tInt64\t,\nb76\tInt64\t,\nb77\tInt64\t,\nb78\tInt64\t,\nb79\tInt64\t,\nb80\tInt64\t,\nb81\tInt64\t,\nb82\tInt64\t,\nb83\tInt64\t,\nb84\tInt64\t,\nb85\tInt64\t,\nb86\tInt64\t,\nb87\tInt64\t,\nb88\tInt64\t,\nb89\tInt64\t,\nb90\tInt64\t,\nb91\tInt64\t,\nb92\tInt64\t,\nb93\tInt64\t,\nb94\tInt64\t,\nb95\tInt64\t,\nb96\tInt64\t,\nb97\tInt64\t,\nb98\tInt64\t,\nb99\tInt64\t,\nb100\tInt64\t,\nb101\tInt64\t,\nb102\tInt64\t,\nb103\tInt64\t,\nb104\tInt64\t,\nb105\tInt64\t,\nb106\tInt64\t,\nb107\tInt64\t,\nb108\tInt64\t,\nb109\tInt64\t,\nb110\tInt64\t,\nb111\tInt64\t,\nb112\tInt64\t,\nb113\tInt64\t,\nb114\tInt64\t,\nb115\tInt64\t,\nb116\tInt64\t,\nb117\tInt64\t,\nb118\tInt64\t,\nb119\tInt64\t,\nb120\tInt64\t,\nb121\tInt64\t,\nb122\tInt64\t,\nb123\tInt64\t,\nb124\tInt64\t,\nb125\tInt64\t,\nb126\tInt64\t,\nb127\tInt64\t,\nb128\tInt64\t,\nb129\tInt64\t,\nb130\tInt64\t,\nb131\tInt64\t,\nb132\tInt64\t,\nb133\tInt64\t,\nb134\tInt64\t,\nb135\tInt64\t,\nb136\tInt64\t,\nb137\tInt64\t,\nb138\tInt64\t,\nb139\tInt64\t,\nb140\tInt64\t,\nb141\tInt64\t,\nb142\tInt64\t,\nb143\tInt64\t,\nb144\tInt64\t,\nb145\tInt64\t,\nb146\tInt64\t,\nb147\tInt64\t,\nb148\tInt64\t,\nb149\tInt64\t,\nb150\tInt64\t,\nb151\tInt64\t,\nb152\tInt64\t,\nb153\tInt64\t,\nb154\tInt64\t,\nb155\tInt64\t,\nb156\tInt64\t,\nb157\tInt64\t,\nb158\tInt64\t,\nb159\tInt64\t,\nb160\tInt64\t,\nb161\tInt64\t,\nb162\tInt64\t,\nb163\tInt64\t,\nb164\tInt64\t,\nb165\tInt64\t,\nb166\tInt64\t,\nb167\tInt64\t,\nb168\tInt64\t,\nb169\tInt64\t,\nb170\tInt64\t,\nb171\tInt64\t,\nb172\tInt64\t,\nb173\tInt64\t,\nb174\tInt64\t,\nb175\tInt64\t,\nb176\tInt64\t,\nb177\tInt64\t,\nb178\tInt64\t,\nb179\tInt64\t,\nb180\tInt64\t,\nb181\tInt64\t,\nb182\tInt64\t,\nb183\tInt64\t,\nb184\tInt64\t,\nb185\tInt64\t,\nb186\tInt64\t,\nb187\tInt64\t,\nb188\tInt64\t,\nb189\tInt64\t,\nb190\tInt64\t,\nb191\tInt64\t,\nb192\tInt64\t,\nb193\tInt64\t,\nb194\tInt64\t,\nb195\tInt64\t,\nb196\tInt64\t,\nb197\tInt64\t,\nb198\tInt64\t,\nb199\tInt64\t,\nb200\tInt64\t,\nb201\tInt64\t,\nb202\tInt64\t,\nb203\tInt64\t,\nb204\tInt64\t,\nb205\tInt64\t,\nb206\tInt64\t,\nb207\tInt64\t,\nb208\tInt64\t,\nb209\tInt64\t,\nb210\tInt64\t,\nb211\tInt64\t,\nb212\tInt64\t,\nb213\tInt64\t,\nb214\tInt64\t,\nb215\tInt64\t,\nb216\tInt64\t,\nb217\tInt64\t,\nb218\tInt64\t,\nb219\tInt64\t,\nb220\tInt64\t,\nb221\tInt64\t,\nb222\tInt64\t,\nb223\tInt64\t,\nb224\tInt64\t,\nb225\tInt64\t,\nb226\tInt64\t,\nb227\tInt64\t,\nb228\tInt64\t,\nb229\tInt64\t,\nb230\tInt64\t,\nb231\tInt64\t,\nb232\tInt64\t,\nb233\tInt64\t,\nb234\tInt64\t,\nb235\tInt64\t,\nb236\tInt64\t,\nb237\tInt64\t,\nb238\tInt64\t,\nb239\tInt64\t,\nb240\tInt64\t,\nb241\tInt64\t,\nb242\tInt64\t,\nb243\tInt64\t,\nb244\tInt64\t,\nb245\tInt64\t,\nb246\tInt64\t,\nb247\tInt64\t,\nb248\tInt64\t,\nb249\tInt64\t,\nb250\tInt64\t,\nb251\tInt64\t,\nb252\tInt64\t,\nb253\tInt64\t,\nb254\tInt64\t,\nb255\tInt64\t,\nb256\tInt64\t,\nb257\tInt64\t,\nb258\tInt64\t,\nb259\tInt64\t,\nb260\tInt64\t,\nb261\tInt64\t,\nb262\tInt64\t,\nb263\tInt64\t,\nb264\tInt64\t,\nb265\tInt64\t,\nb266\tInt64\t,\nb267\tInt64\t,\nb268\tInt64\t,\nb269\tInt64\t,\nb270\tInt64\t,\nb271\tInt64\t,\nb272\tInt64\t,\nb273\tInt64\t,\nb274\tInt64\t,\nb275\tInt64\t,\nb276\tInt64\t,\nb277\tInt64\t,\nb278\tInt64\t,\nb279\tInt64\t,\nb280\tInt64\t,\nb281\tInt64\t,\nb282\tInt64\t,\nb283\tInt64\t,\nb284\tInt64\t,\nb285\tInt64\t,\nb286\tInt64\t,\nb287\tInt64\t,\nb288\tInt64\t,\nb289\tInt64\t,\nb290\tInt64\t,\nb291\tInt64\t,\nb292\tInt64\t,\nb293\tInt64\t,\nb294\tInt64\t,\nb295\tInt64\t,\nb296\tInt64\t,\nb297\tInt64\t,\nb298\tInt64\t,\nb299\tInt64\t,\nb300\tInt64\t,\nb301\tInt64\t,\nb302\tInt64\t,\nb303\tInt64\t,\nb304\tInt64\t,\nb305\tInt64\t,\nb306\tInt64\t,\nb307\tInt64\t,\nb308\tInt64\t,\nb309\tInt64\t,\nb310\tInt64\t,\nb311\tInt64\t,\nb312\tInt64\t,\nb313\tInt64\t,\nb314\tInt64\t,\nb315\tInt64\t,\nb316\tInt64\t,\nb317\tInt64\t,\nb318\tInt64\t,\nb319\tInt64\t,\nb320\tInt64\t,\nb321\tInt64\t,\nb322\tInt64\t,\nb323\tInt64\t,\nb324\tInt64\t,\nb325\tInt64\t,\nb326\tInt64\t,\nb327\tInt64\t,\nb328\tInt64\t,\nb329\tInt64\t,\nb330\tInt64\t,\nb331\tInt64\t,\nb332\tInt64\t,\nb333\tInt64\t,\nb334\tInt64\t,\nb335\tInt64\t,\nb336\tInt64\t,\nb337\tInt64\t,\nb338\tInt64\t,\nb339\tInt64\t,\nb340\tInt64\t,\nb341\tInt64\t,\nb342\tInt64\t,\nb343\tInt64\t,\nb344\tInt64\t,\nb345\tInt64\t,\nb346\tInt64\t,\nb347\tInt64\t,\nb348\tInt64\t,\nb349\tInt64\t,\nb350\tInt64\t,\nb351\tInt64\t,\nb352\tInt64\t,\nb353\tInt64\t,\nb354\tInt64\t,\nb355\tInt64\t,\nb356\tInt64\t,\nb357\tInt64\t,\nb358\tInt64\t,\nb359\tInt64\t,\nb360\tInt64\t,\nb361\tInt64\t,\nb362\tInt64\t,\nb363\tInt64\t,\nb364\tInt64\t,\nb365\tInt64\t,\nb366\tInt64\t,\nb367\tInt64\t,\nb368\tInt64\t,\nb369\tInt64\t,\nb370\tInt64\t,\nb371\tInt64\t,\nb372\tInt64\t,\nb373\tInt64\t,\nb374\tInt64\t,\nb375\tInt64\t,\nb376\tInt64\t,\nb377\tInt64\t,\nb378\tInt64\t,\nb379\tInt64\t,\nb380\tInt64\t,\nb381\tInt64\t,\nb382\tInt64\t,\nb383\tInt64\t,\nb384\tInt64\t,\nb385\tInt64\t,\nb386\tInt64\t,\nb387\tInt64\t,\nb388\tInt64\t,\nb389\tInt64\t,\nb390\tInt64\t,\nb391\tInt64\t,\nb392\tInt64\t,\nb393\tInt64\t,\nb394\tInt64\t,\nb395\tInt64\t,\nb396\tInt64\t,\nb397\tInt64\t,\nb398\tInt64\t,\nb399\tInt64\t,\nb400\tInt64\t,\nb401\tInt64\t,\nb402\tInt64\t,\nb403\tInt64\t,\nb404\tInt64\t,\nb405\tInt64\t,\nb406\tInt64\t,\nb407\tInt64\t,\nb408\tInt64\t,\nb409\tInt64\t,\nb410\tInt64\t,\nb411\tInt64\t,\nb412\tInt64\t,\nb413\tInt64\t,\nb414\tInt64\t,\nb415\tInt64\t,\nb416\tInt64\t,\nb417\tInt64\t,\nb418\tInt64\t,\nb419\tInt64\t,\nb420\tInt64\t,\nb421\tInt64\t,\nb422\tInt64\t,\nb423\tInt64\t,\nb424\tInt64\t,\nb425\tInt64\t,\nb426\tInt64\t,\nb427\tInt64\t,\nb428\tInt64\t,\nb429\tInt64\t,\nb430\tInt64\t,\nb431\tInt64\t,\nb432\tInt64\t,\nb433\tInt64\t,\nb434\tInt64\t,\nb435\tInt64\t,\nb436\tInt64\t,\nb437\tInt64\t,\nb438\tInt64\t,\nb439\tInt64\t,\nb440\tInt64\t,\nb441\tInt64\t,\nb442\tInt64\t,\nb443\tInt64\t,\nb444\tInt64\t,\nb445\tInt64\t,\nb446\tInt64\t,\nb447\tInt64\t,\nb448\tInt64\t,\nb449\tInt64\t,\nb450\tInt64\t,\nb451\tInt64\t,\nb452\tInt64\t,\nb453\tInt64\t,\nb454\tInt64\t,\nb455\tInt64\t,\nb456\tInt64\t,\nb457\tInt64\t,\nb458\tInt64\t,\nb459\tInt64\t,\nb460\tInt64\t,\nb461\tInt64\t,\nb462\tInt64\t,\nb463\tInt64\t,\nb464\tInt64\t,\nb465\tInt64\t,\nb466\tInt64\t,\nb467\tInt64\t,\nb468\tInt64\t,\nb469\tInt64\t,\nb470\tInt64\t,\nb471\tInt64\t,\nb472\tInt64\t,\nb473\tInt64\t,\nb474\tInt64\t,\nb475\tInt64\t,\nb476\tInt64\t,\nb477\tInt64\t,\nb478\tInt64\t,\nb479\tInt64\t,\nb480\tInt64\t,\nb481\tInt64\t,\nb482\tInt64\t,\nb483\tInt64\t,\nb484\tInt64\t,\nb485\tInt64\t,\nb486\tInt64\t,\nb487\tInt64\t,\nb488\tInt64\t,\nb489\tInt64\t,\nb490\tInt64\t,\nb491\tInt64\t,\nb492\tInt64\t,\nb493\tInt64\t,\nb494\tInt64\t,\nb495\tInt64\t,\nb496\tInt64\t,\nb497\tInt64\t,\nb498\tInt64\t,\nb499\tInt64\t,\nb500\tInt64\t  \n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03164_analyzer_validate_tree_size.sql","errors":[]},{"query":"CREATE TABLE test_parquet (col1 String, col2 String, col3 String, col4 String, col5 String, col6 String, col7 String) ENGINE=File(Parquet);","fileName":"../ClickHouse/tests/queries/0_stateless/03164_adapting_parquet_reader_output_size.sql","errors":[]},{"query":"CREATE TABLE test_parquet (col1 String, col2 String, col3 String, col4 String, col5 String, col6 String, col7 String) ENGINE=File(Parquet) settings input_format_parquet_max_block_size=16;","fileName":"../ClickHouse/tests/queries/0_stateless/03164_adapting_parquet_reader_output_size.sql","errors":[]},{"query":"CREATE TABLE test_parquet (col1 String, col2 String, col3 String, col4 String, col5 String, col6 String, col7 String) ENGINE=File(Parquet) settings input_format_parquet_prefer_block_bytes=30;","fileName":"../ClickHouse/tests/queries/0_stateless/03164_adapting_parquet_reader_output_size.sql","errors":[]},{"query":"CREATE TABLE test_parquet (col1 String, col2 String, col3 String, col4 String, col5 String, col6 String, col7 String) ENGINE=File(Parquet) settings input_format_parquet_prefer_block_bytes=30720;","fileName":"../ClickHouse/tests/queries/0_stateless/03164_adapting_parquet_reader_output_size.sql","errors":[]},{"query":"CREATE TABLE dynamic_test_1 (d Dynamic(max_types=3)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03163_dynamic_as_supertype.sql","errors":[]},{"query":"CREATE TABLE dynamic_test_2 (d Dynamic(max_types=5)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03163_dynamic_as_supertype.sql","errors":[]},{"query":"CREATE TABLE t (d Dynamic) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03162_dynamic_type_nested.sql","errors":[]},{"query":"CREATE TABLE users_compact ( uid Int16,\nname String,\nage Int16,\nprojection p1 (select count(), age group by age),\nprojection p2 (select age, name group by age, name)\n) ENGINE = MergeTree order by uid\nSETTINGS min_bytes_for_wide_part = 10485760;","fileName":"../ClickHouse/tests/queries/0_stateless/03161_lightweight_delete_projection.sql","errors":[]},{"query":"CREATE TABLE users_wide ( uid Int16,\nname String,\nage Int16,\nprojection p1 (select count(), age group by age),\nprojection p2 (select age, name group by age, name)\n) ENGINE = MergeTree order by uid\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03161_lightweight_delete_projection.sql","errors":[]},{"query":"CREATE TABLE base_table (date DateTime, id String, cost Float64) ENGINE = MergeTree() ORDER BY date;","fileName":"../ClickHouse/tests/queries/0_stateless/03161_create_table_as_mv.sql","errors":[]},{"query":"CREATE TABLE target_table (id String, total AggregateFunction(sum, Float64)) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03161_create_table_as_mv.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_from_base_to_target TO target_table AS Select id, sumState(cost) FROM base_table GROUP BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03161_create_table_as_mv.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_with_storage ENGINE=MergeTree() ORDER BY id AS Select id, sumState(cost) FROM base_table GROUP BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03161_create_table_as_mv.sql","errors":[]},{"query":"CREATE TABLE other_table_1 AS mv_with_storage;","fileName":"../ClickHouse/tests/queries/0_stateless/03161_create_table_as_mv.sql","errors":[]},{"query":"CREATE TABLE 03161_table (id UInt32, f UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03161_cnf_reduction.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03161'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03161_reproducer (c0 UInt8, c1 UInt8, c2 UInt8, c3 UInt8, c4 UInt8, c5 UInt8, c6 UInt8, c7 UInt8, c8 UInt8, c9 UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03161_cnf_reduction.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03161'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t (d Dynamic) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03160_dynamic_type_agg.sql","errors":[]},{"query":"CREATE TABLE t (d Dynamic(max_types=254)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03159_dynamic_type_all_types.sql","errors":[]},{"query":"CREATE TABLE t2 (d Dynamic(max_types=254)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03159_dynamic_type_all_types.sql","errors":[]},{"query":"CREATE TABLE test_variable (v Variant(String, UInt32, IPv6, Bool, DateTime64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03158_dynamic_type_from_variant.sql","errors":[]},{"query":"CREATE TABLE test_dynamic (d Dynamic) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03158_dynamic_type_from_variant.sql","errors":[]},{"query":"CREATE TABLE test_deep_nested_json (i UInt16, d JSON) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03157_dynamic_type_json.sql","errors":[]},{"query":"CREATE TABLE t_map_lc (\nid UInt64,\nt Tuple(m Map(LowCardinality(String), LowCardinality(String)))\n)\nENGINE = MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03156_tuple_map_low_cardinality.sql","errors":[]},{"query":"CREATE TABLE t_map_lc (\nid UInt64,\nt Tuple(m Map(LowCardinality(String), LowCardinality(String)))\n)\nENGINE = MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = '10G';","fileName":"../ClickHouse/tests/queries/0_stateless/03156_tuple_map_low_cardinality.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test (x Nullable(UInt64), PRIMARY KEY ()) ENGINE = MergeTree SETTINGS ratio_of_defaults_for_sparse_serialization = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03156_nullable_number_tips.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test (x UInt64, PRIMARY KEY ()) ENGINE = MergeTree SETTINGS ratio_of_defaults_for_sparse_serialization = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03156_nullable_number_tips.sql","errors":[]},{"query":"CREATE TABLE test_groupConcat (\nid UInt64,\np_int Int32 NULL,\np_string String,\np_array Array(Int32)\n) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03156_group_concat.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_groupConcat (\\nid UInt64,\\np_int Int32 NULL'","startColumn":12,"startLine":3,"endColumn":16,"endLine":3}]},{"query":"CREATE TABLE test_groupConcat (\nid UInt64,\np_int Int32,\n) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03156_group_concat.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_groupConcat (\\nid UInt64,\\np_int Int32,\\n)'","startColumn":0,"startLine":4,"endColumn":1,"endLine":4}]},{"query":"CREATE TABLE arrays_test (s String, arr Array(UInt8)) ENGINE = MergeTree() ORDER BY (s);","fileName":"../ClickHouse/tests/queries/0_stateless/03156_analyzer_array_join_distributed.sql","errors":[]},{"query":"create table hourly( hour datetime,\n\\`metric.names\\` Array(String),\n\\`metric.values\\` Array(Int64)\n) Engine=Memory\nas select '2020-01-01', ['a', 'b'], [1,2];","fileName":"../ClickHouse/tests/queries/0_stateless/03156_analyzer_array_join_distributed.sql","errors":[{"message":"no viable alternative at input 'create table hourly( hour datetime,\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table Example (id Int32) engine = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03155_in_nested_subselects.sql","errors":[]},{"query":"create table Null engine=Null as Example ;","fileName":"../ClickHouse/tests/queries/0_stateless/03155_in_nested_subselects.sql","errors":[{"message":"no viable alternative at input 'create table Null'","startColumn":13,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"create materialized view Transform to Example as select * from Null\njoin ( select * FROM Example\nWHERE id IN (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM (SELECT * FROM Null)))))\n) as old\nusing id;","fileName":"../ClickHouse/tests/queries/0_stateless/03155_in_nested_subselects.sql","errors":[{"message":"no viable alternative at input 'create materialized view Transform to Example as select * from Null'","startColumn":63,"startLine":1,"endColumn":67,"endLine":1}]},{"query":"CREATE TABLE test_table (\nid String,\nparent_id String\n)\nENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03154_recursive_cte_distributed.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test (a UInt8, b UInt8, c UInt8);","fileName":"../ClickHouse/tests/queries/0_stateless/03153_trailing_comma_in_values_list_in_insert.sql","errors":[]},{"query":"CREATE TABLE test_null_empty (d Dynamic) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03153_dynamic_type_empty.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test (a UInt8, b UInt8, c UInt8);","fileName":"../ClickHouse/tests/queries/0_stateless/03152_trailing_comma_in_columns_list_in_insert.sql","errors":[]},{"query":"CREATE TABLE users (uid Int16, name String, age Int16) ENGINE=MergeTree order by (uid, name);","fileName":"../ClickHouse/tests/queries/0_stateless/03152_join_filter_push_down_equivalent_columns.sql","errors":[]},{"query":"CREATE TABLE users2 (uid Int16, name String, age2 Int16) ENGINE=MergeTree order by (uid, name);","fileName":"../ClickHouse/tests/queries/0_stateless/03152_join_filter_push_down_equivalent_columns.sql","errors":[]},{"query":"CREATE TABLE test_max_types (d Dynamic(max_types=5)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03152_dynamic_type_simple.sql","errors":[]},{"query":"CREATE TABLE test_nested_dynamic (d1 Dynamic, d2 Dynamic(max_types=2)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03152_dynamic_type_simple.sql","errors":[]},{"query":"CREATE TABLE test_rapid_schema (d Dynamic) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03152_dynamic_type_simple.sql","errors":[]},{"query":"CREATE TABLE test (\nfoo String,\nbar String,\n)\nENGINE = MergeTree()\nORDER BY (foo, bar);","fileName":"../ClickHouse/tests/queries/0_stateless/03152_analyzer_columns_list.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\nfoo String,\\nbar String,\\n)'","startColumn":0,"startLine":4,"endColumn":1,"endLine":4}]},{"query":"CREATE TABLE tab (id Int32, val Nullable(Float64), dt Nullable(DateTime64(6)), type Nullable(Int32)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03151_redundant_distinct_with_window.sql","errors":[]},{"query":"CREATE VIEW tab_v AS SELECT t1.type AS type,\nsum(t1.val) AS sval,\ntoStartOfDay(t1.dt) AS sday,\nanyLast(sval) OVER w AS lval\nFROM tab AS t1\nGROUP BY\ntype,\nsday\nWINDOW w AS (PARTITION BY type);","fileName":"../ClickHouse/tests/queries/0_stateless/03151_redundant_distinct_with_window.sql","errors":[{"message":"mismatched input 'WINDOW' expecting <EOF>","startColumn":0,"startLine":9,"endColumn":6,"endLine":9}]},{"query":"CREATE TABLE t1 (x Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03151_external_cross_join.sql","errors":[]},{"query":"CREATE TABLE to_table (\nn1 UInt8,\nn2 Dynamic(max_types=2)\n)\nENGINE = MergeTree ORDER BY n1;","fileName":"../ClickHouse/tests/queries/0_stateless/03151_dynamic_type_scale_max_types.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03151_analyzer_view_read_only_necessary_columns.sql","errors":[]},{"query":"CREATE VIEW test_view AS SELECT id, value FROM test_table;","fileName":"../ClickHouse/tests/queries/0_stateless/03151_analyzer_view_read_only_necessary_columns.sql","errors":[]},{"query":"CREATE TABLE test_grouping_sets_predicate ( day_ Date, type_1 String ) ENGINE=MergeTree ORDER BY day_;","fileName":"../ClickHouse/tests/queries/0_stateless/03150_grouping_sets_use_nulls_pushdown.sql","errors":[]},{"query":"CREATE TABLE null_table (\nn1 UInt8,\nn2 Dynamic(max_types=3)\n)\nENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/03150_dynamic_type_mv_insert.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW dummy_rmv TO to_table AS SELECT * FROM null_table;","fileName":"../ClickHouse/tests/queries/0_stateless/03150_dynamic_type_mv_insert.sql","errors":[]},{"query":"CREATE TABLE to_table (\nn1 UInt8,\nn2 Dynamic(max_types=4)\n)\nENGINE = MergeTree ORDER BY n1;","fileName":"../ClickHouse/tests/queries/0_stateless/03150_dynamic_type_mv_insert.sql","errors":[]},{"query":"CREATE TABLE events0 ENGINE = MergeTree()\nORDER BY COALESCE(begin, toDateTime('9999-12-31 23:59:59'))\nAS\nSELECT\ntoNullable(toDateTime('2023-03-21 13:00:00') + INTERVAL number HOUR) AS begin,\nnumber AS value\nFROM numbers(4);","fileName":"../ClickHouse/tests/queries/0_stateless/03149_asof_join_ddb_timestamps.sql","errors":[]},{"query":"CREATE TABLE probe0 ENGINE = MergeTree()\nORDER BY COALESCE(begin, toDateTime('9999-12-31 23:59:59'))\nAS\nSELECT\ntoNullable(toDateTime('2023-03-21 12:00:00') + INTERVAL number HOUR) AS begin\nFROM numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/03149_asof_join_ddb_timestamps.sql","errors":[]},{"query":"CREATE TABLE users (uid Int16, name String, age Int16) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03149_analyzer_window_redefinition.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03148_setting_max_streams_to_max_threads_ratio_overflow.sql","errors":[]},{"query":"CREATE DICTIONARY 03148_dictionary ( id UInt64,\nname String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(\nQUERY 'select 0 as id, ''name0'' as name'\n))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(HASHED);","fileName":"../ClickHouse/tests/queries/0_stateless/03148_query_log_used_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 03148'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE t_mut_virtuals (id UInt64, s String) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03148_mutations_virtual_columns.sql","errors":[]},{"query":"CREATE TABLE events (begin Float64, value Int32) ENGINE = MergeTree() ORDER BY begin;","fileName":"../ClickHouse/tests/queries/0_stateless/03148_asof_join_ddb_subquery.sql","errors":[]},{"query":"CREATE TABLE t (n Int8) ENGINE=MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/03147_table_function_loop.sql","errors":[]},{"query":"CREATE TABLE test (d DateTime, PRIMARY KEY (d));","fileName":"../ClickHouse/tests/queries/0_stateless/03147_datetime64_constant_index_analysis.sql","errors":[]},{"query":"create table table_pv (id Int32, timestamp_field DateTime) engine = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03146_parameterized_view_with_date.sql","errors":[]},{"query":"create view pv as select * from table_pv where timestamp_field > {timestamp_param:DateTime};","fileName":"../ClickHouse/tests/queries/0_stateless/03146_parameterized_view_with_date.sql","errors":[{"message":"no viable alternative at input 'create view pv as select * from table_pv where timestamp_field > {'","startColumn":65,"startLine":1,"endColumn":66,"endLine":1}]},{"query":"CREATE TABLE t_index_3146 (a UInt64, b UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03146_create_index_compatibility.sql","errors":[]},{"query":"CREATE INDEX i1 ON t_index_3146 (a) TYPE minmax;","fileName":"../ClickHouse/tests/queries/0_stateless/03146_create_index_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX i2 ON t_index_3146 (a, b) TYPE minmax;","fileName":"../ClickHouse/tests/queries/0_stateless/03146_create_index_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX i3 ON t_index_3146 (a DESC, b ASC) TYPE minmax;","fileName":"../ClickHouse/tests/queries/0_stateless/03146_create_index_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX i4 ON t_index_3146 a TYPE minmax;","fileName":"../ClickHouse/tests/queries/0_stateless/03146_create_index_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX i5 ON t_index_3146 (a); -- ignored CREATE INDEX i6 ON t_index_3146 (a DESC, b ASC); -- ignored\nCREATE INDEX i7 ON t_index_3146; -- { clientError SYNTAX_ERROR }\nCREATE INDEX i8 ON t_index_3146 a, b TYPE minmax; -- { clientError SYNTAX_ERROR }\nSHOW CREATE TABLE t_index_3146;","fileName":"../ClickHouse/tests/queries/0_stateless/03146_create_index_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE TABLE events0 ( begin Nullable(DateTime('UTC')),\nvalue Int32\n) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03145_asof_join_ddb_inequalities.sql","errors":[]},{"query":"CREATE TABLE probe0 ( begin Nullable(DateTime('UTC'))\n) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03145_asof_join_ddb_inequalities.sql","errors":[]},{"query":"CREATE TABLE test_table (\\`id\\` UInt64, \\`value\\` String) ENGINE = TinyLog() AS Select number, number::String from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/03144_invalid_filter.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"create table t (x 123) engine Memory; -- { clientError SYNTAX_ERROR } create table t (x \\`a.b\\`) engine Memory; -- { clientError SYNTAX_ERROR }\ncreate table t (x Array(\\`a.b\\`)) engine Memory; -- { clientError SYNTAX_ERROR }\ncreate table t (x Array(\\`ab\\`)) engine Memory; -- { serverError UNKNOWN_TYPE }\ncreate table t (x \\`ab\\`) engine Memory; -- { serverError UNKNOWN_TYPE }\ncreate table t (x \\`Int64\\`) engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03144_fuzz_quoted_type_name.sql","errors":[{"message":"no viable alternative at input 'create table t (x 123'","startColumn":18,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE events0 ( begin Float64,\nvalue Int32\n) ENGINE = MergeTree ORDER BY begin;","fileName":"../ClickHouse/tests/queries/0_stateless/03144_asof_join_ddb_doubles.sql","errors":[]},{"query":"CREATE TABLE events ( key Int32,\nbegin Float64,\nvalue Int32\n) ENGINE = MergeTree ORDER BY (key, begin);","fileName":"../ClickHouse/tests/queries/0_stateless/03144_asof_join_ddb_doubles.sql","errors":[]},{"query":"CREATE TABLE probes ( key Int32,\nts Float64\n) ENGINE = MergeTree ORDER BY (key, ts) AS\nSELECT\nkey.number,\nts.number\nFROM\nnumbers(1, 2) as key,\nnumbers(10) as ts\nSETTINGS join_algorithm = 'hash';","fileName":"../ClickHouse/tests/queries/0_stateless/03144_asof_join_ddb_doubles.sql","errors":[]},{"query":"create table tab (x UInt32) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03144_alter_column_and_read.sql","errors":[]},{"query":"CREATE TABLE uk_price_paid (\n\\`price\\` UInt32,\n\\`date\\` Date,\n\\`postcode1\\` LowCardinality(String),\n\\`postcode2\\` LowCardinality(String),\n\\`type\\` Enum8('terraced' = 1, 'semi-detached' = 2, 'detached' = 3, 'flat' = 4, 'other' = 0),\n\\`is_new\\` UInt8,\n\\`duration\\` Enum8('freehold' = 1, 'leasehold' = 2, 'unknown' = 0),\n\\`addr1\\` String,\n\\`addr2\\` String,\n\\`street\\` LowCardinality(String),\n\\`locality\\` LowCardinality(String),\n\\`town\\` LowCardinality(String),\n\\`district\\` LowCardinality(String),\n\\`county\\` LowCardinality(String)\n)\nENGINE = MergeTree\nORDER BY (postcode1, postcode2, addr1, addr2);","fileName":"../ClickHouse/tests/queries/0_stateless/03143_window_functions_qualify_validation.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE uk_price_paid (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_03143 ( timestamp DateTime,\nx UInt32 TTL timestamp + INTERVAL 1 MONTH,\ny String TTL timestamp + INTERVAL 1 DAY,\nz String\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03143_ttl_in_system_parts_columns_table.sql","errors":[]},{"query":"CREATE TABLE null_table (str String) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/03143_parallel_replicas_mat_view_bug.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_table (str String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/03143_parallel_replicas_mat_view_bug', '{replica}') ORDER BY str AS SELECT str AS str FROM null_table;","fileName":"../ClickHouse/tests/queries/0_stateless/03143_parallel_replicas_mat_view_bug.sql","errors":[]},{"query":"CREATE TABLE t1 (\nid UInt64,\nexternal_id UInt64\n)\nENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03143_join_filter_push_down_filled_join_fix.sql","errors":[]},{"query":"CREATE TABLE t2 (\nid UInt64,\nname String\n)\nENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03143_join_filter_push_down_filled_join_fix.sql","errors":[]},{"query":"CREATE DICTIONARY d2 (\nid UInt64,\nname String,\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(\ntable t2))\nLIFETIME(MIN 600 MAX 900)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/03143_join_filter_push_down_filled_join_fix.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY d2 (\\nid UInt64,\\nname String,\\n)'","startColumn":0,"startLine":4,"endColumn":1,"endLine":4}]},{"query":"CREATE TEMPORARY TABLE IF NOT EXISTS tmp_a (\nk1 Int32,\nk2 Int32,\nd1 Int32,\nd2 Int32\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03143_cte_scope.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE IF NOT EXISTS tmp_b ( k1 Int32,\nk2 Int32,\nd0 Float64\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03143_cte_scope.sql","errors":[]},{"query":"CREATE TABLE build ENGINE = MergeTree ORDER BY (key, begin) AS\nSELECT\ntoDateTime('1990-03-21 13:00:00') + INTERVAL number MINUTE AS begin,\nnumber % 4 AS key,\nnumber AS value\nFROM numbers(0, 4000000);","fileName":"../ClickHouse/tests/queries/0_stateless/03143_asof_join_ddb_long.sql","errors":[]},{"query":"CREATE TABLE skewed_probe ENGINE = MergeTree ORDER BY (key, begin) AS\nSELECT\ntoDateTime('1990-04-21 13:00:01') + INTERVAL number MINUTE AS begin,\n0 AS key\nFROM numbers(0, 5)\nUNION ALL\nSELECT\ntoDateTime('1990-05-21 13:00:01') + INTERVAL number MINUTE AS begin,\n1 AS key\nFROM numbers(0, 10)\nUNION ALL\nSELECT\ntoDateTime('1990-06-21 13:00:01') + INTERVAL number MINUTE AS begin,\n2 AS key\nFROM numbers(0, 20)\nUNION ALL\nSELECT\ntoDateTime('1990-03-21 13:00:01') + INTERVAL number MINUTE AS begin,\n3 AS key\nFROM numbers(0, 4000000);","fileName":"../ClickHouse/tests/queries/0_stateless/03143_asof_join_ddb_long.sql","errors":[]},{"query":"CREATE TABLE error_win_func (\n\\`k\\` String,\n\\`in\\` UInt64,\n\\`out\\` UInt64\n)\nENGINE = MergeTree\nORDER BY k AS\nSELECT * from VALUES (('a', 2, 4), ('a', 4, 2), ('a', 6, 3), ('a', 8, 4));","fileName":"../ClickHouse/tests/queries/0_stateless/03142_window_function_limit_by.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE error_win_func (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t(n String, st String) ENGINE = Memory as select * from values(('a', 'x'), ('b', 'y'), ('c', 'z'));","fileName":"../ClickHouse/tests/queries/0_stateless/03142_window_function_limit_by.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t(n String, st String) ENGINE = Memory as select * from values(('","startColumn":76,"startLine":1,"endColumn":77,"endLine":1}]},{"query":"CREATE VIEW test_table_comment AS SELECT toString({date_from:String});","fileName":"../ClickHouse/tests/queries/0_stateless/03142_alter_comment_parameterized_view.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW test_table_comment AS SELECT toString({'","startColumn":50,"startLine":1,"endColumn":51,"endLine":1}]},{"query":"create table data_r1 (key Int, value String) engine=ReplicatedMergeTree('/tables/{database}/data', '{table}') order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03141_fetches_errors_stress.sql","errors":[]},{"query":"create table data_r2 (key Int, value String) engine=ReplicatedMergeTree('/tables/{database}/data', '{table}') order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03141_fetches_errors_stress.sql","errors":[]},{"query":"CREATE TABLE t0 (c0 String) ENGINE = Memory() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03132_sqlancer_union_all.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS t1 (c0 Int32, c1 Int32, c2  ALIAS c1) ENGINE = Log() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03132_sqlancer_union_all.sql","errors":[]},{"query":"CREATE TABLE t2 (c0 Int32) ENGINE = MergeTree()  ORDER BY tuple() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03132_sqlancer_union_all.sql","errors":[]},{"query":"CREATE TABLE t3 (c0 String) ENGINE = Memory() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03132_sqlancer_union_all.sql","errors":[]},{"query":"CREATE TABLE t4 (c0 Int32) ENGINE = Memory() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03132_sqlancer_union_all.sql","errors":[]},{"query":"CREATE TABLE test1_00395 (\ncol1 UInt64,\ncol2 Nullable(UInt64),\ncol3 String,\ncol4 Nullable(String),\ncol5 Array(UInt64),\ncol6 Array(Nullable(UInt64)),\ncol7 Array(String),\ncol8 Array(Nullable(String)),\nd Date\n) Engine = MergeTree(d, (col1, d), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/03132_jit_sort_description_crash_fix.sql","errors":[]},{"query":"create table hilbert_numbers_03131( n1 UInt32,\nn2 UInt32\n)\nEngine=MergeTree()\nORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/03131_hilbert_coding.sql","errors":[]},{"query":"create table hilbert_numbers_1_03131( n1 UInt64,\nn2 UInt64\n)\nEngine=MergeTree()\nORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/03131_hilbert_coding.sql","errors":[]},{"query":"CREATE TABLE test_table_1 (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id\nSETTINGS index_granularity = 16 # We have number of granules in the \\`EXPLAIN\\` output in reference file\n;","fileName":"../ClickHouse/tests/queries/0_stateless/03130_convert_outer_join_to_inner_join.sql","errors":[{"message":"mismatched input 'We' expecting <EOF>","startColumn":34,"startLine":5,"endColumn":36,"endLine":5}]},{"query":"CREATE TABLE test_table_2 (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id\nSETTINGS index_granularity = 16\n;","fileName":"../ClickHouse/tests/queries/0_stateless/03130_convert_outer_join_to_inner_join.sql","errors":[]},{"query":"CREATE TABLE t1 (x Int32) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/03130_analyzer_self_join_group_by.sql","errors":[]},{"query":"CREATE TABLE test_table (\\`id\\` UInt64, \\`value\\` String, \\`value_array\\` Array(UInt64)) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03130_analyzer_array_join_prefer_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE t (id UInt64, ts DateTime) ENGINE = MergeTree() ORDER BY (id, ts) SETTINGS index_granularity = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/03130_abs_in_key_condition_bug.sql","errors":[]},{"query":"CREATE TABLE elements (\n\\`id\\` UInt32,\n\\`nested.key\\` Array(String),\n\\`nested.value\\` Array(String),\n\\`nested.key_hashed\\` Array(UInt64) MATERIALIZED arrayMap(x -> sipHash64(x), nested.key),\n\\`nested.val_hashed\\` Array(UInt64) MATERIALIZED arrayMap(x -> sipHash64(x), nested.value),\n)\nENGINE = Memory ;","fileName":"../ClickHouse/tests/queries/0_stateless/03129_update_nested_materialized_column_check.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE elements (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE small (\\`dt\\` DateTime, \\`user_email\\` LowCardinality(Nullable(String))) ENGINE = MergeTree order by (dt, user_email) settings allow_nullable_key = 1, min_bytes_for_wide_part=0, min_rows_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/03129_low_cardinality_nullable_non_first_primary_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE small (\\'","startColumn":20,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE t (\n\\`key\\` Int64,\n\\`someCol\\` String,\n\\`eventTime\\` DateTime\n)\nENGINE = ReplacingMergeTree(eventTime)\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/03129_cte_with_final.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test (s String) ENGINE = MergeTree ORDER BY s SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03128_system_unload_primary_key.sql","errors":[]},{"query":"CREATE TABLE test2 (s String) ENGINE = MergeTree ORDER BY s SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03128_system_unload_primary_key.sql","errors":[]},{"query":"CREATE TABLE t_index_lazy_load (a UInt64, b UInt64) ENGINE = MergeTree ORDER BY (a, b)\nSETTINGS index_granularity = 4, primary_key_ratio_of_unique_prefix_values_to_skip_suffix_columns = 0.5;","fileName":"../ClickHouse/tests/queries/0_stateless/03128_merge_tree_index_lazy_load.sql","errors":[]},{"query":"CREATE TABLE combinator_argMin_table_r1 (\n\\`id\\` Int32,\n\\`value\\` Int32,\n\\`agg_time\\` DateTime,\nPROJECTION first_items\n(\nSELECT\nid,\nminArgMin(agg_time, value),\nmaxArgMax(agg_time, value)\nGROUP BY id\n)\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_03128/combinator_argMin_table', 'r1')\nORDER BY (id);","fileName":"../ClickHouse/tests/queries/0_stateless/03128_argMin_combinator_projection.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE combinator_argMin_table_r1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE combinator_argMin_table_r2 (\n\\`id\\` Int32,\n\\`value\\` Int32,\n\\`agg_time\\` DateTime,\nPROJECTION first_items\n(\nSELECT\nid,\nminArgMin(agg_time, value),\nmaxArgMax(agg_time, value)\nGROUP BY id\n)\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_03128/combinator_argMin_table', 'r2')\nORDER BY (id);","fileName":"../ClickHouse/tests/queries/0_stateless/03128_argMin_combinator_projection.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE combinator_argMin_table_r2 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test (s String) ENGINE = MergeTree ORDER BY s SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03127_system_unload_primary_key_table.sql","errors":[]},{"query":"CREATE TABLE test2 (s String) ENGINE = MergeTree ORDER BY s SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03127_system_unload_primary_key_table.sql","errors":[]},{"query":"CREATE TABLE argmax_comb( id UInt64,\nstate AggregateFunction(avgArgMax, Float64, UInt64)\n)\nENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03127_argMin_combinator_state.sql","errors":[]},{"query":"create table events ( distinct_id String ) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03125_analyzer_CTE_two_joins.sql","errors":[]},{"query":"create table table_local engine = Memory AS select * from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/03124_analyzer_nested_CTE_dist_in.sql","errors":[]},{"query":"create table table_dist engine = Distributed('test_cluster_two_shards', currentDatabase(),table_local) AS table_local;","fileName":"../ClickHouse/tests/queries/0_stateless/03124_analyzer_nested_CTE_dist_in.sql","errors":[{"message":"no viable alternative at input 'create table table_dist engine = Distributed('test_cluster_two_shards', currentDatabase(),table_local) AS table_local'","startColumn":106,"startLine":1,"endColumn":117,"endLine":1}]},{"query":"create table \"t0\" (a Int64, b Int64) engine = MergeTree() partition by a order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/03123_analyzer_dist_join_CTE.sql","errors":[]},{"query":"create table \"dist_t0\" (a Int64, b Int64) engine = Distributed(test_shard_localhost, currentDatabase(), t0);","fileName":"../ClickHouse/tests/queries/0_stateless/03123_analyzer_dist_join_CTE.sql","errors":[]},{"query":"create table test_window_collate(c1 String, c2 String) engine=MergeTree order by c1;","fileName":"../ClickHouse/tests/queries/0_stateless/03122_analyzer_collate_in_window_function.sql","errors":[]},{"query":"CREATE TABLE test_subquery ENGINE = Memory AS\nSELECT 'base' AS my_field;","fileName":"../ClickHouse/tests/queries/0_stateless/03121_analyzer_filed_redefenition_in_subquery.sql","errors":[]},{"query":"CREATE TABLE a1_replicated ON CLUSTER test_shard_localhost ( day Date,\nid UInt32\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/a1_replicated', '1_replica')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03120_analyzer_dist_join.sql","errors":[]},{"query":"CREATE TABLE a1 ( day Date,\nid UInt32\n)\nENGINE = Distributed('test_shard_localhost', currentDatabase(), a1_replicated, id);","fileName":"../ClickHouse/tests/queries/0_stateless/03120_analyzer_dist_join.sql","errors":[]},{"query":"CREATE TABLE b1_replicated ON CLUSTER test_shard_localhost ( day Date,\nid UInt32\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/b1_replicated', '1_replica')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03120_analyzer_dist_join.sql","errors":[]},{"query":"CREATE TABLE b1 ( day Date,\nid UInt32\n)\nENGINE = Distributed('test_shard_localhost', currentDatabase(), b1_replicated, id);","fileName":"../ClickHouse/tests/queries/0_stateless/03120_analyzer_dist_join.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test (a Float32, id UInt64);","fileName":"../ClickHouse/tests/queries/0_stateless/03119_analyzer_window_function_in_CTE_alias.sql","errors":[]},{"query":"CREATE TABLE a1 ( ANIMAL Nullable(String) ) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03118_analyzer_multi_join_prewhere.sql","errors":[]},{"query":"create table x( a UInt64,\n\\`sipHash64(a)\\` UInt64\n) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/03117_analyzer_same_column_name_as_func.sql","errors":[{"message":"no viable alternative at input 'create table x( a UInt64,\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table t  (ID UInt8) Engine= Memory() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03114_analyzer_cte_with_join.sql","errors":[]},{"query":"create table t  (ID String) Engine= Memory() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03113_analyzer_not_found_column_in_block_2.sql","errors":[]},{"query":"CREATE TABLE my_first_table (\nuser_id UInt32,\nmessage String,\ntimestamp DateTime,\nmetric Float32\n)\nENGINE = MergeTree\nPRIMARY KEY (user_id, timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/03112_analyzer_not_found_column_in_block.sql","errors":[]},{"query":"CREATE TABLE a ( a UInt64, b UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03107_ill_formed_select_in_materialized_view.sql","errors":[]},{"query":"CREATE TABLE b ( b UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03107_ill_formed_select_in_materialized_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW view_4 ( bb UInt64, cnt UInt64) Engine=MergeTree ORDER BY bb POPULATE AS SELECT bb, count() AS cnt FROM (SELECT a, b AS j, b AS bb FROM a INNER JOIN (SELECT b AS j, b AS bb FROM b ) USING (j)) GROUP BY bb; -- { serverError UNKNOWN_IDENTIFIER } DROP TABLE IF EXISTS a;","fileName":"../ClickHouse/tests/queries/0_stateless/03107_ill_formed_select_in_materialized_view.sql","errors":[]},{"query":"CREATE TABLE event ( \\`event_time\\` DateTime,\n\\`event_name\\` String,\n\\`user_id\\` String\n)\nENGINE = MergeTree()\nORDER BY (event_time, event_name);","fileName":"../ClickHouse/tests/queries/0_stateless/03105_table_aliases_in_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE event ( \\'","startColumn":21,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"CREATE TABLE user ( \\`user_id\\` String,\n\\`user_type\\` String\n)\nENGINE = MergeTree()\nORDER BY (user_id);","fileName":"../ClickHouse/tests/queries/0_stateless/03105_table_aliases_in_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE user ( \\'","startColumn":20,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW mv (\n\\`event_time\\` DateTime,\n\\`event_name\\` String,\n\\`user_id\\` String,\n\\`user_type\\` String\n)\nENGINE = MergeTree()\nORDER BY (event_time, event_name) POPULATE AS\nSELECT\ne.event_time,\ne.event_name,\ne.user_id,\nu.user_type\nFROM event e\nINNER JOIN user u ON u.user_id = e.user_id;","fileName":"../ClickHouse/tests/queries/0_stateless/03105_table_aliases_in_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_table_01 ( column Int32\n) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03104_create_view_join.sql","errors":[]},{"query":"CREATE TABLE test_table_02 ( column Int32\n) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03104_create_view_join.sql","errors":[]},{"query":"CREATE VIEW test_view_01 AS SELECT\nt1.column,\nt2.column\nFROM test_table_01 AS t1\nINNER JOIN test_table_02 AS t2 ON t1.column = t2.column;","fileName":"../ClickHouse/tests/queries/0_stateless/03104_create_view_join.sql","errors":[]},{"query":"CREATE TABLE users (uid Int16, name String, age Int16) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03103_positional_arguments.sql","errors":[]},{"query":"CREATE TABLE loans (loan_number int, security_id text) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03102_prefer_column_name_to_alias.sql","errors":[]},{"query":"create table t1 (c3 String, primary key(c3)) engine = MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_invalid_join_on.sql","errors":[]},{"query":"create table t2 (c11 String, primary key(c11)) engine = MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_invalid_join_on.sql","errors":[]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_4.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.t (\ncol String,\nhello String,\nworld String\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_4.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.u (\ncc String\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_4.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE aliased (\nx UInt8 DEFAULT 0,\ny ALIAS x + 1\n);","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_4.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE aliased2 (\nx UInt8,\ny ALIAS ((x + 1) AS z) + 1\n);","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_4.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE aliased3 (\nx UInt8,\ny ALIAS z + 1,\nz ALIAS x + 1\n);","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_4.sql","errors":[]},{"query":"CREATE DATABASE db1_03101;","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_3.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE db1_03101;'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE DATABASE db2_03101;","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_3.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE db2_03101;'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE db1_03101.tbl (\ncol String,\ndb1_03101 Nested\n(\ntbl Nested\n(\ncol String\n)\n)\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_3.sql","errors":[]},{"query":"CREATE TABLE t (\nx String,\nnest Nested\n(\na String,\nb String\n)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_3.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test1 (a String, nest Nested(x String, y String));","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_2.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test2 (a String, nest Array(Tuple(x String, y String)));","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_2.sql","errors":[]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_1.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE table ( column UInt64,\nnest Nested\n(\nkey Nested (\nsubkey UInt16\n)\n)\n) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03101_analyzer_identifiers_1.sql","errors":[]},{"query":"CREATE TABLE users (name String, age Int16) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03100_analyzer_constants_in_multiif.sql","errors":[]},{"query":"CREATE TABLE clickhouse_alias_issue_1 ( id bigint,\ncolumn_1 Nullable(Float32)\n) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03098_prefer_column_to_alias_subquery.sql","errors":[]},{"query":"CREATE TABLE clickhouse_alias_issue_2 ( id bigint,\ncolumn_2 Nullable(Float32)\n) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03098_prefer_column_to_alias_subquery.sql","errors":[]},{"query":"create table test (id UInt64, v Variant(UInt64, String)) engine=MergeTree order by (id, v);","fileName":"../ClickHouse/tests/queries/0_stateless/03096_variant_in_primary_key.sql","errors":[]},{"query":"CREATE TABLE test_03096 (\n\\`a\\` UInt32,\n\\`b\\` UInt32,\n\\`c\\` UInt32,\n\\`d\\` UInt32 MATERIALIZED 0,\n\\`sum\\` UInt32 MATERIALIZED (a + b) + c,\nINDEX idx (c, d) TYPE minmax GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY a\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/03096_update_non_indexed_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_03096 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table mt1 (f1 Int32, f2 Int32) engine = MergeTree() order by f1;","fileName":"../ClickHouse/tests/queries/0_stateless/03095_merge_and_buffer_tables.sql","errors":[]},{"query":"create table mt2 as mt1 engine = MergeTree() order by f1;","fileName":"../ClickHouse/tests/queries/0_stateless/03095_merge_and_buffer_tables.sql","errors":[]},{"query":"create table b as mt1 engine = Buffer(currentDatabase(), mt2, 16, 1, 1, 10000, 1000000, 10000000, 100000000);","fileName":"../ClickHouse/tests/queries/0_stateless/03095_merge_and_buffer_tables.sql","errors":[]},{"query":"create table m as mt1 engine = Merge(currentDatabase(), '^(mt1|b)\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/03095_merge_and_buffer_tables.sql","errors":[]},{"query":"CREATE TABLE t1__fuzz_0 (\n\\`x\\` UInt8,\n\\`str\\` String\n)\nENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/03095_join_filter_push_down_right_stream_filled.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1__fuzz_0 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE left_join__fuzz_2 (\n\\`x\\` UInt32,\n\\`s\\` LowCardinality(String)\n) ENGINE = Join(\\`ALL\\`, LEFT, x);","fileName":"../ClickHouse/tests/queries/0_stateless/03095_join_filter_push_down_right_stream_filled.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE left_join__fuzz_2 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE 03094_grouparrysorted_dest (\nServiceName LowCardinality(String) CODEC(ZSTD(1)),\nSlowSpans AggregateFunction(groupArraySorted(100),\nTuple(NegativeDurationNs Int64, Timestamp DateTime64(9), TraceId String, SpanId String)\n) CODEC(ZSTD(1))\n)\nENGINE = AggregatingMergeTree()\nORDER BY (ServiceName);","fileName":"../ClickHouse/tests/queries/0_stateless/03094_grouparraysorted_memory.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03094'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03094_grouparrysorted_src (\nServiceName String,\nDuration Int64,\nTimestamp DateTime64(9),\nTraceId String,\nSpanId String\n)\nENGINE = MergeTree()\nORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/03094_grouparraysorted_memory.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03094'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW 03094_grouparrysorted_mv TO 03094_grouparrysorted_dest AS SELECT\nServiceName,\ngroupArraySortedState(100)(\nCAST(\ntuple(-Duration, Timestamp, TraceId, SpanId),\n'Tuple(NegativeDurationNs Int64, Timestamp DateTime64(9), TraceId String, SpanId String)'\n)) as SlowSpans\nFROM 03094_grouparrysorted_src\nGROUP BY\nServiceName;","fileName":"../ClickHouse/tests/queries/0_stateless/03094_grouparraysorted_memory.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW 03094'","startColumn":25,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE users_03094 (name String, age Int16) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03094_analyzer_fiddle_multiif.sql","errors":[]},{"query":"CREATE TABLE override_test__fuzz_45 (\\`_part\\` Float32) ENGINE = MergeTree ORDER BY tuple() AS SELECT 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03093_virtual_column_override_group_by.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE override_test__fuzz_45 (\\'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE TABLE replacing_wrong (key Int64, ver Int64, is_deleted UInt16) ENGINE = ReplacingMergeTree(ver, is_deleted) ORDER BY key; -- { serverError BAD_TYPE_OF_FIELD } CREATE TABLE replacing_wrong (key Int64, ver String, is_deleted UInt8) ENGINE = ReplacingMergeTree(ver, is_deleted) ORDER BY key; -- { serverError BAD_TYPE_OF_FIELD }\nCREATE TABLE replacing_wrong (key Int64, ver Int64, is_deleted UInt8) ENGINE = ReplacingMergeTree(is_deleted, is_deleted) ORDER BY key; -- { serverError BAD_ARGUMENTS }\nCREATE TABLE replacing (key Int64, ver Int64, is_deleted UInt8) ENGINE = ReplacingMergeTree(ver, is_deleted) ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/03093_special_column_errors.sql","errors":[]},{"query":"create table t2(a Int16) engine=MergeTree order by tuple() partition by a % 8 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/03093_reading_bug_with_parallel_replicas.sql","errors":[]},{"query":"CREATE TABLE test_gcd(test_col UInt32 CODEC(GCD, LZ4)) ENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192, index_granularity_bytes = 1024;","fileName":"../ClickHouse/tests/queries/0_stateless/03093_bug_gcd_codec.sql","errors":[]},{"query":"CREATE TABLE test_gcd2(test_col UInt32 CODEC(GCD, LZ4)) ENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192, index_granularity_bytes = 1024, min_bytes_for_wide_part = 0, max_compress_block_size = 1024, min_compress_block_size = 1024;","fileName":"../ClickHouse/tests/queries/0_stateless/03093_bug_gcd_codec.sql","errors":[]},{"query":"CREATE TABLE test_03093 (app String, c UInt64, k Map(String, String)) ENGINE=MergeTree ORDER BY app;","fileName":"../ClickHouse/tests/queries/0_stateless/03093_analyzer_miel_test.sql","errors":[]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/03092_analyzer_same_table_name_in_different_databases.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE_1:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/03092_analyzer_same_table_name_in_different_databases.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.\\`1-1\\` (field Int8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03092_analyzer_same_table_name_in_different_databases.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE_1:Identifier}.\\`2-1\\` (field Int8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03092_analyzer_same_table_name_in_different_databases.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE_1:Identifier}.\\`3-1\\` (field Int8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03092_analyzer_same_table_name_in_different_databases.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/03091_analyzer_same_table_name_in_different_databases.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE_1:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/03091_analyzer_same_table_name_in_different_databases.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.\\`1-1\\` (field Int8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03091_analyzer_same_table_name_in_different_databases.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE_1:Identifier}.\\`1-1\\` (field Int8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03091_analyzer_same_table_name_in_different_databases.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE_1:Identifier}.\\`2-1\\` (field Int8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03091_analyzer_same_table_name_in_different_databases.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create database {CLICKHOUSE_DATABASE:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/03088_analyzer_ambiguous_column_multi_call.sql","errors":[{"message":"no viable alternative at input 'create database {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"create table {CLICKHOUSE_DATABASE:Identifier}.a (i int) engine = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/03088_analyzer_ambiguous_column_multi_call.sql","errors":[{"message":"no viable alternative at input 'create table {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create table t1 engine = MergeTree()\norder by tuple()\nas\nselect 1 as user_id, 2 as level;","fileName":"../ClickHouse/tests/queries/0_stateless/03084_analyzer_join_column_alias.sql","errors":[]},{"query":"create table t2 engine = MergeTree()\norder by tuple()\nas\nselect 1 as user_id, 'website' as event_source, '2023-01-01 00:00:00'::DateTime as timestamp;","fileName":"../ClickHouse/tests/queries/0_stateless/03084_analyzer_join_column_alias.sql","errors":[{"message":"mismatched input ':' expecting <EOF>","startColumn":69,"startLine":4,"endColumn":70,"endLine":4}]},{"query":"CREATE TABLE test1 (\n\\`pk\\` String,\n\\`x.y\\` Decimal(18, 4)\n)\nENGINE = MergeTree()\nORDER BY (pk);","fileName":"../ClickHouse/tests/queries/0_stateless/03082_analyzer_left_join_correct_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test2 (\n\\`pk\\` String,\n\\`x.y\\` Decimal(18, 4)\n)\nENGINE = MergeTree()\nORDER BY (pk);","fileName":"../ClickHouse/tests/queries/0_stateless/03082_analyzer_left_join_correct_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test2 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test (\n\\`dt\\` Date,\n\\`text\\` String\n)\nENGINE = MergeTree\nORDER BY dt;","fileName":"../ClickHouse/tests/queries/0_stateless/03081_analyzer_agg_func_CTE.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE first_table_lr (\nid String,\nid2 String\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_03080/alter', 'r1')\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03080_incorrect_join_with_merge.sql","errors":[]},{"query":"CREATE TABLE first_table (\nid String,\nid2 String\n)\nENGINE = Distributed('test_shard_localhost', currentDatabase(), 'first_table_lr');","fileName":"../ClickHouse/tests/queries/0_stateless/03080_incorrect_join_with_merge.sql","errors":[]},{"query":"CREATE TABLE second_table_lr (\nid String,\nid2 String\n) ENGINE = MergeTree()\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03080_incorrect_join_with_merge.sql","errors":[]},{"query":"CREATE TABLE second_table (\nid String,\nid2 String\n)\nENGINE = Distributed('test_shard_localhost', currentDatabase(), 'second_table_lr');","fileName":"../ClickHouse/tests/queries/0_stateless/03080_incorrect_join_with_merge.sql","errors":[]},{"query":"CREATE TABLE two_tables (\nid String,\nid2 String\n)\nENGINE = Merge(currentDatabase(), '^(first_table)\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/03080_incorrect_join_with_merge.sql","errors":[]},{"query":"CREATE TABLE test ( id UInt64\n)\nENGINE = MergeTree()\nSAMPLE BY intHash32(id)\nORDER BY intHash32(id);","fileName":"../ClickHouse/tests/queries/0_stateless/03080_analyzer_prefer_column_name_to_alias__virtual_columns.sql","errors":[]},{"query":"CREATE TABLE testdata (\\`1\\` String) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03079_analyzer_numeric_literals_as_column_names.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE testdata (\\'","startColumn":23,"startLine":1,"endColumn":24,"endLine":1}]},{"query":"CREATE TABLE t2 (first_column Int64, second_column Int64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03078_analyzer_multi_scalar_subquery_aliases.sql","errors":[]},{"query":"CREATE TABLE t1 (i Int64, j Int64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03077_analyzer_multi_scalar_subquery_aliases.sql","errors":[]},{"query":"create view alias (dummy int, n alias dummy) as select * from system.one;","fileName":"../ClickHouse/tests/queries/0_stateless/03074_analyzer_alias_column_in_view.sql","errors":[]},{"query":"CREATE TABLE test ( id String, create_time DateTime ) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03073_analyzer_alias_as_column_name.sql","errors":[]},{"query":"CREATE FUNCTION IF NOT EXISTS unhexPrefixed AS value -> unhex(substring(value, 3));","fileName":"../ClickHouse/tests/queries/0_stateless/03071_fix_short_circuit_logic.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION IF NOT EXISTS hex2bytes AS address -> CAST(unhexPrefixed(address), 'FixedString(20)');","fileName":"../ClickHouse/tests/queries/0_stateless/03071_fix_short_circuit_logic.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION IF NOT EXISTS bytes2hex AS address -> concat('0x', lower(hex(address)));","fileName":"../ClickHouse/tests/queries/0_stateless/03071_fix_short_circuit_logic.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE test (\n\\`transfer_id\\` String,\n\\`address\\` FixedString(20),\n\\`value\\` UInt256,\n\\`block_timestamp\\` DateTime('UTC'),\n\\`token_address\\` FixedString(20)\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMM(block_timestamp)\nPRIMARY KEY (address, block_timestamp)\nORDER BY (address, block_timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/03071_fix_short_circuit_logic.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE token_data (\ntoken_address_hex String,\nchain String,\nis_blacklisted Bool\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/03071_fix_short_circuit_logic.sql","errors":[]},{"query":"CREATE DICTIONARY token_data_map (\ntoken_address_hex String,\nchain String,\nis_blacklisted Bool\n)\nPRIMARY KEY token_address_hex, chain\nSOURCE(Clickhouse(table token_data))\nLIFETIME(MIN 200 MAX 300)\nLAYOUT(COMPLEX_KEY_HASHED_ARRAY());","fileName":"../ClickHouse/tests/queries/0_stateless/03071_fix_short_circuit_logic.sql","errors":[]},{"query":"CREATE TABLE LINEITEM_shard ON CLUSTER test_shard_localhost (\nL_ORDERKEY UInt64,\nL_COMMITDATE UInt32,\nL_RECEIPTDATE UInt32\n)\nENGINE = MergeTree()\nORDER BY L_ORDERKEY;","fileName":"../ClickHouse/tests/queries/0_stateless/03068_analyzer_distributed_join.sql","errors":[]},{"query":"CREATE TABLE LINEITEM AS LINEITEM_shard ENGINE = Distributed('test_shard_localhost', currentDatabase(), LINEITEM_shard, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/03068_analyzer_distributed_join.sql","errors":[]},{"query":"CREATE TABLE ORDERS_shard ON CLUSTER test_shard_localhost (\nO_ORDERKEY UInt64,\nO_ORDERPRIORITY UInt32\n)\nENGINE = MergeTree()\nORDER BY O_ORDERKEY;","fileName":"../ClickHouse/tests/queries/0_stateless/03068_analyzer_distributed_join.sql","errors":[]},{"query":"CREATE TABLE ORDERS AS ORDERS_shard ENGINE = Distributed('test_shard_localhost', currentDatabase(), ORDERS_shard, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/03068_analyzer_distributed_join.sql","errors":[]},{"query":"CREATE TABLE t1 ( k Int64, x Int64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03063_analyzer_multi_join_wrong_table_specifier.sql","errors":[]},{"query":"CREATE TABLE t2( x Int64 ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03063_analyzer_multi_join_wrong_table_specifier.sql","errors":[]},{"query":"create table s (k Int64, d DateTime)  Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03063_analyzer_multi_join_wrong_table_specifier.sql","errors":[]},{"query":"create table test (TOPIC String, PARTITION UInt64, OFFSET UInt64, ID UInt64) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_03062', 'r2') ORDER BY (TOPIC, PARTITION, OFFSET);","fileName":"../ClickHouse/tests/queries/0_stateless/03062_analyzer_join_engine_missing_column.sql","errors":[]},{"query":"create table test_join (TOPIC String, PARTITION UInt64, OFFSET UInt64)  ENGINE = Join(ANY, LEFT, \\`TOPIC\\`, \\`PARTITION\\`) SETTINGS join_any_take_last_row = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03062_analyzer_join_engine_missing_column.sql","errors":[{"message":"no viable alternative at input 'create table test_join (TOPIC String, PARTITION UInt64, OFFSET UInt64)  ENGINE = Join(ANY, LEFT, \\'","startColumn":97,"startLine":1,"endColumn":98,"endLine":1}]},{"query":"CREATE TABLE xxxx_yyy (key UInt32, key_b ALIAS key) ENGINE=MergeTree() ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/03061_analyzer_alias_as_right_key_in_join.sql","errors":[]},{"query":"create table vt(datetime_value DateTime, value Float64) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03060_analyzer_regular_view_alias.sql","errors":[]},{"query":"create view computed_datum_hours as SELECT\ntoStartOfHour(b.datetime_value) AS datetime_desc,\nsum(b.value) AS value\nFROM vt AS b\nGROUP BY toStartOfHour(b.datetime_value);","fileName":"../ClickHouse/tests/queries/0_stateless/03060_analyzer_regular_view_alias.sql","errors":[]},{"query":"CREATE TABLE id_val(id UInt32, val UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03059_analyzer_join_engine_missing_column.sql","errors":[]},{"query":"CREATE TABLE id_val_join0(id UInt32, val UInt8) ENGINE = Join(ANY, LEFT, id) SETTINGS join_use_nulls = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03059_analyzer_join_engine_missing_column.sql","errors":[]},{"query":"CREATE TABLE id_val_join1(id UInt32, val UInt8) ENGINE = Join(ANY, LEFT, id) SETTINGS join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03059_analyzer_join_engine_missing_column.sql","errors":[]},{"query":"create table fact(id Int64, animal_key Int64, color_key Int64) Engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03058_analyzer_ambiguous_columns.sql","errors":[]},{"query":"create table animals(animal_key UInt64, animal_name String) Engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03058_analyzer_ambiguous_columns.sql","errors":[]},{"query":"create table colors(color_key UInt64, color_name String) Engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03058_analyzer_ambiguous_columns.sql","errors":[]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/03053_analyzer_join_alias.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.base (\n\\`id\\` UInt64,\n\\`id2\\` UInt64,\n\\`d\\` UInt64,\n\\`value\\` UInt64\n)\nENGINE=MergeTree()\nPARTITION BY d\nORDER BY (id,id2,d);","fileName":"../ClickHouse/tests/queries/0_stateless/03053_analyzer_join_alias.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.derived1 (\n\\`id1\\` UInt64,\n\\`d1\\` UInt64,\n\\`value1\\` UInt64\n)\nENGINE = MergeTree()\nPARTITION BY d1\nORDER BY (id1, d1);","fileName":"../ClickHouse/tests/queries/0_stateless/03053_analyzer_join_alias.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.derived2 (\n\\`id2\\` UInt64,\n\\`d2\\` UInt64,\n\\`value2\\` UInt64\n)\nENGINE = MergeTree()\nPARTITION BY d2\nORDER BY (id2, d2);","fileName":"../ClickHouse/tests/queries/0_stateless/03053_analyzer_join_alias.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/03049_unknown_identifier_materialized_column.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE l (y String) Engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03049_unknown_identifier_materialized_column.sql","errors":[]},{"query":"CREATE TABLE r (d Date, y String, ty UInt16 MATERIALIZED toYear(d)) Engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03049_unknown_identifier_materialized_column.sql","errors":[]},{"query":"CREATE TABLE test (\\`a\\` UInt32, \\`b\\` UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03049_analyzer_group_by_alias.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE ab_12_aaa (\n\\`id\\` String,\n\\`subid\\` Int32,\n\\`prodcat\\` String,\n\\`prodtype\\` String,\n\\`quality\\` String,\n\\`m1\\` Float64,\n\\`m2\\` Float64,\n\\`r1\\` Float64,\n\\`r2\\` Float64,\n\\`d1\\` Float64,\n\\`d2\\` Float64,\n\\`pcs\\` Float64,\n\\`qty\\` Float64,\n\\`amt\\` Float64,\n\\`amts\\` Float64,\n\\`prc\\` Float64,\n\\`prcs\\` Float64,\n\\`suqty\\` Float64,\n\\`suamt\\` Float64,\n\\`_year\\` String\n)\nENGINE = MergeTree\nORDER BY (_year, prodcat, prodtype, quality, d1, id)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/03048_not_found_column_xxx_in_block.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ab_12_aaa (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE ab_12_bbb (\n\\`id\\` String,\n\\`sales_type\\` String,\n\\`date\\` Date32,\n\\`o1\\` String,\n\\`o2\\` String,\n\\`o3\\` String,\n\\`o4\\` String,\n\\`o5\\` String,\n\\`short\\` String,\n\\`a1\\` String,\n\\`a2\\` String,\n\\`a3\\` String,\n\\`idx\\` String,\n\\`a4\\` String,\n\\`ctx\\` String,\n\\`_year\\` String,\n\\`theyear\\` UInt16 MATERIALIZED toYear(\\`date\\`),\n\\`themonth\\` UInt8 MATERIALIZED toMonth(\\`date\\`),\n\\`theweek\\` UInt8 MATERIALIZED toISOWeek(\\`date\\`)\n)\nENGINE = MergeTree\nORDER BY (theyear, themonth, _year, id, sales_type, date)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/03048_not_found_column_xxx_in_block.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ab_12_bbb (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE nested_test (\ns String,\nnest Nested\n(\nx UInt64,\ny UInt64\n)\n) ENGINE = MergeTree\nORDER BY s;","fileName":"../ClickHouse/tests/queries/0_stateless/03046_column_in_block_array_join.sql","errors":[]},{"query":"CREATE TABLE join_test (\nid Int64,\ny UInt64\n)\nENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03046_column_in_block_array_join.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE repl_tbl (\n\\`key\\` UInt32,\n\\`val_1\\` UInt32,\n\\`val_2\\` String,\n\\`val_3\\` String,\n\\`val_4\\` String,\n\\`val_5\\` UUID,\n\\`ts\\` DateTime\n)\nENGINE = ReplacingMergeTree(ts)\nORDER BY \\`key\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/03045_unknown_identifier_alias_substitution.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE repl_tbl (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_a_table ( name String,\na_col String\n)\nEngine = MergeTree()\nORDER BY name;","fileName":"../ClickHouse/tests/queries/0_stateless/03045_analyzer_alias_join_with_if.sql","errors":[]},{"query":"CREATE TABLE test_b_table ( name String,\nb_col String,\nsome_val String\n)\nEngine = MergeTree()\nORDER BY name;","fileName":"../ClickHouse/tests/queries/0_stateless/03045_analyzer_alias_join_with_if.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE hits (date Date, data Float64) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03044_analyzer_alias_join.sql","errors":[]},{"query":"create table fill_ex ( eventDate Date ,\nstoreId String\n)\nengine = ReplacingMergeTree()\npartition by toYYYYMM(eventDate)\norder by (storeId,eventDate);","fileName":"../ClickHouse/tests/queries/0_stateless/03043_group_array_result_is_expected.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS t0 (c0 Int32) ENGINE = Memory() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03042_not_found_column_c1.sql","errors":[]},{"query":"CREATE TABLE t1 (c0 Int32, c1 Int32, c2 Int32) ENGINE = Memory() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03042_not_found_column_c1.sql","errors":[]},{"query":"CREATE TABLE t2 (c0 String, c1 String MATERIALIZED (c2), c2 Int32) ENGINE = Memory() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03042_not_found_column_c1.sql","errors":[]},{"query":"CREATE TABLE t3 (c0 String, c1 String, c2 String) ENGINE = Log() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03042_not_found_column_c1.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS t4 (c0 Int32) ENGINE = Log() ;","fileName":"../ClickHouse/tests/queries/0_stateless/03042_not_found_column_c1.sql","errors":[]},{"query":"CREATE TABLE test1(id UInt64, t1value UInt64) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03042_analyzer_alias_join.sql","errors":[]},{"query":"CREATE TABLE test2(id UInt64, t2value String) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03042_analyzer_alias_join.sql","errors":[]},{"query":"CREATE TABLE parent( a_id Int64,\nb_id Int64,\nc_id Int64,\ncreated_at Int64\n)\nENGINE=MergeTree()\nORDER BY (a_id, b_id, c_id, created_at);","fileName":"../ClickHouse/tests/queries/0_stateless/03041_select_with_query_result.sql","errors":[]},{"query":"CREATE TABLE join_table_1( a_id Int64,\nb_id Int64\n)\nENGINE=MergeTree()\nORDER BY (a_id, b_id);","fileName":"../ClickHouse/tests/queries/0_stateless/03041_select_with_query_result.sql","errors":[]},{"query":"CREATE TABLE join_table_2( c_id Int64,\ncreated_at Int64\n)\nENGINE=MergeTree()\nORDER BY (c_id, created_at);","fileName":"../ClickHouse/tests/queries/0_stateless/03041_select_with_query_result.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS first engine = MergeTree PARTITION BY (inn, toYYYYMM(received)) ORDER BY (inn, sessionId) AS SELECT now() AS received, '123456789' AS inn, '42' AS sessionId;","fileName":"../ClickHouse/tests/queries/0_stateless/03041_analyzer_gigachad_join.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS second engine = MergeTree PARTITION BY (inn, toYYYYMM(received)) ORDER BY (inn, sessionId) AS SELECT now() AS received, '123456789' AS inn, '42' AS sessionId, '111' AS serial, '222' AS reg;","fileName":"../ClickHouse/tests/queries/0_stateless/03041_analyzer_gigachad_join.sql","errors":[]},{"query":"CREATE TABLE y (a UInt64) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/03040_recursive_cte_postgres_6.sql","errors":[]},{"query":"create table test (x UInt64, y UInt64) engine=MergeTree order by x settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03040_dynamic_type_alters_2_wide_merge_tree.sql","errors":[]},{"query":"create table test (x UInt64, y UInt64) engine=MergeTree order by x settings min_rows_for_wide_part=100000000, min_bytes_for_wide_part=1000000000;","fileName":"../ClickHouse/tests/queries/0_stateless/03040_dynamic_type_alters_2_compact_merge_tree.sql","errors":[]},{"query":"create table test (x UInt64, y UInt64) engine=MergeTree order by x settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03040_dynamic_type_alters_1_wide_merge_tree.sql","errors":[]},{"query":"create table test (x UInt64, y UInt64) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03040_dynamic_type_alters_1_memory.sql","errors":[]},{"query":"create table test (x UInt64, y UInt64) engine=MergeTree order by x settings min_rows_for_wide_part=100000000, min_bytes_for_wide_part=1000000000;","fileName":"../ClickHouse/tests/queries/0_stateless/03040_dynamic_type_alters_1_compact_merge_tree.sql","errors":[]},{"query":"CREATE TABLE 03040_test (\nid           UInt64,\nval String alias 'value: '||toString(id)\n) ENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03040_alias_column_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03040'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE graph( f UInt64,\nt UInt64,\nlabel String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/03038_recursive_cte_postgres_4.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic(max_types=2)) engine=MergeTree order by id settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1, vertical_merge_algorithm_min_rows_to_activate=1, vertical_merge_algorithm_min_columns_to_activate=1, lock_acquire_timeout_for_background_operations=600;","fileName":"../ClickHouse/tests/queries/0_stateless/03038_nested_dynamic_merges_wide_vertical.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic(max_types=2)) engine=MergeTree order by id settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1, lock_acquire_timeout_for_background_operations=600;","fileName":"../ClickHouse/tests/queries/0_stateless/03038_nested_dynamic_merges_wide_horizontal.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic(max_types=2)) engine=MergeTree order by id settings min_rows_for_wide_part=1000000000, min_bytes_for_wide_part=10000000000, vertical_merge_algorithm_min_rows_to_activate=1, vertical_merge_algorithm_min_columns_to_activate=1, lock_acquire_timeout_for_background_operations=600;","fileName":"../ClickHouse/tests/queries/0_stateless/03038_nested_dynamic_merges_compact_vertical.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic(max_types=2)) engine=MergeTree order by id settings min_rows_for_wide_part=1000000000, min_bytes_for_wide_part=10000000000, lock_acquire_timeout_for_background_operations=600;","fileName":"../ClickHouse/tests/queries/0_stateless/03038_nested_dynamic_merges_compact_horizontal.sql","errors":[]},{"query":"CREATE TABLE move_partition_to_oneself (key UInt64 CODEC(NONE)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03038_move_partition_to_oneself_deadlock.sql","errors":[]},{"query":"CREATE TABLE 03038_table (\n\\`time\\` DateTime\n)\nENGINE = MergeTree\nORDER BY time;","fileName":"../ClickHouse/tests/queries/0_stateless/03038_ambiguous_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03038'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE broken_table (\nstart DateTime64(6),\nend DateTime64(6),\n)\nENGINE = ReplacingMergeTree(start)\nORDER BY (start);","fileName":"../ClickHouse/tests/queries/0_stateless/03037_union_view.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE broken_table (\\nstart DateTime64(6),\\nend DateTime64(6),\\n)'","startColumn":0,"startLine":4,"endColumn":1,"endLine":4}]},{"query":"CREATE VIEW broken_view as SELECT\nt.start as start,\nt.end as end,\ncast(datediff('second', t.start, t.end) as float) as total_sec\nFROM broken_table t FINAL\nUNION ALL\nSELECT\nnull as start,\nnull as end,\nnull as total_sec;","fileName":"../ClickHouse/tests/queries/0_stateless/03037_union_view.sql","errors":[]},{"query":"CREATE TABLE tree( id UInt64,\nparent_id Nullable(UInt64)\n)\nENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/03037_recursive_cte_postgres_3.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tree'","startColumn":13,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE product_groups ( \tgroup_id Int64,\n\tgroup_name String\n) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03037_precent_rank.sql","errors":[]},{"query":"CREATE TABLE products ( \tproduct_id Int64,\n\tproduct_name String,\n\tprice DECIMAL(11, 2),\n\tgroup_id Int64\n) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03037_precent_rank.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic) engine=MergeTree order by id settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1, vertical_merge_algorithm_min_rows_to_activate=1, vertical_merge_algorithm_min_columns_to_activate=1, lock_acquire_timeout_for_background_operations=600;","fileName":"../ClickHouse/tests/queries/0_stateless/03037_dynamic_merges_2_vertical_wide_merge_tree.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic) engine=MergeTree order by id settings min_rows_for_wide_part=1000000000, min_bytes_for_wide_part=10000000000, vertical_merge_algorithm_min_rows_to_activate=1, vertical_merge_algorithm_min_columns_to_activate=1, lock_acquire_timeout_for_background_operations=600;","fileName":"../ClickHouse/tests/queries/0_stateless/03037_dynamic_merges_2_vertical_compact_merge_tree.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic) engine=MergeTree order by id settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1, lock_acquire_timeout_for_background_operations=600;","fileName":"../ClickHouse/tests/queries/0_stateless/03037_dynamic_merges_2_horizontal_wide_merge_tree.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic) engine=MergeTree order by id settings min_rows_for_wide_part=1000000000, min_bytes_for_wide_part=10000000000, lock_acquire_timeout_for_background_operations=600;","fileName":"../ClickHouse/tests/queries/0_stateless/03037_dynamic_merges_2_horizontal_compact_merge_tree.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic(max_types=2)) engine=MergeTree order by id settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1, vertical_merge_algorithm_min_rows_to_activate=1, vertical_merge_algorithm_min_columns_to_activate=1, index_granularity_bytes=10485760, index_granularity=8192, merge_max_block_size=8192, merge_max_block_size_bytes=10485760, lock_acquire_timeout_for_background_operations=600;","fileName":"../ClickHouse/tests/queries/0_stateless/03037_dynamic_merges_1_vertical_wide_merge_tree.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic(max_types=2)) engine=MergeTree order by id settings min_rows_for_wide_part=1000000000, min_bytes_for_wide_part=10000000000, vertical_merge_algorithm_min_rows_to_activate=1, vertical_merge_algorithm_min_columns_to_activate=1, index_granularity_bytes=10485760, index_granularity=8192, merge_max_block_size=8192, merge_max_block_size_bytes=10485760, lock_acquire_timeout_for_background_operations=600;","fileName":"../ClickHouse/tests/queries/0_stateless/03037_dynamic_merges_1_vertical_compact_merge_tree.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic(max_types=2)) engine=MergeTree order by id settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1, vertical_merge_algorithm_min_columns_to_activate=10, index_granularity_bytes=10485760, index_granularity=8192, merge_max_block_size=8192, merge_max_block_size_bytes=10485760, lock_acquire_timeout_for_background_operations=600;","fileName":"../ClickHouse/tests/queries/0_stateless/03037_dynamic_merges_1_horizontal_compact_wide_tree.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic(max_types=2)) engine=MergeTree order by id settings min_rows_for_wide_part=1000000000, min_bytes_for_wide_part=10000000000, vertical_merge_algorithm_min_columns_to_activate=10, index_granularity_bytes=10485760, index_granularity=8192, merge_max_block_size=8192, merge_max_block_size_bytes=10485760, lock_acquire_timeout_for_background_operations=600;","fileName":"../ClickHouse/tests/queries/0_stateless/03037_dynamic_merges_1_horizontal_compact_merge_tree.sql","errors":[]},{"query":"CREATE TABLE department ( id UInt64,  -- department ID\nparent_department UInt64, -- upper department ID\nname String -- department name\n)\nENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/03036_recursive_cte_postgres_2.sql","errors":[]},{"query":"CREATE table table_tar2star Engine S3(s3_conn, filename='03036_archive2.tar :: example*.csv');","fileName":"../ClickHouse/tests/queries/0_stateless/03036_reading_s3_archives.sql","errors":[]},{"query":"CREATE table table_tarstarglobs Engine S3(s3_conn, filename='03036_archive*.tar* :: example{2..3}.csv');","fileName":"../ClickHouse/tests/queries/0_stateless/03036_reading_s3_archives.sql","errors":[]},{"query":"CREATE TABLE t (A Array(Int64)) Engine = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03036_prewhere_lambda_function.sql","errors":[]},{"query":"CREATE TABLE test_table_1 (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/03036_join_filter_push_down_equivalent_sets.sql","errors":[]},{"query":"CREATE TABLE test_table_2 (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/03036_join_filter_push_down_equivalent_sets.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic) engine=MergeTree order by id settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03036_dynamic_read_subcolumns_wide_merge_tree.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03036_dynamic_read_subcolumns_memory.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic) engine=MergeTree order by id settings min_rows_for_wide_part=1000000000, min_bytes_for_wide_part=10000000000;","fileName":"../ClickHouse/tests/queries/0_stateless/03036_dynamic_read_subcolumns_compact_merge_tree.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic(max_types=2)) engine=MergeTree order by id settings min_rows_for_wide_part=1, min_bytes_for_wide_part=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03036_dynamic_read_shared_subcolumns_wide_merge_tree.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic(max_types=2)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03036_dynamic_read_shared_subcolumns_memory.sql","errors":[]},{"query":"create table test (id UInt64, d Dynamic(max_types=2)) engine=MergeTree order by id settings min_rows_for_wide_part=1000000000, min_bytes_for_wide_part=10000000000;","fileName":"../ClickHouse/tests/queries/0_stateless/03036_dynamic_read_shared_subcolumns_compact_merge_tree.sql","errors":[]},{"query":"CREATE TABLE test (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03035_materialized_primary_key.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_mv (\nid UInt64,\nvalue String\n) ENGINE=MergeTree\nORDER BY id AS SELECT id, value FROM test;","fileName":"../ClickHouse/tests/queries/0_stateless/03035_materialized_primary_key.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_mv_pk (\nvalue String,\nid UInt64\n) ENGINE=MergeTree PRIMARY KEY value\nPOPULATE AS SELECT value, id FROM test;","fileName":"../ClickHouse/tests/queries/0_stateless/03035_materialized_primary_key.sql","errors":[]},{"query":"create table test (d1 Dynamic(max_types=2), d2 Dynamic(max_types=2)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03035_dynamic_sorting.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test (\n\\`value\\` Float64 CODEC(Delta, LZ4),\n\\`uuid\\` LowCardinality(String),\n\\`time\\` DateTime64(3, 'UTC') CODEC(DoubleDelta, LZ4)\n)\nENGINE = MergeTree()\nORDER BY uuid;","fileName":"../ClickHouse/tests/queries/0_stateless/03035_argMinMax_numeric_non_extreme_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE alias_bug (\n\\`src\\` String,\n\\`theAlias\\` String ALIAS trimBoth(src)\n)\nENGINE = MergeTree()\nORDER BY src;","fileName":"../ClickHouse/tests/queries/0_stateless/03035_alias_column_bug_distributed.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE alias_bug (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE alias_bug_dist AS alias_bug\nENGINE = Distributed('test_shard_localhost', currentDatabase(), 'alias_bug', rand());","fileName":"../ClickHouse/tests/queries/0_stateless/03035_alias_column_bug_distributed.sql","errors":[]},{"query":"CREATE TABLE alias_bug (\n\\`s\\` String,\n\\`src\\` String,\n\\`theAlias\\` String ALIAS trimBoth(src)\n)\nENGINE = MergeTree()\nORDER BY src;","fileName":"../ClickHouse/tests/queries/0_stateless/03035_alias_column_bug_distributed.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE alias_bug (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE alias_bug_dist AS alias_bug\nENGINE = Distributed('test_shard_localhost', currentDatabase(), 'alias_bug', rand());","fileName":"../ClickHouse/tests/queries/0_stateless/03035_alias_column_bug_distributed.sql","errors":[]},{"query":"CREATE TABLE tree (\nid UInt64,\nlink Nullable(UInt64),\ndata String\n) ENGINE=MergeTree ORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/03034_recursive_cte_tree_merge_tree.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tree'","startColumn":13,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE department ( id UInt64,  -- department ID\nparent_department UInt64, -- upper department ID\nname String -- department name\n)\nENGINE=MergeTree ORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/03034_recursive_cte_tree_merge_tree.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE department ( id UInt64,  parent_department UInt64, name String )\\nENGINE=MergeTree ORDER BY ()'","startColumn":27,"startLine":5,"endColumn":28,"endLine":5}]},{"query":"CREATE TABLE department__fuzz_1 (\\`id\\` DateTime, \\`parent_department\\` UInt128, \\`name\\` String) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/03034_recursive_cte_tree_fuzz_crash_fix.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE department__fuzz_1 (\\'","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"CREATE TABLE department__fuzz_3 (\\`id\\` Date, \\`parent_department\\` UInt128, \\`name\\` LowCardinality(String)) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/03034_recursive_cte_tree_fuzz_crash_fix.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE department__fuzz_3 (\\'","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"CREATE TABLE tree (\nid UInt64,\nlink Nullable(UInt64),\ndata String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/03034_recursive_cte_tree.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tree'","startColumn":13,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"create table test (d Dynamic) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03034_dynamic_conversions.sql","errors":[]},{"query":"CREATE TABLE tab (m1 Map(Nothing, String)) ENGINE = MergeTree ORDER BY m1; -- { serverError DATA_TYPE_CANNOT_BE_USED_IN_KEY } SELECT 'But Map(Nothing, ...) can be a non-primary-key, it is quite useless though ...';","fileName":"../ClickHouse/tests/queries/0_stateless/03034_ddls_and_merges_with_unusual_maps.sql","errors":[]},{"query":"CREATE TABLE tab (m3 Map(Nothing, String)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03034_ddls_and_merges_with_unusual_maps.sql","errors":[]},{"query":"CREATE TABLE tab (m1 Map(Float32, String), m2 Map(LowCardinality(String), String)) ENGINE = MergeTree ORDER BY (m1, m2);","fileName":"../ClickHouse/tests/queries/0_stateless/03034_ddls_and_merges_with_unusual_maps.sql","errors":[]},{"query":"CREATE TABLE tab (m1 Map(Float32, String), m2 Map(LowCardinality(String), String)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03034_ddls_and_merges_with_unusual_maps.sql","errors":[]},{"query":"CREATE TABLE 03033_example_table (\nColumnA Int64,\nColumnB Int64,\nColumnC Int64\n)\nENGINE = MergeTree()\nORDER BY ColumnA;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_with_fill_interpolate.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03033'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE override_test (_part UInt32) ENGINE = MergeTree ORDER BY tuple() AS SELECT 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_virtual_column_override.sql","errors":[]},{"query":"create table a (k UInt64, v UInt64, index i (v) type set(100) granularity 2) engine MergeTree order by k settings index_granularity=8192, index_granularity_bytes=1000000000, min_index_granularity_bytes=0;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_set_index_in.sql","errors":[]},{"query":"CREATE TABLE test  (\n\\`address\\` FixedString(20),\n\\`deployer\\` FixedString(20),\n\\`block_number\\` UInt256,\n\\`block_hash\\` FixedString(32),\n\\`block_timestamp\\` DateTime('UTC'),\n\\`insertion_time\\` DateTime('UTC')\n)\nENGINE = MergeTree\nORDER BY address\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_scalars_context_data_race.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test  (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_tmp as test;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_scalars_context_data_race.sql","errors":[]},{"query":"CREATE TABLE dst (\n\\`block_timestamp\\` AggregateFunction(max, Nullable(DateTime('UTC'))),\n\\`block_hash\\` AggregateFunction(argMax, Nullable(FixedString(32)), DateTime('UTC')),\n\\`block_number\\` AggregateFunction(argMax, Nullable(UInt256), DateTime('UTC')),\n\\`deployer\\` AggregateFunction(argMax, Nullable(FixedString(20)), DateTime('UTC')),\n\\`address\\` FixedString(20),\n\\`name\\` AggregateFunction(argMax, Nullable(String), DateTime('UTC')),\n\\`symbol\\` AggregateFunction(argMax, Nullable(String), DateTime('UTC')),\n\\`decimals\\` AggregateFunction(argMax, Nullable(UInt8), DateTime('UTC')),\n\\`is_proxy\\` AggregateFunction(argMax, Nullable(Bool), DateTime('UTC')),\n\\`blacklist_flags\\` AggregateFunction(argMax, Array(Nullable(String)), DateTime('UTC')),\n\\`whitelist_flags\\` AggregateFunction(argMax, Array(Nullable(String)), DateTime('UTC')),\n\\`detected_standards\\` AggregateFunction(argMax, Array(Nullable(String)), DateTime('UTC')),\n\\`amended_type\\` AggregateFunction(argMax, Nullable(String), DateTime('UTC')),\n\\`comment\\` AggregateFunction(argMax, Nullable(String), DateTime('UTC')),\n\\`_sources\\` AggregateFunction(groupUniqArray, String),\n\\`_updated_at\\` AggregateFunction(max, DateTime('UTC')),\n\\`_active\\` AggregateFunction(argMax, Bool, DateTime('UTC'))\n)\nENGINE = MergeTree\nORDER BY address\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_scalars_context_data_race.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dst (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE MATERIALIZED VIEW view TO dst (\n\\`block_timestamp\\` AggregateFunction(max, Nullable(DateTime('UTC'))),\n\\`block_hash\\` AggregateFunction(argMax, Nullable(FixedString(32)), DateTime('UTC')),\n\\`block_number\\` AggregateFunction(argMax, Nullable(UInt256), DateTime('UTC')),\n\\`deployer\\` AggregateFunction(argMax, Nullable(FixedString(20)), DateTime('UTC')),\n\\`address\\` FixedString(20),\n\\`name\\` AggregateFunction(argMax, Nullable(String), DateTime('UTC')),\n\\`symbol\\` AggregateFunction(argMax, Nullable(String), DateTime('UTC')),\n\\`decimals\\` AggregateFunction(argMax, Nullable(UInt8), DateTime('UTC')),\n\\`is_proxy\\` AggregateFunction(argMax, Nullable(Bool), DateTime('UTC')),\n\\`blacklist_flags\\` AggregateFunction(argMax, Array(Nullable(String)), DateTime('UTC')),\n\\`whitelist_flags\\` AggregateFunction(argMax, Array(Nullable(String)), DateTime('UTC')),\n\\`detected_standards\\` AggregateFunction(argMax, Array(Nullable(String)), DateTime('UTC')),\n\\`amended_type\\` AggregateFunction(argMax, Nullable(String), DateTime('UTC')),\n\\`comment\\` AggregateFunction(argMax, Nullable(String), DateTime('UTC')),\n\\`_sources\\` AggregateFunction(groupUniqArray, String),\n\\`_updated_at\\` AggregateFunction(max, DateTime('UTC')),\n\\`_active\\` AggregateFunction(argMax, Bool, DateTime('UTC'))\n) AS\n(WITH (\nSELECT toDateTime('1970-01-01 00:00:00')\n) AS default_timestamp\nSELECT\nmaxState(CAST(block_timestamp, 'Nullable(DateTime(\\\\'UTC\\\\'))')) AS block_timestamp,\nargMaxState(CAST(block_hash, 'Nullable(FixedString(32))'), insertion_time) AS block_hash,\nargMaxState(CAST(block_number, 'Nullable(UInt256)'), insertion_time) AS block_number,\nargMaxState(CAST(deployer, 'Nullable(FixedString(20))'), insertion_time) AS deployer,\naddress,\nargMaxState(CAST(NULL, 'Nullable(String)'), CAST(default_timestamp, 'DateTime(\\\\'UTC\\\\')')) AS name,\nargMaxState(CAST(NULL, 'Nullable(String)'), CAST(default_timestamp, 'DateTime(\\\\'UTC\\\\')')) AS symbol,\nargMaxState(CAST(NULL, 'Nullable(UInt8)'), CAST(default_timestamp, 'DateTime(\\\\'UTC\\\\')')) AS decimals,\nargMaxState(CAST(true, 'Nullable(Boolean)'), insertion_time) AS is_proxy,\nargMaxState(CAST('[]', 'Array(Nullable(String))'), CAST(default_timestamp, 'DateTime(\\\\'UTC\\\\')')) AS blacklist_flags,\nargMaxState(CAST('[]', 'Array(Nullable(String))'), CAST(default_timestamp, 'DateTime(\\\\'UTC\\\\')')) AS whitelist_flags,\nargMaxState(CAST('[]', 'Array(Nullable(String))'), CAST(default_timestamp, 'DateTime(\\\\'UTC\\\\')')) AS detected_standards,\nargMaxState(CAST(NULL, 'Nullable(String)'), CAST(default_timestamp, 'DateTime(\\\\'UTC\\\\')')) AS amended_type,\nargMaxState(CAST(NULL, 'Nullable(String)'), CAST(default_timestamp, 'DateTime(\\\\'UTC\\\\')')) AS comment,\ngroupUniqArrayState('tokens_proxy_deployments') AS _sources,\nmaxState(insertion_time) AS _updated_at,\nargMaxState(true, CAST(default_timestamp, 'DateTime(\\\\'UTC\\\\')')) AS _active\nFROM test\nWHERE insertion_time > toDateTime('2024-03-14 11:38:09')\nGROUP BY address);","fileName":"../ClickHouse/tests/queries/0_stateless/03033_scalars_context_data_race.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW view TO dst ('","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table t(a UInt32, b UInt32) engine=MergeTree order by (a, b) settings index_granularity=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_parts_splitter_bug_and_index_loading.sql","errors":[]},{"query":"CREATE TABLE t_lightweight_deletes (a UInt64) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_lightweight_deletes_sync.sql","errors":[]},{"query":"CREATE FUNCTION test_func_1 AS (a, b, c) -> ((a + b) + c);","fileName":"../ClickHouse/tests/queries/0_stateless/03033_index_definition_sql_udf_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE t4_2 (\n\\`col1\\` Int64 NOT NULL COMMENT 'test',\n\\`col2\\` Float64 NOT NULL,\n\\`col3\\` Int64 NOT NULL,\nINDEX ind4 test_func_1(col1, col3, col1) TYPE set(51) GRANULARITY 5\n)\nENGINE = MergeTree\nORDER BY col1\n;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_index_definition_sql_udf_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t4_2 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE account_test (\n\\`id\\` UInt64,\n\\`row_ver\\` UInt64,\n)\nENGINE = ReplacingMergeTree(row_ver)\nORDER BY id\nSETTINGS index_granularity = 16, index_granularity_bytes = 0,\nmin_rows_for_wide_part = 0, min_bytes_for_wide_part = 0,\nmin_rows_for_compact_part = 0, min_bytes_for_compact_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_final_undefined_last_mark.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE account_test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table test (s String) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_dynamic_text_serialization.sql","errors":[]},{"query":"CREATE TABLE t (tag_id UInt64, tag_name String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03033_dist_settings.optimize_skip_unused_shards_rewrite_in_composite_sharding_key.sql","errors":[]},{"query":"CREATE TABLE dt AS t ENGINE = Distributed('test_cluster_two_shards_localhost', currentDatabase(), 't', cityHash64(concat(tag_id, tag_name)));","fileName":"../ClickHouse/tests/queries/0_stateless/03033_dist_settings.optimize_skip_unused_shards_rewrite_in_composite_sharding_key.sql","errors":[]},{"query":"CREATE TABLE base (a Int32) ENGINE = TinyLog COMMENT 'original comment';","fileName":"../ClickHouse/tests/queries/0_stateless/03033_create_as_copies_comment.sql","errors":[{"message":"mismatched input 'COMMENT' expecting <EOF>","startColumn":45,"startLine":1,"endColumn":52,"endLine":1}]},{"query":"CREATE TABLE copy_without_comment AS base;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_create_as_copies_comment.sql","errors":[]},{"query":"CREATE TABLE copy_with_comment AS base COMMENT 'new comment';","fileName":"../ClickHouse/tests/queries/0_stateless/03033_create_as_copies_comment.sql","errors":[{"message":"mismatched input 'COMMENT' expecting <EOF>","startColumn":39,"startLine":1,"endColumn":46,"endLine":1}]},{"query":"CREATE TABLE vecs_Float32 (v Array(Float32)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_analyzer_resolve_from_parent_scope.sql","errors":[]},{"query":"CREATE TABLE raw_data (\n\t\\`id\\` UInt8,\n\t\\`data\\` String\n)\nENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03033_analyzer_parametrized_view_alias.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE raw_data (\\n\\t\\'","startColumn":1,"startLine":2,"endColumn":2,"endLine":2}]},{"query":"CREATE VIEW raw_data_parametrized AS SELECT *\nFROM raw_data\nWHERE (id >= {id_from:UInt8}) AND (id <= {id_to:UInt8});","fileName":"../ClickHouse/tests/queries/0_stateless/03033_analyzer_parametrized_view_alias.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW raw_data_parametrized AS SELECT *\\nFROM raw_data\\nWHERE (id >= {'","startColumn":13,"startLine":3,"endColumn":14,"endLine":3}]},{"query":"create table test (\\`x\\` LowCardinality(Nullable(UInt32)), \\`y\\` String) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03033_analyzer_merge_engine_filter_push_down.sql","errors":[{"message":"no viable alternative at input 'create table test (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"create table m_table (x UInt32, y String) engine = Merge(currentDatabase(), 'test*');","fileName":"../ClickHouse/tests/queries/0_stateless/03033_analyzer_merge_engine_filter_push_down.sql","errors":[]},{"query":"CREATE TABLE memory (i UInt32) ENGINE = Memory SETTINGS min_bytes_to_keep = 8192, max_bytes_to_keep = 32768;","fileName":"../ClickHouse/tests/queries/0_stateless/03032_storage_memory_modify_settings.sql","errors":[]},{"query":"CREATE TABLE memory (i UInt32) ENGINE = Memory SETTINGS min_rows_to_keep = 200, max_rows_to_keep = 2000;","fileName":"../ClickHouse/tests/queries/0_stateless/03032_storage_memory_modify_settings.sql","errors":[]},{"query":"CREATE TABLE memory (i UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03032_storage_memory_modify_settings.sql","errors":[]},{"query":"CREATE TABLE memory (i UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03032_storage_memory_modify_settings.sql","errors":[]},{"query":"CREATE TABLE memory (i UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03032_storage_memory_modify_settings.sql","errors":[]},{"query":"create table query_run_metric_arrays engine Memory as with (with (select groupUniqArrayArray(['a', 'b']) from numbers(1)) as all_names select all_names) as all_metrics select all_metrics;","fileName":"../ClickHouse/tests/queries/0_stateless/03032_scalars_create_as_select.sql","errors":[]},{"query":"create table data_r1 (key Int) engine=ReplicatedMergeTree('/tables/{database}', 'r1') order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03032_rmt_create_columns_from_replica.sql","errors":[]},{"query":"create table data_r2 engine=ReplicatedMergeTree('/tables/{database}', 'r2') order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03032_rmt_create_columns_from_replica.sql","errors":[]},{"query":"CREATE TABLE test_table (\nk UInt64,\n)\nENGINE = MergeTree\nORDER BY k SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/03032_redundant_equals.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\nk UInt64,\\n)'","startColumn":0,"startLine":3,"endColumn":1,"endLine":3}]},{"query":"CREATE TABLE test (\\`id\\` LowCardinality(UInt32)) ENGINE = MergeTree ORDER BY id AS SELECT 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03031_tuple_elimination_analyzer.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE 03031_test (\n\\`id\\` UInt64,\n\\`value_1\\` String,\n\\`value_2\\` String,\n\\`value_3\\` String,\nINDEX value_1_idx value_1 TYPE bloom_filter GRANULARITY 1,\nINDEX value_2_idx value_2 TYPE ngrambf_v1(3, 512, 2, 0) GRANULARITY 1,\nINDEX value_3_idx value_3 TYPE tokenbf_v1(512, 3, 0) GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03031_filter_float64_logical_error.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03031'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table ephemeral (key Int, value Int) engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/03030_system_flush_distributed_settings.sql","errors":[]},{"query":"create table dist_in as ephemeral engine=Distributed(test_shard_localhost, currentDatabase(), ephemeral, key) settings background_insert_batch=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03030_system_flush_distributed_settings.sql","errors":[]},{"query":"create table data (key Int, uniq_values Int) engine=TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/03030_system_flush_distributed_settings.sql","errors":[]},{"query":"create materialized view mv to data as select key, uniqExact(value::String) uniq_values from ephemeral group by key;","fileName":"../ClickHouse/tests/queries/0_stateless/03030_system_flush_distributed_settings.sql","errors":[{"message":"no viable alternative at input 'create materialized view mv to data as select key, uniqExact(value:'","startColumn":66,"startLine":1,"endColumn":67,"endLine":1}]},{"query":"create table dist_out as data engine=Distributed(test_shard_localhost, currentDatabase(), data);","fileName":"../ClickHouse/tests/queries/0_stateless/03030_system_flush_distributed_settings.sql","errors":[]},{"query":"CREATE TABLE src_table (\\`a\\` UInt32, \\`b\\` UInt32) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/03022_alter_materialized_view_query_has_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE src_table (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW mv (\\`a\\` UInt32) ENGINE = MergeTree ORDER BY a AS SELECT a FROM src_table;","fileName":"../ClickHouse/tests/queries/0_stateless/03022_alter_materialized_view_query_has_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"create table data (key Int, value AggregateFunction(sum, UInt64)) engine=AggregatingMergeTree() order by (key, value); -- { serverError DATA_TYPE_CANNOT_BE_USED_IN_KEY } create table data (key Int, value SimpleAggregateFunction(sum, UInt64)) engine=AggregatingMergeTree() order by (key, value); -- { serverError DATA_TYPE_CANNOT_BE_USED_IN_KEY }\ncreate table data (key Int, value AggregateFunction(sum, UInt64)) engine=AggregatingMergeTree() primary key value; -- { serverError DATA_TYPE_CANNOT_BE_USED_IN_KEY }\ncreate table data (key Int, value SimpleAggregateFunction(sum, UInt64)) engine=AggregatingMergeTree() primary key value; -- { serverError DATA_TYPE_CANNOT_BE_USED_IN_KEY }\ncreate table data (key Int, value AggregateFunction(sum, UInt64)) engine=AggregatingMergeTree() primary key value order by (value, key); -- { serverError DATA_TYPE_CANNOT_BE_USED_IN_KEY }\ncreate table data (key Int, value SimpleAggregateFunction(sum, UInt64)) engine=AggregatingMergeTree() primary key value order by (value, key); -- { serverError DATA_TYPE_CANNOT_BE_USED_IN_KEY }\nset allow_suspicious_primary_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/03020_order_by_SimpleAggregateFunction.sql","errors":[]},{"query":"create table data (key Int, value SimpleAggregateFunction(sum, UInt64)) engine=AggregatingMergeTree() primary key value order by (value, key);","fileName":"../ClickHouse/tests/queries/0_stateless/03020_order_by_SimpleAggregateFunction.sql","errors":[]},{"query":"create table data (key Int) engine=AggregatingMergeTree() order by (key);","fileName":"../ClickHouse/tests/queries/0_stateless/03020_order_by_SimpleAggregateFunction.sql","errors":[]},{"query":"create table data_rep (key Int) engine=ReplicatedAggregatingMergeTree('/tables/{database}', 'r1') order by (key);","fileName":"../ClickHouse/tests/queries/0_stateless/03020_order_by_SimpleAggregateFunction.sql","errors":[]},{"query":"CREATE TABLE set_index_not__fuzz_0 (\\`name\\` String, \\`status\\` Enum8('alive' = 0, 'rip' = 1), INDEX idx_status status TYPE set(2) GRANULARITY 1) ENGINE = MergeTree ORDER BY name\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/03017_analyzer_groupby_fuzz_61600.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE set_index_not__fuzz_0 (\\'","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE test_data (\nShipmentDate Date\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03015_peder1001.sql","errors":[]},{"query":"CREATE TABLE 03015_aggregator_empty_data_multiple_blocks (c0 Int32) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/03015_aggregator_empty_data_multiple_blocks.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03015'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03014_async_with_dedup_part_log (x UInt64) ENGINE=ReplicatedMergeTree('/clickhouse/table/{database}/03014_async_with_dedup_part_log', 'r1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03014_async_with_dedup_part_log_rmt.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03014'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE test (a Int) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03013_test_part_level_is_reset_attach_from_disk_mt.sql","errors":[]},{"query":"CREATE TABLE test (a Int) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03013_test_part_level_is_reset_attach_from_disk_mt.sql","errors":[]},{"query":"CREATE TABLE 03013_position_const_start_pos (n Int16) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03013_position_const_start_pos.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03013'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table test_memory (number UInt64) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03013_ignore_drop_queries_probability.sql","errors":[]},{"query":"create table test_merge_tree (number UInt64) engine=MergeTree order by number;","fileName":"../ClickHouse/tests/queries/0_stateless/03013_ignore_drop_queries_probability.sql","errors":[]},{"query":"create table test_join (number UInt64) engine=Join(ALL, LEFT, number);","fileName":"../ClickHouse/tests/queries/0_stateless/03013_ignore_drop_queries_probability.sql","errors":[]},{"query":"CREATE VIEW v (\\`date\\` UInt32,\\`value\\` UInt8) AS WITH\ndata AS (SELECT '' id LIMIT 0),\nr AS (SELECT'' as id, 1::UInt8 as value)\nSELECT\nnow() as date,\nvalue AND (data.id IN (SELECT '' as d from system.one)) AS value\nFROM data\nLEFT JOIN r ON data.id = r.id;","fileName":"../ClickHouse/tests/queries/0_stateless/03010_view_prewhere_in.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW v (\\'","startColumn":15,"startLine":1,"endColumn":16,"endLine":1}]},{"query":"CREATE TABLE users (uid Int16, name String, age Int16) ENGINE=MergeTree ORDER BY uid PARTITION BY uid;","fileName":"../ClickHouse/tests/queries/0_stateless/03010_read_system_parts_table_test.sql","errors":[]},{"query":"create table test (number UInt64) engine=FileLog('./user_files/data.jsonl', 'JSONEachRow') settings poll_max_batch_size=18446744073709; -- {serverError INVALID_SETTING_VALUE} ","fileName":"../ClickHouse/tests/queries/0_stateless/03010_file_log_large_poll_batch_size.sql","errors":[]},{"query":"CREATE TABLE memory (i UInt32) ENGINE = Memory SETTINGS min_bytes_to_keep = 4096, max_bytes_to_keep = 16384;","fileName":"../ClickHouse/tests/queries/0_stateless/03009_storage_memory_circ_buffer_usage.sql","errors":[]},{"query":"CREATE TABLE memory (i UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03009_storage_memory_circ_buffer_usage.sql","errors":[]},{"query":"CREATE TABLE faulty_memory (i UInt32) ENGINE = Memory SETTINGS min_rows_to_keep = 100;  -- { serverError SETTING_CONSTRAINT_VIOLATION } CREATE TABLE faulty_memory (i UInt32) ENGINE = Memory SETTINGS min_bytes_to_keep = 100; -- { serverError SETTING_CONSTRAINT_VIOLATION }\nDROP TABLE memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03009_storage_memory_circ_buffer_usage.sql","errors":[]},{"query":"CREATE TABLE range_dictionary_nullable_source_table (\nkey UInt64,\nstart_date Date,\nend_date Date,\nvalue Nullable(UInt64)\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/03009_range_dict_get_or_default.sql","errors":[]},{"query":"CREATE DICTIONARY range_dictionary (\nkey UInt64,\nstart_date Date,\nend_date Date,\nvalue Nullable(UInt64) DEFAULT NULL\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'range_dictionary_nullable_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(RANGE_HASHED())\nRANGE(MIN start_date MAX end_date);","fileName":"../ClickHouse/tests/queries/0_stateless/03009_range_dict_get_or_default.sql","errors":[]},{"query":"CREATE TABLE t_nullable_keys_1 (x Nullable(Int64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03009_consecutive_keys_nullable.sql","errors":[]},{"query":"CREATE TABLE t_nullable_keys_2 (x Nullable(Int64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03009_consecutive_keys_nullable.sql","errors":[]},{"query":"CREATE TABLE t_nullable_keys_3 (x Nullable(Int64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03009_consecutive_keys_nullable.sql","errors":[]},{"query":"CREATE TABLE t_nullable_keys_4 (x Nullable(Int64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03009_consecutive_keys_nullable.sql","errors":[]},{"query":"CREATE TABLE t_nullable_keys_5 (x Nullable(Int64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03009_consecutive_keys_nullable.sql","errors":[]},{"query":"CREATE TABLE t_nullable_keys_6 (x Nullable(Int64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03009_consecutive_keys_nullable.sql","errors":[]},{"query":"CREATE TABLE t_uniq_exact (a UInt64, b String, c UInt64) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_uniq_exact_equal_ranges.sql","errors":[]},{"query":"CREATE TABLE t_optimize_equal_ranges (a UInt64, b String, c UInt64) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_optimize_equal_ranges.sql","errors":[]},{"query":"CREATE TABLE test (a UInt8, b UInt8) ENGINE = MergeTree ORDER BY (a, b) SETTINGS index_granularity = 1, primary_key_ratio_of_unique_prefix_values_to_skip_suffix_columns = 0.01;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_index_small.sql","errors":[]},{"query":"create table test (number UInt64) engine=MergeTree order by number;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_filter_projections_non_deterministoc_functions.sql","errors":[]},{"query":"CREATE TABLE src (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_wrong_mv.sql","errors":[]},{"query":"CREATE TABLE dst (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_wrong_mv.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv1 TO dst AS SELECT * FROM src;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_wrong_mv.sql","errors":[]},{"query":"CREATE TABLE src (a UInt64, b UInt64) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/03008_deduplication_remote_insert_select/src', '{replica}')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_remote_insert_select.sql","errors":[]},{"query":"CREATE TABLE dst_null(a UInt64, b UInt64) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_remote_insert_select.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_dst ENGINE = AggregatingMergeTree()\nORDER BY a\nAS SELECT\na,\nsumState(b)  AS sum_b,\nuniqState(b) AS uniq_b\nFROM dst_null\nGROUP BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_remote_insert_select.sql","errors":[]},{"query":"CREATE TABLE partitioned_table (key Int64, value String)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/03008_deduplication_insert_into_partitioned_table', '{replica}')\npartition by key % 10\norder by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_insert_into_partitioned_table.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_table (key Int64, value String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/03008_deduplication_insert_into_partitioned_table_mv', '{replica}')\nORDER BY tuple()\nAS SELECT key, value FROM partitioned_table;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_insert_into_partitioned_table.sql","errors":[]},{"query":"CREATE TABLE partitioned_table (key Int64, value String)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/03008_deduplication_insert_into_partitioned_table', '{replica}')\npartition by key % 10\norder by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_insert_into_partitioned_table.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_table (key Int64, value String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/03008_deduplication_insert_into_partitioned_table_mv', '{replica}')\nORDER BY tuple()\nAS SELECT key, value FROM partitioned_table;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_insert_into_partitioned_table.sql","errors":[]},{"query":"CREATE TABLE partitioned_table (key Int64, value String)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/03008_deduplication_insert_into_partitioned_table', '{replica}')\npartition by key % 10\norder by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_insert_into_partitioned_table.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_table (key Int64, value String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/03008_deduplication_insert_into_partitioned_table_mv', '{replica}')\nORDER BY tuple()\nAS SELECT key, value FROM partitioned_table;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_insert_into_partitioned_table.sql","errors":[]},{"query":"CREATE TABLE dst (\n\\`key\\` Int64,\n\\`value\\` String\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS non_replicated_deduplication_window=1000;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_cases_from_docs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dst (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE mv_dst (\n\\`key\\` Int64,\n\\`value\\` String\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS non_replicated_deduplication_window=1000;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_cases_from_docs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mv_dst (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE MATERIALIZED VIEW mv_first TO mv_dst\nAS SELECT\n0 AS key,\nvalue AS value\nFROM dst;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_cases_from_docs.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_second TO mv_dst\nAS SELECT\n0 AS key,\nvalue AS value\nFROM dst;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_cases_from_docs.sql","errors":[]},{"query":"CREATE TABLE dst (\n\\`key\\` Int64,\n\\`value\\` String\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS non_replicated_deduplication_window=1000;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_cases_from_docs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dst (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE MATERIALIZED VIEW mv_dst (\n\\`key\\` Int64,\n\\`value\\` String\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS non_replicated_deduplication_window=1000\nAS SELECT\n0 AS key,\nvalue AS value\nFROM dst;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_cases_from_docs.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv_dst (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE dst (\n\\`key\\` Int64,\n\\`value\\` String\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS non_replicated_deduplication_window=1000;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_cases_from_docs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dst (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE dst (\n\\`key\\` Int64,\n\\`value\\` String\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS non_replicated_deduplication_window=1000;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_cases_from_docs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dst (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE dst (\n\\`key\\` Int64,\n\\`value\\` String\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS non_replicated_deduplication_window=1000;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_cases_from_docs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dst (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE MATERIALIZED VIEW mv_dst (\n\\`key\\` Int64,\n\\`value\\` String\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS non_replicated_deduplication_window=1000\nAS SELECT\n0 AS key,\nvalue AS value\nFROM dst;","fileName":"../ClickHouse/tests/queries/0_stateless/03008_deduplication_cases_from_docs.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv_dst (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE url_na_log (\n\\`SiteId\\` UInt32,\n\\`DateVisit\\` Date\n)\nENGINE = MergeTree\nPRIMARY KEY SiteId\nORDER BY (SiteId, DateVisit)\nSETTINGS index_granularity = 1000, min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03006_parallel_replicas_prewhere.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE url_na_log (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE ROW POLICY url_na_log_policy0 ON url_na_log FOR SELECT USING (DateVisit < '2022-08-11') OR (DateVisit > '2022-08-19') TO default;","fileName":"../ClickHouse/tests/queries/0_stateless/03006_parallel_replicas_prewhere.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE numbers_1e6__fuzz_34 (\nn UInt64\n)\nENGINE = MergeTree\nORDER BY n\nAS SELECT *\nFROM numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/03006_parallel_replicas_cte_explain_syntax_crash.sql","errors":[]},{"query":"CREATE TABLE numbers_1e6__fuzz_33 (\nn UInt64\n)\nENGINE = MergeTree\nORDER BY n\nAS SELECT *\nFROM numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/03006_parallel_replicas_cte_explain_syntax_crash.sql","errors":[]},{"query":"CREATE TABLE 03006_test (\nd Date,\nvalue UInt64\n)\nENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03006_mv_deduplication_throw_if_async_insert.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03006'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03006_buffer_overflow_l (\\`a\\` String, \\`b\\` Tuple(String, String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03006_buffer_overflow_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03006'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 03006_buffer_overflow_r (\\`a\\` LowCardinality(Nullable(String)), \\`c\\` Tuple(LowCardinality(String), LowCardinality(String))) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03006_buffer_overflow_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03006'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table test (a Int8) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/03005_input_function_in_join.sql","errors":[]},{"query":"CREATE TABLE t_length_1 (id UInt64, arr Array(UInt64)) ENGINE = ReplacingMergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03003_functions_to_subcolumns_final.sql","errors":[]},{"query":"CREATE TABLE t_length_2 (id UInt64, arr_length UInt64) ENGINE = ReplacingMergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/03003_functions_to_subcolumns_final.sql","errors":[]},{"query":"CREATE TABLE users (uid Int16, name Nullable(String), age Int16) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/03003_count_asterisk_filter.sql","errors":[]},{"query":"CREATE TABLE test (dummy Int8) ENGINE = Distributed(test_cluster_two_shards, 'system', 'one');","fileName":"../ClickHouse/tests/queries/0_stateless/03003_analyzer_setting.sql","errors":[]},{"query":"CREATE TABLE t_sample_factor(a UInt64, b UInt64) ENGINE = MergeTree ORDER BY (a, b) SAMPLE BY b;","fileName":"../ClickHouse/tests/queries/0_stateless/03002_sample_factor_where.sql","errors":[]},{"query":"CREATE TABLE table_03002 (ts DateTime, event_type String) ENGINE = MergeTree ORDER BY (event_type, ts);","fileName":"../ClickHouse/tests/queries/0_stateless/03002_modify_query_cte.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_03002 TO table_03002 AS SELECT ts FROM table_03002;","fileName":"../ClickHouse/tests/queries/0_stateless/03002_modify_query_cte.sql","errors":[]},{"query":"create table test (number UInt64) engine=MergeTree order by number;","fileName":"../ClickHouse/tests/queries/0_stateless/03002_filter_skip_virtual_columns_with_non_deterministic_functions.sql","errors":[]},{"query":"CREATE TABLE t__fuzz_0 (\\`i\\` Int32, \\`j\\` Nullable(Int32), \\`k\\` Int32, PROJECTION p (SELECT * ORDER BY j)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 1, allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03002_analyzer_prewhere.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t__fuzz_0 (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"create table test_d engine=Distributed(test_cluster_two_shard_three_replicas_localhost, system, numbers);","fileName":"../ClickHouse/tests/queries/0_stateless/03001_max_parallel_replicas_zero_value.sql","errors":[]},{"query":"CREATE TABLE landing (\ntimestamp DateTime64(3),\nstatus String,\nid String\n)\nENGINE = MergeTree()\nORDER BY timestamp;","fileName":"../ClickHouse/tests/queries/0_stateless/03001_insert_threads_deduplication.sql","errors":[]},{"query":"CREATE TABLE landing_dist (\ntimestamp DateTime64(3),\nstatus String,\nid String\n)\nENGINE = Distributed('test_cluster_two_shards', currentDatabase(), 'landing', rand());","fileName":"../ClickHouse/tests/queries/0_stateless/03001_insert_threads_deduplication.sql","errors":[]},{"query":"CREATE TABLE ds (\ntimestamp DateTime64(3),\nstatus String,\nid String\n)\nENGINE = MergeTree()\nORDER BY timestamp\nSETTINGS non_replicated_deduplication_window=1000;","fileName":"../ClickHouse/tests/queries/0_stateless/03001_insert_threads_deduplication.sql","errors":[]},{"query":"CREATE TABLE t_data_version (a UInt64, b UInt64) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/03001_data_version_column.sql","errors":[]},{"query":"CREATE TABLE lwd_merge (id UInt64 CODEC(NONE)) ENGINE = MergeTree ORDER BY id\nSETTINGS max_bytes_to_merge_at_max_space_in_pool = 80000, exclude_deleted_rows_for_part_size_in_merge = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/03001_consider_lwd_when_merge.sql","errors":[]},{"query":"CREATE TABLE t_block_offset (id UInt32) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/03001_block_offset_column_2.sql","errors":[]},{"query":"create table x (i int, j int, k int) engine MergeTree order by tuple() settings index_granularity=8192, index_granularity_bytes = '10Mi',  min_bytes_for_wide_part=0, min_rows_for_wide_part=0, ratio_of_defaults_for_sparse_serialization=1;","fileName":"../ClickHouse/tests/queries/0_stateless/03000_virtual_columns_in_prewhere.sql","errors":[]},{"query":"CREATE TABLE 03000_traverse_shadow_system_data_path_table ( id Int64,\ndata String\n) ENGINE=MergeTree()\nORDER BY id\nSETTINGS storage_policy='s3_cache';","fileName":"../ClickHouse/tests/queries/0_stateless/03000_traverse_shadow_system_data_paths.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 03000'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE skip_table (\nk UInt64,\nv UInt64,\nINDEX v_set v TYPE set(100) GRANULARITY 2, -- set index is declared before minmax intentionally\nINDEX v_mm v TYPE minmax GRANULARITY 2\n)\nENGINE = MergeTree\nPRIMARY KEY k\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/03000_minmax_index_first.sql","errors":[]},{"query":"create table source(type String) engine=MergeTree order by type;","fileName":"../ClickHouse/tests/queries/0_stateless/02999_scalar_subqueries_bug_2.sql","errors":[]},{"query":"create view v_heavy as with nums as (select number from numbers(1e5))\nselect count(*) n from (select number from numbers(1e5) n1 cross join nums);","fileName":"../ClickHouse/tests/queries/0_stateless/02999_scalar_subqueries_bug_2.sql","errors":[{"message":"no viable alternative at input 'create view v_heavy as with nums as ('","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"create table target1(type String) engine=MergeTree order by type;","fileName":"../ClickHouse/tests/queries/0_stateless/02999_scalar_subqueries_bug_2.sql","errors":[]},{"query":"create table target2(type String) engine=MergeTree order by type;","fileName":"../ClickHouse/tests/queries/0_stateless/02999_scalar_subqueries_bug_2.sql","errors":[]},{"query":"create materialized view vm_target2 to target2 as select * from source where type='two' and (select sum(sleepEachRow(0.1)) from numbers(30));","fileName":"../ClickHouse/tests/queries/0_stateless/02999_scalar_subqueries_bug_2.sql","errors":[]},{"query":"CREATE TABLE t_table_select (id UInt32) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02999_scalar_subqueries_bug_1.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t_test (x UInt32, y Nullable(UInt32)) AS SELECT a.id, b.id FROM remote('127.0.0.{1,2}', currentDatabase(), t_table_select) AS a GLOBAL LEFT JOIN (SELECT id FROM remote('127.0.0.{1,2}', currentDatabase(), t_table_select) AS b WHERE (b.id % 10) = 0) AS b ON b.id = a.id SETTINGS join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02999_scalar_subqueries_bug_1.sql","errors":[]},{"query":"CREATE TABLE date_t__fuzz_0 (\\`id\\` UInt32, \\`value1\\` String, \\`date1\\` Date) ENGINE = ReplacingMergeTree ORDER BY id SETTINGS allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02999_analyzer_preimage_null.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE date_t__fuzz_0 (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE visits_order (\nuser_id UInt64,\nuser_name String,\nsome_int UInt64\n) ENGINE = MergeTree() PRIMARY KEY user_id PARTITION BY user_id;","fileName":"../ClickHouse/tests/queries/0_stateless/02998_projection_after_attach_partition.sql","errors":[]},{"query":"CREATE TABLE visits_order_dst (\nuser_id UInt64,\nuser_name String,\nsome_int UInt64\n) ENGINE = MergeTree() PRIMARY KEY user_id PARTITION BY user_id;","fileName":"../ClickHouse/tests/queries/0_stateless/02998_projection_after_attach_partition.sql","errors":[]},{"query":"CREATE TABLE test (a UInt64, b UInt64, c UInt64) ENGINE = MergeTree ORDER BY (a, b, c) SETTINGS index_granularity = 1, primary_key_ratio_of_unique_prefix_values_to_skip_suffix_columns = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02998_primary_key_skip_columns.sql","errors":[]},{"query":"CREATE TABLE attach_partition_t7 ( a UInt32,\nb UInt32\n)\nENGINE = MergeTree\nPARTITION BY a ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02998_attach_partition_not_allowed_if_structure_differs_due_to_materialized_column.sql","errors":[]},{"query":"CREATE TABLE attach_partition_t8 ( a UInt32,\nb UInt32\n)\nENGINE = MergeTree\nPARTITION BY a ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02998_attach_partition_not_allowed_if_structure_differs_due_to_materialized_column.sql","errors":[]},{"query":"CREATE TABLE hits (\n\\`date\\` Date,\n\\`data\\` Array(UInt32)\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMM(date)\nORDER BY date;","fileName":"../ClickHouse/tests/queries/0_stateless/02998_analyzer_prewhere_report.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE hits (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TEMPORARY TABLE t_proj (t DateTime, id UInt64, PROJECTION p (SELECT id, t ORDER BY toStartOfDay(t))) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02997_projections_formatting.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t_proj2 (a UInt32, b UInt32, PROJECTION p (SELECT a ORDER BY b * 2)) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02997_projections_formatting.sql","errors":[]},{"query":"CREATE TABLE too_many_parts (x UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS parts_to_delay_insert = 5, parts_to_throw_insert = 5;","fileName":"../ClickHouse/tests/queries/0_stateless/02997_insert_select_too_many_parts_multithread.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_0 (a DateTime64(0)) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02997_fix_datetime64_scale_conversion.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_2 (a DateTime64(2)) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02997_fix_datetime64_scale_conversion.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_3 (a DateTime64(3)) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02997_fix_datetime64_scale_conversion.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_6 (a DateTime64(6)) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02997_fix_datetime64_scale_conversion.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_9 (a DateTime64(6)) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02997_fix_datetime64_scale_conversion.sql","errors":[]},{"query":"create table b (x Int64, y String) engine MergeTree order by (x, y) settings index_granularity=2;","fileName":"../ClickHouse/tests/queries/0_stateless/02996_index_compaction_counterexample.sql","errors":[]},{"query":"CREATE TABLE t__fuzz_0 (\\`i\\` LowCardinality(Int32), \\`j\\` Int32, \\`k\\` Int32, PROJECTION p (SELECT * ORDER BY j)) ENGINE = MergeTree ORDER BY i SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02996_analyzer_prewhere_projection.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t__fuzz_0 (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"create table data (key SimpleAggregateFunction(max, Int)) engine=AggregatingMergeTree() order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02995_preliminary_filters_duplicated_columns_SimpleAggregateFunction.sql","errors":[]},{"query":"create table data (key Int) engine=AggregatingMergeTree() order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02995_preliminary_filters_duplicated_columns.sql","errors":[]},{"query":"create temporary table t1 engine=MergeTree() order by c as ( select 1 as c intersect (select 1 as c union all  select 2 as c ) );","fileName":"../ClickHouse/tests/queries/0_stateless/02995_bad_formatting_union_intersect.sql","errors":[{"message":"no viable alternative at input 'create temporary table t1 engine=MergeTree() order by c as ( select 1 as c intersect ('","startColumn":85,"startLine":1,"endColumn":86,"endLine":1}]},{"query":"CREATE TABLE data_02052_1_wide0__fuzz_48 (\n\\`key\\` Nullable(Int64),\n\\`value\\` UInt8\n)\nENGINE = MergeTree\nORDER BY key\nSETTINGS min_bytes_for_wide_part = 0, allow_nullable_key = 1 AS\nSELECT\nnumber,\nrepeat(toString(number), 5)\nFROM numbers(1);","fileName":"../ClickHouse/tests/queries/0_stateless/02994_sanity_check_settings.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE data_02052_1_wide0__fuzz_48 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TEMPORARY TABLE table (x UInt8);","fileName":"../ClickHouse/tests/queries/0_stateless/02994_inconsistent_formatting.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE FORMAT (x UInt8);","fileName":"../ClickHouse/tests/queries/0_stateless/02994_inconsistent_formatting.sql","errors":[]},{"query":"CREATE TABLE test (s String) ENGINE = MergeTree ORDER BY s SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02993_lazy_index_loading.sql","errors":[]},{"query":"CREATE TABLE ttt (hr DateTime, ts DateTime) ENGINE=Memory as select '2000-01-01' d, d;","fileName":"../ClickHouse/tests/queries/0_stateless/02992_analyzer_group_by_const.sql","errors":[]},{"query":"create table test (v Variant(String, UInt64)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02990_variant_where_cond.sql","errors":[]},{"query":"CREATE TABLE x (key Int) ENGINE = ReplicatedMergeTree('/tables/{database}/{uuid}', 'r1') ORDER BY tuple(); -- { serverError BAD_ARGUMENTS } CREATE TABLE x UUID 'aaaaaaaa-1111-2222-3333-aaaaaaaaaaaa' (key Int) ENGINE = ReplicatedMergeTree('/tables/{database}/{uuid}', 'r1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02990_rmt_replica_path_uuid.sql","errors":[]},{"query":"CREATE TABLE test_table (\n\\`eventType\\` String,\n\\`timestamp\\` UInt64,\n\\`key\\` UInt64\n)\nENGINE = ReplacingMergeTree\nPRIMARY KEY (eventType, timestamp)\nORDER BY (eventType, timestamp, key)\nSETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02990_parts_splitter_invalid_ranges.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE tags (dev_tag String) ENGINE = Memory AS SELECT '1';","fileName":"../ClickHouse/tests/queries/0_stateless/02990_optimize_uniq_to_count_alias.sql","errors":[]},{"query":"CREATE TABLE users (\n\\`id\\` Int64,\n\\`name\\` String\n)\nENGINE = ReplacingMergeTree\nORDER BY (id, name);","fileName":"../ClickHouse/tests/queries/0_stateless/02990_optimize_uniq_to_count_alias.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE users (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table test (v1 Variant(String, UInt64, Array(UInt32)), v2 Variant(String, UInt64, Array(UInt32))) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02989_variant_comparison.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test_temporary_table_02989 (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02989_system_tables_metadata_version.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02989_system_tables_metadata_version.sql","errors":[]},{"query":"CREATE TABLE test_table_replicated (\nid UInt64,\nvalue String\n) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/test_table_replicated', '1_replica') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02989_system_tables_metadata_version.sql","errors":[]},{"query":"CREATE TABLE test_table_replicated (\nid UInt64,\nvalue String\n) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/test_table_replicated', '1_replica') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02989_replicated_merge_tree_invalid_metadata_version.sql","errors":[]},{"query":"CREATE TABLE test_table_replicated_second (\nid UInt64,\nvalue String,\ninsert_time DateTime\n) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/test_table_replicated', '2_replica') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02989_replicated_merge_tree_invalid_metadata_version.sql","errors":[]},{"query":"CREATE TABLE tabc (a UInt32, b UInt32 ALIAS a + 1, c UInt32 ALIAS b + 1, s String) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02989_join_using_parent_scope.sql","errors":[]},{"query":"CREATE TABLE ta (a Int32) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02989_join_using_parent_scope.sql","errors":[]},{"query":"CREATE TABLE tb (b Int32) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02989_join_using_parent_scope.sql","errors":[]},{"query":"CREATE TABLE users (uid Int16, name String, spouse_name String) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02989_join_using_parent_scope.sql","errors":[]},{"query":"CREATE DATABASE 02988_ordinary ENGINE=Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/02988_ordinary_database_warning.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 02988'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE t (\\`id\\` UInt16, \\`u\\` LowCardinality(Int32), \\`s\\` LowCardinality(String)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02988_join_using_prewhere_pushdown.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE 02987_logical_optimizer_table (key Int, value Int) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02987_logical_optimizer_pass_lowcardinality.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02987'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE VIEW v1 AS SELECT * FROM 02987_logical_optimizer_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02987_logical_optimizer_pass_lowcardinality.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW v1 AS SELECT * FROM 02987'","startColumn":32,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE 02987_logical_optimizer_merge AS v1 ENGINE=Merge(currentDatabase(), 'v1');","fileName":"../ClickHouse/tests/queries/0_stateless/02987_logical_optimizer_pass_lowcardinality.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02987'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE test_empty (a Array(Int64)) engine=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02987_group_array_intersect.sql","errors":[]},{"query":"CREATE TABLE test_null (a Array(Nullable(Int64))) engine=MergeTree ORDER BY a SETTINGS allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02987_group_array_intersect.sql","errors":[]},{"query":"CREATE TABLE test_nested_arrays (a Array(Array(Int64))) engine=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02987_group_array_intersect.sql","errors":[]},{"query":"CREATE TABLE test_numbers (a Array(Int64)) engine=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02987_group_array_intersect.sql","errors":[]},{"query":"CREATE TABLE test_big_numbers_sep (a Array(Int64)) engine=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02987_group_array_intersect.sql","errors":[]},{"query":"CREATE TABLE test_big_numbers (a Array(Int64)) engine=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02987_group_array_intersect.sql","errors":[]},{"query":"CREATE TABLE test_string (a Array(String)) engine=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02987_group_array_intersect.sql","errors":[]},{"query":"CREATE TABLE test_big_string (a Array(String)) engine=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02987_group_array_intersect.sql","errors":[]},{"query":"CREATE TABLE test_datetime (a Array(DateTime)) engine=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02987_group_array_intersect.sql","errors":[]},{"query":"CREATE TABLE test_date32 (a Array(Date32)) engine=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02987_group_array_intersect.sql","errors":[]},{"query":"CREATE TABLE test_date (a Array(Date)) engine=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02987_group_array_intersect.sql","errors":[]},{"query":"CREATE TABLE sharded_table (dummy UInt8) ENGINE = Distributed('test_cluster_two_shards', 'system', 'one');","fileName":"../ClickHouse/tests/queries/0_stateless/02985_shard_query_start_time.sql","errors":[]},{"query":"CREATE TABLE t_index_agg_func (\nid UInt64,\nv AggregateFunction(avg, UInt64),\nINDEX idx_v v TYPE minmax GRANULARITY 1\n)\nENGINE = AggregatingMergeTree ORDER BY id\nSETTINGS index_granularity = 4; -- { serverError BAD_ARGUMENTS }\nCREATE TABLE t_index_agg_func\n(\nid UInt64,\nv AggregateFunction(avg, UInt64),\n)\nENGINE = AggregatingMergeTree ORDER BY id\nSETTINGS index_granularity = 4;","fileName":"../ClickHouse/tests/queries/0_stateless/02985_minmax_index_aggregate_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_index_agg_func\\n(\\nid UInt64,\\nv AggregateFunction(avg, UInt64),\\n)'","startColumn":0,"startLine":12,"endColumn":1,"endLine":12}]},{"query":"CREATE TABLE shared_test_table (id UInt64) ENGINE = MergeTree\nORDER BY (id);","fileName":"../ClickHouse/tests/queries/0_stateless/02985_dialects_with_distributed_tables.sql","errors":[]},{"query":"CREATE TABLE distributed_test_table ENGINE = Distributed(test_cluster_two_shard_three_replicas_localhost, currentDatabase(), shared_test_table);","fileName":"../ClickHouse/tests/queries/0_stateless/02985_dialects_with_distributed_tables.sql","errors":[]},{"query":"CREATE TABLE test (\nt String,\nid String,\nh Map(String, String)   \n)\nENGINE = MergeTree\nORDER BY (t, id) SETTINGS index_granularity = 4096 ;","fileName":"../ClickHouse/tests/queries/0_stateless/02983_empty_map_hasToken.sql","errors":[]},{"query":"CREATE TABLE t1 (\nf1 Int32,\nf2 Map(LowCardinality(String),LowCardinality(String)),\nf3 Map(String,String),\nf4 Map(Int32,Int32)\n)\nENGINE=Memory AS\nSELECT 1 as f1,\nmap(number%2,number%10) as f2,\nf2 as f3,\nf2 as f4\nfrom numbers(1000111);","fileName":"../ClickHouse/tests/queries/0_stateless/02983_empty_map.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS shard_0;","fileName":"../ClickHouse/tests/queries/0_stateless/02983_const_sharding_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS shard_0;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE DATABASE IF NOT EXISTS shard_1;","fileName":"../ClickHouse/tests/queries/0_stateless/02983_const_sharding_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS shard_1;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE TABLE shard_0.t_local (a Int) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02983_const_sharding_key.sql","errors":[]},{"query":"CREATE TABLE shard_1.t_local (a Int) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02983_const_sharding_key.sql","errors":[]},{"query":"CREATE TABLE t_distr (a Int) ENGINE = Distributed(test_cluster_two_shards_different_databases, '', 't_local', 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02983_const_sharding_key.sql","errors":[]},{"query":"CREATE TABLE test_unexpected_cluster (n UInt64) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02982_parallel_replicas_unexpected_cluster.sql","errors":[]},{"query":"CREATE TABLE data (\nkey String,\n)\nENGINE = MergeTree\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02982_create_mv_inner_extra.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE data (\\nkey String,\\n)'","startColumn":0,"startLine":3,"endColumn":1,"endLine":3}]},{"query":"CREATE MATERIALIZED VIEW mv_indexes (\nkey String,\nINDEX idx key TYPE bloom_filter GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY key\nAS SELECT * FROM data;","fileName":"../ClickHouse/tests/queries/0_stateless/02982_create_mv_inner_extra.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_no_indexes (\nkey String,\nINDEX idx key TYPE bloom_filter GRANULARITY 1\n)\nENGINE = Null\nAS SELECT * FROM data;","fileName":"../ClickHouse/tests/queries/0_stateless/02982_create_mv_inner_extra.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_projections (\nkey String,\nprojection p (SELECT uniqCombined(key))\n)\nENGINE = MergeTree\nORDER BY key\nAS SELECT * FROM data;","fileName":"../ClickHouse/tests/queries/0_stateless/02982_create_mv_inner_extra.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_primary_key (\nkey String,\nPRIMARY KEY key\n)\nENGINE = MergeTree\nAS SELECT * FROM data;","fileName":"../ClickHouse/tests/queries/0_stateless/02982_create_mv_inner_extra.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv_primary_key (\\nkey String,\\nPRIMARY KEY key'","startColumn":12,"startLine":3,"endColumn":15,"endLine":3}]},{"query":"CREATE MATERIALIZED VIEW mv_primary_key_from_column (\nkey String PRIMARY KEY\n)\nENGINE = MergeTree\nAS SELECT * FROM data;","fileName":"../ClickHouse/tests/queries/0_stateless/02982_create_mv_inner_extra.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv_primary_key_from_column (\\nkey String PRIMARY'","startColumn":11,"startLine":2,"endColumn":18,"endLine":2}]},{"query":"CREATE TABLE t_vertical_merge_memory (id UInt64, arr Array(String)) ENGINE = MergeTree ORDER BY id\nSETTINGS\nmin_bytes_for_wide_part = 0,\nvertical_merge_algorithm_min_rows_to_activate = 1,\nvertical_merge_algorithm_min_columns_to_activate = 1,\nindex_granularity = 8192,\nindex_granularity_bytes = '10M',\nmerge_max_block_size = 8192,\nmerge_max_block_size_bytes = '10M';","fileName":"../ClickHouse/tests/queries/0_stateless/02981_vertical_merges_memory_usage.sql","errors":[]},{"query":"CREATE TABLE test (v Variant(UInt64, String, Array(UInt64))) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02981_variant_type_function.sql","errors":[]},{"query":"CREATE TABLE t2 (id Int32, pe Map(String, Tuple(a UInt64, b UInt64))) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02974_analyzer_array_join_subcolumn.sql","errors":[]},{"query":"CREATE TABLE t3 (id Int32, c Tuple(v String, pe Map(String, Tuple(a UInt64, b UInt64)))) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02974_analyzer_array_join_subcolumn.sql","errors":[]},{"query":"CREATE TABLE test_table (i Int64) engine=MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/02973_dictionary_table_exception_fix.sql","errors":[]},{"query":"CREATE DICTIONARY test_dict (y String, value UInt64 DEFAULT 0) PRIMARY KEY y SOURCE(CLICKHOUSE(TABLE 'test_table')) LAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02973_dictionary_table_exception_fix.sql","errors":[]},{"query":"CREATE TABLE table_with_some_columns( key UInt64,\nvalue0 UInt8\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/table_with_some_columns', '1')\nORDER BY key\nSETTINGS allow_experimental_block_number_column=1,\nratio_of_defaults_for_sparse_serialization=0.0001,\nmin_bytes_for_wide_part = 0,\nreplace_long_file_name_to_hash=0; -- simpler to debug\nINSERT INTO table_with_some_columns SELECT rand(), number + 10 from numbers(100000);","fileName":"../ClickHouse/tests/queries/0_stateless/02973_block_number_sparse_serialization_and_mutation.sql","errors":[]},{"query":"CREATE TABLE pr_1 (\\`a\\` UInt32) ENGINE = MergeTree ORDER BY a PARTITION BY a % 10 AS SELECT 10 * intDiv(number, 10) + 1 FROM numbers(1_000);","fileName":"../ClickHouse/tests/queries/0_stateless/02972_parallel_replicas_cte.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pr_1 (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE pr_2 (\\`a\\` UInt32) ENGINE = MergeTree ORDER BY a AS SELECT * FROM numbers(1_000);","fileName":"../ClickHouse/tests/queries/0_stateless/02972_parallel_replicas_cte.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pr_2 (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE numbers_1e3 (\n\\`n\\` UInt64\n)\nENGINE = MergeTree\nORDER BY n\nAS SELECT * FROM numbers(1_000);","fileName":"../ClickHouse/tests/queries/0_stateless/02972_parallel_replicas_cte.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE numbers_1e3 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE landing (\ntimestamp UInt64,\nvalue UInt64\n)\nENGINE = MergeTree ORDER BY tuple() SETTINGS non_replicated_deduplication_window = 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts_views.sql","errors":[]},{"query":"CREATE TABLE ds_1_1 (\nt UInt64,\nv UInt64\n)\nENGINE = MergeTree ORDER BY tuple() SETTINGS non_replicated_deduplication_window = 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts_views.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_1_1 TO ds_1_1 as SELECT\ntimestamp t, sum(value) v\nFROM landing\nGROUP BY t;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts_views.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_1_2 TO ds_1_1 as SELECT\ntimestamp t, sum(value) v\nFROM landing\nGROUP BY t;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts_views.sql","errors":[]},{"query":"CREATE TABLE landing (\ntimestamp UInt64,\nvalue UInt64\n)\nENGINE = MergeTree ORDER BY tuple() SETTINGS non_replicated_deduplication_window = 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts.sql","errors":[]},{"query":"CREATE TABLE ds_1_1 (\nt UInt64,\nv UInt64\n)\nENGINE = MergeTree ORDER BY tuple() SETTINGS non_replicated_deduplication_window = 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_1_1 TO ds_1_1 as SELECT\ntimestamp t, sum(value) v\nFROM landing\nGROUP BY t;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts.sql","errors":[]},{"query":"CREATE TABLE ds_1_2 (\nt UInt64,\nv UInt64\n)\nENGINE = MergeTree ORDER BY tuple() SETTINGS non_replicated_deduplication_window = 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_1_2 TO ds_1_2 as SELECT\ntimestamp t, sum(value) v\nFROM landing\nGROUP BY t;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts.sql","errors":[]},{"query":"CREATE TABLE ds_2_1 (\nl String,\nt DateTime,\nv UInt64\n)\nENGINE = MergeTree ORDER BY tuple() SETTINGS non_replicated_deduplication_window = 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_2_1 TO ds_2_1 as SELECT '2_1' l, t, v\nFROM ds_1_1;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_2_2 TO ds_2_1 as SELECT '2_2' l, t, v\nFROM ds_1_2;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts.sql","errors":[]},{"query":"CREATE TABLE ds_3_1 (\nl String,\nt DateTime,\nv UInt64\n)\nENGINE = MergeTree ORDER BY tuple() SETTINGS non_replicated_deduplication_window = 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_3_1 TO ds_3_1 as SELECT '3_1' l, t, v\nFROM ds_2_1;","fileName":"../ClickHouse/tests/queries/0_stateless/02972_insert_deduplication_token_hierarchical_inserts.sql","errors":[]},{"query":"create table tlb (k UInt64) engine MergeTree order by k;","fileName":"../ClickHouse/tests/queries/0_stateless/02971_limit_by_distributed.sql","errors":[]},{"query":"CREATE TABLE t_func_to_subcolumns_variant (id UInt64, v Variant(String, UInt64)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02971_functions_to_subcolumns_variant.sql","errors":[]},{"query":"CREATE TABLE t_func_to_subcolumns_map (id UInt64, m Map(String, UInt64)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02971_functions_to_subcolumns_map.sql","errors":[]},{"query":"CREATE TABLE t_column_names (arr Array(UInt64), n Nullable(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02971_functions_to_subcolumns_column_names.sql","errors":[]},{"query":"CREATE TABLE t_subcolumns_if (id Nullable(Int64)) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02969_functions_to_subcolumns_if_null.sql","errors":[]},{"query":"create table a (x Int64) engine URL('https://example.com/', CSV, headers('foo' = 'bar', 'a' = '13'));","fileName":"../ClickHouse/tests/queries/0_stateless/02968_url_args.sql","errors":[]},{"query":"create table b (x Int64) engine URL('https://example.com/', CSV, headers());","fileName":"../ClickHouse/tests/queries/0_stateless/02968_url_args.sql","errors":[]},{"query":"create table c (x Int64) engine S3('https://example.s3.amazonaws.com/a.csv', NOSIGN, CSV, headers('foo' = 'bar'));","fileName":"../ClickHouse/tests/queries/0_stateless/02968_url_args.sql","errors":[]},{"query":"create table d (x Int64) engine S3('https://example.s3.amazonaws.com/a.csv', NOSIGN, headers('foo' = 'bar'));","fileName":"../ClickHouse/tests/queries/0_stateless/02968_url_args.sql","errors":[]},{"query":"create view e (x Int64) as select count() from url('https://example.com/', CSV, headers('foo' = 'bar', 'a' = '13'));","fileName":"../ClickHouse/tests/queries/0_stateless/02968_url_args.sql","errors":[{"message":"no viable alternative at input 'create view e (x Int64) as select count() from url('https://example.com/', CSV, headers('foo' ='","startColumn":94,"startLine":1,"endColumn":95,"endLine":1}]},{"query":"create view f (x Int64) as select count() from url('https://example.com/', CSV, headers());","fileName":"../ClickHouse/tests/queries/0_stateless/02968_url_args.sql","errors":[]},{"query":"create view g (x Int64) as select count() from s3('https://example.s3.amazonaws.com/a.csv', CSV, headers('foo' = 'bar'));","fileName":"../ClickHouse/tests/queries/0_stateless/02968_url_args.sql","errors":[{"message":"no viable alternative at input 'create view g (x Int64) as select count() from s3('https://example.s3.amazonaws.com/a.csv', CSV, headers('foo' ='","startColumn":111,"startLine":1,"endColumn":112,"endLine":1}]},{"query":"create view h (x Int64) as select count() from s3('https://example.s3.amazonaws.com/a.csv', headers('foo' = 'bar'));","fileName":"../ClickHouse/tests/queries/0_stateless/02968_url_args.sql","errors":[{"message":"no viable alternative at input 'create view h (x Int64) as select count() from s3('https://example.s3.amazonaws.com/a.csv', headers('foo' ='","startColumn":106,"startLine":1,"endColumn":107,"endLine":1}]},{"query":"CREATE TABLE tp (\n\\`type\\` Int32,\n\\`eventcnt\\` UInt64,\nPROJECTION p\n(\nSELECT type,sum(eventcnt)\nGROUP BY type\n)\n)\nENGINE = ReplacingMergeTree\nORDER BY type\nSETTINGS deduplicate_merge_projection_mode = 'rebuild';","fileName":"../ClickHouse/tests/queries/0_stateless/02968_projection_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tp (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE tp (\n\\`type\\` Int32,\n\\`eventcnt\\` UInt64,\n\\`sign\\` Int8,\nPROJECTION p\n(\nSELECT type,sum(eventcnt)\nGROUP BY type\n)\n)\nENGINE = CollapsingMergeTree(sign)\nORDER BY type\nSETTINGS deduplicate_merge_projection_mode = 'rebuild';","fileName":"../ClickHouse/tests/queries/0_stateless/02968_projection_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tp (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE tp (\n\\`type\\` Int32,\n\\`eventcnt\\` UInt64,\n\\`sign\\` Int8,\n\\`version\\` UInt8,\nPROJECTION p\n(\nSELECT type,sum(eventcnt)\nGROUP BY type\n)\n)\nENGINE = VersionedCollapsingMergeTree(sign,version)\nORDER BY type\nSETTINGS deduplicate_merge_projection_mode = 'rebuild';","fileName":"../ClickHouse/tests/queries/0_stateless/02968_projection_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tp (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE tp (\n\\`type\\` Int32,\n\\`eventcnt\\` UInt64,\nPROJECTION p\n(\nSELECT type,sum(eventcnt)\nGROUP BY type\n)\n)\nENGINE = MergeTree\nORDER BY type\nSETTINGS deduplicate_merge_projection_mode = 'rebuild';","fileName":"../ClickHouse/tests/queries/0_stateless/02968_projection_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tp (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t1 (\\`key\\` UInt32, \\`s\\` String) ENGINE = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02968_full_sorting_join_fuzz.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t2 (\\`key\\` UInt32, \\`s\\` String) ENGINE = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02968_full_sorting_join_fuzz.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE im (id Int32, dd Int32) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02968_analyzer_join_column_not_found.sql","errors":[]},{"query":"CREATE TABLE ts (tid Int32, id Int32) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02968_analyzer_join_column_not_found.sql","errors":[]},{"query":"CREATE TABLE async_insert_mt_test (a UInt64, b Array(UInt64)) ENGINE=MergeTree() ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02968_adaptive_async_insert_timeout.sql","errors":[]},{"query":"CREATE TABLE tab (\n\\`foo\\` Array(LowCardinality(String)),\nINDEX idx foo TYPE bloom_filter GRANULARITY 1\n)\nENGINE = MergeTree\nPRIMARY KEY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02967_index_hint_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t1__fuzz_4 (\\`x\\` Nullable(UInt32), \\`y\\` Int64) ENGINE = MergeTree ORDER BY (x, y) SETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02967_fuzz_bad_cast.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1__fuzz_4 (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE t0__fuzz_29 (\\`x\\` LowCardinality(UInt256), \\`y\\` Array(Array(Date))) ENGINE = MergeTree ORDER BY (x, y);","fileName":"../ClickHouse/tests/queries/0_stateless/02967_fuzz_bad_cast.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t0__fuzz_29 (\\'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE data_01223 (\\`key\\` Int) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02967_analyzer_fuzz.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE data_01223 (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE dist_layer_01223 AS data_01223 ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), data_01223);","fileName":"../ClickHouse/tests/queries/0_stateless/02967_analyzer_fuzz.sql","errors":[]},{"query":"CREATE TABLE dist_01223 AS data_01223 ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), dist_layer_01223);","fileName":"../ClickHouse/tests/queries/0_stateless/02967_analyzer_fuzz.sql","errors":[]},{"query":"CREATE TABLE f32_table (my_field Float32) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02966_float32_promotion.sql","errors":[]},{"query":"create table a (i int, j int, projection p (select * order by j)) engine MergeTree partition by i order by tuple() settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02965_projection_with_partition_pruning.sql","errors":[]},{"query":"create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk(name='02963_custom_disk', type = object_storage, object_storage_type = local_blob_storage, path='./02963_test1/');","fileName":"../ClickHouse/tests/queries/0_stateless/02963_test_flexible_disk_configuration.sql","errors":[{"message":"no viable alternative at input 'create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk'","startColumn":80,"startLine":1,"endColumn":84,"endLine":1}]},{"query":"create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk(name='02963_custom_disk', type = object_storage, object_storage_type = local_blob_storage, path='./02963_test2/'); -- { serverError BAD_ARGUMENTS }\ndrop table if exists test;","fileName":"../ClickHouse/tests/queries/0_stateless/02963_test_flexible_disk_configuration.sql","errors":[{"message":"no viable alternative at input 'create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk'","startColumn":80,"startLine":1,"endColumn":84,"endLine":1}]},{"query":"create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk(name='02963_custom_disk'); -- { serverError BAD_ARGUMENTS }\ndrop table if exists test;","fileName":"../ClickHouse/tests/queries/0_stateless/02963_test_flexible_disk_configuration.sql","errors":[{"message":"no viable alternative at input 'create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk'","startColumn":80,"startLine":1,"endColumn":84,"endLine":1}]},{"query":"create table test (a Int32) engine = MergeTree() order by tuple() settings disk='02963_custom_disk'; -- { serverError BAD_ARGUMENTS }\ndrop table if exists test;","fileName":"../ClickHouse/tests/queries/0_stateless/02963_test_flexible_disk_configuration.sql","errors":[]},{"query":"create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk(name='s3_disk_02963'); -- { serverError BAD_ARGUMENTS }\ndrop table if exists test;","fileName":"../ClickHouse/tests/queries/0_stateless/02963_test_flexible_disk_configuration.sql","errors":[{"message":"no viable alternative at input 'create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk'","startColumn":80,"startLine":1,"endColumn":84,"endLine":1}]},{"query":"create table test (a Int32) engine = MergeTree() order by tuple() settings disk='s3_disk_02963';","fileName":"../ClickHouse/tests/queries/0_stateless/02963_test_flexible_disk_configuration.sql","errors":[]},{"query":"create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk(name='s3_disk_02963', type = object_storage, object_storage_type = local_blob_storage, path='./02963_test2/'); -- { serverError BAD_ARGUMENTS }\ndrop table if exists test;","fileName":"../ClickHouse/tests/queries/0_stateless/02963_test_flexible_disk_configuration.sql","errors":[{"message":"no viable alternative at input 'create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk'","startColumn":80,"startLine":1,"endColumn":84,"endLine":1}]},{"query":"create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk(name='test1',\ntype = object_storage,\nobject_storage_type = s3,\nendpoint = 'http://localhost:11111/test/common/',\naccess_key_id = clickhouse,\nsecret_access_key = clickhouse);","fileName":"../ClickHouse/tests/queries/0_stateless/02963_test_flexible_disk_configuration.sql","errors":[{"message":"no viable alternative at input 'create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk'","startColumn":80,"startLine":1,"endColumn":84,"endLine":1}]},{"query":"create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk(name='test2',\ntype = object_storage,\nobject_storage_type = s3,\nmetadata_type = local,\nendpoint = 'http://localhost:11111/test/common/',\naccess_key_id = clickhouse,\nsecret_access_key = clickhouse);","fileName":"../ClickHouse/tests/queries/0_stateless/02963_test_flexible_disk_configuration.sql","errors":[{"message":"no viable alternative at input 'create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk'","startColumn":80,"startLine":1,"endColumn":84,"endLine":1}]},{"query":"create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk(name='test3',\ntype = object_storage,\nobject_storage_type = s3,\nmetadata_type = local,\nmetadata_keep_free_space_bytes = 1024,\nendpoint = 'http://localhost:11111/test/common/',\naccess_key_id = clickhouse,\nsecret_access_key = clickhouse);","fileName":"../ClickHouse/tests/queries/0_stateless/02963_test_flexible_disk_configuration.sql","errors":[{"message":"no viable alternative at input 'create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk'","startColumn":80,"startLine":1,"endColumn":84,"endLine":1}]},{"query":"create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk(name='test4',\ntype = object_storage,\nobject_storage_type = s3,\nmetadata_type = local,\nmetadata_keep_free_space_bytes = 0,\nendpoint = 'http://localhost:11111/test/common/',\naccess_key_id = clickhouse,\nsecret_access_key = clickhouse);","fileName":"../ClickHouse/tests/queries/0_stateless/02963_test_flexible_disk_configuration.sql","errors":[{"message":"no viable alternative at input 'create table test (a Int32) engine = MergeTree() order by tuple() settings disk=disk'","startColumn":80,"startLine":1,"endColumn":84,"endLine":1}]},{"query":"CREATE TABLE empsalary  (\n\\`depname\\` LowCardinality(String),\n\\`empno\\` UInt64,\n\\`salary\\` Int32,\n\\`enroll_date\\` Date\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02962_parallel_window_functions_different_partitioning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE empsalary  (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE table t1 (a UInt64, b UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02962_max_joined_block_rows.sql","errors":[]},{"query":"CREATE table t2 (a UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02962_max_joined_block_rows.sql","errors":[]},{"query":"CREATE TABLE t (\\`x\\` UInt32, \\`s\\` LowCardinality(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02962_join_using_bug_57894.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE r (\\`x\\` LowCardinality(Nullable(UInt32)), \\`s\\` Nullable(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02962_join_using_bug_57894.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE r (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE tab (\n\\`foo\\` Array(LowCardinality(String)),\nINDEX idx foo TYPE bloom_filter GRANULARITY 1\n)\nENGINE = MergeTree\nPRIMARY KEY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02962_indexHint_rpn_construction.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_parallel_index (\nz UInt64,\nINDEX i z TYPE set(8)\n)\nENGINE = MergeTree\nORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/02962_analyzer_constant_set.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_parallel_index (\\nz UInt64,\\nINDEX i z TYPE set(8)\\n)'","startColumn":0,"startLine":4,"endColumn":1,"endLine":4}]},{"query":"CREATE DATABASE IF NOT EXISTS 02961_db1;","fileName":"../ClickHouse/tests/queries/0_stateless/02961_drop_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS 02961'","startColumn":30,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"CREATE DATABASE IF NOT EXISTS 02961_db2;","fileName":"../ClickHouse/tests/queries/0_stateless/02961_drop_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS 02961'","startColumn":30,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS 02961_db1.02961_tb1 (id UInt32) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02961_drop_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS 02961'","startColumn":27,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS 02961_db1.02961_tb2 (id UInt32) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02961_drop_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS 02961'","startColumn":27,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS 02961_db2.02961_tb3 (id UInt32) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02961_drop_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS 02961'","startColumn":27,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS 02961_db2.02961_tb4 (id UInt32) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02961_drop_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS 02961'","startColumn":27,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS 02961_db2.02961_tb5 (id UInt32) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02961_drop_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS 02961'","startColumn":27,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS tab1 (id UInt32) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02961_drop_tables.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS tab2 (id UInt32) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02961_drop_tables.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS tab3 (id UInt32) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02961_drop_tables.sql","errors":[]},{"query":"CREATE TABLE test_tuple_filter__fuzz_2 (\n\\`id\\` Nullable(UInt32),\n\\`value\\` LowCardinality(String),\n\\`log_date\\` LowCardinality(Date)\n)\nENGINE = MergeTree\nPARTITION BY log_date\nORDER BY id\nSETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02961_analyzer_low_cardinality_fuzzer.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_tuple_filter__fuzz_2 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE DATABASE test2960_valid_database_engine ENGINE = Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/02960_validate_database_engines.sql","errors":[]},{"query":"CREATE DATABASE test2960_database_engine_args_not_allowed ENGINE = Atomic('foo', 'bar'); -- { serverError BAD_ARGUMENTS } CREATE DATABASE test2960_invalid_database_engine ENGINE = Foo; -- { serverError UNKNOWN_DATABASE_ENGINE }\nDROP DATABASE IF EXISTS test2960_valid_database_engine;","fileName":"../ClickHouse/tests/queries/0_stateless/02960_validate_database_engines.sql","errors":[]},{"query":"CREATE FUNCTION f1 AS (x) -> x;","fileName":"../ClickHouse/tests/queries/0_stateless/02960_partition_by_udf.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE hit (\n\\`UserID\\` UInt32,\n\\`URL\\` String,\n\\`EventTime\\` DateTime\n)\nENGINE = MergeTree\npartition by f1(URL)\nORDER BY (EventTime);","fileName":"../ClickHouse/tests/queries/0_stateless/02960_partition_by_udf.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE hit (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table data (key Int) engine=MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/02960_alter_table_part_query_parameter.sql","errors":[]},{"query":"CREATE TABLE dict_with_ttl (key UInt64, value String) ENGINE = EmbeddedRocksDB(2) PRIMARY KEY (key);","fileName":"../ClickHouse/tests/queries/0_stateless/02956_rocksdb_with_ttl.sql","errors":[]},{"query":"CREATE TABLE spark_bar_test (\\`value\\` Int64, \\`event_date\\` Date) ENGINE = MergeTree ORDER BY event_date;","fileName":"../ClickHouse/tests/queries/0_stateless/02955_sparkBar_alias_sparkbar.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE spark_bar_test (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE t (\n\\`n1\\` Int32\n)\nENGINE = File(Avro)\nSETTINGS output_format_avro_codec = 'zstd';","fileName":"../ClickHouse/tests/queries/0_stateless/02955_avro_format_zstd_encode_support.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create view slow_view1 as with c1 as (select 1 as a),\nc2 as (select a from c1),\nc3 as (select a from c2),\nc4 as (select a from c3),\nc5 as (select a from c4),\nc6 as (select a from c5),\nc7 as (select a from c6),\nc8 as (select a from c7),\nc9 as (select a from c8),\nc10 as (select a from c9),\nc11 as (select a from c10),\nc12 as (select a from c11),\nc13 as (select a from c12),\nc14 as (select a from c13),\nc15 as (select a from c14),\nc16 as (select a from c15),\nc17 as (select a from c16),\nc18 as (select a from c17),\nc19 as (select a from c18),\nc20 as (select a from c19),\nc21 as (select a from c20),\nc22 as (select a from c21),\nc23 as (select a from c22),\nc24 as (select a from c23),\nc25 as (select a from c24),\nc26 as (select a from c25),\nc27 as (select a from c26),\nc28 as (select a from c27),\nc29 as (select a from c28),\nc30 as (select a from c29),\nc31 as (select a from c30),\nc32 as (select a from c31),\nc33 as (select a from c32),\nc34 as (select a from c33),\nc35 as (select a from c34),\nc36 as (select a from c35),\nc37 as (select a from c36),\nc38 as (select a from c37),\nc39 as (select a from c38),\nc40 as (select a from c39)\nselect a from c21;","fileName":"../ClickHouse/tests/queries/0_stateless/02953_slow_create_view.sql","errors":[{"message":"no viable alternative at input 'create view slow_view1 as with c1 as ('","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE TABLE 02952_disjunction_optimization (a Int32, b String)\nENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02952_conjunction_optimization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02952'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE test (\n\\`id\\` UInt64,\n\\`t\\` Tuple(a UInt64, b Array(Tuple(c UInt64, d UInt64)))\n)\nENGINE = MergeTree\nORDER BY id\nSETTINGS min_rows_for_wide_part = 1, min_bytes_for_wide_part = 1, index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02950_reading_array_tuple_subcolumns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table a (i int) engine MergeTree order by i settings index_granularity = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02950_part_offset_as_primary_key.sql","errors":[]},{"query":"create table b (i int) engine MergeTree order by tuple() settings index_granularity = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02950_part_offset_as_primary_key.sql","errors":[]},{"query":"CREATE TABLE part_log_bytes_uncompressed ( key UInt8,\nvalue UInt8\n)\nEngine=MergeTree()\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02950_part_log_bytes_uncompressed.sql","errors":[]},{"query":"CREATE TABLE test (k UInt64, v String) ENGINE = MergeTree\nORDER BY k\nSETTINGS index_granularity=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02950_parallel_replicas_used_count.sql","errors":[]},{"query":"CREATE TABLE dictionary_source_table (\nid UInt64,\nv1 String,\nv2 Nullable(String),\nv3 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[]},{"query":"CREATE DICTIONARY flat_dictionary (\nid UInt64,\nv1 String,\nv2 Nullable(String) DEFAULT NULL,\nv3 Nullable(UInt64)\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'dictionary_source_table'))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[]},{"query":"CREATE DICTIONARY hashed_dictionary (\nid UInt64,\nv1 String,\nv2 Nullable(String) DEFAULT NULL,\nv3 Nullable(UInt64)\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'dictionary_source_table'))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[]},{"query":"CREATE DICTIONARY hashed_array_dictionary (\nid UInt64,\nv1 String,\nv2 Nullable(String) DEFAULT NULL,\nv3 Nullable(UInt64)\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'dictionary_source_table'))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(HASHED_ARRAY());","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[]},{"query":"CREATE TABLE range_dictionary_source_table (\nid UInt64,\nstart Date,\nend Nullable(Date),\nval Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[]},{"query":"CREATE DICTIONARY range_hashed_dictionary (\nid UInt64,\nstart Date,\nend Nullable(Date),\nval Nullable(UInt64)\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'range_dictionary_source_table'))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(RANGE_HASHED())\nRANGE(MIN start MAX end);","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[]},{"query":"CREATE DICTIONARY cache_dictionary (\nid UInt64,\nv1 String,\nv2 Nullable(String) DEFAULT NULL,\nv3 Nullable(UInt64)\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'dictionary_source_table'))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(CACHE(SIZE_IN_CELLS 10));","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[]},{"query":"CREATE DICTIONARY direct_dictionary (\nid UInt64,\nv1 String,\nv2 Nullable(String) DEFAULT NULL,\nv3 Nullable(UInt64)\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'dictionary_source_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[]},{"query":"CREATE TABLE ip_dictionary_source_table (\nid UInt64,\nprefix String,\nasn UInt32,\ncca2 String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[]},{"query":"CREATE DICTIONARY ip_dictionary (\nid UInt64,\nprefix String,\nasn UInt32,\ncca2 String\n)\nPRIMARY KEY prefix\nSOURCE(CLICKHOUSE(TABLE 'ip_dictionary_source_table'))\nLAYOUT(IP_TRIE)\nLIFETIME(3600);","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY ip_dictionary (\\nid UInt64,\\nprefix String,\\nasn UInt32,\\ncca2 String\\n)\\nPRIMARY KEY prefix\\nSOURCE(CLICKHOUSE(TABLE 'ip_dictionary_source_table'))\\nLAYOUT(IP_TRIE)'","startColumn":14,"startLine":9,"endColumn":15,"endLine":9}]},{"query":"CREATE TABLE polygon_dictionary_source_table (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\nname Nullable(String)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[]},{"query":"CREATE DICTIONARY polygon_dictionary (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\nname Nullable(String)\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE 'polygon_dictionary_source_table'))\nLIFETIME(0)\nLAYOUT(POLYGON());","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[]},{"query":"CREATE TABLE points (x Float64, y Float64) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[]},{"query":"CREATE TABLE regexp_dictionary_source_table (\nid UInt64,\nparent_id UInt64,\nregexp String,\nkeys   Array(String),\nvalues Array(String),\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE regexp_dictionary_source_table (\\nid UInt64,\\nparent_id UInt64,\\nregexp String,\\nkeys   Array(String),\\nvalues Array(String),\\n)'","startColumn":0,"startLine":7,"endColumn":1,"endLine":7}]},{"query":"create dictionary regexp_dict (\nregexp String,\nname String,\nversion Nullable(UInt64),\ncomment String default 'nothing'\n)\nPRIMARY KEY(regexp)\nSOURCE(CLICKHOUSE(TABLE 'regexp_dictionary_source_table'))\nLIFETIME(0)\nLAYOUT(regexp_tree);","fileName":"../ClickHouse/tests/queries/0_stateless/02950_dictionary_short_circuit.sql","errors":[{"message":"no viable alternative at input 'create dictionary regexp_dict (\\nregexp String,\\nname String,\\nversion Nullable(UInt64),\\ncomment String default 'nothing'\\n)\\nPRIMARY KEY(regexp)\\nSOURCE(CLICKHOUSE(TABLE 'regexp_dictionary_source_table'))\\nLIFETIME(0)\\nLAYOUT(regexp_tree)'","startColumn":18,"startLine":10,"endColumn":19,"endLine":10}]},{"query":"CREATE TABLE ttl_group_by_bug (key UInt32, ts DateTime, value UInt32, min_value UInt32 default value, max_value UInt32 default value)\nENGINE = MergeTree()\nORDER BY (key, toStartOfInterval(ts, toIntervalMinute(3)), ts)\nTTL ts + INTERVAL 5 MINUTE GROUP BY key, toStartOfInterval(ts, toIntervalMinute(3))\nSET value = sum(value), min_value = min(min_value), max_value = max(max_value),  ts=min(toStartOfInterval(ts, toIntervalMinute(3)));","fileName":"../ClickHouse/tests/queries/0_stateless/02949_ttl_group_by_bug.sql","errors":[{"message":"mismatched input 'GROUP' expecting <EOF>","startColumn":27,"startLine":4,"endColumn":32,"endLine":4}]},{"query":"CREATE TABLE test (x UInt8) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02949_parallel_replicas_scalar_subquery_big_integer.sql","errors":[]},{"query":"CREATE TABLE merge_tree_in_subqueries (id UInt64, name String, num UInt64) ENGINE = MergeTree ORDER BY (id, name);","fileName":"../ClickHouse/tests/queries/0_stateless/02949_parallel_replicas_in_subquery.sql","errors":[]},{"query":"CREATE TABLE test (id UInt64, date Date) ENGINE = MergeTree\nORDER BY id\nAS select *, '2023-12-25' from numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/02947_parallel_replicas_remote.sql","errors":[]},{"query":"CREATE TABLE t_merge_tree_index (\n\\`a\\` UInt64,\n\\`b\\` UInt64,\n\\`sp\\` UInt64,\n\\`arr\\` Array(LowCardinality(String)),\n\\`n\\` Nested(c1 String, c2 UInt64),\n\\`t\\` Tuple(c1 UInt64, c2 UInt64),\n\\`column.with.dots\\` UInt64\n)\nENGINE = MergeTree\nORDER BY (a, b, sipHash64(sp) % 100)\nSETTINGS\nindex_granularity = 3,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 6,\nratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02947_merge_tree_index_table_2.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_merge_tree_index (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_merge_tree_index (a UInt64 CODEC(LZ4), b UInt64 CODEC(LZ4), s String CODEC(LZ4)) ENGINE = MergeTree ORDER BY (a, b)\nSETTINGS\nindex_granularity = 3,\nmin_bytes_for_wide_part = 0,\nratio_of_defaults_for_sparse_serialization = 1.0;","fileName":"../ClickHouse/tests/queries/0_stateless/02947_merge_tree_index_table_1.sql","errors":[]},{"query":"CREATE TABLE t_merge_tree_index (a UInt64 CODEC(LZ4), b UInt64 CODEC(LZ4), s String CODEC(LZ4)) ENGINE = MergeTree ORDER BY (a, b)\nSETTINGS\nindex_granularity = 3,\nmin_bytes_for_wide_part = '1G',\nratio_of_defaults_for_sparse_serialization = 1.0;","fileName":"../ClickHouse/tests/queries/0_stateless/02947_merge_tree_index_table_1.sql","errors":[]},{"query":"CREATE TABLE 02947_table_1 (id Int32) Engine=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02947_dropped_tables_parts.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02947'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02947_table_2 (id Int32) Engine=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02947_dropped_tables_parts.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02947'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t1(k UInt32, v String) ENGINE ReplicatedMergeTree('/02946_parallel_replicas/{database}/test_tbl', 'r1') ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02946_parallel_replicas_force_primary_key.sql","errors":[]},{"query":"CREATE TABLE t2(k UInt32, v String) ENGINE ReplicatedMergeTree('/02946_parallel_replicas/{database}/test_tbl', 'r2') ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02946_parallel_replicas_force_primary_key.sql","errors":[]},{"query":"CREATE TABLE t3(k UInt32, v String) ENGINE ReplicatedMergeTree('/02946_parallel_replicas/{database}/test_tbl', 'r3') ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02946_parallel_replicas_force_primary_key.sql","errors":[]},{"query":"CREATE TABLE test (id UInt64, date Date) ENGINE = MergeTree\nORDER BY id\nAS select *, '2023-12-25' from numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/02946_parallel_replicas_distributed.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_d as test ENGINE = Distributed(test_cluster_one_shard_three_replicas_localhost, currentDatabase(), test);","fileName":"../ClickHouse/tests/queries/0_stateless/02946_parallel_replicas_distributed.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=ReplacingMergeTree ORDER BY id SETTINGS index_granularity = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02946_merge_tree_final_split_ranges_by_primary_key.sql","errors":[]},{"query":"CREATE TABLE tab (id Int64, dflt Int64 DEFAULT 54321) ENGINE MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02946_materialize_column_must_not_override_past_values.sql","errors":[]},{"query":"CREATE TABLE tab (id Int64, dflt Int64 DEFAULT 54321) ENGINE MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02946_materialize_column_must_not_override_past_values.sql","errors":[]},{"query":"CREATE TABLE tab (id Int64, dflt Nullable(Int64) DEFAULT 54321) ENGINE MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02946_materialize_column_must_not_override_past_values.sql","errors":[]},{"query":"CREATE TABLE tab (id Int64, dflt Int64 DEFAULT 54321) ENGINE MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02946_materialize_column_must_not_override_past_values.sql","errors":[]},{"query":"CREATE TABLE tab (id Int64, mtrl Int64 MATERIALIZED 54321) ENGINE MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02946_materialize_column_must_not_override_past_values.sql","errors":[]},{"query":"CREATE TABLE tab (id Int64, mtrl Int64 MATERIALIZED 54321) ENGINE MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02946_materialize_column_must_not_override_past_values.sql","errors":[]},{"query":"CREATE TABLE literal_alias_misclassification (\n\\`id\\` Int64,\n\\`a\\` Nullable(String),\n\\`b\\` Nullable(Int64)\n)\nENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02946_literal_alias_misclassification.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE literal_alias_misclassification (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE tokenbf_v1_hasany_test (\nid UInt32,\narray Array(String),\nINDEX idx_array_tokenbf_v1 array TYPE tokenbf_v1(512,3,0) GRANULARITY 1,\n) Engine=MergeTree() ORDER BY id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02943_use_full_text_skip_index_with_has_any.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tokenbf_v1_hasany_test (\\nid UInt32,\\narray Array(String),\\nINDEX idx_array_tokenbf_v1 array TYPE tokenbf_v1(512,3,0) GRANULARITY 1,\\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"CREATE TABLE ngrambf_v1_hasany_test (\nid UInt32,\narray Array(String),\nINDEX idx_array_ngrambf_v1 array TYPE ngrambf_v1(3,512,3,0) GRANULARITY 1,\n) Engine=MergeTree() ORDER BY id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02943_use_full_text_skip_index_with_has_any.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ngrambf_v1_hasany_test (\\nid UInt32,\\narray Array(String),\\nINDEX idx_array_ngrambf_v1 array TYPE ngrambf_v1(3,512,3,0) GRANULARITY 1,\\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"CREATE TABLE tokenbf_tab (\nid UInt32,\nstr String,\nINDEX idx str TYPE tokenbf_v1(256, 2, 0)\n)\nENGINE = MergeTree\nORDER BY id\nSETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02943_tokenbf_and_ngrambf_indexes_support_match_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tokenbf_tab (\\nid UInt32,\\nstr String,\\nINDEX idx str TYPE tokenbf_v1(256, 2, 0)\\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"CREATE TABLE ngrambf_tab (\nid UInt32,\nstr String,\nINDEX idx str TYPE ngrambf_v1(3, 256, 2, 0)\n)\nENGINE = MergeTree\nORDER BY id\nSETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02943_tokenbf_and_ngrambf_indexes_support_match_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ngrambf_tab (\\nid UInt32,\\nstr String,\\nINDEX idx str TYPE ngrambf_v1(3, 256, 2, 0)\\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"CREATE TABLE t (\n\\`n\\` int,\n\\`__unused_group_by_column\\` int\n)\nENGINE = MergeTree\nORDER BY n AS\nSELECT number, number\nFROM numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/02943_positional_arguments_bugs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE order_by_all (\na String,\nb Nullable(Int32)\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02943_order_by_all.sql","errors":[]},{"query":"CREATE TABLE order_by_all (\na String,\nb Nullable(Int32),\nall UInt64\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02943_order_by_all.sql","errors":[]},{"query":"CREATE TABLE test_group_by_with_rollup_order (id Int64, a Nullable(Int64), b Nullable(String)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02943_exprs_order_in_group_by_with_rollup.sql","errors":[]},{"query":"CREATE TABLE test_table (\nnumber UInt64\n)\nENGINE=MergeTree ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/02943_create_query_interpreter_sample_block_fix.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_mv ENGINE=MergeTree ORDER BY arr AS\nWITH (SELECT '\\\\d[a-z]') AS constant_value\nSELECT extractAll(concat(toString(number), 'a'), assumeNotNull(constant_value)) AS arr\nFROM test_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02943_create_query_interpreter_sample_block_fix.sql","errors":[]},{"query":"CREATE TABLE regex_test_table (\nregex String\n)\nENGINE = MergeTree ORDER BY regex;","fileName":"../ClickHouse/tests/queries/0_stateless/02943_create_query_interpreter_sample_block_fix.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_mv ENGINE=MergeTree ORDER BY arr AS\nWITH (SELECT regex FROM regex_test_table) AS constant_value\nSELECT extractAll(concat(toString(number), 'a'), assumeNotNull(constant_value)) AS arr\nFROM test_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02943_create_query_interpreter_sample_block_fix.sql","errors":[]},{"query":"CREATE TABLE t_proj_external (\nk1 UInt32,\nk2 UInt32,\nk3 UInt32,\nvalue UInt32\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02941_projections_external_aggregation.sql","errors":[]},{"query":"CREATE TABLE data_sparse_column (\\`key\\` Int64, \\`value\\` Int32) ENGINE = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02941_any_RESPECT_NULL_sparse_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE data_sparse_column (\\'","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"CREATE TABLE test_parallel_replicas_settings (n UInt64) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02935_parallel_replicas_settings.sql","errors":[]},{"query":"CREATE TABLE format_nested(attrs Nested(k String, v String)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02935_format_with_arbitrary_types.sql","errors":[]},{"query":"CREATE TABLE test_max_mt_projections_alter (c1 UInt32, c2 UInt32, c3 UInt32) ENGINE = MergeTree ORDER BY c1\nSETTINGS max_projections = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02934_merge_tree_max_projections.sql","errors":[]},{"query":"CREATE TABLE test_max_mt_projections_create (c1 UInt32, c2 UInt32, PROJECTION p1 (SELECT c1, c2 ORDER BY c2),\nPROJECTION p2 (SELECT c2 ORDER BY c2))\nENGINE = MergeTree ORDER BY c1\nSETTINGS max_projections = 1; -- { serverError LIMIT_EXCEEDED }\nCREATE TABLE test_max_mt_projections_create (c1 UInt32, c2 UInt32,\nPROJECTION p (SELECT c1, c2 ORDER BY c2))\nENGINE = MergeTree ORDER BY c1\nSETTINGS max_projections = 0; -- { serverError LIMIT_EXCEEDED }\nCREATE TABLE test_max_mt_projections_create (c1 UInt32, c2 UInt32,\nPROJECTION p (SELECT c1, c2 ORDER BY c2))\nENGINE = MergeTree ORDER BY c1\nSETTINGS max_projections = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02934_merge_tree_max_projections.sql","errors":[]},{"query":"CREATE TABLE tab (id String) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02933_sqid.sql","errors":[]},{"query":"create table if not exists test (number UInt64) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02933_paste_join.sql","errors":[]},{"query":"CREATE TABLE t1 (a UInt64, b UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02933_paste_join.sql","errors":[]},{"query":"CREATE TABLE t2 (a UInt64, b UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02933_paste_join.sql","errors":[]},{"query":"CREATE TABLE test1 (a Int32) engine=MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02933_paste_join.sql","errors":[]},{"query":"CREATE TABLE test2 (a Int32) engine=MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02933_paste_join.sql","errors":[]},{"query":"CREATE TABLE raw (\nname String,\nnum String\n) ENGINE = MergeTree\nORDER BY (name);","fileName":"../ClickHouse/tests/queries/0_stateless/02933_ephemeral_mv.sql","errors":[]},{"query":"CREATE TABLE parsed_eph (\nname String,\nnum_ephemeral UInt32 EPHEMERAL,\nnum UInt32 MATERIALIZED num_ephemeral,\n) ENGINE = MergeTree\nORDER BY (name);","fileName":"../ClickHouse/tests/queries/0_stateless/02933_ephemeral_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE parsed_eph (\\nname String,\\nnum_ephemeral UInt32 EPHEMERAL'","startColumn":21,"startLine":3,"endColumn":30,"endLine":3}]},{"query":"CREATE MATERIALIZED VIEW parse_mv_eph TO parsed_eph\nAS\nSELECT\nname,\ntoUInt32(num) as num_ephemeral\nFROM raw;","fileName":"../ClickHouse/tests/queries/0_stateless/02933_ephemeral_mv.sql","errors":[]},{"query":"create or replace table t_temp ( a UInt32,\ntimestamp DateTime\n)\nengine = MergeTree\norder by a\nTTL timestamp + INTERVAL 2 SECOND WHERE a in (select number from system.numbers limit 100_000);","fileName":"../ClickHouse/tests/queries/0_stateless/02932_set_ttl_where.sql","errors":[{"message":"mismatched input 'WHERE' expecting <EOF>","startColumn":34,"startLine":6,"endColumn":39,"endLine":6}]},{"query":"CREATE TABLE test_max_size_drop Engine = MergeTree()\nORDER BY number\nAS SELECT number\nFROM numbers(1000)\n;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_query_settings_max_size_drop.sql","errors":[]},{"query":"CREATE TABLE test_max_size_drop Engine = MergeTree()\nORDER BY number\nAS SELECT number\nFROM numbers(1000)\n;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_query_settings_max_size_drop.sql","errors":[]},{"query":"CREATE TABLE test_max_size_drop Engine = MergeTree()\nORDER BY number\nAS SELECT number\nFROM numbers(1000)\n;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_query_settings_max_size_drop.sql","errors":[]},{"query":"CREATE TABLE tab (str String) ENGINE=MergeTree ORDER BY str;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_punycode.sql","errors":[]},{"query":"CREATE TABLE tab (puny String) ENGINE=MergeTree ORDER BY puny;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_punycode.sql","errors":[]},{"query":"CREATE TABLE join_inner_table__fuzz_146 (\\`id\\` UUID, \\`key\\` String, \\`number\\` Int64, \\`value1\\` String, \\`value2\\` String, \\`time\\` Nullable(Int64)) ENGINE = MergeTree ORDER BY (id, number, key);","fileName":"../ClickHouse/tests/queries/0_stateless/02932_parallel_replicas_fuzzer.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE join_inner_table__fuzz_146 (\\'","startColumn":41,"startLine":1,"endColumn":42,"endLine":1}]},{"query":"CREATE TABLE t_02709__fuzz_23 (\\`key\\` Nullable(UInt8), \\`sign\\` Int8, \\`date\\` DateTime64(3)) ENGINE = CollapsingMergeTree(sign) PARTITION BY date ORDER BY key SETTINGS allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_parallel_replicas_fuzzer.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_02709__fuzz_23 (\\'","startColumn":31,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE tab (item_id UInt64, price_sold Nullable(Float32), date Date) ENGINE = MergeTree ORDER BY item_id;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_non_ready_set_stuck.sql","errors":[]},{"query":"create table from_table (x UInt32) engine=MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_materialized_view_with_dropped_target_table_no_exception.sql","errors":[]},{"query":"create table to_table (x UInt32) engine=MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_materialized_view_with_dropped_target_table_no_exception.sql","errors":[]},{"query":"create materialized view mv to to_table as select * from from_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_materialized_view_with_dropped_target_table_no_exception.sql","errors":[]},{"query":"CREATE TABLE t_lwd_mutations(id UInt64, v UInt64) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_lwd_and_mutations.sql","errors":[]},{"query":"CREATE TABLE tab (idna String) ENGINE=MergeTree ORDER BY idna;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_idna.sql","errors":[]},{"query":"CREATE TABLE tab (idna String) ENGINE=MergeTree ORDER BY idna;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_idna.sql","errors":[]},{"query":"CREATE TABLE t_materialize_delete (id UInt64, v UInt64) ENGINE = MergeTree ORDER BY id PARTITION BY id % 10;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_apply_deleted_mask.sql","errors":[]},{"query":"CREATE TABLE test_table (\nuint64 UInt64,\nfloat64 Float64,\ndecimal32 Decimal32(5),\n) ENGINE=MergeTree ORDER BY uint64;","fileName":"../ClickHouse/tests/queries/0_stateless/02932_analyzer_rewrite_sum_column_and_constant.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\nuint64 UInt64,\\nfloat64 Float64,\\ndecimal32 Decimal32(5),\\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"CREATE TABLE test_table (\nuint64 UInt64,\nfloat64 Float64,\ndecimal32 Decimal32(5),\n) ENGINE=MergeTree ORDER BY uint64;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_rewrite_sum_column_and_constant.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\nuint64 UInt64,\\nfloat64 Float64,\\ndecimal32 Decimal32(5),\\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_02931;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_02931;'","startColumn":56,"startLine":1,"endColumn":57,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_1 (id Int32, str String) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_2 (id Int32, str String) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_3 (id Int32, str String) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_4 (id Int32, str String) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_5 (id Int32, str String) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_6 (id Int32, str String) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_7 (id Int32, str String) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_8 (id Int32, str String) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_9 (id Int32, str String) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_10 (id Int32, str String) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_11 (id Int32, str String) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_view_1 AS SELECT * FROM test_max_num_to_warn_02931.test_max_num_to_warn_1;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_view_2 AS SELECT * FROM test_max_num_to_warn_02931.test_max_num_to_warn_2;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_view_3 AS SELECT * FROM test_max_num_to_warn_02931.test_max_num_to_warn_3;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_view_4 AS SELECT * FROM test_max_num_to_warn_02931.test_max_num_to_warn_4;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_view_5 AS SELECT * FROM test_max_num_to_warn_02931.test_max_num_to_warn_5;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_view_6 AS SELECT * FROM test_max_num_to_warn_02931.test_max_num_to_warn_6;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_view_7 AS SELECT * FROM test_max_num_to_warn_02931.test_max_num_to_warn_7;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_view_8 AS SELECT * FROM test_max_num_to_warn_02931.test_max_num_to_warn_8;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_view_9 AS SELECT * FROM test_max_num_to_warn_02931.test_max_num_to_warn_9;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_view_10 AS SELECT * FROM test_max_num_to_warn_02931.test_max_num_to_warn_10;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_view_11 AS SELECT * FROM test_max_num_to_warn_02931.test_max_num_to_warn_11;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_dict_1 (id Int32, str String) PRIMARY KEY id SOURCE(CLICKHOUSE(DB 'test_max_num_to_warn_02931' TABLE 'test_max_num_to_warn_1'))LAYOUT(FLAT()) LIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_dict_2 (id Int32, str String) PRIMARY KEY id SOURCE(CLICKHOUSE(DB 'test_max_num_to_warn_02931' TABLE 'test_max_num_to_warn_2'))LAYOUT(FLAT()) LIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_dict_3 (id Int32, str String) PRIMARY KEY id SOURCE(CLICKHOUSE(DB 'test_max_num_to_warn_02931' TABLE 'test_max_num_to_warn_3'))LAYOUT(FLAT()) LIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_dict_4 (id Int32, str String) PRIMARY KEY id SOURCE(CLICKHOUSE(DB 'test_max_num_to_warn_02931' TABLE 'test_max_num_to_warn_4'))LAYOUT(FLAT()) LIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_dict_5 (id Int32, str String) PRIMARY KEY id SOURCE(CLICKHOUSE(DB 'test_max_num_to_warn_02931' TABLE 'test_max_num_to_warn_5'))LAYOUT(FLAT()) LIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_dict_6 (id Int32, str String) PRIMARY KEY id SOURCE(CLICKHOUSE(DB 'test_max_num_to_warn_02931' TABLE 'test_max_num_to_warn_6'))LAYOUT(FLAT()) LIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_dict_7 (id Int32, str String) PRIMARY KEY id SOURCE(CLICKHOUSE(DB 'test_max_num_to_warn_02931' TABLE 'test_max_num_to_warn_7'))LAYOUT(FLAT()) LIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_dict_8 (id Int32, str String) PRIMARY KEY id SOURCE(CLICKHOUSE(DB 'test_max_num_to_warn_02931' TABLE 'test_max_num_to_warn_8'))LAYOUT(FLAT()) LIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_dict_9 (id Int32, str String) PRIMARY KEY id SOURCE(CLICKHOUSE(DB 'test_max_num_to_warn_02931' TABLE 'test_max_num_to_warn_9'))LAYOUT(FLAT()) LIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS test_max_num_to_warn_02931.test_max_num_to_warn_dict_10 (id Int32, str String) PRIMARY KEY id SOURCE(CLICKHOUSE(DB 'test_max_num_to_warn_02931' TABLE 'test_max_num_to_warn_10'))LAYOUT(FLAT()) LIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_1;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_1;'","startColumn":52,"startLine":1,"endColumn":53,"endLine":1}]},{"query":"CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_2;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_2;'","startColumn":52,"startLine":1,"endColumn":53,"endLine":1}]},{"query":"CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_3;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_3;'","startColumn":52,"startLine":1,"endColumn":53,"endLine":1}]},{"query":"CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_4;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_4;'","startColumn":52,"startLine":1,"endColumn":53,"endLine":1}]},{"query":"CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_5;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_5;'","startColumn":52,"startLine":1,"endColumn":53,"endLine":1}]},{"query":"CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_6;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_6;'","startColumn":52,"startLine":1,"endColumn":53,"endLine":1}]},{"query":"CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_7;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_7;'","startColumn":52,"startLine":1,"endColumn":53,"endLine":1}]},{"query":"CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_8;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_8;'","startColumn":52,"startLine":1,"endColumn":53,"endLine":1}]},{"query":"CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_9;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_9;'","startColumn":52,"startLine":1,"endColumn":53,"endLine":1}]},{"query":"CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_10;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_10;'","startColumn":53,"startLine":1,"endColumn":54,"endLine":1}]},{"query":"CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_11;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_max_num_to_warn.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_max_num_to_warn_11;'","startColumn":53,"startLine":1,"endColumn":54,"endLine":1}]},{"query":"CREATE TABLE src(v UInt64) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_alter_materialized_view_query_inconsistent.sql","errors":[]},{"query":"CREATE TABLE dest(v UInt64) Engine = MergeTree() ORDER BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_alter_materialized_view_query_inconsistent.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW pipe TO dest AS SELECT v FROM src;","fileName":"../ClickHouse/tests/queries/0_stateless/02931_alter_materialized_view_query_inconsistent.sql","errors":[]},{"query":"CREATE TABLE test_bug_optimization (\n\\`path\\` String\n)\nENGINE = MergeTree\nORDER BY path;","fileName":"../ClickHouse/tests/queries/0_stateless/02923_cte_equality_disjunction.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_bug_optimization (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t1 (\\`n\\` UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02922_analyzer_aggregate_nothing_type.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create database db_filesystem ENGINE=Filesystem('/etc'); -- { serverError BAD_ARGUMENTS } create database db_filesystem ENGINE=Filesystem('../../../../../../../../etc'); -- { serverError BAD_ARGUMENTS }","fileName":"../ClickHouse/tests/queries/0_stateless/02921_database_filesystem_path_check.sql","errors":[]},{"query":"CREATE TABLE t (\nkey1 UInt64,\nvalue1 String,\nvalue2 String,\nINDEX idx (value1) TYPE set(10) GRANULARITY 1\n)\nENGINE MergeTree ORDER BY key1 SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02920_rename_column_of_skip_indices.sql","errors":[]},{"query":"CREATE TABLE t (uid Int16, name String, age Nullable(Int8), i Int16, j Int16, projection p1 (select name, age, uniq(i), count(j) group by name, age)) ENGINE=MergeTree order by uid settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02920_alter_column_of_projections.sql","errors":[]},{"query":"CREATE TABLE 02919_test_table_noarg(str String) ENGINE = FuzzJSON('{}');","fileName":"../ClickHouse/tests/queries/0_stateless/02919_storage_fuzzjson.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02919'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02919_test_table_valid_args(str String) ENGINE = FuzzJSON( '{\"pet\":\"rat\"}', NULL);","fileName":"../ClickHouse/tests/queries/0_stateless/02919_storage_fuzzjson.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02919'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02919_test_table_reuse_args(str String) ENGINE = FuzzJSON( '{\n\"name\": \"Jane Doe\",\n\"age\": 30,\n\"city\": \"New York\",\n\"contacts\": {\n\"email\": \"jane@example.com\",\n\"phone\": \"+1234567890\"\n},\n\"skills\": [\n\"JavaScript\",\n\"Python\",\n{\n\"frameworks\": [\"React\", \"Django\"]\n}\n],\n\"projects\": [\n{\"name\": \"Project A\", \"status\": \"completed\"},\n{\"name\": \"Project B\", \"status\": \"in-progress\"}\n]\n}',\n12345);","fileName":"../ClickHouse/tests/queries/0_stateless/02919_storage_fuzzjson.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02919'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02919_test_table_invalid_col_type (\nstr Nullable(Int64)\n)\nENGINE = FuzzJSON('{\"pet\":\"rat\"}', NULL); -- { serverError BAD_ARGUMENTS }\nDROP TABLE IF EXISTS 02919_test_table_invalid_col_type;","fileName":"../ClickHouse/tests/queries/0_stateless/02919_storage_fuzzjson.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02919'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02919_test_multi_col (\nstr1 String,\nstr2 String\n) ENGINE = FuzzJSON('{\"pet\":\"rat\"}', 999);","fileName":"../ClickHouse/tests/queries/0_stateless/02919_storage_fuzzjson.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02919'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE crash_02919 ( b Int64,\nc Nullable(Int64) MATERIALIZED b,\nd Nullable(Bool) MATERIALIZED b\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02919_segfault_nullable_materialized_update.sql","errors":[]},{"query":"CREATE TABLE t_hardware_error ( KeyID UInt32\n) Engine = ReplicatedMergeTree('/clickhouse/tables/{shard}/{database}/t_async_insert_dedup', '{replica}')\nORDER BY (KeyID);","fileName":"../ClickHouse/tests/queries/0_stateless/02919_insert_meet_eternal_hardware_error.sql","errors":[]},{"query":"CREATE TABLE \\`02919_ddsketch_quantile\\` ENGINE = Log AS\nSELECT quantilesDDState(0.001, 0.9)(number) AS sketch\nFROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02919_ddsketch_quantile.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE alter_test (a UInt32, b UInt8) ENGINE=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02919_alter_temporary_table_with_nondefault_engine.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE alter_test (a UInt32, b UInt8) ENGINE=Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02919_alter_temporary_table_with_nondefault_engine.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE alter_test (a UInt32, b UInt8) ENGINE=Null;","fileName":"../ClickHouse/tests/queries/0_stateless/02919_alter_temporary_table_with_nondefault_engine.sql","errors":[]},{"query":"CREATE TABLE source_table(id UInt64, value String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02918_wrong_dictionary_source.sql","errors":[]},{"query":"CREATE DICTIONARY id_value_dictionary(id UInt64, value String) PRIMARY KEY id SOURCE(CLICKHOUSEX(TABLE 'source_table')) LIFETIME(MIN 0 MAX 1000) LAYOUT(FLAT()); -- { serverError UNKNOWN_ELEMENT_IN_CONFIG } SELECT count() FROM system.dictionaries WHERE name=='id_value_dictionary' AND database==currentDatabase();","fileName":"../ClickHouse/tests/queries/0_stateless/02918_wrong_dictionary_source.sql","errors":[]},{"query":"CREATE TABLE 02918_parallel_replicas (x String, y Int32) ENGINE = MergeTree ORDER BY cityHash64(x);","fileName":"../ClickHouse/tests/queries/0_stateless/02918_parallel_replicas_custom_key_unavailable_replica.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02918'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE mt1 (id UInt64) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.sql","errors":[]},{"query":"CREATE TABLE mt2 (id UInt64) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.sql","errors":[]},{"query":"CREATE TABLE merge (id UInt64) ENGINE = Merge(currentDatabase(), '^mt[0-9]+\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.sql","errors":[]},{"query":"CREATE TABLE mt3 (id UInt64) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02918_optimize_count_for_merge_tables.sql","errors":[]},{"query":"CREATE NAMED COLLECTION 02918_json_fuzzer AS json_str='{}';","fileName":"../ClickHouse/tests/queries/0_stateless/02918_fuzzjson_table_function.sql","errors":[{"message":"no viable alternative at input 'CREATE NAMED'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE TABLE 02918_table_str (json_str String) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02918_fuzzjson_table_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02918'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02918_table_obj1 (json_obj Object('json')) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02918_fuzzjson_table_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02918'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02918_table_obj2 (json_obj Object('json')) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02918_fuzzjson_table_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02918'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE alter_test (CounterID UInt32, StartDate Date, UserID UInt32, VisitID UInt32, NestedColumn Nested(A UInt8, S String), ToDrop UInt32);","fileName":"../ClickHouse/tests/queries/0_stateless/02918_alter_temporary_table.sql","errors":[]},{"query":"CREATE TABLE t1 (v UInt64, s String) ENGINE=MergeTree() ORDER BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/02916_set_formatting.sql","errors":[]},{"query":"CREATE VIEW v1 (v UInt64) AS SELECT v FROM t1 SETTINGS additional_table_filters = {'default.t1': 's != \\\\'s1%\\\\''};","fileName":"../ClickHouse/tests/queries/0_stateless/02916_set_formatting.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW v1 (v UInt64) AS SELECT v FROM t1 SETTINGS additional_table_filters = {'","startColumn":82,"startLine":1,"endColumn":83,"endLine":1}]},{"query":"create table tableIn (n int) engine=ReplicatedMergeTree('/test/02916/{database}/table', '1')\norder by tuple()\nsettings\nstorage_policy='s3_cache',\nallow_remote_fs_zero_copy_replication=1,\nsleep_before_commit_local_part_in_replicated_table_ms=5000;","fileName":"../ClickHouse/tests/queries/0_stateless/02916_replication_protocol_wait_for_part.sql","errors":[]},{"query":"create table tableOut (n int) engine=ReplicatedMergeTree('/test/02916/{database}/table', '2')\norder by tuple()\nsettings\nstorage_policy='s3_cache',\nallow_remote_fs_zero_copy_replication=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02916_replication_protocol_wait_for_part.sql","errors":[]},{"query":"CREATE TABLE table_02916 (\n\\`ID\\` UInt32,\n\\`Name\\` String\n)\nENGINE = MergeTree\nORDER BY ID;","fileName":"../ClickHouse/tests/queries/0_stateless/02916_distributed_skip_unavailable_shards.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE table_02916 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE table_02916_distributed (\n\\`ID\\` UInt32,\n\\`Name\\` String\n)\nENGINE = Distributed(test_unavailable_shard, currentDatabase(), table_02916, rand())\nSETTINGS skip_unavailable_shards = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02916_distributed_skip_unavailable_shards.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE table_02916_distributed (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create database if not exists shard_0;","fileName":"../ClickHouse/tests/queries/0_stateless/02916_another_move_partition_inactive_replica.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_0;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create database if not exists shard_1;","fileName":"../ClickHouse/tests/queries/0_stateless/02916_another_move_partition_inactive_replica.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_1;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table shard_0.from_1 (x UInt32) engine = ReplicatedMergeTree('/clickhouse/tables/from_1_' || currentDatabase(), '0') order by x settings old_parts_lifetime=1, max_cleanup_delay_period=1, cleanup_delay_period=1, shared_merge_tree_disable_merges_and_mutations_assignment=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02916_another_move_partition_inactive_replica.sql","errors":[]},{"query":"create table shard_1.from_1 (x UInt32) engine = ReplicatedMergeTree('/clickhouse/tables/from_1_' || currentDatabase(), '1') order by x settings old_parts_lifetime=1, max_cleanup_delay_period=1, cleanup_delay_period=1, shared_merge_tree_disable_merges_and_mutations_assignment=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02916_another_move_partition_inactive_replica.sql","errors":[]},{"query":"create table shard_0.to (x UInt32) engine = ReplicatedMergeTree('/clickhouse/tables/to_' || currentDatabase(), '0') order by x settings old_parts_lifetime=1, max_cleanup_delay_period=1, cleanup_delay_period=1, max_parts_to_merge_at_once=2, shared_merge_tree_disable_merges_and_mutations_assignment=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02916_another_move_partition_inactive_replica.sql","errors":[]},{"query":"create table shard_1.to (x UInt32) engine = ReplicatedMergeTree('/clickhouse/tables/to_' || currentDatabase(), '1') order by x settings old_parts_lifetime=1, max_cleanup_delay_period=1, cleanup_delay_period=1, max_parts_to_merge_at_once=2;","fileName":"../ClickHouse/tests/queries/0_stateless/02916_another_move_partition_inactive_replica.sql","errors":[]},{"query":"CREATE TABLE nested_table (id UInt64, first Nested(a Int8, b String)) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02916_addcolumn_nested.sql","errors":[]},{"query":"create database if not exists shard_0;","fileName":"../ClickHouse/tests/queries/0_stateless/02915_move_partition_inactive_replica.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_0;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create database if not exists shard_1;","fileName":"../ClickHouse/tests/queries/0_stateless/02915_move_partition_inactive_replica.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_1;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table shard_0.from_0 (x UInt32) engine = ReplicatedMergeTree('/clickhouse/tables/from_0_' || currentDatabase(), '0') order by x settings old_parts_lifetime=1, max_cleanup_delay_period=1, cleanup_delay_period=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02915_move_partition_inactive_replica.sql","errors":[]},{"query":"create table shard_1.from_0 (x UInt32) engine = ReplicatedMergeTree('/clickhouse/tables/from_0_' || currentDatabase(), '1') order by x settings old_parts_lifetime=1, max_cleanup_delay_period=1, cleanup_delay_period=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02915_move_partition_inactive_replica.sql","errors":[]},{"query":"create table shard_0.from_1 (x UInt32) engine = ReplicatedMergeTree('/clickhouse/tables/from_1_' || currentDatabase(), '0') order by x settings old_parts_lifetime=1, max_cleanup_delay_period=1, cleanup_delay_period=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02915_move_partition_inactive_replica.sql","errors":[]},{"query":"create table shard_1.from_1 (x UInt32) engine = ReplicatedMergeTree('/clickhouse/tables/from_1_' || currentDatabase(), '1') order by x settings old_parts_lifetime=1, max_cleanup_delay_period=1, cleanup_delay_period=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02915_move_partition_inactive_replica.sql","errors":[]},{"query":"create table shard_0.to (x UInt32) engine = ReplicatedMergeTree('/clickhouse/tables/to_' || currentDatabase(), '0') order by x settings old_parts_lifetime=1, max_cleanup_delay_period=1, cleanup_delay_period=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02915_move_partition_inactive_replica.sql","errors":[]},{"query":"create table shard_1.to (x UInt32) engine = ReplicatedMergeTree('/clickhouse/tables/to_' || currentDatabase(), '1') order by x settings old_parts_lifetime=1, max_cleanup_delay_period=1, cleanup_delay_period=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02915_move_partition_inactive_replica.sql","errors":[]},{"query":"create table tab (x LowCardinality(Nullable(Float64))) engine = MergeTree order by x settings allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02915_analyzer_fuzz_6.sql","errors":[]},{"query":"CREATE TABLE t__fuzz_307 (\\`k1\\` DateTime, \\`k2\\` LowCardinality(Nullable(Float64)), \\`v\\` Nullable(UInt32)) ENGINE = ReplacingMergeTree ORDER BY (k1, k2) settings allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02915_analyzer_fuzz_6.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t__fuzz_307 (\\'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE t__fuzz_282 (\\`k1\\` DateTime, \\`k2\\` LowCardinality(Nullable(Float64)), \\`v\\` Nullable(UInt32)) ENGINE = ReplacingMergeTree ORDER BY (k1, k2) SETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02915_analyzer_fuzz_6.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t__fuzz_282 (\\'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"create table t_delete_projection (x UInt32, y UInt64, projection p (select sum(y))) engine = MergeTree order by tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02915_analyzer_fuzz_2.sql","errors":[]},{"query":"CREATE TABLE landing (\n\\`time\\` DateTime,\n\\`pk1\\` LowCardinality(String),\n\\`pk2\\` LowCardinality(String),\n\\`pk3\\` LowCardinality(String),\n\\`pk4\\` String\n)\nENGINE = ReplicatedReplacingMergeTree('/clickhouse/' || currentDatabase() || '/landing/{shard}/', '{replica}')\nORDER BY (pk1, pk2, pk3, pk4);","fileName":"../ClickHouse/tests/queries/0_stateless/02912_ingestion_mv_deduplication.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE landing (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE ds (\n\\`pk1\\` LowCardinality(String),\n\\`pk2\\` LowCardinality(String),\n\\`pk3\\` LowCardinality(String),\n\\`pk4\\` LowCardinality(String),\n\\`occurences\\` AggregateFunction(count)\n)\nENGINE = ReplicatedAggregatingMergeTree('/clickhouse/' || currentDatabase() || '/ds/{shard}/', '{replica}')\nORDER BY (pk1, pk2, pk3, pk4);","fileName":"../ClickHouse/tests/queries/0_stateless/02912_ingestion_mv_deduplication.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ds (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE MATERIALIZED VIEW mv TO ds AS SELECT\npk1,\npk2,\npk4,\npk3,\ncountState() AS occurences\nFROM landing\nGROUP BY pk1, pk2, pk4, pk3;","fileName":"../ClickHouse/tests/queries/0_stateless/02912_ingestion_mv_deduplication.sql","errors":[]},{"query":"create database 02911_support_alias_column_in_indices;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_support_alias_column_in_indices.sql","errors":[{"message":"no viable alternative at input 'create database 02911'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"create table test1 (\nc UInt32,\na alias c + 1,\nindex i (a) type minmax\n)\nengine = MergeTree\norder by c\nsettings index_granularity = 8192, min_index_granularity_bytes = 1024, index_granularity_bytes = 10485760; -- default settings, prevent randomization in tests\ninsert into test1 select * from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/02911_support_alias_column_in_indices.sql","errors":[{"message":"no viable alternative at input 'create table test1 (\\nc UInt32,\\na alias c + 1,\\nindex i (a) type minmax\\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"create table test2 (\nc UInt32,\na1 alias c + 1,\na2 alias a1 + 1,\nindex i (a2) type minmax\n)\nengine = MergeTree\norder by c\nsettings index_granularity = 8192, min_index_granularity_bytes = 1024, index_granularity_bytes = 10485760; -- default settings, prevent randomization in tests\ninsert into test2 select * from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/02911_support_alias_column_in_indices.sql","errors":[{"message":"no viable alternative at input 'create table test2 (\\nc UInt32,\\na1 alias c + 1,\\na2 alias a1 + 1,\\nindex i (a2) type minmax\\n)'","startColumn":0,"startLine":6,"endColumn":1,"endLine":6}]},{"query":"CREATE USER 02911_user ON CLUSTER test_shard_localhost;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_row_policy_on_cluster.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROW POLICY 02911_rowpolicy ON CLUSTER test_shard_localhost ON default.* USING 1 TO 02911_user;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_row_policy_on_cluster.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE t1 (x Nullable(Int64), y Nullable(UInt64)) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_join_on_nullsafe_optimization.sql","errors":[]},{"query":"CREATE TABLE t2 (x Nullable(Int64), y Nullable(UInt64)) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_join_on_nullsafe_optimization.sql","errors":[]},{"query":"CREATE TABLE t1n (x Int64, y UInt64) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_join_on_nullsafe_optimization.sql","errors":[]},{"query":"CREATE TABLE t2n (x Int64, y UInt64) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_join_on_nullsafe_optimization.sql","errors":[]},{"query":"create table t0 (pkey UInt32, c1 UInt32, primary key(pkey)) engine = MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_cte_invalid_query_analysis.sql","errors":[]},{"query":"create table t1 (vkey UInt32, primary key(vkey)) engine = MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_cte_invalid_query_analysis.sql","errors":[]},{"query":"create table t3 (c17 String, primary key(c17)) engine = MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_cte_invalid_query_analysis.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_analyzer_remove_unused_projection_columns.sql","errors":[]},{"query":"create table tab (a UInt32, b UInt32, c UInt32, d UInt32) engine = MergeTree order by ((a + b) * c, sin(a / b));","fileName":"../ClickHouse/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.sql","errors":[]},{"query":"create table tab2 (x DateTime, y UInt32, z UInt32) engine = MergeTree order by (x, y);","fileName":"../ClickHouse/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.sql","errors":[]},{"query":"create table tab3 (a UInt32, b UInt32, c UInt32, d UInt32) engine = MergeTree order by ((a + b) * c, sin(a / b));","fileName":"../ClickHouse/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.sql","errors":[]},{"query":"create table tab4 (a UInt32, b UInt32, c UInt32, d UInt32) engine = MergeTree order by sin(a / b);","fileName":"../ClickHouse/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.sql","errors":[]},{"query":"create table tab5 (a UInt32, b UInt32, c UInt32, d UInt32) engine = MergeTree order by (a + b) * c;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_analyzer_order_by_read_in_order_query_plan.sql","errors":[]},{"query":"CREATE TABLE index_test (\n\tx UInt32,\n\ty UInt32,\n\tz UInt32\n) ENGINE = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02911_add_index_and_materialize_index.sql","errors":[]},{"query":"CREATE TABLE dict (key UInt64, value String) ENGINE = EmbeddedRocksDB PRIMARY KEY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02910_rocksdb_optimize.sql","errors":[]},{"query":"CREATE TABLE t (\n\\`id\\` UInt64,\n\\`val\\` String,\n\\`legacy_ver\\` UInt64,\n)\nENGINE = ReplicatedReplacingMergeTree('/tables/{database}/t/', 'r1', legacy_ver)\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02910_replicated_merge_parameters_must_consistent.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_r_ok (\n\\`id\\` UInt64,\n\\`val\\` String,\n\\`legacy_ver\\` UInt64,\n)\nENGINE = ReplicatedReplacingMergeTree('/tables/{database}/t/', 'r2', legacy_ver)\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02910_replicated_merge_parameters_must_consistent.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_r_ok (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_r_error (\n\\`id\\` UInt64,\n\\`val\\` String,\n\\`legacy_ver\\` UInt64\n)\nENGINE = ReplicatedReplacingMergeTree('/tables/{database}/t/', 'r3')\nORDER BY id; -- { serverError METADATA_MISMATCH }\nCREATE TABLE t2\n(\n\\`id\\` UInt64,\n\\`val\\` String,\n\\`legacy_ver\\` UInt64,\n\\`deleted\\` UInt8\n)\nENGINE = ReplicatedReplacingMergeTree('/tables/{database}/t2/', 'r1', legacy_ver)\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02910_replicated_merge_parameters_must_consistent.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_r_error (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t2_r_ok (\n\\`id\\` UInt64,\n\\`val\\` String,\n\\`legacy_ver\\` UInt64,\n\\`deleted\\` UInt8\n)\nENGINE = ReplicatedReplacingMergeTree('/tables/{database}/t2/', 'r2', legacy_ver)\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02910_replicated_merge_parameters_must_consistent.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2_r_ok (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t2_r_error (\n\\`id\\` UInt64,\n\\`val\\` String,\n\\`legacy_ver\\` UInt64,\n\\`deleted\\` UInt8\n)\nENGINE = ReplicatedReplacingMergeTree('/tables/{database}/t2/', 'r3', legacy_ver, deleted)\nORDER BY id; -- { serverError METADATA_MISMATCH }\nCREATE TABLE t3\n(\n\\`key\\` UInt64,\n\\`metrics1\\` UInt64,\n\\`metrics2\\` UInt64\n)\nENGINE = ReplicatedSummingMergeTree('/tables/{database}/t3/', 'r1', metrics1)\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02910_replicated_merge_parameters_must_consistent.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2_r_error (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t3_r_ok (\n\\`key\\` UInt64,\n\\`metrics1\\` UInt64,\n\\`metrics2\\` UInt64\n)\nENGINE = ReplicatedSummingMergeTree('/tables/{database}/t3/', 'r2', metrics1)\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02910_replicated_merge_parameters_must_consistent.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t3_r_ok (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t3_r_error (\n\\`key\\` UInt64,\n\\`metrics1\\` UInt64,\n\\`metrics2\\` UInt64\n)\nENGINE = ReplicatedSummingMergeTree('/tables/{database}/t3/', 'r3', metrics2)\nORDER BY key; -- { serverError METADATA_MISMATCH }\nCREATE TABLE t4\n(\n\\`key\\` UInt32,\n\\`Path\\` String,\n\\`Time\\` DateTime('UTC'),\n\\`Value\\` Float64,\n\\`Version\\` UInt32,\n\\`col\\` UInt64\n)\nENGINE = ReplicatedGraphiteMergeTree('/tables/{database}/t4/', 'r1', 'graphite_rollup')\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02910_replicated_merge_parameters_must_consistent.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t3_r_error (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t4_r_ok (\n\\`key\\` UInt32,\n\\`Path\\` String,\n\\`Time\\` DateTime('UTC'),\n\\`Value\\` Float64,\n\\`Version\\` UInt32,\n\\`col\\` UInt64\n)\nENGINE = ReplicatedGraphiteMergeTree('/tables/{database}/t4/', 'r2', 'graphite_rollup')\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02910_replicated_merge_parameters_must_consistent.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t4_r_ok (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE prefetched_table(key UInt64, s String) Engine = MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/02910_prefetch_unexpceted_exception.sql","errors":[]},{"query":"CREATE TABLE test02910 (\n\ti Int8,\n\tjString String\n) ENGINE = MergeTree\nORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/02910_object-json-crash-add-column.sql","errors":[]},{"query":"CREATE TABLE test02910_second (\n\\`Id1\\` String,\n\\`Id2\\` String,\n\\`timestamp\\` DateTime64(6),\n\\`tags\\` Array(String),\n)\nENGINE = MergeTree\nPRIMARY KEY (Id1, Id2)\nORDER BY (Id1, Id2, timestamp)\nSETTINGS index_granularity = 8192, index_granularity_bytes = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02910_object-json-crash-add-column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test02910_second (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE NAMED COLLECTION IF NOT EXISTS cache_collection_sql AS path = 'collection_sql', max_size = '1Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02908_filesystem_cache_as_collection.sql","errors":[{"message":"no viable alternative at input 'CREATE NAMED'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE TABLE test (a Int32, b String) ENGINE = MergeTree() ORDER BY a SETTINGS disk = disk(type = cache, disk = 'local_disk', name = '\\$CLICHOUSE_TEST_UNIQUE_NAME', cache_name='cache_collection_sql', load_metadata_asynchronously = 0);","fileName":"../ClickHouse/tests/queries/0_stateless/02908_filesystem_cache_as_collection.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (a Int32, b String) ENGINE = MergeTree() ORDER BY a SETTINGS disk = disk'","startColumn":86,"startLine":1,"endColumn":90,"endLine":1}]},{"query":"CREATE TABLE test2 (a Int32, b String) ENGINE = MergeTree() ORDER BY a SETTINGS disk = disk(type = cache, disk = 'local_disk', name = '\\$CLICHOUSE_TEST_UNIQUE_NAME_2', cache_name='cache_collection', load_metadata_asynchronously = 0);","fileName":"../ClickHouse/tests/queries/0_stateless/02908_filesystem_cache_as_collection.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test2 (a Int32, b String) ENGINE = MergeTree() ORDER BY a SETTINGS disk = disk'","startColumn":87,"startLine":1,"endColumn":91,"endLine":1}]},{"query":"CREATE NAMED COLLECTION foobar03 AS a = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02908_empty_named_collection.sql","errors":[{"message":"no viable alternative at input 'CREATE NAMED'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE TABLE t ( c0 DateTime,\nc1 DateTime,\na DateTime alias toStartOfFifteenMinutes(c0)\n) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02908_alter_column_alias.sql","errors":[]},{"query":"CREATE TABLE t(a UInt64) ENGINE = Log\nSETTINGS disk = 's3_cache';","fileName":"../ClickHouse/tests/queries/0_stateless/02907_read_buffer_content_is_cached_multiple_blobs.sql","errors":[]},{"query":"CREATE TABLE t1 (key UInt8) ENGINE = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02907_filter_pushdown_crash.sql","errors":[]},{"query":"CREATE TABLE t2 (key UInt32) ENGINE = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02907_filter_pushdown_crash.sql","errors":[]},{"query":"CREATE TABLE test (\n\\`id\\` UInt64,\n\\`name\\` String,\nPROJECTION projection_name\n(\nSELECT sum(id) GROUP BY id, name\n)\n)\nENGINE = MergeTree()\nORDER BY id\nSETTINGS index_granularity_bytes = 10000;","fileName":"../ClickHouse/tests/queries/0_stateless/02906_force_optimize_projection_name.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table test_nested (data Nested(x UInt32, y UInt32)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02906_flatten_only_true_nested.sql","errors":[]},{"query":"create table test_array_tuple (data Array(Tuple(x UInt64, y UInt64))) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02906_flatten_only_true_nested.sql","errors":[]},{"query":"CREATE TABLE tab (\n\\`machine_id\\` UInt64,\n\\`name\\` String,\n\\`timestamp\\` DateTime\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMM(timestamp)\nORDER BY machine_id;","fileName":"../ClickHouse/tests/queries/0_stateless/02903_bug_43644.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE null_02902 (t Tuple(num Int64, str String)) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/02902_select_subcolumns_from_engine_null.sql","errors":[]},{"query":"create table test_02902 engine File(JSONEachRow) settings output_format_json_named_tuples_as_objects = 1, output_format_json_skip_null_value_in_named_tuples = 1\nas select cast((number::String, null, (number::String, null)), 'Tuple(a Nullable(String), b Nullable(Int64), c Tuple(x Nullable(String), y Nullable(Float64)))') as c\nfrom numbers(3);","fileName":"../ClickHouse/tests/queries/0_stateless/02902_json_skip_null_values.sql","errors":[{"message":"no viable alternative at input 'create table test_02902 engine File(JSONEachRow) settings output_format_json_named_tuples_as_objects = 1, output_format_json_skip_null_value_in_named_tuples = 1\\nas select cast((number:'","startColumn":22,"startLine":2,"endColumn":23,"endLine":2}]},{"query":"CREATE TABLE test_apply_deleted_mask(id Int64, value String) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02902_diable_apply_deleted_mask.sql","errors":[]},{"query":"CREATE TABLE t (\n\\`rDate\\` String,\n\\`cpu_total\\` Int64\n)\nENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02901_predicate_pushdown_cte_stateful.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test1 (\nid String,\ntime DateTime64(9),\nkey Int64,\nvalue Bool,\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMM(time)\nORDER BY (key, id, time);","fileName":"../ClickHouse/tests/queries/0_stateless/02900_window_function_with_sparse_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test1 (\\nid String,\\ntime DateTime64(9),\\nkey Int64,\\nvalue Bool,\\n)'","startColumn":0,"startLine":6,"endColumn":1,"endLine":6}]},{"query":"CREATE TABLE test2 (\ntime DateTime,\nvalue String\n)\nENGINE = MergeTree\nORDER BY (time) AS SELECT 0, '';","fileName":"../ClickHouse/tests/queries/0_stateless/02900_window_function_with_sparse_column.sql","errors":[]},{"query":"CREATE TABLE test (x UInt32, y UInt32) ENGINE = MergeTree ORDER BY mortonEncode(x, y) SETTINGS index_granularity = 8192, index_granularity_bytes = '1Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02899_indexing_by_space_filling_curves.sql","errors":[]},{"query":"CREATE TABLE test (x UInt32, y UInt32) ENGINE = MergeTree ORDER BY mortonEncode(x, y) SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02899_indexing_by_space_filling_curves.sql","errors":[]},{"query":"CREATE TABLE t1(k UInt32, v String) ENGINE ReplicatedMergeTree('/02898_parallel_replicas/{database}/test_tbl', 'r1') ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02898_parallel_replicas_progress_bar.sql","errors":[]},{"query":"CREATE TABLE t2(k UInt32, v String) ENGINE ReplicatedMergeTree('/02898_parallel_replicas/{database}/test_tbl', 'r2') ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02898_parallel_replicas_progress_bar.sql","errors":[]},{"query":"CREATE TABLE t3(k UInt32, v String) ENGINE ReplicatedMergeTree('/02898_parallel_replicas/{database}/test_tbl', 'r3') ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02898_parallel_replicas_progress_bar.sql","errors":[]},{"query":"CREATE TABLE 02898_parallel_replicas_final (x String, y Int32) ENGINE = ReplacingMergeTree ORDER BY cityHash64(x);","fileName":"../ClickHouse/tests/queries/0_stateless/02898_parallel_replicas_custom_key_final.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02898'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE test (\nEventDate Date\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY toMonday(EventDate);","fileName":"../ClickHouse/tests/queries/0_stateless/02897_alter_partition_parameters.sql","errors":[]},{"query":"CREATE TABLE test2 (\na UInt32,\nb Int64\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY (a * b, b * b);","fileName":"../ClickHouse/tests/queries/0_stateless/02897_alter_partition_parameters.sql","errors":[]},{"query":"CREATE TABLE test3 (\na UInt32,\nb Int64\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02897_alter_partition_parameters.sql","errors":[]},{"query":"CREATE TABLE test4 (EventDate Date) ENGINE = MergeTree() ORDER BY tuple() PARTITION BY EventDate;","fileName":"../ClickHouse/tests/queries/0_stateless/02897_alter_partition_parameters.sql","errors":[]},{"query":"CREATE TABLE test5 (\na UInt32,\nb Int64\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY (a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/02897_alter_partition_parameters.sql","errors":[]},{"query":"CREATE TABLE test6 (\na UInt32,\nb Int64\n)\nENGINE = MergeTree\nORDER BY tuple()\nPARTITION BY (a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/02897_alter_partition_parameters.sql","errors":[]},{"query":"CREATE TABLE or_bug (key UInt8) ENGINE=MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02896_multiple_OR.sql","errors":[]},{"query":"CREATE TABLE forms (\n\\`form_id\\` FixedString(24),\n\\`text_field\\` String\n)\nENGINE = MergeTree\nPRIMARY KEY form_id\nORDER BY form_id;","fileName":"../ClickHouse/tests/queries/0_stateless/02896_multiple_OR.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE forms (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_leading_zeroes(id Int64, input String, val Int64, expected Int64, comment String) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02896_leading_zeroes_no_octal.sql","errors":[]},{"query":"CREATE TABLE t_leading_zeroes_f(id Int64, input String, val Float64, expected Float64, comment String) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02896_leading_zeroes_no_octal.sql","errors":[]},{"query":"CREATE TABLE test_table (time_stamp_utc DateTime, impressions UInt32, clicks UInt32, revenue Float32) ENGINE = MergeTree ORDER BY time_stamp_utc;","fileName":"../ClickHouse/tests/queries/0_stateless/02896_cyclic_aliases_crash.sql","errors":[]},{"query":"create table test_table engine MergeTree order by sum as select 100 as sum union all select 200 as sum;","fileName":"../ClickHouse/tests/queries/0_stateless/02896_cyclic_aliases_crash.sql","errors":[]},{"query":"CREATE TABLE foo (id UInt64, seq UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02893_vertical_final_bugs.sql","errors":[]},{"query":"CREATE TABLE bar (id UInt64, seq UInt64, name String) ENGINE = ReplacingMergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02893_vertical_final_bugs.sql","errors":[]},{"query":"CREATE TABLE t (k1 UInt64, k2 UInt64, v UInt64) ENGINE = ReplacingMergeTree() ORDER BY (k1, k2);","fileName":"../ClickHouse/tests/queries/0_stateless/02893_vertical_final_bugs.sql","errors":[]},{"query":"CREATE VIEW view_without_sample AS SELECT 1 AS x;","fileName":"../ClickHouse/tests/queries/0_stateless/02893_bad_sample_view.sql","errors":[]},{"query":"CREATE TABLE dict (key UInt64, value String) ENGINE = EmbeddedRocksDB PRIMARY KEY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02892_rocksdb_trivial_count.sql","errors":[]},{"query":"create table nested_smt ( date date,\nval UInt64,\ncounters_Map Nested (\nid UInt8,\ncount Int32\n)\n)\nENGINE = SummingMergeTree()\nORDER BY (date);","fileName":"../ClickHouse/tests/queries/0_stateless/02892_SummingMergeTree_Nested.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS {CLICKHOUSE_DATABASE:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/02891_rename_table_without_keyword.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS {'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS {CLICKHOUSE_DATABASE:Identifier}.r1 (name String) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02891_rename_table_without_keyword.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS {'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS {CLICKHOUSE_DATABASE:Identifier}.r2 (name String) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02891_rename_table_without_keyword.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS {'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS {CLICKHOUSE_DATABASE:Identifier}.source_table ( id UInt64,\nvalue String\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02891_rename_table_without_keyword.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS {'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE DICTIONARY IF NOT EXISTS {CLICKHOUSE_DATABASE:Identifier}.test_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '{CLICKHOUSE_DATABASE:String}.dictionary_table'))\nLAYOUT(FLAT())\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02891_rename_table_without_keyword.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY IF NOT EXISTS {'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"create table test (key Int) engine=MergeTree() order by tuple() settings ratio_of_defaults_for_sparse_serialization=0.1;","fileName":"../ClickHouse/tests/queries/0_stateless/02891_functions_over_sparse_columns.sql","errors":[]},{"query":"create table x engine MergeTree order by () as select () as a, () as b;","fileName":"../ClickHouse/tests/queries/0_stateless/02891_empty_tuple.sql","errors":[{"message":"no viable alternative at input 'create table x engine MergeTree order by ()'","startColumn":42,"startLine":1,"endColumn":43,"endLine":1}]},{"query":"create table x (i Nullable(Tuple())) engine MergeTree order by (); -- { serverError 43 } create table x (i LowCardinality(Tuple())) engine MergeTree order by (); -- { serverError 43 }\ncreate table x (i Tuple(), j Array(Tuple())) engine MergeTree order by ();","fileName":"../ClickHouse/tests/queries/0_stateless/02891_empty_tuple.sql","errors":[{"message":"no viable alternative at input 'create table x (i Nullable(Tuple())) engine MergeTree order by ()'","startColumn":64,"startLine":1,"endColumn":65,"endLine":1}]},{"query":"CREATE TABLE kv (\n\\`key\\` UInt64,\n\\`value\\` UInt64,\n\\`s\\` String,\nINDEX value_idx value TYPE minmax GRANULARITY 1\n)\nENGINE = ReplacingMergeTree\nORDER BY key\nSETTINGS index_granularity = 32, index_granularity_bytes = 1024;","fileName":"../ClickHouse/tests/queries/0_stateless/02891_alter_update_adaptive_granularity.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE kv (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE e (dt DateTime, t Int32) ENGINE = MergeTree() PARTITION BY (t, toYYYYMM(dt)) ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02890_partition_prune_in_extra_columns.sql","errors":[]},{"query":"create table x (i int, j int) engine MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/02890_named_tuple_functions.sql","errors":[]},{"query":"create table tbl (x Tuple(a Int32, b Int32, c Int32)) engine MergeTree order by ();","fileName":"../ClickHouse/tests/queries/0_stateless/02890_named_tuple_functions.sql","errors":[{"message":"no viable alternative at input 'create table tbl (x Tuple(a Int32, b Int32, c Int32)) engine MergeTree order by ()'","startColumn":81,"startLine":1,"endColumn":82,"endLine":1}]},{"query":"CREATE TABLE t_describe_options ( id UInt64 COMMENT 'index column',\narr Array(UInt64) DEFAULT [10, 20] CODEC(ZSTD),\nt Tuple(a String, b UInt64) DEFAULT ('foo', 0) CODEC(ZSTD))\nENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02890_describe_table_options.sql","errors":[]},{"query":"create table test (a Tuple(b String, c Tuple(d Nullable(UInt64), e Array(UInt32), f Array(Tuple(g String, h Map(String, Array(Tuple(i String, j UInt64))))), k Date), l Nullable(String))) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02889_print_pretty_type_names.sql","errors":[]},{"query":"CREATE TABLE t_parts_columns_filenames (id UInt64, v UInt64, long_v_name UInt64, long_arr_name Array(UInt64), arr_col Array(UInt64)) ENGINE = MergeTree ORDER BY id\nSETTINGS\nmin_bytes_for_wide_part = 0,\nreplace_long_file_name_to_hash = 1,\nmax_file_name_length = 8,\nratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02889_parts_columns_filenames.sql","errors":[]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/02888_system_tables_with_inaccessible_table_function.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.tablefunc01 (x int) AS postgresql('127.121.0.1:5432', 'postgres_db', 'postgres_table', 'postgres_user', '124444');","fileName":"../ClickHouse/tests/queries/0_stateless/02888_system_tables_with_inaccessible_table_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.tablefunc02 (x int) AS mysql('127.123.0.1:3306', 'mysql_db', 'mysql_table', 'mysql_user','123123');","fileName":"../ClickHouse/tests/queries/0_stateless/02888_system_tables_with_inaccessible_table_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.tablefunc03 (a int) AS sqlite('db_path', 'table_name');","fileName":"../ClickHouse/tests/queries/0_stateless/02888_system_tables_with_inaccessible_table_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.tablefunc04 (a int) AS  mongodb('127.0.0.1:27017','test', 'my_collection', 'test_user', 'password', 'a Int');","fileName":"../ClickHouse/tests/queries/0_stateless/02888_system_tables_with_inaccessible_table_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.tablefunc05 (a int) AS redis('127.0.0.1:6379', 'key', 'key UInt32');","fileName":"../ClickHouse/tests/queries/0_stateless/02888_system_tables_with_inaccessible_table_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.tablefunc06 (a int) AS s3('http://some_addr:9000/cloud-storage-01/data.tsv', 'M9O7o0SX5I4udXhWxI12', '9ijqzmVN83fzD9XDkEAAAAAAAA', 'TSV');","fileName":"../ClickHouse/tests/queries/0_stateless/02888_system_tables_with_inaccessible_table_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.tablefunc01_without_schema AS postgresql('127.121.0.1:5432', 'postgres_db', 'postgres_table', 'postgres_user', '124444'); -- { serverError POSTGRESQL_CONNECTION_FAILURE } CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.tablefunc02_without_schema AS mysql('127.123.0.1:3306', 'mysql_db', 'mysql_table', 'mysql_user','123123'); -- {serverError ALL_CONNECTION_TRIES_FAILED }\nSELECT name, engine, engine_full, create_table_query, data_paths, notEmpty([metadata_path]), notEmpty([uuid])\nFROM system.tables\nWHERE name like '%tablefunc%' and database=currentDatabase()\nORDER BY name;","fileName":"../ClickHouse/tests/queries/0_stateless/02888_system_tables_with_inaccessible_table_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE attach_partition_t1 ( \ta UInt32,\n\tb String,\n\tINDEX bf b TYPE tokenbf_v1(8192, 3, 0) GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02888_attach_partition_from_different_tables.sql","errors":[]},{"query":"CREATE TABLE attach_partition_t2 ( \ta UInt32,\n\tb String,\n\tINDEX bf b TYPE bloom_filter GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02888_attach_partition_from_different_tables.sql","errors":[]},{"query":"CREATE TABLE attach_partition_t4 ( \ta UInt32,\n\tb String,\nPROJECTION differently_named_proj\n(\nSELECT\nb,\nsum(a)\nGROUP BY b\n)\n)\nENGINE = MergeTree\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02888_attach_partition_from_different_tables.sql","errors":[]},{"query":"CREATE TABLE attach_partition_t6 ( \ta UInt32,\n\tb String,\nPROJECTION proj\n(\nSELECT\nb,\nsum(a)\nGROUP BY b\n)\n)\nENGINE = MergeTree\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02888_attach_partition_from_different_tables.sql","errors":[]},{"query":"CREATE TABLE t_mutations_subcolumns (id UInt64, n String, obj Object(Nullable('json'))) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02887_mutations_subcolumns.sql","errors":[]},{"query":"CREATE TABLE t_mutations_subcolumns (a UInt64, obj Object(Nullable('json'))) ENGINE = MergeTree ORDER BY a PARTITION BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02887_mutations_subcolumns.sql","errors":[]},{"query":"CREATE TABLE quorum1(x UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02887/quorum', '1') ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02887_insert_quorum_wo_keeper_retries.sql","errors":[]},{"query":"CREATE TABLE quorum2(x UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02887/quorum', '2') ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02887_insert_quorum_wo_keeper_retries.sql","errors":[]},{"query":"CREATE TABLE t_missed_subcolumns (id UInt64, n String, obj Object(Nullable('json'))) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02886_missed_json_subcolumns.sql","errors":[]},{"query":"CREATE TABLE local_tbl (\\`key\\` UInt32, \\`value\\` UInt32 DEFAULT 42) ENGINE = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02885_create_distributed_table_without_as.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE local_tbl (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE dist_tbl ENGINE = Distributed('test_shard_localhost', currentDatabase(), 'local_tbl', rand());","fileName":"../ClickHouse/tests/queries/0_stateless/02885_create_distributed_table_without_as.sql","errors":[]},{"query":"CREATE TABLE t (\ns1 String,\ns2 String\n) ENGINE = MergeTree ORDER BY s1;","fileName":"../ClickHouse/tests/queries/0_stateless/02884_string_distance_function.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS posts (\n\\`page_id\\` LowCardinality(String),\n\\`post_id\\` String CODEC(LZ4),\n\\`host_id\\` UInt32 CODEC(T64, LZ4),\n\\`path_id\\` UInt32,\n\\`created\\` DateTime CODEC(T64, LZ4),\n\\`as_of\\` DateTime CODEC(T64, LZ4)\n)\nENGINE = ReplacingMergeTree(as_of)\nPARTITION BY toStartOfMonth(created)\nORDER BY (page_id, post_id);","fileName":"../ClickHouse/tests/queries/0_stateless/02884_parallel_window_functions_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS posts (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE IF NOT EXISTS post_metrics (\n\\`page_id\\` LowCardinality(String),\n\\`post_id\\` String CODEC(LZ4),\n\\`created\\` DateTime CODEC(T64, LZ4),\n\\`impressions\\` UInt32 CODEC(T64, LZ4),\n\\`clicks\\` UInt32 CODEC(T64, LZ4),\n\\`as_of\\` DateTime CODEC(T64, LZ4)\n)\nENGINE = ReplacingMergeTree(as_of)\nPARTITION BY toStartOfMonth(created)\nORDER BY (page_id, post_id);","fileName":"../ClickHouse/tests/queries/0_stateless/02884_parallel_window_functions_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS post_metrics (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE window_function_threading Engine = MergeTree\nORDER BY (ac, nw)\nAS SELECT\ntoUInt64(toFloat32(number % 2) % 20000000) as ac,\ntoFloat32(1) as wg,\ntoUInt16(toFloat32(number % 3) % 400) as nw\nFROM numbers_mt(10000000);","fileName":"../ClickHouse/tests/queries/0_stateless/02884_parallel_window_functions.sql","errors":[]},{"query":"CREATE TABLE t_async_insert_skip_settings (id UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/tables/t_async_insert_skip_settings', '1')\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02884_async_insert_skip_settings.sql","errors":[]},{"query":"CREATE TABLE t_reverse_order_virt_col (\\`order_0\\` Decimal(76, 53), \\`p_time\\` Date) ENGINE = MergeTree PARTITION BY toYYYYMM(p_time)\nORDER BY order_0;","fileName":"../ClickHouse/tests/queries/0_stateless/02883_read_in_reverse_order_virtual_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_reverse_order_virt_col (\\'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE my_table (values Array(Int32)) ENGINE = MergeTree() ORDER BY values;","fileName":"../ClickHouse/tests/queries/0_stateless/02883_array_scalar_mult_div_modulo.sql","errors":[]},{"query":"CREATE TABLE checksums_r1 (column1 UInt32, column2 String) Engine = ReplicatedMergeTree('/tables/{database}/checksums_table', 'r1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02882_replicated_fetch_checksums_doesnt_match.sql","errors":[]},{"query":"CREATE TABLE checksums_r2 (column1 UInt32, column2 String) Engine = ReplicatedMergeTree('/tables/{database}/checksums_table', 'r2') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02882_replicated_fetch_checksums_doesnt_match.sql","errors":[]},{"query":"CREATE TABLE checksums_r3 (column1 UInt32, column2 String) Engine = ReplicatedMergeTree('/tables/{database}/checksums_table', 'r3') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02882_replicated_fetch_checksums_doesnt_match.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue UInt64\n) ENGINE=MergeTree ORDER BY (id, value) SETTINGS index_granularity = 8192, index_granularity_bytes = '1Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02882_primary_key_index_in_function_different_types.sql","errors":[]},{"query":"CREATE TABLE all_valid (id UInt64, query String) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02882_formatQuery.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE all_valid (id UInt64, query'","startColumn":35,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE some_invalid (id UInt64, query String) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02882_formatQuery.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE some_invalid (id UInt64, query'","startColumn":38,"startLine":1,"endColumn":43,"endLine":1}]},{"query":"create table data (part Int) engine=MergeTree() order by tuple() partition by part;","fileName":"../ClickHouse/tests/queries/0_stateless/02880_indexHint__partition_id.sql","errors":[]},{"query":"CREATE TABLE table1 (number UInt64) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02876_sort_union_of_sorted.sql","errors":[]},{"query":"CREATE TABLE table2 (number UInt64) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02876_sort_union_of_sorted.sql","errors":[]},{"query":"CREATE TABLE tt (n UInt64) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02875_parallel_replicas_remote.sql","errors":[]},{"query":"CREATE TABLE tt (n UInt64) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02875_parallel_replicas_cluster_all_replicas.sql","errors":[]},{"query":"CREATE TABLE max_length_alias_14053__fuzz_45 (\n\\`a\\` Date,\n\\`b\\` Nullable(Decimal(76, 45)),\n\\`c.d\\` Array(Nullable(DateTime64(3))),\n\\`dcount\\` Int8 ALIAS length(c.d)\n)\nENGINE = MergeTree\nPARTITION BY toMonday(a)\nORDER BY (a, b)\nSETTINGS allow_nullable_key = 1, index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02875_fix_column_decimal_serialization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE max_length_alias_14053__fuzz_45 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t (\ntid UInt64,\nprocessed_at DateTime,\ncreated_at DateTime,\namount Int64\n)\nENGINE = ReplacingMergeTree\nPARTITION BY toStartOfQuarter(created_at)\nPRIMARY KEY (toStartOfDay(created_at), toStartOfDay(processed_at))\nORDER BY (toStartOfDay(created_at), toStartOfDay(processed_at), tid)\nSETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02875_final_invalid_read_ranges_bug.sql","errors":[]},{"query":"create table t_json_merge (id UInt64, s1 String, s2 String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02874_json_merge_patch_function_test.sql","errors":[]},{"query":"create table data (key Int, val1 SimpleAggregateFunction(max, Nullable(Int)), val2 SimpleAggregateFunction(min, Int)) engine=AggregatingMergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_prewhere_filter.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec (n UInt64 CODEC(GCD)) ENGINE = Memory; -- { serverError BAD_ARGUMENTS } CREATE TEMPORARY TABLE table_gcd_codec (str String CODEC(GCD, LZ4)) ENGINE = Memory; -- { serverError BAD_ARGUMENTS }\nCREATE TEMPORARY TABLE table_lz4 (id UInt64, ui UInt256 CODEC(LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd (id UInt64, ui UInt256 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_uint8 (n UInt8 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_uint16 (n UInt16 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_uint32 (n UInt32 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_uint64 (n UInt64 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_uint128 (n UInt128 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_uint256 (n UInt256 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_int8 (n Int8 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_int16 (n Int16 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_int32 (n Int32 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_int64 (n Int64 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_int128 (n Int128 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_int256 (n Int256 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_decimal32 (n Decimal32(1) CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_decimal64 (n Decimal64(1) CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_decimal128 (n Decimal128(1) CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_decimal256 (n Decimal256(1) CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_date (n Date CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_date32 (n Date32 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_datetime (n DateTime('Asia/Istanbul') CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_datetime64 (n DateTime64(3, 'Asia/Istanbul') CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_gcd_codec_only_zeros (n UInt8 CODEC(GCD, LZ4)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[]},{"query":"CREATE TABLE table_gcd_codec_one_hundred_zeros (a Nullable(Int64) CODEC (GCD,LZ4)) ENGINE=MergeTree ORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE table_gcd_codec_one_hundred_zeros (a Nullable(Int64) CODEC (GCD,LZ4)) ENGINE=MergeTree ORDER BY ()'","startColumn":110,"startLine":1,"endColumn":111,"endLine":1}]},{"query":"CREATE TABLE table_gcd_codec_one_hundred_ones (a Nullable(Int64) CODEC (GCD,LZ4)) ENGINE=MergeTree Order by ();","fileName":"../ClickHouse/tests/queries/0_stateless/02872_gcd_codec.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE table_gcd_codec_one_hundred_ones (a Nullable(Int64) CODEC (GCD,LZ4)) ENGINE=MergeTree Order by ()'","startColumn":109,"startLine":1,"endColumn":110,"endLine":1}]},{"query":"CREATE TABLE tab (\nid UInt64,\nlong_string String SETTINGS (min_compress_block_size = 163840, max_compress_block_size = 163840),\nv1 String,\nv2 UInt64,\nv3 Float32,\nv4 Float64\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/tab/2870', 'r1')\nORDER BY id\nSETTINGS min_bytes_for_wide_part = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02870_per_column_settings.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\nid UInt64,\\nlong_string String SETTINGS'","startColumn":19,"startLine":3,"endColumn":27,"endLine":3}]},{"query":"CREATE TABLE tab (\nid UInt64,\ntup Tuple(UInt64, UInt64) SETTINGS (min_compress_block_size = 81920, max_compress_block_size = 163840),\njson Object('json') SETTINGS (min_compress_block_size = 81920, max_compress_block_size = 163840),\n)\nENGINE = MergeTree\nORDER BY id\nSETTINGS min_bytes_for_wide_part = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02870_per_column_settings.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\nid UInt64,\\ntup Tuple(UInt64, UInt64) SETTINGS'","startColumn":26,"startLine":3,"endColumn":34,"endLine":3}]},{"query":"CREATE TABLE test_move_partition_throttling (key UInt64 CODEC(NONE)) ENGINE = MergeTree ORDER BY tuple() SETTINGS storage_policy='local_remote';","fileName":"../ClickHouse/tests/queries/0_stateless/02870_move_partition_to_volume_io_throttling.sql","errors":[]},{"query":"CREATE TABLE t1(k UInt32, v UInt32) ENGINE ReplicatedMergeTree('/parallel_replicas/{database}/test_tbl', 'r1') ORDER BY k settings index_granularity=10;","fileName":"../ClickHouse/tests/queries/0_stateless/02869_parallel_replicas_read_from_several.sql","errors":[]},{"query":"CREATE TABLE t2(k UInt32, v UInt32) ENGINE ReplicatedMergeTree('/parallel_replicas/{database}/test_tbl', 'r2') ORDER BY k settings index_granularity=10;","fileName":"../ClickHouse/tests/queries/0_stateless/02869_parallel_replicas_read_from_several.sql","errors":[]},{"query":"CREATE TABLE t3(k UInt32, v UInt32) ENGINE ReplicatedMergeTree('/parallel_replicas/{database}/test_tbl', 'r3') ORDER BY k settings index_granularity=10;","fileName":"../ClickHouse/tests/queries/0_stateless/02869_parallel_replicas_read_from_several.sql","errors":[]},{"query":"CREATE TABLE t_collisions (\n\\`very_very_long_column_name_that_will_be_replaced_with_hash\\` Int32,\n\\`e798545eefc8b7a1c2c81ff00c064ad8\\` Int32\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS replace_long_file_name_to_hash = 1, max_file_name_length = 42; -- { serverError BAD_ARGUMENTS }\nDROP TABLE IF EXISTS t_collisions;","fileName":"../ClickHouse/tests/queries/0_stateless/02869_insert_filenames_collisions.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_collisions (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_collisions (\n\\`col1\\` Int32,\n\\`e798545eefc8b7a1c2c81ff00c064ad8\\` Int32\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS replace_long_file_name_to_hash = 1, max_file_name_length = 42;","fileName":"../ClickHouse/tests/queries/0_stateless/02869_insert_filenames_collisions.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_collisions (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_collisions (\n\\`very_very_long_column_name_that_will_be_replaced_with_hash\\` Int32,\n\\`e798545eefc8b7a1c2c81ff00c064ad8\\` Int32\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS replace_long_file_name_to_hash = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02869_insert_filenames_collisions.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_collisions (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_collisions (\n\\`id\\` Int,\n\\`col\\` Array(String),\n\\`col.s\\` Array(LowCardinality(String)),\n\\`col.u\\` Array(LowCardinality(String))\n)\nENGINE = MergeTree\nORDER BY id; -- { serverError BAD_ARGUMENTS }\nDROP TABLE IF EXISTS t_collisions;","fileName":"../ClickHouse/tests/queries/0_stateless/02869_insert_filenames_collisions.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_collisions (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_collisions (\n\\`id\\` Int,\n\\`col\\` String,\n\\`col.s\\` Array(LowCardinality(String)),\n\\`col.u\\` Array(LowCardinality(String))\n)\nENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02869_insert_filenames_collisions.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_collisions (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table test_table ( \\`date\\` Date, \\`__sign\\` Int8, \\`from\\` Float64, \\`to\\` Float64 ) ENGINE = CollapsingMergeTree(__sign) PARTITION BY toYYYYMM(date) ORDER BY (date) SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02868_select_support_from_keywords.sql","errors":[{"message":"no viable alternative at input 'create table test_table ( \\'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"create VIEW test_view AS WITH cte AS (SELECT date, __sign, \"from\", \"to\" FROM test_table FINAL) SELECT date, __sign, \"from\", \"to\" FROM cte;","fileName":"../ClickHouse/tests/queries/0_stateless/02868_select_support_from_keywords.sql","errors":[{"message":"no viable alternative at input 'create VIEW test_view AS WITH cte AS ('","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE TABLE test_rewrite_uniq_to_count (\n\\`a\\` UInt8,\n\\`b\\` UInt8,\n\\`c\\` UInt8\n) ENGINE = MergeTree ORDER BY \\`a\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/02868_distinct_to_count_optimization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_rewrite_uniq_to_count (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t (\n\\`d\\` Nullable(Date),\n\\`f1\\` Nullable(String),\n\\`f2\\` Nullable(String),\n\\`c\\` Nullable(Int64)\n)\nENGINE = ReplacingMergeTree\nORDER BY (f1, f2, d)\nSETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02867_nullable_primary_key_final.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t (\n\\`d\\` Nullable(Date),\n\\`f1\\` Nullable(String),\n\\`f2\\` Nullable(String),\n\\`c\\` Nullable(Int64)\n)\nENGINE = SummingMergeTree\nORDER BY (f1, f2, d)\nSETTINGS allow_nullable_key = 1, index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02867_nullable_primary_key_final.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t (o Nullable(String), p Nullable(String)) ENGINE = ReplacingMergeTree ORDER BY (p, o) SETTINGS allow_nullable_key = 1, index_granularity = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02867_nullable_primary_key_final.sql","errors":[]},{"query":"CREATE TABLE tnul (lc Nullable(String)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02867_null_lc_in_bug.sql","errors":[]},{"query":"CREATE TABLE tlc (lc LowCardinality(Nullable(String))) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02867_null_lc_in_bug.sql","errors":[]},{"query":"CREATE USER test_user_02867 IDENTIFIED WITH ssh_key BY KEY 'invalid_key' TYPE 'ssh-rsa'; -- { serverError LIBSSH_ERROR } CREATE USER test_user_02867 IDENTIFIED WITH ssh_key BY KEY 'invalid_key' TYPE 'ssh-rsa', KEY 'invalid_key' TYPE 'ssh-rsa'; -- { serverError LIBSSH_ERROR }\nCREATE USER test_user_02867 IDENTIFIED WITH ssh_key\nBY KEY 'AAAAB3NzaC1yc2EAAAADAQABAAABgQCVTUso7/LQcBljfsHwyuL6fWfIvS3BaVpYB8lwf/ZylSOltBy6YlABtTU3mIb197d2DW99RcLKk174f5Zj5rUukXbV0fnufWvwd37fbb1eKM8zxBYvXs53EI5QBPZgKACIzMpYYZeJnAP0oZhUfWWtKXpy/SQ5CHiEIGD9RNYDL+uXZejMwC5r/+f2AmrATBo+Y+WJFZIvhj4uznFYvyvNTUz/YDvZCk+vwwIgiv4BpFCaZm2TeETTj6SvK567bZznLP5HXrkVbB5lhxjAkahc2w/Yjm//Fwto3xsMoJwROxJEU8L1kZ40QWPqjo7Tmr6C/hL2cKDNgWOEqrjLKQmh576s1+PfxwXpVPjLK4PHVSvuJLV88sn0iPdspLlKlDCdc7T9MqIrjJfxuhqnaoFQ7U+oBte8vkm1wGu76+WEC3iNWVAiIVZxLx9rUEsDqj3OovqfLiRsTmNLeY94p2asZjkx7rU48ZwuYN5XGafYsArPscj9Ve6RoRrof+5Q7cc='\nTYPE 'invalid_algorithm'; -- { serverError LIBSSH_ERROR }\nCREATE USER test_user_02867 IDENTIFIED WITH ssh_key\nBY KEY 'AAAAB3NzaC1yc2EAAAADAQABAAABgQCVTUso7/LQcBljfsHwyuL6fWfIvS3BaVpYB8lwf/ZylSOltBy6YlABtTU3mIb197d2DW99RcLKk174f5Zj5rUukXbV0fnufWvwd37fbb1eKM8zxBYvXs53EI5QBPZgKACIzMpYYZeJnAP0oZhUfWWtKXpy/SQ5CHiEIGD9RNYDL+uXZejMwC5r/+f2AmrATBo+Y+WJFZIvhj4uznFYvyvNTUz/YDvZCk+vwwIgiv4BpFCaZm2TeETTj6SvK567bZznLP5HXrkVbB5lhxjAkahc2w/Yjm//Fwto3xsMoJwROxJEU8L1kZ40QWPqjo7Tmr6C/hL2cKDNgWOEqrjLKQmh576s1+PfxwXpVPjLK4PHVSvuJLV88sn0iPdspLlKlDCdc7T9MqIrjJfxuhqnaoFQ7U+oBte8vkm1wGu76+WEC3iNWVAiIVZxLx9rUEsDqj3OovqfLiRsTmNLeY94p2asZjkx7rU48ZwuYN5XGafYsArPscj9Ve6RoRrof+5Q7cc='\nTYPE 'ssh-rsa';","fileName":"../ClickHouse/tests/queries/0_stateless/02867_create_user_ssh.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE TABLE test_skip_idx ( id UInt32,\nINDEX name_idx_g2 id TYPE minmax GRANULARITY 2,\nINDEX name_idx_g1 id TYPE minmax GRANULARITY 1)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 1, index_granularity_bytes = 0, min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02866_size_of_marks_skip_idx_explain.sql","errors":[]},{"query":"CREATE TABLE test (\nip IPv4 Codec(ZSTD(6)),\n) ENGINE MergeTree() order by ip;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_test_ipv4_type_mismatch.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\nip IPv4 Codec(ZSTD(6)),\\n)'","startColumn":0,"startLine":3,"endColumn":1,"endLine":3}]},{"query":"CREATE TABLE tab (\na Float64 STATISTICS(tdigest),\nb Int64 STATISTICS(tdigest)\n) Engine = MergeTree() ORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_usage.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\na Float64 STATISTICS'","startColumn":10,"startLine":2,"endColumn":20,"endLine":2}]},{"query":"CREATE TABLE tab (\nu64                 UInt64,\nu64_tdigest         UInt64 STATISTICS(tdigest),\nu64_minmax          UInt64 STATISTICS(minmax),\nu64_countmin       UInt64 STATISTICS(countmin),\nu64_uniq            UInt64 STATISTICS(uniq),\nf64                 Float64,\nf64_tdigest         Float64 STATISTICS(tdigest),\nf64_minmax          Float64 STATISTICS(minmax),\nf64_countmin       Float64 STATISTICS(countmin),\nf64_uniq            Float64 STATISTICS(uniq),\ndt                  DateTime,\ndt_tdigest          DateTime STATISTICS(tdigest),\ndt_minmax           DateTime STATISTICS(minmax),\ndt_countmin        DateTime STATISTICS(countmin),\ndt_uniq             DateTime STATISTICS(uniq),\nb                   Bool,\nb_tdigest           Bool STATISTICS(tdigest),\nb_minmax            Bool STATISTICS(minmax),\nb_countmin         Bool STATISTICS(countmin),\nb_uniq              Bool STATISTICS(uniq),\ns                   String,\ns_countmin         String STATISTICS(countmin),\ns_uniq              String STATISTICS(uniq)\n) Engine = MergeTree() ORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_predicates.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\nu64                 UInt64,\\nu64_tdigest         UInt64 STATISTICS'","startColumn":27,"startLine":3,"endColumn":37,"endLine":3}]},{"query":"CREATE TABLE tab (\na Int64 STATISTICS(tdigest),\nb Int16 STATISTICS(tdigest),\n) ENGINE = MergeTree() ORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0, enable_vertical_merge_algorithm = 0; -- TODO: there is a bug in vertical merge with statistics.\nINSERT INTO tab SELECT number, -number FROM system.numbers LIMIT 10000;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_delayed_materialization_in_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\na Int64 STATISTICS'","startColumn":8,"startLine":2,"endColumn":18,"endLine":2}]},{"query":"CREATE TABLE tab (col Float64 STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); -- { serverError INCORRECT_QUERY } SET allow_experimental_statistics = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Float64 STATISTICS'","startColumn":30,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE tab (col Float64 STATISTICS(no_statistics_type)) Engine = MergeTree() ORDER BY tuple(); -- { serverError INCORRECT_QUERY } CREATE TABLE tab (col Float64 STATISTICS(tdigest, tdigest)) Engine = MergeTree() ORDER BY tuple(); -- { serverError INCORRECT_QUERY }\nSET allow_suspicious_low_cardinality_types = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Float64 STATISTICS'","startColumn":30,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE tab (col UInt8 STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col UInt8 STATISTICS'","startColumn":28,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE TABLE tab (col UInt256 STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col UInt256 STATISTICS'","startColumn":30,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE tab (col Float32 STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Float32 STATISTICS'","startColumn":30,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE tab (col Decimal32(3) STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Decimal32(3) STATISTICS'","startColumn":35,"startLine":1,"endColumn":45,"endLine":1}]},{"query":"CREATE TABLE tab (col Date STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Date STATISTICS'","startColumn":27,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE tab (col Date32 STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Date32 STATISTICS'","startColumn":29,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE tab (col DateTime STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col DateTime STATISTICS'","startColumn":31,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"CREATE TABLE tab (col DateTime64 STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col DateTime64 STATISTICS'","startColumn":33,"startLine":1,"endColumn":43,"endLine":1}]},{"query":"CREATE TABLE tab (col Enum('hello', 'world') STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Enum('hello', 'world') STATISTICS'","startColumn":45,"startLine":1,"endColumn":55,"endLine":1}]},{"query":"CREATE TABLE tab (col IPv4 STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col IPv4 STATISTICS'","startColumn":27,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE tab (col Nullable(UInt8) STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Nullable(UInt8) STATISTICS'","startColumn":38,"startLine":1,"endColumn":48,"endLine":1}]},{"query":"CREATE TABLE tab (col LowCardinality(UInt8) STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col LowCardinality(UInt8) STATISTICS'","startColumn":44,"startLine":1,"endColumn":54,"endLine":1}]},{"query":"CREATE TABLE tab (col LowCardinality(Nullable(UInt8)) STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col LowCardinality(Nullable(UInt8)) STATISTICS'","startColumn":54,"startLine":1,"endColumn":64,"endLine":1}]},{"query":"CREATE TABLE tab (col String STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS } CREATE TABLE tab (col FixedString(1) STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col Array(Float64) STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col Tuple(Float64, Float64) STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col Map(UInt64, UInt64) STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col UUID STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col IPv6 STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col UInt8 STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col String STATISTICS'","startColumn":29,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE tab (col UInt256 STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col UInt256 STATISTICS'","startColumn":30,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE tab (col Float32 STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Float32 STATISTICS'","startColumn":30,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE tab (col Decimal32(3) STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Decimal32(3) STATISTICS'","startColumn":35,"startLine":1,"endColumn":45,"endLine":1}]},{"query":"CREATE TABLE tab (col Date STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Date STATISTICS'","startColumn":27,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE tab (col Date32 STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Date32 STATISTICS'","startColumn":29,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE tab (col DateTime STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col DateTime STATISTICS'","startColumn":31,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"CREATE TABLE tab (col DateTime64 STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col DateTime64 STATISTICS'","startColumn":33,"startLine":1,"endColumn":43,"endLine":1}]},{"query":"CREATE TABLE tab (col Enum('hello', 'world') STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Enum('hello', 'world') STATISTICS'","startColumn":45,"startLine":1,"endColumn":55,"endLine":1}]},{"query":"CREATE TABLE tab (col IPv4 STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col IPv4 STATISTICS'","startColumn":27,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE tab (col Nullable(UInt8) STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Nullable(UInt8) STATISTICS'","startColumn":38,"startLine":1,"endColumn":48,"endLine":1}]},{"query":"CREATE TABLE tab (col LowCardinality(UInt8) STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col LowCardinality(UInt8) STATISTICS'","startColumn":44,"startLine":1,"endColumn":54,"endLine":1}]},{"query":"CREATE TABLE tab (col LowCardinality(Nullable(UInt8)) STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col LowCardinality(Nullable(UInt8)) STATISTICS'","startColumn":54,"startLine":1,"endColumn":64,"endLine":1}]},{"query":"CREATE TABLE tab (col String STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col String STATISTICS'","startColumn":29,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE tab (col FixedString(1) STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col FixedString(1) STATISTICS'","startColumn":37,"startLine":1,"endColumn":47,"endLine":1}]},{"query":"CREATE TABLE tab (col Array(Float64) STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS } CREATE TABLE tab (col Tuple(Float64, Float64) STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col Map(UInt64, UInt64) STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col UUID STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col IPv6 STATISTICS(uniq)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col UInt8 STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Array(Float64) STATISTICS'","startColumn":37,"startLine":1,"endColumn":47,"endLine":1}]},{"query":"CREATE TABLE tab (col UInt256 STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col UInt256 STATISTICS'","startColumn":30,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE tab (col Float32 STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Float32 STATISTICS'","startColumn":30,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE tab (col Decimal32(3) STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Decimal32(3) STATISTICS'","startColumn":35,"startLine":1,"endColumn":45,"endLine":1}]},{"query":"CREATE TABLE tab (col Date STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Date STATISTICS'","startColumn":27,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE tab (col Date32 STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Date32 STATISTICS'","startColumn":29,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE tab (col DateTime STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col DateTime STATISTICS'","startColumn":31,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"CREATE TABLE tab (col DateTime64 STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col DateTime64 STATISTICS'","startColumn":33,"startLine":1,"endColumn":43,"endLine":1}]},{"query":"CREATE TABLE tab (col Enum('hello', 'world') STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Enum('hello', 'world') STATISTICS'","startColumn":45,"startLine":1,"endColumn":55,"endLine":1}]},{"query":"CREATE TABLE tab (col IPv4 STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col IPv4 STATISTICS'","startColumn":27,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE tab (col Nullable(UInt8) STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Nullable(UInt8) STATISTICS'","startColumn":38,"startLine":1,"endColumn":48,"endLine":1}]},{"query":"CREATE TABLE tab (col LowCardinality(UInt8) STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col LowCardinality(UInt8) STATISTICS'","startColumn":44,"startLine":1,"endColumn":54,"endLine":1}]},{"query":"CREATE TABLE tab (col LowCardinality(Nullable(UInt8)) STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col LowCardinality(Nullable(UInt8)) STATISTICS'","startColumn":54,"startLine":1,"endColumn":64,"endLine":1}]},{"query":"CREATE TABLE tab (col String STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col String STATISTICS'","startColumn":29,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE tab (col FixedString(1) STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col FixedString(1) STATISTICS'","startColumn":37,"startLine":1,"endColumn":47,"endLine":1}]},{"query":"CREATE TABLE tab (col Array(Float64) STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS } CREATE TABLE tab (col Tuple(Float64, Float64) STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col Map(UInt64, UInt64) STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col UUID STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col IPv6 STATISTICS(countmin)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col UInt8 STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Array(Float64) STATISTICS'","startColumn":37,"startLine":1,"endColumn":47,"endLine":1}]},{"query":"CREATE TABLE tab (col UInt256 STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col UInt256 STATISTICS'","startColumn":30,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE tab (col Float32 STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Float32 STATISTICS'","startColumn":30,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE tab (col Decimal32(3) STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Decimal32(3) STATISTICS'","startColumn":35,"startLine":1,"endColumn":45,"endLine":1}]},{"query":"CREATE TABLE tab (col Date STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Date STATISTICS'","startColumn":27,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE tab (col Date32 STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Date32 STATISTICS'","startColumn":29,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE tab (col DateTime STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col DateTime STATISTICS'","startColumn":31,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"CREATE TABLE tab (col DateTime64 STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col DateTime64 STATISTICS'","startColumn":33,"startLine":1,"endColumn":43,"endLine":1}]},{"query":"CREATE TABLE tab (col Enum('hello', 'world') STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Enum('hello', 'world') STATISTICS'","startColumn":45,"startLine":1,"endColumn":55,"endLine":1}]},{"query":"CREATE TABLE tab (col IPv4 STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col IPv4 STATISTICS'","startColumn":27,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE tab (col Nullable(UInt8) STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col Nullable(UInt8) STATISTICS'","startColumn":38,"startLine":1,"endColumn":48,"endLine":1}]},{"query":"CREATE TABLE tab (col LowCardinality(UInt8) STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col LowCardinality(UInt8) STATISTICS'","startColumn":44,"startLine":1,"endColumn":54,"endLine":1}]},{"query":"CREATE TABLE tab (col LowCardinality(Nullable(UInt8)) STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); DROP TABLE tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col LowCardinality(Nullable(UInt8)) STATISTICS'","startColumn":54,"startLine":1,"endColumn":64,"endLine":1}]},{"query":"CREATE TABLE tab (col String STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS } CREATE TABLE tab (col FixedString(1) STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col Array(Float64) STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col Tuple(Float64, Float64) STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col Map(UInt64, UInt64) STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col UUID STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab (col IPv6 STATISTICS(minmax)) Engine = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_STATISTICS }\nCREATE TABLE tab\n(\nf64           Float64,\nf64_tdigest   Float64 STATISTICS(tdigest),\nf32           Float32,\ns             String,\na             Array(Float64)\n)\nEngine = MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (col String STATISTICS'","startColumn":29,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE tab (\na LowCardinality(Int64) STATISTICS(countmin, minmax, tdigest, uniq),\nb LowCardinality(Nullable(String)) STATISTICS(countmin, uniq),\nc LowCardinality(Nullable(Int64)) STATISTICS(countmin, minmax, tdigest, uniq),\nd DateTime STATISTICS(countmin, minmax, tdigest, uniq),\npk String,\n) Engine = MergeTree() ORDER BY pk;","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_create_materialize_drop.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\na LowCardinality(Int64) STATISTICS'","startColumn":24,"startLine":2,"endColumn":34,"endLine":2}]},{"query":"CREATE TABLE bug_67742 (a Float64 STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_bugs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE bug_67742 (a Float64 STATISTICS'","startColumn":34,"startLine":1,"endColumn":44,"endLine":1}]},{"query":"CREATE TABLE bug_67742 (a Int32 STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_bugs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE bug_67742 (a Int32 STATISTICS'","startColumn":32,"startLine":1,"endColumn":42,"endLine":1}]},{"query":"CREATE TABLE bug_67742 (a Int32 STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_bugs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE bug_67742 (a Int32 STATISTICS'","startColumn":32,"startLine":1,"endColumn":42,"endLine":1}]},{"query":"CREATE TABLE bug_67742 (a Int16 STATISTICS(tdigest)) Engine = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02864_statistics_bugs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE bug_67742 (a Int16 STATISTICS'","startColumn":32,"startLine":1,"endColumn":42,"endLine":1}]},{"query":"CREATE TABLE random_mt (\nkey UInt64,\nvalue String\n)\nENGINE MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02864_profile_event_part_lock.sql","errors":[]},{"query":"CREATE TABLE Dates (date DateTime('UTC')) ENGINE = MergeTree() ORDER BY date;","fileName":"../ClickHouse/tests/queries/0_stateless/02863_non_const_timezone_check.sql","errors":[]},{"query":"create table tab (x UInt32, y UInt32) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02863_mutation_where_in_set_result_cache_pipeline_stuck_bug.sql","errors":[]},{"query":"CREATE TABLE tab (i UInt32, a UInt32) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02863_interpolate_subquery.sql","errors":[]},{"query":"create table parent (id int, primary key(id)) engine MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/02863_ignore_foreign_keys_in_tables_definition.sql","errors":[]},{"query":"create table child  (id int, pid int, primary key(id), foreign key(pid)) engine MergeTree; -- { clientError SYNTAX_ERROR } create table child  (id int, pid int, primary key(id), foreign key(pid) references) engine MergeTree; -- { clientError SYNTAX_ERROR }\ncreate table child  (id int, pid int, primary key(id), foreign key(pid) references parent(pid)) engine MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/02863_ignore_foreign_keys_in_tables_definition.sql","errors":[{"message":"no viable alternative at input 'create table child  (id int, pid int, primary key(id), foreign key(pid) references'","startColumn":72,"startLine":2,"endColumn":82,"endLine":2}]},{"query":"create table child2 (id int, pid int, primary key(id),  foreign key(pid) references parent(pid) on delete) engine MergeTree; -- { clientError SYNTAX_ERROR }\ncreate table child2 (id int, pid int, primary key(id), \nforeign key(pid) references parent(pid) on delete cascade) engine MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/02863_ignore_foreign_keys_in_tables_definition.sql","errors":[{"message":"no viable alternative at input 'create table child2 (id int, pid int, primary key(id),  foreign key(pid) references'","startColumn":73,"startLine":1,"endColumn":83,"endLine":1}]},{"query":"create table child3 (id int, pid int, primary key(id),  foreign key(pid) references parent(pid) on delete cascade on update restrict) engine MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/02863_ignore_foreign_keys_in_tables_definition.sql","errors":[{"message":"no viable alternative at input 'create table child3 (id int, pid int, primary key(id),  foreign key(pid) references'","startColumn":73,"startLine":1,"endColumn":83,"endLine":1}]},{"query":"CREATE TABLE 02863_delayed_source(a Int64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/02863_delayed_source/{replica}', 'r1') ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02863_delayed_source_with_totals_and_extremes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02863'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t_uuid (x UUID) ENGINE=MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02862_uuid_reinterpret_as_numeric.sql","errors":[]},{"query":"CREATE TABLE t_sparse_distinct (id UInt32, v String) ENGINE = MergeTree\nORDER BY id\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02862_sorted_distinct_sparse_fix.sql","errors":[]},{"query":"CREATE TABLE t_uuid (x UUID) ENGINE=MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02861_uuid_format_serialization.sql","errors":[]},{"query":"CREATE TABLE test (uid String, version UInt32, is_deleted UInt8) ENGINE = ReplacingMergeTree(version, is_deleted) Order by (uid) SETTINGS vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 0,\nmin_rows_for_wide_part = 1,\nmin_bytes_for_wide_part = 1,\nallow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02861_replacing_merge_tree_with_cleanup.sql","errors":[]},{"query":"CREATE TABLE 02861_interpolate (date Date, id String, f Int16) ENGINE=MergeTree() ORDER BY (date);","fileName":"../ClickHouse/tests/queries/0_stateless/02861_interpolate_alias_precedence.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02861'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE set_index__fuzz_41 (\\`a\\` Date, \\`b\\` Nullable(DateTime64(3)), INDEX b_set b TYPE set(0) GRANULARITY 1) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02861_index_set_incorrect_args.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE set_index__fuzz_41 (\\'","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"CREATE TABLE t1 (key UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02861_filter_pushdown_const_bug.sql","errors":[]},{"query":"create table data (key Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02860_distributed_flush_on_detach.sql","errors":[]},{"query":"create table dist (key Int) engine=Distributed(test_shard_localhost, currentDatabase(), data);","fileName":"../ClickHouse/tests/queries/0_stateless/02860_distributed_flush_on_detach.sql","errors":[]},{"query":"create table dist (key Int) engine=Distributed(test_shard_localhost, currentDatabase(), data) settings flush_on_detach=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02860_distributed_flush_on_detach.sql","errors":[]},{"query":"CREATE TABLE  02845_prewhere  ( e String, c String, q String ) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02845_prewhere_preserve_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE  02845'","startColumn":14,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE t1 ( id UInt32, attr UInt32 ) ENGINE = MergeTree ORDER BY id SETTINGS ratio_of_defaults_for_sparse_serialization = 0.1;","fileName":"../ClickHouse/tests/queries/0_stateless/02845_join_on_cond_sparse.sql","errors":[]},{"query":"CREATE TABLE t2 ( id UInt32, attr UInt32 ) ENGINE = MergeTree ORDER BY id SETTINGS ratio_of_defaults_for_sparse_serialization = 0.1;","fileName":"../ClickHouse/tests/queries/0_stateless/02845_join_on_cond_sparse.sql","errors":[]},{"query":"create table test (x UInt64) engine=File(JSON);","fileName":"../ClickHouse/tests/queries/0_stateless/02845_group_by_constant_keys.sql","errors":[]},{"query":"create table t02845 (a Array(UInt8), s Int16, d UInt8) engine = MergeTree order by d;","fileName":"../ClickHouse/tests/queries/0_stateless/02845_arrayShiftRotate.sql","errors":[]},{"query":"CREATE TABLE t (key UInt64, value UInt64, INDEX value_idx value TYPE bloom_filter GRANULARITY 1) ENGINE=MergeTree() ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02844_subquery_timeout_with_break.sql","errors":[]},{"query":"create table data_01072 (key Int) Engine=MergeTree() ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02844_distributed_virtual_columns.sql","errors":[]},{"query":"create table dist_01072 (key Int) Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01072, key);","fileName":"../ClickHouse/tests/queries/0_stateless/02844_distributed_virtual_columns.sql","errors":[]},{"query":"CREATE TABLE 02843_source (\nid UInt64,\nvalue String\n)\nENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02843_context_has_expired.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02843'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02843_dict (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02843_source'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02843_context_has_expired.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02843'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 02843_join (id UInt8, value String) ENGINE Join(ANY, LEFT, id);","fileName":"../ClickHouse/tests/queries/0_stateless/02843_context_has_expired.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02843'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table data ( key Int,\n\\`legacy_features_Map.id\\` Array(UInt8),\n\\`legacy_features_Map.count\\` Array(UInt32),\n) engine=MergeTree()\norder by key\nsettings\nmin_bytes_for_wide_part=0,\nmin_rows_for_wide_part=0,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_vertical_merge_after_add_drop_column.sql","errors":[{"message":"no viable alternative at input 'create table data ( key Int,\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE DATABASE test_truncate_database;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE test_truncate_database;'","startColumn":38,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE source_table_memory (x UInt16) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE TABLE source_table_log (x UInt16) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE TABLE source_table_tiny_log (x UInt16) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE TABLE source_table_stripe_log (x UInt16) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE TABLE source_table_merge_tree (x UInt16) ENGINE = MergeTree ORDER BY x PARTITION BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE TABLE source_table_dictionary (\nid UInt64,\nvalue String\n) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE VIEW dest_view_memory (x UInt64) AS SELECT * FROM source_table_memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE VIEW dest_view_log (x UInt64) AS SELECT * FROM source_table_log;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE VIEW dest_view_tiny_log (x UInt64) AS SELECT * FROM source_table_tiny_log;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE VIEW dest_view_stripe_log (x UInt64) AS SELECT * FROM source_table_stripe_log;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE VIEW dest_view_merge_tree (x UInt64) AS SELECT * FROM source_table_merge_tree;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE DICTIONARY dest_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() DB 'test_truncate_database' TABLE 'source_table_dictionary'))\nLAYOUT(FLAT())\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE TABLE new_table (x UInt16) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_truncate_database.sql","errors":[]},{"query":"CREATE TABLE t_mutations_nondeterministic (id UInt64, v UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/02842_mutations_replace', '1')\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_mutations_replace_non_deterministic.sql","errors":[]},{"query":"CREATE TABLE t_mutations_nondeterministic (id UInt64, v Array(UInt64)) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/02842_mutations_replace', '1')\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_mutations_replace_non_deterministic.sql","errors":[]},{"query":"CREATE TABLE t_mutations_nondeterministic (id UInt64, v AggregateFunction(uniqExact, UInt64)) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/02842_mutations_replace', '1')\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_mutations_replace_non_deterministic.sql","errors":[]},{"query":"CREATE TABLE t_mutations_nondeterministic (id UInt64, v DateTime) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/02842_mutations_replace', '1')\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_mutations_replace_non_deterministic.sql","errors":[]},{"query":"CREATE TABLE t_mutations_nondeterministic (id UInt64, v UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/02842_mutations_replace', '1') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_mutations_replace_non_deterministic.sql","errors":[]},{"query":"CREATE TABLE t_mutations_nondeterministic (id UInt64, v UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/02842_mutations_replace', '1')\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_mutations_replace_non_deterministic.sql","errors":[]},{"query":"CREATE TABLE t_mutations_nondeterministic (id UInt64, d DateTime) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/02842_mutations_replace', '1')\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_mutations_replace_non_deterministic.sql","errors":[]},{"query":"CREATE TABLE t_02848_mt1 (k UInt32, v String) ENGINE = MergeTree ORDER BY k SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_move_pk_to_end_of_prewhere.sql","errors":[]},{"query":"CREATE TABLE t_02848_mt2 (a UInt32, b String, c Int32, d String) ENGINE = MergeTree ORDER BY (a,b,c) SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_move_pk_to_end_of_prewhere.sql","errors":[]},{"query":"CREATE TABLE largestTriangleThreeBucketsTestFloat64Float64 (\nx Float64,\ny Float64\n) ENGINE = MergeTree order by (y,x);","fileName":"../ClickHouse/tests/queries/0_stateless/02842_largestTriangleThreeBuckets_aggregate_function.sql","errors":[]},{"query":"CREATE TABLE largestTriangleThreeBucketsTestDecimal64Decimal64 (\nx Decimal64(2),\ny Decimal64(2)\n) ENGINE = MergeTree order by (y,x);","fileName":"../ClickHouse/tests/queries/0_stateless/02842_largestTriangleThreeBuckets_aggregate_function.sql","errors":[]},{"query":"create table largestTriangleThreeBucketsTestDateTime64Float64 (x DateTime64(3), y Float64) engine = MergeTree order by (y,x);","fileName":"../ClickHouse/tests/queries/0_stateless/02842_largestTriangleThreeBuckets_aggregate_function.sql","errors":[]},{"query":"CREATE TABLE largestTriangleTreeBucketsBucketSizeTest (\nx UInt32,\ny UInt32\n) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02842_largestTriangleThreeBuckets_aggregate_function.sql","errors":[]},{"query":"CREATE TABLE test (a Int32) ENGINE = MergeTree()\nORDER BY tuple()\nSETTINGS disk = disk(type = cache,\nmax_size = '1Mi',\npath = '/kek',\ndisk = 'local_disk'); -- {serverError BAD_ARGUMENTS}\nCREATE TABLE test (a Int32)\nENGINE = MergeTree()\nORDER BY tuple()\nSETTINGS disk = disk(type = cache,\nmax_size = '1Mi',\npath = '/var/lib/clickhouse/filesystem_caches/../kek',\ndisk = 'local_disk'); -- {serverError BAD_ARGUMENTS}\nCREATE TABLE test (a Int32)\nENGINE = MergeTree()\nORDER BY tuple()\nSETTINGS disk = disk(type = cache,\nmax_size = '1Mi',\npath = '../kek',\ndisk = 'local_disk'); -- {serverError BAD_ARGUMENTS}\nCREATE TABLE test_1 (a Int32)\nENGINE = MergeTree()\nORDER BY tuple()\nSETTINGS disk = disk(type = cache,\nmax_size = '1Mi',\npath = '/var/lib/clickhouse/filesystem_caches/kek',\ndisk = 'local_disk');","fileName":"../ClickHouse/tests/queries/0_stateless/02842_filesystem_cache_validate_path.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (a Int32) ENGINE = MergeTree()\\nORDER BY tuple()\\nSETTINGS disk = disk'","startColumn":16,"startLine":3,"endColumn":20,"endLine":3}]},{"query":"CREATE TABLE test_2 (a Int32) ENGINE = MergeTree()\nORDER BY tuple()\nSETTINGS disk = disk(type = cache,\nmax_size = '1Mi',\npath = 'kek2',\ndisk = 'local_disk');","fileName":"../ClickHouse/tests/queries/0_stateless/02842_filesystem_cache_validate_path.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_2 (a Int32) ENGINE = MergeTree()\\nORDER BY tuple()\\nSETTINGS disk = disk'","startColumn":16,"startLine":3,"endColumn":20,"endLine":3}]},{"query":"create table tab2 (id String, version Int64, l String, accountCode String, z Int32) engine = ReplacingMergeTree(z) PRIMARY KEY (accountCode, id) ORDER BY (accountCode, id, version, l);","fileName":"../ClickHouse/tests/queries/0_stateless/02841_parallel_final_wrong_columns_order.sql","errors":[]},{"query":"CREATE TABLE t1 ( \\`id\\` UInt64\n)\nENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02841_not_ready_set_constraints.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 ( \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE t2 ( \\`conversation\\` UInt64,\nCONSTRAINT constraint_conversation CHECK conversation IN (SELECT id FROM t1)\n)\nENGINE = MergeTree ORDER BY conversation;","fileName":"../ClickHouse/tests/queries/0_stateless/02841_not_ready_set_constraints.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 ( \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE t2 ( \\`conversation\\` UInt64,\nCONSTRAINT constraint_conversation CHECK conversation IN (SELECT id FROM t1)\n)\nENGINE = MergeTree ORDER BY conversation;","fileName":"../ClickHouse/tests/queries/0_stateless/02841_not_ready_set_constraints.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 ( \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE t1 (s String) ENGINE = MergeTree ORDER BY s SETTINGS ratio_of_defaults_for_sparse_serialization = 0.5;","fileName":"../ClickHouse/tests/queries/0_stateless/02841_join_filter_set_sparse.sql","errors":[]},{"query":"CREATE TABLE t2 (s String) ENGINE = MergeTree ORDER BY s SETTINGS ratio_of_defaults_for_sparse_serialization = 0.5;","fileName":"../ClickHouse/tests/queries/0_stateless/02841_join_filter_set_sparse.sql","errors":[]},{"query":"CREATE TABLE test (a Array(UInt64)) engine=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02841_group_array_sorted.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test (id Int32, data Tuple(Int32, Int32)) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02841_group_array_sorted.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test (id Int32, data Decimal32(2)) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02841_group_array_sorted.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test (id Int32, data FixedString(3)) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02841_group_array_sorted.sql","errors":[]},{"query":"CREATE TABLE test (id Decimal(76, 53), str String) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02841_group_array_sorted.sql","errors":[]},{"query":"CREATE TABLE test (id UInt64, agg AggregateFunction(groupArraySorted(2), UInt64)) engine=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02841_group_array_sorted.sql","errors":[]},{"query":"CREATE TABLE t1__fuzz_17 (\\`a\\` LowCardinality(UInt8), \\`b\\` Nullable(UInt256)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02840_grace_hash_join_structure_mismatch.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1__fuzz_17 (\\'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE t2__fuzz_0 (\\`c\\` UInt32, \\`d\\` String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02840_grace_hash_join_structure_mismatch.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2__fuzz_0 (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE test (id UInt64, date Date) ENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02835_parallel_replicas_over_distributed.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_d as test ENGINE = Distributed(test_cluster_one_shard_three_replicas_localhost, currentDatabase(), test);","fileName":"../ClickHouse/tests/queries/0_stateless/02835_parallel_replicas_over_distributed.sql","errors":[]},{"query":"CREATE TABLE test2 (id UInt64, date Date) ENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02835_parallel_replicas_over_distributed.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test2_d as test2 ENGINE = Distributed(test_cluster_two_shard_three_replicas_localhost, currentDatabase(), test2, id);","fileName":"../ClickHouse/tests/queries/0_stateless/02835_parallel_replicas_over_distributed.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS cool_table (\nid UInt64,\nn Nested(n UInt64, lc1 LowCardinality(String))\n)\nENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02835_nested_array_lowcardinality.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS cool_table (\nid UInt64,\nn Nested(n UInt64, lc1 Array(LowCardinality(String)))\n)\nENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02835_nested_array_lowcardinality.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS cool_table (\nid UInt64,\nn Nested(n UInt64, lc1 Map(LowCardinality(String), UInt64))\n)\nENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02835_nested_array_lowcardinality.sql","errors":[]},{"query":"CREATE TABLE test_table_1 (\nid UInt64,\nvalue_1 String,\nvalue_2 UInt64\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02835_join_step_explain.sql","errors":[]},{"query":"CREATE TABLE test_table_2 (\nid UInt64,\nvalue_1 String,\nvalue_2 UInt64\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02835_join_step_explain.sql","errors":[]},{"query":"CREATE TABLE numbers500k (\\`number\\` UInt32) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02835_fuzz_remove_redundant_sorting.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE numbers500k (\\'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE t_sparse_sort_limit (date Date, i UInt64, v Int16) ENGINE = MergeTree ORDER BY (date, i)\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02834_sparse_columns_sort_with_limit.sql","errors":[]},{"query":"CREATE TABLE nulls_first_sort_test (a Nullable(Int32), b Nullable(Int32), c Nullable(Int32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02834_nulls_first_sort.sql","errors":[]},{"query":"CREATE TABLE 02834_t (id UInt64, arr Array(UInt64)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02834_array_exists_segfault.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02834'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE alter_02834 (a UInt64) ENGINE=MergeTree() ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02834_alter_exception.sql","errors":[]},{"query":"CREATE TABLE t_02833 (tup Tuple(a UInt64, b UInt64)) ENGINE=Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02833_tuple_concat.sql","errors":[]},{"query":"CREATE TABLE series(i UInt32, x Float64, y Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02833_std_alias.sql","errors":[]},{"query":"create table t_tuple_sparse (a UInt64, b UInt64) ENGINE = MergeTree ORDER BY tuple()\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.0;","fileName":"../ClickHouse/tests/queries/0_stateless/02833_sparse_columns_tuple_function.sql","errors":[]},{"query":"create table t_multi_prewhere (a UInt64, b UInt64, c UInt8) engine = MergeTree order by tuple()\nsettings min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02833_multiprewhere_extra_column.sql","errors":[]},{"query":"create row policy policy_02834 on t_multi_prewhere using a > 2000 as permissive to all;","fileName":"../ClickHouse/tests/queries/0_stateless/02833_multiprewhere_extra_column.sql","errors":[{"message":"no viable alternative at input 'create row'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"create table test_array_joins (\nid UInt64 default rowNumberInAllBlocks() + 1,\narr_1 Array(String),\narr_2 Array(String),\narr_3 Array(String),\narr_4 Array(String)\n) engine = MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02833_array_join_columns.sql","errors":[]},{"query":"create view v4test_array_joins as SELECT * from test_array_joins where id != 10;","fileName":"../ClickHouse/tests/queries/0_stateless/02833_array_join_columns.sql","errors":[]},{"query":"create table t_delete_skip_index (x UInt32, y String, index i y type minmax granularity 3) engine = MergeTree order by tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02832_alter_delete_indexes_projections.sql","errors":[]},{"query":"create table t_delete_projection (x UInt32, y UInt64, projection p (select sum(y))) engine = MergeTree order by tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02832_alter_delete_indexes_projections.sql","errors":[]},{"query":"CREATE TABLE t1 (\nc1 DateTime DEFAULT now() NOT NULL,\nc2 DateTime DEFAULT now() NOT NULL,\nc3 DateTime DEFAULT now() NOT NULL,\nPRIMARY KEY(c1, c2, c3)\n) ENGINE = MergeTree()\nORDER BY (c1, c2, c3);","fileName":"../ClickHouse/tests/queries/0_stateless/02830_insert_values_time_interval.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\nc1 DateTime DEFAULT now() NOT NULL'","startColumn":30,"startLine":2,"endColumn":34,"endLine":2}]},{"query":"CREATE TABLE t1 (n int, dt DateTime) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02830_insert_values_time_interval.sql","errors":[]},{"query":"create table t1 as remote('localhost', 'system.one');","fileName":"../ClickHouse/tests/queries/0_stateless/02828_create_as_table_function_rename.sql","errors":[]},{"query":"create view test_param_view as with {param_test_val:UInt8} as param_test_val\nselect param_test_val,\narrayCount((a)->(a < param_test_val), t.arr) as cnt1\nfrom (select [1,2,3,4,5] as arr) t;","fileName":"../ClickHouse/tests/queries/0_stateless/02818_parameterized_view_with_cte_multiple_usage.sql","errors":[{"message":"no viable alternative at input 'create view test_param_view as with {'","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"create view test_param_view2 as with {param_test_val:UInt8} as param_test_val\nselect param_test_val,\narrayCount((a)->(a < param_test_val), t.arr) as cnt1,\narrayCount((a)->(a < param_test_val+1), t.arr) as cnt2\nfrom (select [1,2,3,4,5] as arr) t;","fileName":"../ClickHouse/tests/queries/0_stateless/02818_parameterized_view_with_cte_multiple_usage.sql","errors":[{"message":"no viable alternative at input 'create view test_param_view2 as with {'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table kek (uuid FixedString(16), id int, ns String, dt DateTime64(6), projection null_pk (select * order by ns, 1, 4)) engine=MergeTree order by (id, dt, uuid); -- {serverError ILLEGAL_COLUMN } ","fileName":"../ClickHouse/tests/queries/0_stateless/02816_check_projection_metadata.sql","errors":[]},{"query":"CREATE TABLE discounts (\nadvertiser_id UInt64,\ndiscount_start_date Date,\ndiscount_end_date Nullable(Date),\namount Float64\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02815_range_dict_no_direct_join.sql","errors":[]},{"query":"CREATE DICTIONARY discounts_dict (\nadvertiser_id UInt64,\ndiscount_start_date Date,\ndiscount_end_date Nullable(Date),\namount Float64\n)\nPRIMARY KEY advertiser_id\nSOURCE(CLICKHOUSE(TABLE discounts))\nLIFETIME(MIN 600 MAX 900)\nLAYOUT(RANGE_HASHED(RANGE_LOOKUP_STRATEGY 'max'))\nRANGE(MIN discount_start_date MAX discount_end_date);","fileName":"../ClickHouse/tests/queries/0_stateless/02815_range_dict_no_direct_join.sql","errors":[]},{"query":"CREATE TABLE ids (id UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02815_range_dict_no_direct_join.sql","errors":[]},{"query":"CREATE TABLE rdb ( \\`key\\` UInt32, \\`value\\` String ) ENGINE = EmbeddedRocksDB PRIMARY KEY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02815_join_algorithm_setting.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE rdb ( \\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE t2 ( \\`k\\` UInt16 ) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02815_join_algorithm_setting.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 ( \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE src (id UInt64, s String) ENGINE = MergeTree ORDER BY id AS SELECT number, toString(number) FROM numbers(1000000);","fileName":"../ClickHouse/tests/queries/0_stateless/02815_join_algorithm_setting.sql","errors":[]},{"query":"CREATE DICTIONARY dict( id UInt64,\ns  String\n) PRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'src' DB currentDatabase()))\nLIFETIME (MIN 0 MAX 0)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/02815_join_algorithm_setting.sql","errors":[]},{"query":"CREATE TABLE t0 (vkey UInt32, c0 Float32, primary key(c0)) engine = AggregatingMergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/02815_fix_not_found_constants_col_in_block.sql","errors":[]},{"query":"create table 02815_first_line_vector (n Int32, text String) engine = MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/02815_first_line.sql","errors":[{"message":"no viable alternative at input 'create table 02815'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE null_table (number UInt64) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/02814_currentDatabase_for_table_functions.sql","errors":[]},{"query":"CREATE VIEW number_view as SELECT * FROM numbers(10) as tb;","fileName":"../ClickHouse/tests/queries/0_stateless/02814_currentDatabase_for_table_functions.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW null_mv Engine = Log AS SELECT * FROM null_table LEFT JOIN number_view as tb USING number;","fileName":"../ClickHouse/tests/queries/0_stateless/02814_currentDatabase_for_table_functions.sql","errors":[]},{"query":"CREATE TABLE null_table_buffer (number UInt64) ENGINE = Buffer(currentDatabase(), null_table, 1, 1, 1, 100, 200, 10000, 20000);","fileName":"../ClickHouse/tests/queries/0_stateless/02814_currentDatabase_for_table_functions.sql","errors":[]},{"query":"CREATE UNIQUE INDEX idx_tab2_0 ON tab2 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02814_create_index_uniq_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE UNIQUE'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE TABLE t (\n\\`account_id\\` UInt64,\n\\`_is_deleted\\` UInt8,\n\\`_version\\` UInt64\n)\nENGINE = ReplacingMergeTree(_version, _is_deleted)\nORDER BY (account_id);","fileName":"../ClickHouse/tests/queries/0_stateless/02814_ReplacingMergeTree_fix_select_final_on_single_partition.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE tb1 (n UInt32, a Array(Int32)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02813_series_period_detect.sql","errors":[]},{"query":"CREATE TABLE tb1 (n UInt32, a Array(Float64)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02813_seriesOutliersDetectTukey.sql","errors":[]},{"query":"CREATE TABLE tb2 (\\`period\\` UInt32, \\`ts\\` Array(Float64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02813_seriesDecomposeSTL.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tb2 (\\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE INDEX idx_tab1_0 on tab1 (col0); -- { serverError INCORRECT_QUERY } SET allow_create_index_without_type=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab1_0 on tab1 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab1_1 on tab1 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab1_3 on tab1 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab1_4 on tab1 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0 DESC,col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0,col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0,col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0,col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col0,col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1 DESC,col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1 DESC,col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1 DESC,col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1,col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1,col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1,col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1,col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3,col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3,col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3,col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4 DESC,col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4 DESC,col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4 DESC,col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4 DESC,col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4,col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4,col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4,col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4,col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_0 ON tab2 (col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0 DESC,col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0 DESC,col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0,col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0,col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0,col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1 DESC,col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1 DESC,col4 DESC,col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1,col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1,col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col1,col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3 DESC,col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3 DESC,col0 DESC,col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3 DESC,col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3,col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4 DESC,col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_1 ON tab2 (col4,col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0 DESC,col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0,col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0,col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0,col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC,col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC,col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC,col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC,col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1,col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3,col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4,col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4,col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_2 ON tab2 (col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col0 DESC,col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col0,col4 DESC,col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col0,col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1 DESC,col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1 DESC,col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1 DESC,col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3 DESC,col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3 DESC,col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3 DESC,col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3,col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col4 DESC,col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col4 DESC,col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col4 DESC,col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col4 DESC,col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_3 ON tab2 (col4,col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col0 DESC,col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4 DESC,col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4 DESC,col3,col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_4 ON tab2 (col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col0 DESC,col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col3 DESC,col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col4,col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab2_5 ON tab2 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0 DESC,col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0,col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0,col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0,col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1 DESC,col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1 DESC,col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1 DESC,col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1 DESC,col4,col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1,col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1,col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1,col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1,col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3 DESC,col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3 DESC,col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3,col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3,col1,col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC,col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC,col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4 DESC,col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4,col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4,col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_0 ON tab3 (col4,col3,col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0 DESC,col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0,col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0,col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1 DESC,col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1 DESC,col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1,col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1,col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col1,col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3 DESC,col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3 DESC,col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3,col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3,col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3,col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4 DESC,col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4 DESC,col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4,col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4,col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_1 ON tab3 (col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3 DESC,col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4 DESC,col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4 DESC,col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4 DESC,col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4 DESC,col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4,col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_2 ON tab3 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col0 DESC,col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col1,col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col3 DESC,col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col3 DESC,col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col3,col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col3,col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_3 ON tab3 (col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col1 DESC,col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col1 DESC,col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col1 DESC,col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col3 DESC,col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col3 DESC,col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col4 DESC,col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col4,col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col4,col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_4 ON tab3 (col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col0,col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col3 DESC,col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col3,col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col4 DESC,col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab3_5 ON tab3 (col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0 DESC,col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0,col1,col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0,col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0,col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col0,col4,col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC,col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC,col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC,col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1,col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1,col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1,col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col1,col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC,col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC,col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3,col0 DESC,col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3,col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3,col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col3,col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4 DESC,col0,col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4 DESC,col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4 DESC,col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4 DESC,col3 DESC,col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4,col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_0 ON tab4 (col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0 DESC,col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0,col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0,col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1 DESC,col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1,col3,col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1,col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col1,col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3 DESC,col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3,col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3,col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3,col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4 DESC,col0 DESC,col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4 DESC,col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4 DESC,col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4,col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4,col3 DESC,col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_1 ON tab4 (col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col0 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col0,col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1 DESC,col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1,col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1,col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col3 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4 DESC,col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4 DESC,col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4,col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4,col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_2 ON tab4 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col0,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col0,col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col1 DESC,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col3 DESC,col1,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col3,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col3,col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col3,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4 DESC,col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4 DESC,col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_3 ON tab4 (col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col0 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col0,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col0,col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col0,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col1,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col1,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col3 DESC,col4 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4 DESC,col3 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4 DESC,col3,col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4 DESC,col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_4 ON tab4 (col4,col3 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col0 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col0 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col0 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col0 DESC,col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col0 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col0 DESC,col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col0,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col0,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col0,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col1 DESC,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col1 DESC,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col1,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col1,col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col3 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col3 DESC,col1 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col3 DESC,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col3 DESC,col1,col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col3 DESC,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col3,col0);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col3,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col3,col1);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col3,col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col4 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col4 DESC,col1 DESC,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col4 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col4);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col4,col0 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col4,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col4,col1 DESC,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col4,col3 DESC,col1 DESC);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE INDEX idx_tab4_5 ON tab4 (col4,col3);","fileName":"../ClickHouse/tests/queries/0_stateless/02813_create_index_noop.sql","errors":[{"message":"no viable alternative at input 'CREATE INDEX'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"create table t (n UInt32, a Array(Int32)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02813_array_concat_agg.sql","errors":[]},{"query":"create table t (n Int32, s String) engine=MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/02813_array_agg.sql","errors":[]},{"query":"CREATE TABLE my_table (values Array(Int32)) ENGINE = MergeTree() ORDER BY values;","fileName":"../ClickHouse/tests/queries/0_stateless/02812_pointwise_array_operations.sql","errors":[]},{"query":"create table test_array_joins (\nid UInt64 default rowNumberInAllBlocks() + 1,\narr_1 Array(String),\narr_2 Array(String),\narr_3 Array(String),\narr_4 Array(String)\n) engine = MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02811_read_in_order_and_array_join_bug.sql","errors":[]},{"query":"create view v4test_array_joins as SELECT * from test_array_joins where id != 10;","fileName":"../ClickHouse/tests/queries/0_stateless/02811_read_in_order_and_array_join_bug.sql","errors":[]},{"query":"CREATE TABLE pk_test1 (a String PRIMARY KEY, b String, c String);","fileName":"../ClickHouse/tests/queries/0_stateless/02811_primary_key_in_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pk_test1 (a String PRIMARY'","startColumn":32,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE pk_test2 (a String PRIMARY KEY, b String PRIMARY KEY, c String);","fileName":"../ClickHouse/tests/queries/0_stateless/02811_primary_key_in_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pk_test2 (a String PRIMARY'","startColumn":32,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE pk_test3 (a String PRIMARY KEY, b String PRIMARY KEY, c String PRIMARY KEY);","fileName":"../ClickHouse/tests/queries/0_stateless/02811_primary_key_in_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pk_test3 (a String PRIMARY'","startColumn":32,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE pk_test4 (a String, b String PRIMARY KEY, c String PRIMARY KEY);","fileName":"../ClickHouse/tests/queries/0_stateless/02811_primary_key_in_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pk_test4 (a String, b String PRIMARY'","startColumn":42,"startLine":1,"endColumn":49,"endLine":1}]},{"query":"CREATE TABLE pk_test5 (a String, b String PRIMARY KEY, c String);","fileName":"../ClickHouse/tests/queries/0_stateless/02811_primary_key_in_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pk_test5 (a String, b String PRIMARY'","startColumn":42,"startLine":1,"endColumn":49,"endLine":1}]},{"query":"CREATE TABLE pk_test6 (a String, b String, c String PRIMARY KEY);","fileName":"../ClickHouse/tests/queries/0_stateless/02811_primary_key_in_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pk_test6 (a String, b String, c String PRIMARY'","startColumn":52,"startLine":1,"endColumn":59,"endLine":1}]},{"query":"CREATE TABLE pk_test7 (a String PRIMARY KEY, b String, c String, PRIMARY KEY (a)); -- { clientError BAD_ARGUMENTS } CREATE TABLE pk_test8 (a String PRIMARY KEY, b String PRIMARY KEY, c String, PRIMARY KEY (a)); -- { clientError BAD_ARGUMENTS }\nCREATE TABLE pk_test9 (a String PRIMARY KEY, b String PRIMARY KEY, c String PRIMARY KEY, PRIMARY KEY (a)); -- { clientError BAD_ARGUMENTS }\nCREATE TABLE pk_test10 (a String, b String PRIMARY KEY, c String PRIMARY KEY, PRIMARY KEY (a));  -- { clientError BAD_ARGUMENTS }\nCREATE TABLE pk_test11 (a String, b String PRIMARY KEY, c String, PRIMARY KEY (a)); -- { clientError BAD_ARGUMENTS }\nCREATE TABLE pk_test12 (a String, b String, c String PRIMARY KEY, PRIMARY KEY (a)); -- { clientError BAD_ARGUMENTS }\nCREATE TABLE pk_test12 (a String PRIMARY KEY, b String, c String) PRIMARY KEY (a,b,c); -- { clientError BAD_ARGUMENTS }\nCREATE TABLE pk_test13 (a String PRIMARY KEY, b String PRIMARY KEY, c String) PRIMARY KEY (a,b,c); -- { clientError BAD_ARGUMENTS }\nCREATE TABLE pk_test14 (a String PRIMARY KEY, b String PRIMARY KEY, c String PRIMARY KEY) PRIMARY KEY (a,b,c); -- { clientError BAD_ARGUMENTS }\nCREATE TABLE pk_test15 (a String, b String PRIMARY KEY, c String PRIMARY KEY) PRIMARY KEY (a,b,c); -- { clientError BAD_ARGUMENTS }\nCREATE TABLE pk_test16 (a String, b String PRIMARY KEY, c String) PRIMARY KEY (a,b,c); -- { clientError BAD_ARGUMENTS }\nCREATE TABLE pk_test17 (a String, b String, c String PRIMARY KEY) PRIMARY KEY (a,b,c); -- { clientError BAD_ARGUMENTS }\nCREATE TABLE pk_test18 (a String PRIMARY KEY, b String, c String) ORDER BY (a,b,c);","fileName":"../ClickHouse/tests/queries/0_stateless/02811_primary_key_in_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pk_test7 (a String PRIMARY'","startColumn":32,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE pk_test19 (a String PRIMARY KEY, b String PRIMARY KEY, c String) ORDER BY (a,b,c);","fileName":"../ClickHouse/tests/queries/0_stateless/02811_primary_key_in_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pk_test19 (a String PRIMARY'","startColumn":33,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE pk_test20 (a String PRIMARY KEY, b String PRIMARY KEY, c String PRIMARY KEY) ORDER BY (a,b,c);","fileName":"../ClickHouse/tests/queries/0_stateless/02811_primary_key_in_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pk_test20 (a String PRIMARY'","startColumn":33,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE pk_test21 (a String, b String PRIMARY KEY, c String PRIMARY KEY) ORDER BY (a,b,c); -- { serverError BAD_ARGUMENTS } CREATE TABLE pk_test22 (a String, b String PRIMARY KEY, c String) ORDER BY (a,b,c); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE pk_test23 (a String, b String, c String PRIMARY KEY) ORDER BY (a,b,c); -- { serverError BAD_ARGUMENTS }\nDROP TABLE IF EXISTS pk_test1;","fileName":"../ClickHouse/tests/queries/0_stateless/02811_primary_key_in_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pk_test21 (a String, b String PRIMARY'","startColumn":43,"startLine":1,"endColumn":50,"endLine":1}]},{"query":"CREATE TABLE users (uid Int16, name String, age Int16) ENGINE=MergeTree() ORDER BY uid;","fileName":"../ClickHouse/tests/queries/0_stateless/02811_parallel_replicas_prewhere_count.sql","errors":[]},{"query":"CREATE TABLE src ( id UInt64, ip4 IPv4, ip6 IPv6 ) Engine=Memory AS SELECT * FROM VALUES( (1, '1.1.1.1', '::1.1.1.1'), (2, '2.2.2.2', '::2.2.2.2') );","fileName":"../ClickHouse/tests/queries/0_stateless/02811_ip_dict_attribute.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE src ( id UInt64, ip4 IPv4, ip6 IPv6 ) Engine=Memory AS SELECT * FROM VALUES( ('","startColumn":90,"startLine":1,"endColumn":91,"endLine":1}]},{"query":"CREATE DICTIONARY dict ( id UInt64, ip4 IPv4, ip6 IPv6 ) PRIMARY KEY id\nLAYOUT(HASHED())\nSOURCE (CLICKHOUSE ( table src))\nlifetime ( 10);","fileName":"../ClickHouse/tests/queries/0_stateless/02811_ip_dict_attribute.sql","errors":[]},{"query":"CREATE TABLE dict (\\`k\\` String, \\`v\\` String) ENGINE = EmbeddedRocksDB(k) PRIMARY KEY k; -- {serverError BAD_ARGUMENTS} ","fileName":"../ClickHouse/tests/queries/0_stateless/02811_invalid_embedded_rocksdb_create.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dict (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"create table test (\nn1 UInt32,\nn2 UInt32 alias murmurHash3_32(n1),\nn3 UInt32 materialized n2 + 1\n)engine=MergeTree order by n1;","fileName":"../ClickHouse/tests/queries/0_stateless/02811_insert_schema_inference.sql","errors":[]},{"query":"create table tab (x UInt64, y UInt64) engine MergeTree() order by (x, y);","fileName":"../ClickHouse/tests/queries/0_stateless/02810_fix_remove_dedundant_distinct_view.sql","errors":[]},{"query":"create view tab_v as select distinct(x) from tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02810_fix_remove_dedundant_distinct_view.sql","errors":[]},{"query":"CREATE TABLE null_in__fuzz_6 (\\`dt\\` LowCardinality(UInt16), \\`idx\\` Int32, \\`i\\` Nullable(Int256), \\`s\\` Int32) ENGINE = MergeTree PARTITION BY dt ORDER BY idx;","fileName":"../ClickHouse/tests/queries/0_stateless/02809_storage_set_analysis_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_in__fuzz_6 (\\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE test_set (i Nullable(int)) ENGINE = Set();","fileName":"../ClickHouse/tests/queries/0_stateless/02809_storage_set_analysis_bug.sql","errors":[]},{"query":"CREATE TABLE t_02809(a Int64, b Int64, s String) ENGINE=MergeTree order by tuple()\nAS SELECT number, number%10, toString(arrayMap(i-> cityHash64(i*number), range(50))) FROM numbers(10000);","fileName":"../ClickHouse/tests/queries/0_stateless/02809_prewhere_and_in.sql","errors":[]},{"query":"CREATE TABLE t_02809_set(c Int64) ENGINE=Set()\nAS SELECT * FROM numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/02809_prewhere_and_in.sql","errors":[]},{"query":"CREATE TABLE t_02809_aux(c Int64) ENGINE=Memory()\nAS SELECT * FROM numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/02809_prewhere_and_in.sql","errors":[]},{"query":"CREATE TABLE t10 (\\`c0\\` Int32) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02807_math_unary_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t10 (\\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"create temporary table test ( data int,\ndefault Nullable(DateTime) DEFAULT '1977-01-01 00:00:00'\n) engine  = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02807_default_date_time_nullable.sql","errors":[]},{"query":"create temporary table test ( data int,\ndefault DateTime DEFAULT '1977-01-01 00:00:00'\n) engine  = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02807_default_date_time_nullable.sql","errors":[]},{"query":"create table dist as system.one engine=Distributed(test_shard_localhost, system, one);","fileName":"../ClickHouse/tests/queries/0_stateless/02805_distributed_queries_timeouts.sql","errors":[]},{"query":"create table data (key Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02804_clusterAllReplicas_insert.sql","errors":[]},{"query":"CREATE TABLE numbers_10_00223 ENGINE = Log AS\nSELECT *\nFROM system.numbers\nLIMIT 10000;","fileName":"../ClickHouse/tests/queries/0_stateless/02803_remote_cannot_clone_block.sql","errors":[]},{"query":"CREATE TABLE test_xy (\n\\`x\\` Int32,\n\\`y\\` String\n)\nENGINE = MergeTree\nORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02800_transform_alter.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_xy (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE updates (\n\\`x\\` Int32,\n\\`y\\` String\n)\nENGINE = MergeTree\nORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02800_transform_alter.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE updates (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t(a UInt64) ENGINE = MergeTree\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02798_explain_settings_not_applied_bug.sql","errors":[]},{"query":"create view v (s LowCardinality(String), n UInt8) as select 'test' as s, toUInt8(number) as n from numbers(10000000);","fileName":"../ClickHouse/tests/queries/0_stateless/02797_aggregator_huge_mem_usage_bug.sql","errors":[]},{"query":"CREATE TABLE fx_1m ( \\`symbol\\` LowCardinality(String) CODEC(ZSTD),\n\\`dt_close\\` DateTime64(3, 'UTC') CODEC(DoubleDelta, ZSTD),\n\\`open\\` Float32 CODEC(Delta, ZSTD),\n\\`high\\` Float32 CODEC(Delta, ZSTD),\n\\`low\\` Float32 CODEC(Delta, ZSTD),\n\\`close\\` Float32 CODEC(Delta, ZSTD),\n\\`volume\\` Float32 CODEC(Delta, ZSTD)\n)\nENGINE = MergeTree()\nPARTITION BY toYear(dt_close)\nORDER BY (symbol, dt_close) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02796_projection_date_filter_on_view.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE fx_1m ( \\'","startColumn":21,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"CREATE VIEW fx_5m AS SELECT\nsymbol,\ntoStartOfInterval(dt_close, INTERVAL 300 SECOND) AS dt_close,\nargMin(open, dt_close) open,\nmax(high) high,\nmin(low) low,\nargMax(close, dt_close) close,\nsum(volume) volume\nFROM fx_1m\nGROUP BY symbol, dt_close;","fileName":"../ClickHouse/tests/queries/0_stateless/02796_projection_date_filter_on_view.sql","errors":[{"message":"mismatched input 'volume' expecting <EOF>","startColumn":12,"startLine":8,"endColumn":18,"endLine":8}]},{"query":"CREATE TABLE t_projections_lwd (a UInt32, b UInt32, PROJECTION p (SELECT * ORDER BY b)) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02792_drop_projection_lwd.sql","errors":[]},{"query":"CREATE TABLE t (x UInt8) ENGINE = MergeTree ORDER BY () COMMENT 'Hello';","fileName":"../ClickHouse/tests/queries/0_stateless/02792_alter_table_modify_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (x UInt8) ENGINE = MergeTree ORDER BY ()'","startColumn":54,"startLine":1,"endColumn":55,"endLine":1}]},{"query":"CREATE TABLE t (x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_comment_table2/t', '1') ORDER BY () COMMENT 'Hello';","fileName":"../ClickHouse/tests/queries/0_stateless/02792_alter_table_modify_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_comment_table2/t', '1') ORDER BY ()'","startColumn":124,"startLine":1,"endColumn":125,"endLine":1}]},{"query":"CREATE TABLE t (x UInt8) ENGINE = MergeTree ORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/02792_alter_table_modify_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (x UInt8) ENGINE = MergeTree ORDER BY ()'","startColumn":54,"startLine":1,"endColumn":55,"endLine":1}]},{"query":"CREATE TABLE t (x UInt8) ENGINE = MergeTree ORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/02792_alter_table_modify_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (x UInt8) ENGINE = MergeTree ORDER BY ()'","startColumn":54,"startLine":1,"endColumn":55,"endLine":1}]},{"query":"CREATE TABLE t (x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_comment_table3/t', '1') ORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/02792_alter_table_modify_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_comment_table3/t', '1') ORDER BY ()'","startColumn":124,"startLine":1,"endColumn":125,"endLine":1}]},{"query":"CREATE TABLE t (x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_comment_table4/t', '1') ORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/02792_alter_table_modify_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_comment_table4/t', '1') ORDER BY ()'","startColumn":124,"startLine":1,"endColumn":125,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE b (key UInt32);","fileName":"../ClickHouse/tests/queries/0_stateless/02791_predicate_pushdown_different_types.sql","errors":[]},{"query":"CREATE TABLE test_block_mismatch (\na UInt32,\nb DateTime\n)\nENGINE = ReplacingMergeTree\nPARTITION BY toYYYYMM(b)\nORDER BY (toDate(b), a);","fileName":"../ClickHouse/tests/queries/0_stateless/02791_final_block_structure_mismatch_bug.sql","errors":[]},{"query":"CREATE TABLE test_block_mismatch_sk1 (\na UInt32,\nb DateTime\n)\nENGINE = ReplacingMergeTree\nPARTITION BY toYYYYMM(b)\nPRIMARY KEY (toDate(b))\nORDER BY (toDate(b), a);","fileName":"../ClickHouse/tests/queries/0_stateless/02791_final_block_structure_mismatch_bug.sql","errors":[]},{"query":"CREATE TABLE test_block_mismatch_sk2 (\na UInt32,\nb DateTime\n)\nENGINE = ReplacingMergeTree\nPARTITION BY toYYYYMM(b)\nPRIMARY KEY (a)\nORDER BY (a, toDate(b));","fileName":"../ClickHouse/tests/queries/0_stateless/02791_final_block_structure_mismatch_bug.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE employees (id UInt64, name String, department String, salary UInt64);","fileName":"../ClickHouse/tests/queries/0_stateless/02790_sql_standard_fetch.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS outer (\n\\`id\\` UInt64,\n\\`organization_id\\` UInt64,\n\\`version\\` UInt64\n)\nENGINE = ReplacingMergeTree(version)\nPARTITION BY organization_id % 8\nORDER BY (organization_id, id);","fileName":"../ClickHouse/tests/queries/0_stateless/02790_optimize_skip_unused_shards_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS outer (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE inner (\n\\`id\\` UInt64,\n\\`outer_id\\` UInt64,\n\\`organization_id\\` UInt64,\n\\`version\\` UInt64,\n\\`date\\` Date\n)\nENGINE = ReplacingMergeTree(version)\nPARTITION BY toYYYYMM(date)\nORDER BY (organization_id, outer_id);","fileName":"../ClickHouse/tests/queries/0_stateless/02790_optimize_skip_unused_shards_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE inner (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE inner_distributed AS inner ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), 'inner', intHash64(organization_id));","fileName":"../ClickHouse/tests/queries/0_stateless/02790_optimize_skip_unused_shards_join.sql","errors":[]},{"query":"CREATE TABLE outer_distributed AS outer ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), 'outer', intHash64(organization_id));","fileName":"../ClickHouse/tests/queries/0_stateless/02790_optimize_skip_unused_shards_join.sql","errors":[]},{"query":"CREATE TABLE test (col1 Nullable(DOUBLE), col2 Nullable(DOUBLE), col3 DOUBLE) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02790_fix_coredump_when_compile_expression.sql","errors":[]},{"query":"CREATE TABLE test_table (\ncol1 String,\ncol2 String,\nINDEX test_table_col2_idx col2 TYPE set(0) GRANULARITY 1\n) ENGINE = MergeTree()\nORDER BY col1\nAS SELECT 'v1', 'v2';","fileName":"../ClickHouse/tests/queries/0_stateless/02789_set_index_nullable_condition_bug.sql","errors":[]},{"query":"create table test1 ( \\`pt\\` String,\n\\`brand_name\\` String,\n\\`total_indirect_order_cnt\\` Float64,\n\\`total_indirect_gmv\\` Float64\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02789_functions_after_sorting_and_columns_with_same_names_bug_2.sql","errors":[{"message":"no viable alternative at input 'create table test1 ( \\'","startColumn":21,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"create table test2 ( \\`pt\\` String,\n\\`brand_name\\` String,\n\\`exposure_uv\\` Float64,\n\\`click_uv\\` Float64\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02789_functions_after_sorting_and_columns_with_same_names_bug_2.sql","errors":[{"message":"no viable alternative at input 'create table test2 ( \\'","startColumn":21,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"CREATE TABLE test (\n\\`pt\\` String,\n\\`count_distinct_exposure_uv\\` AggregateFunction(uniqHLL12, Int64)\n)\nENGINE = AggregatingMergeTree\nORDER BY pt;","fileName":"../ClickHouse/tests/queries/0_stateless/02789_functions_after_sorting_and_columns_with_same_names_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test1 (\n\\`pt\\` String,\n\\`exposure_uv\\` Float64\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02789_functions_after_sorting_and_columns_with_same_names_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE session_events (\nclientId UInt64,\nsessionId String,\npageId UInt64,\neventNumber UInt64,\ntimestamp UInt64,\ntype LowCardinality(String),\ndata String\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMM(toDate(pageId / 1000))\nORDER BY (clientId, sessionId, pageId, timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/02788_fix_logical_error_in_sorting.sql","errors":[]},{"query":"CREATE TABLE event_types (\ntype String,\nactive Int16\n)\nENGINE = MergeTree\nPARTITION BY substring(type, 1, 1)\nORDER BY (type, active);","fileName":"../ClickHouse/tests/queries/0_stateless/02788_fix_logical_error_in_sorting.sql","errors":[]},{"query":"CREATE TABLE summing_merge_tree_datetime64 ( \\`pk\\` UInt64, \\`timestamp\\` DateTime64(3), \\`value\\` UInt64 ) ENGINE = SummingMergeTree() ORDER BY pk;","fileName":"../ClickHouse/tests/queries/0_stateless/02785_summing_merge_tree_datetime64.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE summing_merge_tree_datetime64 ( \\'","startColumn":45,"startLine":1,"endColumn":46,"endLine":1}]},{"query":"CREATE TABLE test_table (\\`id\\` Float32, \\`value\\` Float32) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02785_left_anti_join_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE test_table__fuzz_3 (\\`id\\` LowCardinality(Nullable(Float32)), \\`value\\` Float32) ENGINE = MergeTree ORDER BY id SETTINGS allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02785_left_anti_join_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table__fuzz_3 (\\'","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"create table local (a UInt64, b UInt64, c UInt64, d UInt64, e UInt64, f UInt64, g UInt64, h UInt64) engine = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02785_global_join_too_many_columns.sql","errors":[]},{"query":"create table distr as local engine = Distributed('test_cluster_two_shards', currentDatabase(), local);","fileName":"../ClickHouse/tests/queries/0_stateless/02785_global_join_too_many_columns.sql","errors":[]},{"query":"CREATE TABLE date_t (id UInt32, value1 String, date1 Date) ENGINE ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02785_date_predicate_optimizations_ast_query_tree_rewrite.sql","errors":[]},{"query":"CREATE TABLE datetime_t (id UInt32, value1 String, date1 Datetime) ENGINE ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02785_date_predicate_optimizations_ast_query_tree_rewrite.sql","errors":[]},{"query":"CREATE TABLE date32_t (id UInt32, value1 String, date1 Date32) ENGINE ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02785_date_predicate_optimizations_ast_query_tree_rewrite.sql","errors":[]},{"query":"CREATE TABLE datetime64_t (id UInt32, value1 String, date1 Datetime64) ENGINE ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02785_date_predicate_optimizations_ast_query_tree_rewrite.sql","errors":[]},{"query":"create table events ( \\`organisation_id\\` UUID,\n\\`session_id\\` UUID,\n\\`id\\` UUID DEFAULT generateUUIDv4(),\n\\`timestamp\\` UInt64,\n\\`payload\\` String,\n\\`customer_id\\` UUID,\n\\`call_id\\` String,\nPROJECTION events_by_session_and_org\n(\nSELECT *\nORDER BY\norganisation_id,\nsession_id,\ntimestamp\n),\nPROJECTION events_by_session\n(\nSELECT *\nORDER BY\nsession_id,\ntimestamp\n),\nPROJECTION events_by_session_and_customer\n(\nSELECT *\nORDER BY\ncustomer_id,\nsession_id,\ntimestamp\n),\nPROJECTION events_by_call_id\n(\nSELECT *\nORDER BY\ncall_id,\ntimestamp\n)) engine = MergeTree order by (organisation_id, session_id, timestamp) settings index_granularity = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02784_projections_read_in_order_bug.sql","errors":[{"message":"no viable alternative at input 'create table events ( \\'","startColumn":22,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE t_02784 (c1 UInt64, c2 UInt64) ENGINE=MergeTree() ORDER BY c1 SETTINGS min_bytes_for_wide_part=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02784_move_all_conditions_to_prewhere_analyzer_asan.sql","errors":[]},{"query":"CREATE TABLE source (\n\\`ts\\` DateTime('UTC'),\n\\`n\\` Int32\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMM(ts)\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02783_date_predicate_optimizations.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE source (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE source (\n\\`dt\\` Date,\n\\`ts\\` DateTime,\n\\`dt_32\\` Date32,\n\\`ts_64\\` DateTime64(3),\n\\`n\\` Int32\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMM(ts)\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02783_date_predicate_optimizations.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE source (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table t4 (c26 String) engine = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02782_inconsistent_formatting_and_constant_folding.sql","errors":[]},{"query":"create view t7 as select max(ref_3.c26) as c_2_c46_1 from t4 as ref_3;","fileName":"../ClickHouse/tests/queries/0_stateless/02782_inconsistent_formatting_and_constant_folding.sql","errors":[]},{"query":"CREATE TABLE data (\nkey  Int,\nv1   DateTime,\nINDEX v1_index v1 TYPE minmax GRANULARITY 1\n) ENGINE=AggregatingMergeTree()\nORDER BY key\nSETTINGS index_granularity=8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02781_data_skipping_index_merge_tree_min_for_seek.sql","errors":[]},{"query":"CREATE TABLE data (\nkey  Int,\nv1   DateTime,\nINDEX v1_index v1 TYPE minmax GRANULARITY 1\n) ENGINE=AggregatingMergeTree()\nORDER BY key\nSETTINGS index_granularity=8192, min_bytes_for_wide_part=0, min_rows_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02780_final_streams_data_skipping_index.sql","errors":[]},{"query":"CREATE TABLE tab (\ni8            Int8,\ni16           Int16,\ni32           Int32,\ni64           Int64,\ni128          Int128,\ni256          Int256,\nui8           UInt8,\nui16          UInt16,\nui32          UInt32,\nui64          UInt64,\nui128         UInt128,\nui256         UInt256,\nf32           Float32,\nf64           Float64,\ndec32         Decimal32(2),\ndec64         Decimal64(2),\ndec128        Decimal128(2),\ndec128_native Decimal(35, 30),\ndec128_text   Decimal(35, 31),\ndec256        Decimal256(2),\ndec256_native Decimal(65, 2),\ndec256_text   Decimal(66, 2),\np             Point,\nr             Ring,\npg            Polygon,\nmpg           MultiPolygon,\nb             Bool,\ns             String,\nfs            FixedString(3),\nuuid          UUID,\nd             Date,\nd32           Date32,\ndt            DateTime,\ndt_tz1        DateTime('UTC'),\ndt_tz2        DateTime('Europe/Amsterdam'),\ndt64          DateTime64(3),\ndt64_3_tz1    DateTime64(3, 'UTC'),\ndt64_3_tz2    DateTime64(3, 'Asia/Shanghai'),\ndt64_6        DateTime64(6, 'UTC'),\ndt64_9        DateTime64(9, 'UTC'),\nenm           Enum('hallo' = 1, 'welt' = 2),\nagg           AggregateFunction(uniq, UInt64),\nsagg          SimpleAggregateFunction(sum, Double),\na             Array(String),\no             JSON,\nt             Tuple(Int32, String, Nullable(String), LowCardinality(String), LowCardinality(Nullable(String)), Tuple(Int32, String)),\nm             Map(Int32, String),\nm_complex     Map(Int32, Map(Int32, LowCardinality(Nullable(String)))),\nnested        Nested (col1 String, col2 UInt32),\nip4           IPv4,\nip6           IPv6,\nns            Nullable(String),\nnfs           Nullable(FixedString(3)),\nndt64         Nullable(DateTime64(3)),\nndt64_tz      Nullable(DateTime64(3, 'Asia/Shanghai')),\nls            LowCardinality(String),\nlfs           LowCardinality(FixedString(3)),\nlns           LowCardinality(Nullable(String)),\nlnfs          LowCardinality(Nullable(FixedString(3))),\n) ENGINE Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02775_show_columns_called_from_clickhouse.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\ni8            Int8,\\ni16           Int16,\\ni32           Int32,\\ni64           Int64,\\ni128          Int128,\\ni256          Int256,\\nui8           UInt8,\\nui16          UInt16,\\nui32          UInt32,\\nui64          UInt64,\\nui128         UInt128,\\nui256         UInt256,\\nf32           Float32,\\nf64           Float64,\\ndec32         Decimal32(2),\\ndec64         Decimal64(2),\\ndec128        Decimal128(2),\\ndec128_native Decimal(35, 30),\\ndec128_text   Decimal(35, 31),\\ndec256        Decimal256(2),\\ndec256_native Decimal(65, 2),\\ndec256_text   Decimal(66, 2),\\np             Point,\\nr             Ring,\\npg            Polygon,\\nmpg           MultiPolygon,\\nb             Bool,\\ns             String,\\nfs            FixedString(3),\\nuuid          UUID,\\nd             Date,\\nd32           Date32,\\ndt            DateTime,\\ndt_tz1        DateTime('UTC'),\\ndt_tz2        DateTime('Europe/Amsterdam'),\\ndt64          DateTime64(3),\\ndt64_3_tz1    DateTime64(3, 'UTC'),\\ndt64_3_tz2    DateTime64(3, 'Asia/Shanghai'),\\ndt64_6        DateTime64(6, 'UTC'),\\ndt64_9        DateTime64(9, 'UTC'),\\nenm           Enum('hallo' = 1, 'welt' = 2),\\nagg           AggregateFunction(uniq, UInt64),\\nsagg          SimpleAggregateFunction(sum, Double),\\na             Array(String),\\no             JSON,\\nt             Tuple(Int32, String, Nullable(String), LowCardinality(String), LowCardinality(Nullable(String)), Tuple(Int32, String)),\\nm             Map(Int32, String),\\nm_complex     Map(Int32, Map(Int32, LowCardinality(Nullable(String)))),\\nnested        Nested (col1 String, col2 UInt32),\\nip4           IPv4,\\nip6           IPv6,\\nns            Nullable(String),\\nnfs           Nullable(FixedString(3)),\\nndt64         Nullable(DateTime64(3)),\\nndt64_tz      Nullable(DateTime64(3, 'Asia/Shanghai')),\\nls            LowCardinality(String),\\nlfs           LowCardinality(FixedString(3)),\\nlns           LowCardinality(Nullable(String)),\\nlnfs          LowCardinality(Nullable(FixedString(3))),\\n)'","startColumn":0,"startLine":61,"endColumn":1,"endLine":61}]},{"query":"CREATE DATABASE test_02771;","fileName":"../ClickHouse/tests/queries/0_stateless/02771_resolve_compound_identifier.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE test_02771;'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE test_02771.t (x UInt8) ENGINE = MergeTree() ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02771_resolve_compound_identifier.sql","errors":[]},{"query":"CREATE TABLE join_inner_table__fuzz_146_replicated (\n\\`id\\` UUID,\n\\`key\\` String,\n\\`number\\` Int64,\n\\`value1\\` String,\n\\`value2\\` String,\n\\`time\\` Nullable(Int64)\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/join_inner_table__fuzz_146_replicated', '{replica}')\nORDER BY (id, number, key)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02771_parallel_replicas_analyzer.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE join_inner_table__fuzz_146_replicated (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_log (\n\\`crypto_name\\` String,\n\\`trade_date\\` Date\n)\nENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02771_log_faminy_truncate_count.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_log (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_log (\n\\`crypto_name\\` String,\n\\`trade_date\\` Date\n)\nENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02771_log_faminy_truncate_count.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_log (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_table_1 (\npkey UInt32,\nc8 UInt32,\nc9 String,\nc10 Float32,\nc11 String\n) ENGINE = MergeTree ORDER BY pkey;","fileName":"../ClickHouse/tests/queries/0_stateless/02771_jit_functions_comparison_crash.sql","errors":[]},{"query":"CREATE TABLE test_table_2 (\nvkey UInt32,\npkey UInt32,\nc15 UInt32\n) ENGINE = MergeTree ORDER BY vkey;","fileName":"../ClickHouse/tests/queries/0_stateless/02771_jit_functions_comparison_crash.sql","errors":[]},{"query":"CREATE TABLE data_02771 (\nkey Int,\nx Int,\ny Int,\nINDEX x_idx x TYPE minmax GRANULARITY 1,\nINDEX y_idx y TYPE minmax GRANULARITY 1,\nINDEX xy_idx (x,y) TYPE minmax GRANULARITY 1\n)\nEngine=MergeTree()\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02771_ignore_data_skipping_indices.sql","errors":[]},{"query":"CREATE TABLE test_parallel_replicas_unavailable_shards (n UInt64) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02769_parallel_replicas_unavailable_shards.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt32,\nvalue UInt32\n) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02769_compare_functions_nan.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt32,\nvalue_1 UInt32,\nvalue_2 Float32\n) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02769_compare_functions_nan.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid Float32,\nvalue Float32\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02769_compare_functions_nan.sql","errors":[]},{"query":"CREATE TABLE t0 (vkey UInt32, pkey UInt32, c0 UInt32) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02766_bitshift_with_const_arguments.sql","errors":[]},{"query":"CREATE TABLE t1 (vkey UInt32) ENGINE = AggregatingMergeTree  ORDER BY vkey;","fileName":"../ClickHouse/tests/queries/0_stateless/02766_bitshift_with_const_arguments.sql","errors":[]},{"query":"CREATE TABLE t5 (vkey UInt32, pkey UInt32, c18 Float32, c19 UInt32) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02766_bitshift_with_const_arguments.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS parallel_replicas_final (x String) ENGINE=ReplacingMergeTree() ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02765_parallel_replicas_final_modifier.sql","errors":[]},{"query":"CREATE TABLE parallel_replicas_plain (x String) ENGINE=MergeTree() ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02764_parallel_replicas_plain_merge_tree.sql","errors":[]},{"query":"create table x (dt String) engine MergeTree partition by toYYYYMM(toDate(dt)) order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02764_index_analysis_fix.sql","errors":[]},{"query":"CREATE TABLE test ( col1 Int64, dt Date ) ENGINE = MergeTree PARTITION BY dt ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02763_mutate_compact_part_with_skip_indices_and_projections.sql","errors":[]},{"query":"CREATE TABLE test ( col1 Int64, dt Date ) ENGINE = MergeTree PARTITION BY dt ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02763_mutate_compact_part_with_skip_indices_and_projections.sql","errors":[]},{"query":"CREATE TABLE test_table_1 (id UInt32) ENGINE = MergeTree ORDER BY (id);","fileName":"../ClickHouse/tests/queries/0_stateless/02763_jit_compare_functions_nan.sql","errors":[]},{"query":"create table test_table_2 (id UInt32) ENGINE = MergeTree ORDER BY (id);","fileName":"../ClickHouse/tests/queries/0_stateless/02763_jit_compare_functions_nan.sql","errors":[]},{"query":"create database replicated_db_no_args engine=Replicated; -- { serverError BAD_ARGUMENTS } ","fileName":"../ClickHouse/tests/queries/0_stateless/02762_replicated_database_no_args.sql","errors":[]},{"query":"CREATE TABLE defaults (\nu8 UInt8,\nu16 UInt16,\nu32 UInt32,\nu64 UInt64,\ni8 Int8,\ni16 Int16,\ni32 Int32,\ni64 Int64\n) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02752_space_function.sql","errors":[]},{"query":"CREATE TABLE 02751_query_log_test_partitions (a Int64, b Int64) ENGINE = MergeTree PARTITION BY a ORDER BY b;","fileName":"../ClickHouse/tests/queries/0_stateless/02751_query_log_test_partitions.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02751'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE join_inner_table__fuzz_1 (\n\\`id\\` UUID,\n\\`key\\` Nullable(Date),\n\\`number\\` Int64,\n\\`value1\\` LowCardinality(String),\n\\`value2\\` LowCardinality(String),\n\\`time\\` Int128\n)\nENGINE = MergeTree\nORDER BY (id, number, key)\nSETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02751_parallel_replicas_bug_chunkinfo_not_set.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE join_inner_table__fuzz_1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table tab (x DateTime) engine MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02746_index_analysis_binary_operator_with_null.sql","errors":[]},{"query":"CREATE TABLE test_table (\nkey UInt64,\nvalue UInt16\n) ENGINE=Memory() AS SELECT number, number FROM numbers(1e5);","fileName":"../ClickHouse/tests/queries/0_stateless/02740_hashed_dictionary_load_factor_smoke.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable (\nkey UInt64,\nvalue Nullable(UInt16)\n) ENGINE=Memory() AS SELECT number, number % 2 == 0 ? NULL : number FROM numbers(1e5);","fileName":"../ClickHouse/tests/queries/0_stateless/02740_hashed_dictionary_load_factor_smoke.sql","errors":[]},{"query":"CREATE TABLE test_table_string (\nkey String,\nvalue UInt16\n) ENGINE=Memory() AS SELECT 'foo' || number::String, number FROM numbers(1e5);","fileName":"../ClickHouse/tests/queries/0_stateless/02740_hashed_dictionary_load_factor_smoke.sql","errors":[{"message":"mismatched input ':' expecting <EOF>","startColumn":43,"startLine":4,"endColumn":44,"endLine":4}]},{"query":"CREATE TABLE test_table_complex (\nkey_1 UInt64,\nkey_2 UInt64,\nvalue UInt16\n) ENGINE=Memory() AS SELECT number, number, number FROM numbers(1e5);","fileName":"../ClickHouse/tests/queries/0_stateless/02740_hashed_dictionary_load_factor_smoke.sql","errors":[]},{"query":"CREATE DICTIONARY test_sparse_dictionary_load_factor (\nkey UInt64,\nvalue UInt16\n) PRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE test_table))\nLAYOUT(SPARSE_HASHED(MAX_LOAD_FACTOR 0.90))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02740_hashed_dictionary_load_factor_smoke.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary_load_factor (\nkey UInt64,\nvalue UInt16\n) PRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE test_table))\nLAYOUT(HASHED(MAX_LOAD_FACTOR 0.90))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02740_hashed_dictionary_load_factor_smoke.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary_load_factor_nullable (\nkey UInt64,\nvalue Nullable(UInt16)\n) PRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE test_table_nullable))\nLAYOUT(HASHED(MAX_LOAD_FACTOR 0.90))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02740_hashed_dictionary_load_factor_smoke.sql","errors":[]},{"query":"CREATE DICTIONARY test_complex_dictionary_load_factor (\nkey_1 UInt64,\nkey_2 UInt64,\nvalue UInt16\n) PRIMARY KEY key_1, key_2\nSOURCE(CLICKHOUSE(TABLE test_table_complex))\nLAYOUT(COMPLEX_KEY_HASHED(MAX_LOAD_FACTOR 0.90))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02740_hashed_dictionary_load_factor_smoke.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary_load_factor_string (\nkey String,\nvalue UInt16\n) PRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE test_table_string))\nLAYOUT(HASHED(MAX_LOAD_FACTOR 1))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02740_hashed_dictionary_load_factor_smoke.sql","errors":[]},{"query":"CREATE TABLE test_tz_setting (d DateTime('UTC')) Engine=Memory AS SELECT toDateTime('2000-01-01 00:00:00');","fileName":"../ClickHouse/tests/queries/0_stateless/02737_session_timezone.sql","errors":[]},{"query":"CREATE TABLE array_jaccard_index (arr Array(UInt8)) engine = MergeTree ORDER BY arr;","fileName":"../ClickHouse/tests/queries/0_stateless/02737_arrayJaccardIndex.sql","errors":[]},{"query":"CREATE TABLE test_zk_connection_table ( key UInt64\n)\nENGINE ReplicatedMergeTree('zookeeper2:/clickhouse/{database}/02731_zk_connection/{shard}', '{replica}')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02735_system_zookeeper_connection.sql","errors":[]},{"query":"create temporary table basic_types_02735 as select * from generateRandom(' u8 UInt8,\nu16 UInt16,\nu32 UInt32,\nu64 UInt64,\ni8 Int8,\ni16 Int16,\ni32 Int32,\ni64 Int64,\ndate Date,\ndate32 Date32,\ndatetime DateTime,\ndatetime64 DateTime64,\nenum8 Enum8(''x'' = 1, ''y'' = 2, ''z'' = 3),\nenum16 Enum16(''xx'' = 1000, ''yy'' = 2000, ''zz'' = 3000),\nfloat32 Float32,\nfloat64 Float64,\nstr String,\nfstr FixedString(12),\nu128 UInt128,\nu256 UInt256,\ni128 Int128,\ni256 Int256,\ndecimal32 Decimal32(3),\ndecimal64 Decimal64(10),\ndecimal128 Decimal128(20),\ndecimal256 Decimal256(40),\nipv4 IPv4,\nipv6 IPv6') limit 1011;","fileName":"../ClickHouse/tests/queries/0_stateless/02735_parquet_encoder.sql","errors":[]},{"query":"create temporary table nullables_02735 as select * from generateRandom(' u16 Nullable(UInt16),\ni64 Nullable(Int64),\ndatetime64 Nullable(DateTime64),\nenum8 Nullable(Enum8(''x'' = 1, ''y'' = 2, ''z'' = 3)),\nfloat64 Nullable(Float64),\nstr Nullable(String),\nfstr Nullable(FixedString(12)),\ni256 Nullable(Int256),\ndecimal256 Nullable(Decimal256(40)),\nipv6 Nullable(IPv6)') limit 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/02735_parquet_encoder.sql","errors":[]},{"query":"create table arrays_02735 engine = Memory as select * from generateRandom(' u32 Array(UInt32),\ni8 Array(Int8),\ndatetime Array(DateTime),\nenum16 Array(Enum16(''xx'' = 1000, ''yy'' = 2000, ''zz'' = 3000)),\nfloat32 Array(Float32),\nstr Array(String),\nfstr Array(FixedString(12)),\nu128 Array(UInt128),\ndecimal64 Array(Decimal64(10)),\nipv4 Array(IPv4),\nmsi Map(String, Int16),\ntup Tuple(FixedString(3), Array(String), Map(Int8, Date))') limit 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/02735_parquet_encoder.sql","errors":[]},{"query":"create temporary table arrays_out_02735 as arrays_02735;","fileName":"../ClickHouse/tests/queries/0_stateless/02735_parquet_encoder.sql","errors":[]},{"query":"create temporary table madness_02735 as select * from generateRandom(' aa Array(Array(UInt32)),\naaa Array(Array(Array(UInt32))),\nan Array(Nullable(String)),\naan Array(Array(Nullable(FixedString(10)))),\nl LowCardinality(String),\nln LowCardinality(Nullable(FixedString(11))),\nal Array(LowCardinality(UInt128)),\naaln Array(Array(LowCardinality(Nullable(String)))),\nmln Map(LowCardinality(String), Nullable(Int8)),\nt Tuple(Map(FixedString(5), Tuple(Array(UInt16), Nullable(UInt16), Array(Tuple(Int8, Decimal64(10))))), Tuple(kitchen UInt64, sink String)),\nn Nested(hello UInt64, world Tuple(first String, second FixedString(1)))\n') limit 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/02735_parquet_encoder.sql","errors":[]},{"query":"create temporary table other_encoders_02735 as select number, number*2 from numbers(10000);","fileName":"../ClickHouse/tests/queries/0_stateless/02735_parquet_encoder.sql","errors":[]},{"query":"CREATE TABLE t1 (a Int, b Int) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02735_asof_join_right_null.sql","errors":[]},{"query":"CREATE TABLE t2 (a Int, b Nullable(Int)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02735_asof_join_right_null.sql","errors":[]},{"query":"CREATE TABLE t_sparse_short_circuit (a UInt64, b UInt64) ENGINE = MergeTree ORDER BY tuple()\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02734_sparse_columns_short_circuit.sql","errors":[]},{"query":"CREATE TABLE t_sparse_mutation (id UInt64, v UInt64) ENGINE = MergeTree ORDER BY id\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02734_sparse_columns_mutation.sql","errors":[]},{"query":"CREATE TABLE t_sparse_reload (id UInt64, v UInt64) ENGINE = MergeTree ORDER BY id\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.95;","fileName":"../ClickHouse/tests/queries/0_stateless/02733_sparse_columns_reload.sql","errors":[]},{"query":"CREATE TABLE test_string (\n\\`c1\\` String,\n\\`c2\\` String\n)\nENGINE = MergeTree\nORDER BY c1;","fileName":"../ClickHouse/tests/queries/0_stateless/02733_fix_distinct_in_order_bug_49622.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_string (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test (\nc1 String,\nc2 String,\nc3 String\n)\nENGINE = ReplacingMergeTree\nORDER BY (c1, c3);","fileName":"../ClickHouse/tests/queries/0_stateless/02733_distinct.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE src (p UInt64, k String, d UInt64) ENGINE = MergeTree PARTITION BY p ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02731_replace_partition_from_temporary_table.sql","errors":[]},{"query":"CREATE TABLE dst (p UInt64, k String, d UInt64) ENGINE = MergeTree PARTITION BY p ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02731_replace_partition_from_temporary_table.sql","errors":[]},{"query":"CREATE TABLE rdst (p UInt64, k String, d UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_alter_attach_00626_rdst', 'r1') PARTITION BY p ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02731_replace_partition_from_temporary_table.sql","errors":[]},{"query":"CREATE TABLE join_inner_table (\nid UUID,\nkey String,\nnumber Int64,\nvalue1 String,\nvalue2 String,\ntime Int64\n)\nENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/join_inner_table', 'r1')\nORDER BY (id, number, key);","fileName":"../ClickHouse/tests/queries/0_stateless/02731_parallel_replicas_join_subquery.sql","errors":[]},{"query":"CREATE TABLE join_outer_table (\nid UUID,\nkey String,\notherValue1 String,\notherValue2 String,\ntime Int64\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/join_outer_table', 'r1')\nORDER BY (id, time, key);","fileName":"../ClickHouse/tests/queries/0_stateless/02731_parallel_replicas_join_subquery.sql","errors":[]},{"query":"CREATE TABLE test(\\`report_date\\` Date, \\`sspid\\` UInt64) ENGINE MergeTree PARTITION BY report_date ORDER BY report_date;","fileName":"../ClickHouse/tests/queries/0_stateless/02731_in_operator_with_one_size_tuple.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test(\\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE dict_data (v0 UInt16, v1 Int16, v2 Float32, v3 Decimal128(10), v4 String) engine=Memory()  AS SELECT number, number%65535, number*1.1, number*1.1, 'foo' FROM numbers(10);;","fileName":"../ClickHouse/tests/queries/0_stateless/02731_auto_convert_dictionary_layout_to_complex_by_complex_keys.sql","errors":[]},{"query":"CREATE DICTIONARY dict_flat_simple (v0 UInt16, v1 UInt16, v2 UInt16) PRIMARY KEY v0 SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(0) LAYOUT(flat());","fileName":"../ClickHouse/tests/queries/0_stateless/02731_auto_convert_dictionary_layout_to_complex_by_complex_keys.sql","errors":[]},{"query":"CREATE DICTIONARY dict_hashed_simple_Decimal128 (v3 Decimal128(10), v1 UInt16, v2 Float32) PRIMARY KEY v3 SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(0) LAYOUT(hashed());","fileName":"../ClickHouse/tests/queries/0_stateless/02731_auto_convert_dictionary_layout_to_complex_by_complex_keys.sql","errors":[]},{"query":"CREATE DICTIONARY dict_hashed_simple_Float32 (v2 Float32, v3 Decimal128(10), v4 String) PRIMARY KEY v2 SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(0) LAYOUT(hashed());","fileName":"../ClickHouse/tests/queries/0_stateless/02731_auto_convert_dictionary_layout_to_complex_by_complex_keys.sql","errors":[]},{"query":"CREATE DICTIONARY dict_hashed_simple_String (v4 String, v3 Decimal128(10), v2 Float32) PRIMARY KEY v4 SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(0) LAYOUT(hashed());","fileName":"../ClickHouse/tests/queries/0_stateless/02731_auto_convert_dictionary_layout_to_complex_by_complex_keys.sql","errors":[]},{"query":"CREATE DICTIONARY dict_hashed_simple_auto_convert (v0 UInt16, v1 Int16, v2 UInt16) PRIMARY KEY v0,v1 SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(0) LAYOUT(hashed());","fileName":"../ClickHouse/tests/queries/0_stateless/02731_auto_convert_dictionary_layout_to_complex_by_complex_keys.sql","errors":[]},{"query":"create table ts (sensor_id UInt64, timestamp UInt64, value Float64) ENGINE=MergeTree()  ORDER BY (sensor_id, timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/02730_with_fill_by_sorting_prefix.sql","errors":[]},{"query":"create table ts (sensor_id UInt64, timestamp UInt64, value Float64) ENGINE=MergeTree()  ORDER BY (sensor_id, timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/02730_with_fill_by_sorting_prefix.sql","errors":[]},{"query":"create table ts (sensor_id UInt64, timestamp UInt64, value Float64) ENGINE=MergeTree()  ORDER BY (sensor_id, timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/02730_with_fill_by_sorting_prefix.sql","errors":[]},{"query":"CREATE TABLE dict_data (key UInt64, v0 UInt16, v1 UInt16, v2 UInt16, v3 UInt16, v4 UInt16) engine=Memory() AS SELECT number, number%65535, number%65535, number%6553, number%655355, number%65535 FROM numbers(1e6);","fileName":"../ClickHouse/tests/queries/0_stateless/02730_dictionary_hashed_load_factor_element_count.sql","errors":[]},{"query":"CREATE DICTIONARY dict_sharded (key UInt64, v0 UInt16) PRIMARY KEY key SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(MIN 0 MAX 0) LAYOUT(HASHED(SHARDS 32));","fileName":"../ClickHouse/tests/queries/0_stateless/02730_dictionary_hashed_load_factor_element_count.sql","errors":[]},{"query":"CREATE DICTIONARY dict_sharded_multi (key UInt64, v0 UInt16, v1 UInt16, v2 UInt16, v3 UInt16, v4 UInt16) PRIMARY KEY key SOURCE(CLICKHOUSE(TABLE 'dict_data')) LIFETIME(MIN 0 MAX 0) LAYOUT(HASHED(SHARDS 32));","fileName":"../ClickHouse/tests/queries/0_stateless/02730_dictionary_hashed_load_factor_element_count.sql","errors":[]},{"query":"CREATE TABLE t_async_inserts_flush (a UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02726_async_insert_flush_queue.sql","errors":[]},{"query":"CREATE TABLE t_to (id UInt64, value Nullable(String)) ENGINE MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02725_object_column_alter.sql","errors":[]},{"query":"CREATE TABLE t_from (id UInt64, value Object('json')) ENGINE MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02725_object_column_alter.sql","errors":[]},{"query":"CREATE TABLE group_by_null_key (c1 Nullable(Int32), c2 LowCardinality(Nullable(Int32))) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02725_null_group_key_with_rollup.sql","errors":[]},{"query":"CREATE TABLE 02725_memory_for_merges (   n UInt64,\ns String\n)\nENGINE = MergeTree\nORDER BY n\nSETTINGS merge_max_block_size_bytes=1024, index_granularity_bytes=1024;","fileName":"../ClickHouse/tests/queries/0_stateless/02725_memory-for-merges.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02725'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02725_cnf (c0 UInt8, c1 UInt8, c2 UInt8, c3 UInt8, c4 UInt8, c5 UInt8, c6 UInt8, c7 UInt8, c8 UInt8, c9 UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02725_cnf_large_check.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02725'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE join_test ( \\`key\\` UInt64, \\`value\\` UInt64 ) ENGINE = Join(ANY, LEFT, key);","fileName":"../ClickHouse/tests/queries/0_stateless/02725_any_join_single_row.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE join_test ( \\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE initial_table_size AS SELECT engine_full, total_rows, total_bytes FROM system.tables WHERE (name = 'join_test') AND (database = currentDatabase());","fileName":"../ClickHouse/tests/queries/0_stateless/02725_any_join_single_row.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE one_row_table_size AS SELECT engine_full, total_rows, total_bytes FROM system.tables WHERE (name = 'join_test') AND (database = currentDatabase());","fileName":"../ClickHouse/tests/queries/0_stateless/02725_any_join_single_row.sql","errors":[]},{"query":"CREATE TABLE join_test_right ( \\`key\\` UInt64, \\`value\\` UInt64 ) ENGINE = Join(ANY, RIGHT, key);","fileName":"../ClickHouse/tests/queries/0_stateless/02725_any_join_single_row.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE join_test_right ( \\'","startColumn":31,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"create table if not exists alias_column_should_not_allow_compression ( user_id UUID, user_id_hashed ALIAS (cityHash64(user_id))) engine=MergeTree() order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02725_alias_columns_should_not_allow_compression_codec.sql","errors":[]},{"query":"create table if not exists alias_column_should_not_allow_compression_fail ( user_id UUID, user_id_hashed ALIAS (cityHash64(user_id)) codec(LZ4HC(1))) engine=MergeTree() order by tuple(); -- { serverError BAD_ARGUMENTS } alter table alias_column_should_not_allow_compression modify column user_id codec(LZ4HC(1));","fileName":"../ClickHouse/tests/queries/0_stateless/02725_alias_columns_should_not_allow_compression_codec.sql","errors":[]},{"query":"CREATE TABLE t0 (\nc1 Int64,\nc2 Int64,\nc3 Int64,\nPROJECTION p1\n(\nSELECT\nc1,\nc2,\nsum(c3)\nGROUP BY\nc2,\nc1\n)\n)\nENGINE = MergeTree ORDER BY (c1, c2) settings min_bytes_for_wide_part = 10485760, min_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02725_agg_projection_resprect_PK.sql","errors":[]},{"query":"CREATE TABLE tbl (\na UInt64,\nb UInt64,\nc UInt64,\nd UInt64,\ne UInt64,\nINDEX mm1_idx (a, c, d) TYPE minmax,\nINDEX mm2_idx (c, d, e) TYPE minmax,\nINDEX set_idx (e)       TYPE set(100),\nINDEX blf_idx (d, b)    TYPE bloom_filter(0.8)\n)\nENGINE = MergeTree\nPRIMARY KEY (c, a);","fileName":"../ClickHouse/tests/queries/0_stateless/02724_show_indexes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tbl (\\na UInt64,\\nb UInt64,\\nc UInt64,\\nd UInt64,\\ne UInt64,\\nINDEX mm1_idx (a, c, d) TYPE minmax,'","startColumn":35,"startLine":7,"endColumn":36,"endLine":7}]},{"query":"CREATE TABLE \\`\\$4@^7\\` (c String) ENGINE = MergeTree ORDER BY c;","fileName":"../ClickHouse/tests/queries/0_stateless/02724_show_indexes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE NULL (c String) ENGINE = MergeTree ORDER BY c;","fileName":"../ClickHouse/tests/queries/0_stateless/02724_show_indexes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE NULL'","startColumn":13,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE DATABASE \\`'\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/02724_show_indexes.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE \\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE \\`'\\`.\\`'\\` (c String) ENGINE = MergeTree ORDER BY c;","fileName":"../ClickHouse/tests/queries/0_stateless/02724_show_indexes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DATABASE database_123456789abcde; -- pseudo-random database name DROP TABLE IF EXISTS database_123456789abcde.tbl;","fileName":"../ClickHouse/tests/queries/0_stateless/02724_show_indexes.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE database_123456789abcde;'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE database_123456789abcde.tbl (\na UInt64,\nb UInt64,\nINDEX mmi_idx b TYPE minmax\n)\nENGINE = MergeTree\nPRIMARY KEY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02724_show_indexes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE database_123456789abcde.tbl (\\na UInt64,\\nb UInt64,\\nINDEX mmi_idx b TYPE minmax\\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"CREATE TABLE \\`tab.with.dots\\` (\na UInt64,\nb UInt64,\nc UInt64,\nd UInt64,\ne UInt64,\nINDEX mm1_idx (a, c, d) TYPE minmax,\nINDEX mm2_idx (c, d, e) TYPE minmax,\nINDEX set_idx (e)       TYPE set(100),\nINDEX blf_idx (d, b)    TYPE bloom_filter(0.8)\n)\nENGINE = MergeTree\nPRIMARY KEY (c, a);","fileName":"../ClickHouse/tests/queries/0_stateless/02724_show_indexes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create table saved_intervals_tmp Engine=Memory as SELECT number as EventID, toIntervalSecond(number+1) as v1, toIntervalHour(number+2) as v2, toIntervalNanosecond(number+3) as v3 from numbers(2);","fileName":"../ClickHouse/tests/queries/0_stateless/02724_persist_interval_type.sql","errors":[]},{"query":"create table saved_intervals_mgt Engine=MergeTree() ORDER BY EventID as SELECT number as EventID, toIntervalSecond(number+1) as v1, toIntervalHour(number+2) as v2, toIntervalNanosecond(number+3) as v3 from numbers(2);","fileName":"../ClickHouse/tests/queries/0_stateless/02724_persist_interval_type.sql","errors":[]},{"query":"CREATE table t1 (v1 IntervalMinute) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02724_persist_interval_type.sql","errors":[]},{"query":"CREATE TABLE user(id UInt32, name String) ENGINE = Join(ANY, LEFT, id);","fileName":"../ClickHouse/tests/queries/0_stateless/02724_mutliple_storage_join.sql","errors":[]},{"query":"CREATE TABLE product(id UInt32, name String, cate String) ENGINE = Join(ANY, LEFT, id);","fileName":"../ClickHouse/tests/queries/0_stateless/02724_mutliple_storage_join.sql","errors":[]},{"query":"CREATE TABLE order(id UInt32, pId UInt32, uId UInt32) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02724_mutliple_storage_join.sql","errors":[]},{"query":"CREATE TABLE test_table (a UInt8, b UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02724_jit_logical_functions.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable (a UInt8, b Nullable(UInt8)) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02724_jit_logical_functions.sql","errors":[]},{"query":"CREATE TABLE t1(k UInt32, v UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02723/zookeeper_name/t1', '1') ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02723_zookeeper_name.sql","errors":[]},{"query":"CREATE TABLE t2(k UInt32, v UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02723/zookeeper_name/t2', '1') ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02723_zookeeper_name.sql","errors":[]},{"query":"CREATE TABLE dummy ( num1 Int32, num2 Enum8('foo' = 0, 'bar' = 1, 'tar' = 2) ) ENGINE = MergeTree ORDER BY num1 as select 5, 'bar';","fileName":"../ClickHouse/tests/queries/0_stateless/02723_jit_aggregation_bug_48120.sql","errors":[]},{"query":"create table test (x UInt32, y UInt32, z UInt32) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02721_url_cluster.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS table_with_dot_column (date Date, regular_column String, \\`other_column.2\\` String) ENGINE = MergeTree() ORDER BY date;","fileName":"../ClickHouse/tests/queries/0_stateless/02720_row_policy_column_with_dots.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS table_with_dot_column (date Date, regular_column String, \\'","startColumn":84,"startLine":1,"endColumn":85,"endLine":1}]},{"query":"CREATE ROW POLICY IF NOT EXISTS row_policy ON table_with_dot_column USING toDate(date) >= today() - 30 TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02720_row_policy_column_with_dots.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"create table test(str Nullable(String), i Int64) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02719_aggregate_with_empty_string_key.sql","errors":[]},{"query":"CREATE TABLE t_hardware_error ( \tKeyID UInt32\n) Engine = ReplicatedMergeTree('/clickhouse/tables/{shard}/{database}/t_async_insert_dedup', '{replica}')\nORDER BY (KeyID);","fileName":"../ClickHouse/tests/queries/0_stateless/02718_insert_meet_hardware_error.sql","errors":[]},{"query":"CREATE TABLE tab (line String, patterns Array(String)) ENGINE = MergeTree ORDER BY line;","fileName":"../ClickHouse/tests/queries/0_stateless/02718_array_fold.sql","errors":[]},{"query":"CREATE TABLE tab (line String) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02718_array_fold.sql","errors":[]},{"query":"CREATE TABLE data_02716_1 (v UInt64) ENGINE = MergeTree ORDER BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/02716_drop_if_empty.sql","errors":[]},{"query":"CREATE TABLE data_02716_2 (v UInt64) ENGINE = MergeTree ORDER BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/02716_drop_if_empty.sql","errors":[]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE_1:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/02716_drop_if_empty.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE_1:Identifier}.data_02716_3 (v UInt64) ENGINE = MergeTree ORDER BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/02716_drop_if_empty.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS dict_source (key UInt64, value String) ENGINE=MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02716_create_direct_dict_with_lifetime_throws.sql","errors":[]},{"query":"CREATE TABLE test (id UInt64, \\`amax\\` AggregateFunction(argMax, String, DateTime)) ENGINE=MergeTree()\nORDER BY id\nSETTINGS ratio_of_defaults_for_sparse_serialization=1 -- Sparse columns will take more bytes for a single row\nAS\nSELECT number, argMaxState(number::String, '2023-04-12 16:23:01'::DateTime)\nFROM numbers(1)\nGROUP BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/02714_read_bytes_aggregateFunction.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (id UInt64, \\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE test (a Int32, b String) ENGINE = MergeTree() ORDER BY tuple()\nSETTINGS disk = disk(\ntype = 'local_blob_storage',\npath = '\\${CLICKHOUSE_TEST_UNIQUE_NAME}/');","fileName":"../ClickHouse/tests/queries/0_stateless/02714_local_object_storage.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (a Int32, b String) ENGINE = MergeTree() ORDER BY tuple()\\nSETTINGS disk = disk'","startColumn":16,"startLine":2,"endColumn":20,"endLine":2}]},{"query":"CREATE TABLE test (a Int32, b String) ENGINE = MergeTree() ORDER BY tuple()\nSETTINGS disk = disk(\ntype = 'cache',\nmax_size = '10Mi',\npath = '\\${CLICKHOUSE_TEST_UNIQUE_NAME}/',\ndisk = disk(type='local_blob_storage', path='/var/lib/clickhouse/disks/\\${CLICKHOUSE_TEST_UNIQUE_NAME}/'));","fileName":"../ClickHouse/tests/queries/0_stateless/02714_local_object_storage.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (a Int32, b String) ENGINE = MergeTree() ORDER BY tuple()\\nSETTINGS disk = disk'","startColumn":16,"startLine":2,"endColumn":20,"endLine":2}]},{"query":"CREATE TABLE 02713_seqt ENGINE = MergeTree\nORDER BY n AS\nSELECT\nsequenceMatchState('(?1)(?2)')(time, number_ = 1, number_ = 0) AS seq,\n1 AS n\nFROM\n(\nSELECT\nnumber AS time,\nnumber % 2 AS number_\nFROM numbers_mt(100)\n);","fileName":"../ClickHouse/tests/queries/0_stateless/02713_sequence_match_serialization_fix.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02713'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02713_seqt_distr ( seq AggregateFunction(sequenceMatch('(?1)(?2)'), UInt64, UInt8, UInt8) , n UInt8) ENGINE = Distributed(test_shard_localhost, currentDatabase(), '02713_seqt');","fileName":"../ClickHouse/tests/queries/0_stateless/02713_sequence_match_serialization_fix.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02713'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE tab (\nfoo Array(LowCardinality(String)),\nINDEX idx foo TYPE bloom_filter\n)\nENGINE = MergeTree\nPRIMARY KEY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02713_array_low_cardinality_string.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\nfoo Array(LowCardinality(String)),\\nINDEX idx foo TYPE bloom_filter\\n)'","startColumn":0,"startLine":4,"endColumn":1,"endLine":4}]},{"query":"CREATE TABLE tab (col String) Engine=MergeTree ORDER BY col;","fileName":"../ClickHouse/tests/queries/0_stateless/02711_soundex_function.sql","errors":[]},{"query":"CREATE TABLE test (x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test', 'replica-{server_uuid}') ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02711_server_uuid_macro.sql","errors":[]},{"query":"CREATE TABLE test2 (x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test', 'replica-{server_uuid}') ORDER BY x; -- { serverError REPLICA_ALREADY_EXISTS } SELECT getMacro('server_uuid'); -- { serverError NO_ELEMENTS_IN_CONFIG }\nDROP TABLE test SYNC;","fileName":"../ClickHouse/tests/queries/0_stateless/02711_server_uuid_macro.sql","errors":[{"message":"mismatched input 'SYNC' expecting <EOF>","startColumn":16,"startLine":2,"endColumn":20,"endLine":2}]},{"query":"CREATE TABLE t_2710_show_table(n1 UInt32, s String) engine=Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02710_show_table.sql","errors":[]},{"query":"CREATE DATABASE t_2710_db engine=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/02710_show_table.sql","errors":[]},{"query":"CREATE DATABASE replicated_database_params ENGINE = Replicated('some/path/' || currentDatabase() || '/replicated_database_params');","fileName":"../ClickHouse/tests/queries/0_stateless/02710_default_replicated_parameters.sql","errors":[]},{"query":"CREATE DATABASE replicated_database_params ENGINE = Replicated('some/path/' || currentDatabase() || '/replicated_database_params', 'shard_1');","fileName":"../ClickHouse/tests/queries/0_stateless/02710_default_replicated_parameters.sql","errors":[]},{"query":"CREATE TABLE tbl (id UInt32) ENGINE = MergeTree() ORDER BY (id + 1, id + 1);  -- { serverError BAD_ARGUMENTS } CREATE TABLE tbl (id UInt32) ENGINE = MergeTree() ORDER BY (id + 1, id + 1) SETTINGS allow_suspicious_indices = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02710_allow_suspicious_indices.sql","errors":[]},{"query":"CREATE TABLE tbl (id UInt32, INDEX idx (id + 1, id + 1) TYPE minmax) ENGINE = MergeTree() ORDER BY id;  -- { serverError BAD_ARGUMENTS } CREATE TABLE tbl (id UInt32, INDEX idx (id + 1, id + 1) TYPE minmax) ENGINE = MergeTree() ORDER BY id SETTINGS allow_suspicious_indices = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02710_allow_suspicious_indices.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tbl (id UInt32, INDEX idx (id + 1, id + 1) TYPE minmax)'","startColumn":67,"startLine":1,"endColumn":68,"endLine":1}]},{"query":"CREATE TABLE tbl (id1 UInt32) ENGINE = MergeTree() ORDER BY id1;","fileName":"../ClickHouse/tests/queries/0_stateless/02710_allow_suspicious_indices.sql","errors":[]},{"query":"CREATE TABLE tbl (id UInt32) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02710_allow_suspicious_indices.sql","errors":[]},{"query":"CREATE TABLE summing_table (\nid UInt32,\n\\`ip4Map.value\\` Array(IPv4), \\`ip4Map.total\\` Array(UInt32),\n\\`ip6Map.value\\` Array(IPv6), \\`ip6Map.total\\` Array(UInt32),\n\\`uuidMap.value\\` Array(UUID), \\`uuidMap.total\\` Array(UInt32)\n) ENGINE = SummingMergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02710_aggregation_nested_map_ip_uuid.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE summing_table (\\nid UInt32,\\n\\'","startColumn":0,"startLine":3,"endColumn":1,"endLine":3}]},{"query":"CREATE TABLE t_memory_compressed (id UInt64, s String, arr Array(LowCardinality(String)), m Map(String, String)) ENGINE = Memory SETTINGS compress = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02709_storage_memory_compressed.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS t_02708(x DateTime) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02708_parallel_replicas_not_found_column.sql","errors":[]},{"query":"CREATE TABLE tab(id UInt64, vec Array(Float32)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02708_dotProduct.sql","errors":[]},{"query":"CREATE TABLE t_skip_index_in (\na String,\nb String,\nc String,\nINDEX idx_c c TYPE bloom_filter GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY (a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/02707_skip_index_with_in.sql","errors":[]},{"query":"CREATE TABLE 02707_keepermap_delete_update (key UInt64, value String, value2 UInt64) ENGINE=KeeperMap('/' ||  currentDatabase() || '/test02707_keepermap_delete_update') PRIMARY KEY(key);","fileName":"../ClickHouse/tests/queries/0_stateless/02707_keeper_map_delete_update_strict.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02707'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE tab (\n\\`uint64\\` UInt64,\n\\`int32\\` Nullable(Int32) COMMENT 'example comment',\n\\`str\\` String,\nINDEX idx str TYPE set(1000)\n)\nENGINE = MergeTree\nPRIMARY KEY (uint64)\nORDER BY (uint64, str);","fileName":"../ClickHouse/tests/queries/0_stateless/02706_show_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE \\`\\$4@^7\\` (c String) ENGINE = MergeTree ORDER BY c;","fileName":"../ClickHouse/tests/queries/0_stateless/02706_show_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE NULL (c String) ENGINE = MergeTree ORDER BY c;","fileName":"../ClickHouse/tests/queries/0_stateless/02706_show_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE NULL'","startColumn":13,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE DATABASE \\`'\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/02706_show_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE \\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE \\`'\\`.\\`'\\` (c String) ENGINE = MergeTree ORDER BY c;","fileName":"../ClickHouse/tests/queries/0_stateless/02706_show_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DATABASE database_123456789abcde; -- pseudo-random database name DROP TABLE IF EXISTS database_123456789abcde.tab;","fileName":"../ClickHouse/tests/queries/0_stateless/02706_show_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE database_123456789abcde;'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE database_123456789abcde.tab (\n\\`uint64\\` UInt64,\n\\`int32\\` Int32,\n\\`str\\` String\n)\nENGINE = MergeTree\nORDER BY uint64;","fileName":"../ClickHouse/tests/queries/0_stateless/02706_show_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE database_123456789abcde.tab (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE \\`tab.with.dots\\` (\n\\`uint64\\` UInt64,\n\\`int32\\` Nullable(Int32) COMMENT 'example comment',\n\\`str\\` String,\nINDEX idx str TYPE set(1000)\n)\nENGINE = MergeTree\nPRIMARY KEY (uint64)\nORDER BY (uint64, str);","fileName":"../ClickHouse/tests/queries/0_stateless/02706_show_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE kstest (left Float64, right Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02706_kolmogorov_smirnov_test.sql","errors":[]},{"query":"CREATE TABLE kstest (left Float64, right Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02706_kolmogorov_smirnov_test.sql","errors":[]},{"query":"CREATE TABLE kstest (left Float64, right Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02706_kolmogorov_smirnov_test.sql","errors":[]},{"query":"CREATE TABLE 02706_keeper_map_insert_strict (key UInt64, value Float64) Engine=KeeperMap('/' || currentDatabase() || '/test_02706_keeper_map_insert_strict') PRIMARY KEY(key);","fileName":"../ClickHouse/tests/queries/0_stateless/02706_keeper_map_insert_strict.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02706'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t1 (c0 Int32) ENGINE = MergeTree() ORDER BY c0 PARTITION BY (- (c0));","fileName":"../ClickHouse/tests/queries/0_stateless/02705_projection_and_ast_optimizations_bug.sql","errors":[]},{"query":"CREATE TABLE foo (\\`Id\\` Int32, \\`Val\\` Int32) ENGINE = MergeTree ORDER BY Id;","fileName":"../ClickHouse/tests/queries/0_stateless/02704_storage_merge_explain_graph_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE foo (\\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE foo2 (\\`Id\\` Int32, \\`Val\\` Int32) ENGINE = MergeTree ORDER BY Id;","fileName":"../ClickHouse/tests/queries/0_stateless/02704_storage_merge_explain_graph_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE foo2 (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE foo2_dist (\\`Id\\` UInt32, \\`Val\\` String) ENGINE = Distributed(test_shard_localhost, currentDatabase(), foo2);","fileName":"../ClickHouse/tests/queries/0_stateless/02704_storage_merge_explain_graph_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE foo2_dist (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE merge1 AS foo ENGINE = Merge(currentDatabase(), '^(foo|foo2_dist)\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/02704_storage_merge_explain_graph_crash.sql","errors":[]},{"query":"CREATE TABLE 02702_logical_optimizer (a Int32, b LowCardinality(String))\nENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02702_logical_optimizer_with_nulls.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02702'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02702_logical_optimizer_with_null_column (a Nullable(Int32), b LowCardinality(String))\nENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02702_logical_optimizer_with_nulls.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02702'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 25400_dropped_tables (id Int32) Engine=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02698_marked_dropped_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 25400'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE mv_source (a Int64, insert_time DateTime) ENGINE = MergeTree() ORDER BY insert_time;","fileName":"../ClickHouse/tests/queries/0_stateless/02697_alter_dependencies.sql","errors":[]},{"query":"CREATE TABLE mv_target (a Int64, insert_time DateTime) ENGINE = MergeTree() ORDER BY insert_time;","fileName":"../ClickHouse/tests/queries/0_stateless/02697_alter_dependencies.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW source_to_target to mv_target as Select * from mv_source where a not in (Select sleepEachRow(0.1) from numbers(50));","fileName":"../ClickHouse/tests/queries/0_stateless/02697_alter_dependencies.sql","errors":[]},{"query":"CREATE TABLE test_table (n Int32, s String) ENGINE MergeTree PARTITION BY n ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/02696_ignore_inacc_tables_mat_view_atttach.sql","errors":[]},{"query":"CREATE TABLE mview_backend (n Int32, n2 Int64) ENGINE MergeTree PARTITION BY n ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/02696_ignore_inacc_tables_mat_view_atttach.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mview TO mview_backend AS SELECT n, n * n AS \"n2\" FROM test_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02696_ignore_inacc_tables_mat_view_atttach.sql","errors":[]},{"query":"CREATE TABLE test_table (n Int32, s String) ENGINE MergeTree PARTITION BY n ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/02696_ignore_inacc_tables_mat_view_atttach.sql","errors":[]},{"query":"CREATE TABLE test_table_join (\nid UInt64,\nvalue String\n) ENGINE = Join(Any, Left, id);","fileName":"../ClickHouse/tests/queries/0_stateless/02695_storage_join_insert_select_deadlock.sql","errors":[]},{"query":"create table test_local (id UInt32, path LowCardinality(String)) engine = MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02695_logical_optimizer_alias_bug.sql","errors":[]},{"query":"CREATE TABLE t1 ( k Int64, x Int64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02694_wrong_identifier_shouldnt_be_accepted.sql","errors":[]},{"query":"CREATE TABLE t2 ( x Int64 ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02694_wrong_identifier_shouldnt_be_accepted.sql","errors":[]},{"query":"create table s (k Int64, d DateTime)  Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02694_wrong_identifier_shouldnt_be_accepted.sql","errors":[]},{"query":"create temporary table temp_table3(val0 UInt64) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02693_multiple_joins_in.sql","errors":[]},{"query":"CREATE TABLE store (id UInt32, \"名称\" String, \"状态\" String) ENGINE=MergeTree() Order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02692_multiple_joins_unicode.sql","errors":[]},{"query":"CREATE TABLE location (id UInt32, name String) ENGINE=MergeTree() Order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02692_multiple_joins_unicode.sql","errors":[]},{"query":"CREATE TABLE sales (\"日期\" Date, \"店铺\" UInt32, \"地址\" UInt32, \"销售额\" Float32) ENGINE=MergeTree() Order by \"日期\";","fileName":"../ClickHouse/tests/queries/0_stateless/02692_multiple_joins_unicode.sql","errors":[]},{"query":"CREATE TABLE t1 (\\`1a\\` Nullable(Int64), \\`2b\\` Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02691_multiple_joins_backtick_identifiers.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t2 (\\`3c\\` Nullable(Int64), \\`4d\\` Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02691_multiple_joins_backtick_identifiers.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t3 (\\`5e\\` Nullable(Int64), \\`6f\\` Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02691_multiple_joins_backtick_identifiers.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t3 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t1 (\\`a\\` Nullable(Int64), \\`b\\` Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02691_multiple_joins_backtick_identifiers.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t2 (\\`c\\` Nullable(Int64), \\`d\\` Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02691_multiple_joins_backtick_identifiers.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t3 (\\`e\\` Nullable(Int64), \\`f\\` Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02691_multiple_joins_backtick_identifiers.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t3 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02691_drop_column_replicated (col1 Int64, col2 Int64, PROJECTION 02691_drop_column_replicated (SELECT * ORDER BY col1 )) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/02691_drop_column', 'r1')\nORDER BY col1;","fileName":"../ClickHouse/tests/queries/0_stateless/02691_drop_column_with_projections_replicated.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02691'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t_str (\n\\`creation_time\\` String\n)\nENGINE = MergeTree\nPARTITION BY creation_time\nORDER BY creation_time;","fileName":"../ClickHouse/tests/queries/0_stateless/02690_subquery_identifiers.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_str (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table decimal_insert_cast_issue (a Decimal(76, 0)) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02685_decimal256_various.sql","errors":[]},{"query":"create table 02681_undrop_mergetree (id Int32) Engine=MergeTree() order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02681_undrop_query.sql","errors":[{"message":"no viable alternative at input 'create table 02681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table 02681_undrop_detach (id Int32, num Int32) Engine=MergeTree() order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02681_undrop_query.sql","errors":[{"message":"no viable alternative at input 'create table 02681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table 02681_undrop_uuid_on_cluster on cluster test_shard_localhost (id Int32) Engine=MergeTree() order by id format Null;","fileName":"../ClickHouse/tests/queries/0_stateless/02681_undrop_query.sql","errors":[{"message":"no viable alternative at input 'create table 02681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table 02681_undrop_no_uuid_on_cluster on cluster test_shard_localhost (id Int32) Engine=MergeTree() order by id format Null;","fileName":"../ClickHouse/tests/queries/0_stateless/02681_undrop_query.sql","errors":[{"message":"no viable alternative at input 'create table 02681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table 02681_undrop_replicatedmergetree (id Int32) Engine=ReplicatedMergeTree('/clickhouse/tables/{database}/02681_undrop_replicatedmergetree', 'test_undrop') order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02681_undrop_query.sql","errors":[{"message":"no viable alternative at input 'create table 02681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table 02681_undrop_log (id Int32) Engine=Log();","fileName":"../ClickHouse/tests/queries/0_stateless/02681_undrop_query.sql","errors":[{"message":"no viable alternative at input 'create table 02681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table 02681_undrop_distributed (id Int32) Engine = Distributed(test_shard_localhost, currentDatabase(), 02681_undrop, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/02681_undrop_query.sql","errors":[{"message":"no viable alternative at input 'create table 02681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table 02681_undrop_multiple (id Int32) Engine=MergeTree() order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02681_undrop_query.sql","errors":[{"message":"no viable alternative at input 'create table 02681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table 02681_undrop_multiple (id Int32) Engine=MergeTree() order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02681_undrop_query.sql","errors":[{"message":"no viable alternative at input 'create table 02681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table 02681_undrop_multiple (id Int32) Engine=MergeTree() order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02681_undrop_query.sql","errors":[{"message":"no viable alternative at input 'create table 02681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table t(a UInt32) engine=MergeTree order by tuple() partition by a % 16;","fileName":"../ClickHouse/tests/queries/0_stateless/02681_aggregation_by_partitions_bug.sql","errors":[]},{"query":"CREATE TABLE foo (key UInt32, a String, b Int64, c String) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02680_mysql_ast_logical_err.sql","errors":[]},{"query":"CREATE TABLE test_null_as_default__fuzz_46 (a Nullable(DateTime64(3)), b LowCardinality(Float32) DEFAULT a + 1000) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02680_lc_null_as_default.sql","errors":[]},{"query":"CREATE TABLE test_tuple (\\`p\\` DateTime, \\`i\\` int, \\`j\\` int) ENGINE = MergeTree PARTITION BY (toDate(p), i) ORDER BY j SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02680_illegal_type_of_filter_projection.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_tuple (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE test (ad DEFAULT *); -- { clientError SYNTAX_ERROR } CREATE TEMPORARY TABLE test (ad INT DEFAULT *); -- { clientError SYNTAX_ERROR }\nCREATE TEMPORARY TABLE test (ad DEFAULT * NOT NULL); -- { clientError SYNTAX_ERROR }\nCREATE TEMPORARY TABLE test (ad DEFAULT t.* NOT NULL); -- { clientError SYNTAX_ERROR }\n","fileName":"../ClickHouse/tests/queries/0_stateless/02680_default_star.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE test (ad DEFAULT * NOT NULL'","startColumn":46,"startLine":2,"endColumn":50,"endLine":2}]},{"query":"CREATE TABLE 02680_datetime64_monotonic_check (\\`t\\` DateTime64(3), \\`x\\` Nullable(Decimal(18, 14))) ENGINE = MergeTree\nPARTITION BY toYYYYMMDD(t)\nORDER BY x SETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02680_datetime64_monotonic_check.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02680'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02680_datetime_monotonic_check_lc (\\`timestamp\\` LowCardinality(UInt32)) ENGINE = MergeTree\nORDER BY timestamp\nSETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02680_datetime64_monotonic_check.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02680'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02679_explain_merge_tree_prewhere_row_policy.sql","errors":[]},{"query":"CREATE ROW POLICY test_row_policy ON test_table USING id >= 5 TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02679_explain_merge_tree_prewhere_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE t1(ID UInt64, name String) engine=MergeTree order by ID;","fileName":"../ClickHouse/tests/queries/0_stateless/02678_explain_pipeline_graph_with_projection.sql","errors":[]},{"query":"CREATE TABLE test_grace_hash (id UInt32, value UInt64) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02677_grace_hash_limit_race.sql","errors":[]},{"query":"CREATE TABLE t_get_subcolumn (id UInt64, n Nested(u UInt64, s String)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02677_get_subcolumn_array_of_tuples.sql","errors":[]},{"query":"create table t (a UInt64, b UInt64) engine=MergeTree() order by (a);","fileName":"../ClickHouse/tests/queries/0_stateless/02676_distinct_reading_in_order_analyzer.sql","errors":[]},{"query":"CREATE TABLE test (i UInt64) Engine = MergeTree() order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/02676_analyzer_limit_offset.sql","errors":[]},{"query":"CREATE TABLE t_sparse_columns_clear (arr Array(UInt64), v UInt64) ENGINE = MergeTree ORDER BY tuple()\nSETTINGS\nratio_of_defaults_for_sparse_serialization = 0.9,\nmin_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02675_sparse_columns_clear_column.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02675_predicate_push_down_filled_join_fix.sql","errors":[]},{"query":"CREATE TABLE test_table_join (\nid UInt64,\nvalue String\n) ENGINE = Join(All, inner, id);","fileName":"../ClickHouse/tests/queries/0_stateless/02675_predicate_push_down_filled_join_fix.sql","errors":[]},{"query":"create table m3(a Int64, b UInt64) Engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02674_trivial_count_analyzer.sql","errors":[]},{"query":"create table replacing_m3(a Int64, b UInt64) Engine=ReplacingMergeTree() order by (a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/02674_trivial_count_analyzer.sql","errors":[]},{"query":"CREATE TABLE t_constant_index (\nid UInt64,\nINDEX t_constant_index 'foo' TYPE set(2) GRANULARITY 1\n) ENGINE = MergeTree\nORDER BY id; -- { serverError INCORRECT_QUERY }\nCREATE TABLE t_constant_index\n(\nid UInt64,\nINDEX t_constant_index id + rand() TYPE set(2) GRANULARITY 1\n) ENGINE = MergeTree\nORDER BY id; -- { serverError BAD_ARGUMENTS }\nCREATE TABLE t_constant_index\n(\nid UInt64,\nINDEX t_constant_index id * 2 TYPE set(2) GRANULARITY 1\n) ENGINE = MergeTree\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02670_constant_skip_index.sql","errors":[]},{"query":"CREATE TABLE t_modify_to_nullable (key UInt64, id UInt64, s String) ENGINE = MergeTree ORDER BY id PARTITION BY key\nSETTINGS min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02669_alter_modify_to_nullable.sql","errors":[]},{"query":"CREATE TABLE 02668_logical_optimizer (a Int32, b LowCardinality(String))\nENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02668_logical_optimizer_removing_redundant_checks.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02668'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t (x UInt8, PROJECTION p (SELECT x GROUP BY x)) ENGINE = MergeTree ORDER BY () SETTINGS allow_experimental_block_number_column=true;","fileName":"../ClickHouse/tests/queries/0_stateless/02668_column_block_number_with_projections.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (x UInt8, PROJECTION p (SELECT x GROUP BY x)) ENGINE = MergeTree ORDER BY ()'","startColumn":90,"startLine":1,"endColumn":91,"endLine":1}]},{"query":"CREATE TABLE test (id UInt32, a UInt32) ENGINE = MergeTree ORDER BY id SETTINGS allow_experimental_block_number_column = true, vertical_merge_algorithm_min_rows_to_activate = 1,\nvertical_merge_algorithm_min_columns_to_activate = 0,\nmin_rows_for_wide_part = 1,\nmin_bytes_for_wide_part = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02668_column_block_number_vertical_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (id UInt32, a UInt32) ENGINE = MergeTree ORDER BY id SETTINGS allow_experimental_block_number_column = true'","startColumn":121,"startLine":1,"endColumn":125,"endLine":1}]},{"query":"CREATE TABLE test (id UInt32, a UInt32) ENGINE = MergeTree ORDER BY id SETTINGS allow_experimental_block_number_column = true;","fileName":"../ClickHouse/tests/queries/0_stateless/02668_column_block_number.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (id UInt32, a UInt32) ENGINE = MergeTree ORDER BY id SETTINGS allow_experimental_block_number_column = true'","startColumn":121,"startLine":1,"endColumn":125,"endLine":1}]},{"query":"CREATE TABLE t_sparse_mutations_5 (k UInt64, t Tuple(UInt64, UInt64)) ENGINE = MergeTree ORDER BY k\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02662_sparse_columns_mutations_5.sql","errors":[]},{"query":"CREATE TABLE t_sparse_mutations_4 (k UInt64, v UInt64) ENGINE = MergeTree ORDER BY k\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02662_sparse_columns_mutations_4.sql","errors":[]},{"query":"CREATE TABLE t_sparse_mutations_3 (key UInt8, id UInt64, s String) ENGINE = MergeTree ORDER BY id PARTITION BY key\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02662_sparse_columns_mutations_3.sql","errors":[]},{"query":"CREATE TABLE t_sparse_mutations_2 (key UInt8, id UInt64, s String) ENGINE = MergeTree ORDER BY id PARTITION BY key\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02662_sparse_columns_mutations_2.sql","errors":[]},{"query":"CREATE TABLE t_sparse_mutations_1 (key UInt8, id UInt64, s String) ENGINE = MergeTree ORDER BY id PARTITION BY key\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02662_sparse_columns_mutations_1.sql","errors":[]},{"query":"create table test(\\`a\\` Nullable(Int32), \\`b\\` Nullable(Int32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02662_first_last_value.sql","errors":[{"message":"no viable alternative at input 'create table test(\\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE test ( \\`c_id\\` String,\n\\`p_id\\` String,\n\\`d\\` String\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/test_table', '1')\nORDER BY (c_id, p_id);","fileName":"../ClickHouse/tests/queries/0_stateless/02597_projection_materialize_and_replication.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test ( \\'","startColumn":20,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE test ( \\`c_id\\` String,\n\\`p_id\\` String,\n\\`d\\` String\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/test_table', '1')\nORDER BY (c_id, p_id);","fileName":"../ClickHouse/tests/queries/0_stateless/02597_column_update_and_replication.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test ( \\'","startColumn":20,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE test ( \\`c_id\\` String,\n\\`p_id\\` String,\n\\`d\\` String\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/test_table', '1')\nORDER BY (c_id, p_id);","fileName":"../ClickHouse/tests/queries/0_stateless/02597_column_delete_and_replication.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test ( \\'","startColumn":20,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"create table t(a UInt64) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02582_async_reading_with_small_limit.sql","errors":[]},{"query":"CREATE TABLE mytable (\noperand Float64,\nlow     Float64,\nhigh     Float64,\ncount   UInt64,\nPRIMARY KEY (operand, low, high, count)\n) ENGINE = MergeTree();","fileName":"../ClickHouse/tests/queries/0_stateless/02581_width_bucket.sql","errors":[]},{"query":"CREATE TABLE 02581_trips(id UInt32, description String, id2 UInt32, PRIMARY KEY id) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02581_share_big_sets_between_mutation_tasks_with_storage_set.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02581'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02581_set (id UInt32) ENGINE = Set;","fileName":"../ClickHouse/tests/queries/0_stateless/02581_share_big_sets_between_mutation_tasks_with_storage_set.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02581'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02581_trips(id UInt32, description String, id2 UInt32, PRIMARY KEY id) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02581_share_big_sets_between_mutation_tasks_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02581'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02581_trips(id UInt32, id2 UInt32, description String) ENGINE=MergeTree ORDER BY id SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02581_share_big_sets_between_mutation_tasks.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02581'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02581_trips(id UInt32, description String, id2 UInt32, PRIMARY KEY id) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02581_share_big_sets_between_multiple_mutations_tasks_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02581'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DATABASE {old_db_name:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/02578_parameterized_rename_queries.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE {new_db_name:Identifier}.{old_tbl_name:Identifier} (a UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02578_parameterized_rename_queries.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {new_db_name:Identifier}.{old_dict_name:Identifier} (id UInt64, val UInt8) PRIMARY KEY id SOURCE(NULL()) LAYOUT(FLAT()) LIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02578_parameterized_rename_queries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE {new_db_name:Identifier}.{old_tbl_name:Identifier} (a UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02578_parameterized_rename_queries.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {new_db_name:Identifier}.{old_dict_name:Identifier} (id UInt64, val UInt8) PRIMARY KEY id SOURCE(NULL()) LAYOUT(FLAT()) LIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02578_parameterized_rename_queries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE ipv4_t64 (uid Int16, ip IPv4 CODEC(T64), INDEX ip_idx ip TYPE bloom_filter GRANULARITY 4) ENGINE=MergeTree ORDER BY uid;","fileName":"../ClickHouse/tests/queries/0_stateless/02578_ipv4_codec_t64.sql","errors":[]},{"query":"CREATE TABLE 02577_keepermap_delete_update (key UInt64, value String, value2 UInt64) ENGINE=KeeperMap('/' ||  currentDatabase() || '/test02577_keepermap_delete_update') PRIMARY KEY(key);","fileName":"../ClickHouse/tests/queries/0_stateless/02577_keepermap_delete_update.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02577'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE m (\n\\`a\\` String,\n\\`f\\` UInt8 DEFAULT 0\n)\nENGINE = Merge(currentDatabase(), '^(t1|t2)\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/02575_merge_prewhere_materialized.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE m (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t1 (\na String,\nf UInt8 MATERIALIZED 1\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02575_merge_prewhere_materialized.sql","errors":[]},{"query":"CREATE TABLE t2 (\na String,\nf UInt8 DEFAULT 2\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02575_merge_prewhere_materialized.sql","errors":[]},{"query":"CREATE TABLE m (\n\\`a\\` String,\n\\`f\\` UInt8 EPHEMERAL 0\n)\nENGINE = Merge(currentDatabase(), '^(t1|t2)\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/02575_merge_prewhere_ephemeral.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE m (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t1 (\na String,\nf UInt8 DEFAULT 1\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02575_merge_prewhere_ephemeral.sql","errors":[]},{"query":"CREATE TABLE t2 (\na String,\nf UInt8 DEFAULT 2\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02575_merge_prewhere_ephemeral.sql","errors":[]},{"query":"CREATE TABLE m (\na String,\ndate Date,\nf UInt8\n)\nENGINE = Merge(currentDatabase(), '^(t1|t2)\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/02575_merge_prewhere_different_default_kind.sql","errors":[]},{"query":"CREATE TABLE t1 (\na String,\ndate Date,\nf UInt8 ALIAS 0\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02575_merge_prewhere_different_default_kind.sql","errors":[]},{"query":"CREATE TABLE t2 (\na String,\ndate Date,\nf UInt8,\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02575_merge_prewhere_different_default_kind.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 (\\na String,\\ndate Date,\\nf UInt8,\\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"CREATE TABLE m (\n\\`a\\` String,\n\\`f\\` UInt8 DEFAULT 0\n)\nENGINE = Merge(currentDatabase(), '^(t1|t2)\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/02575_merge_prewhere_default_expression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE m (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t1 (\na String,\nf UInt8 DEFAULT 1\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02575_merge_prewhere_default_expression.sql","errors":[]},{"query":"CREATE TABLE t2 (\na String,\nf UInt8 DEFAULT 2\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02575_merge_prewhere_default_expression.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE datetime__fuzz_14 (\\`d\\` LowCardinality(Nullable(UInt128)));","fileName":"../ClickHouse/tests/queries/0_stateless/02575_map_hashing_msan.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE datetime__fuzz_14 (\\'","startColumn":42,"startLine":1,"endColumn":43,"endLine":1}]},{"query":"CREATE TABLE table1__fuzz_19 (\\`id\\` LowCardinality(UInt16), \\`v\\` DateTime64(3, 'UTC')) ENGINE = ReplacingMergeTree(v) PARTITION BY id % 200 ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02574_suspicious_low_cardinality_msan.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE table1__fuzz_19 (\\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE datetime (\\`d\\` DateTime('UTC'));","fileName":"../ClickHouse/tests/queries/0_stateless/02573_quantile_fuse_msan.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE datetime (\\'","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"create table log_proxy_02572 as system.query_log engine=Distributed('test_shard_localhost', currentDatabase(), 'receiver_02572');","fileName":"../ClickHouse/tests/queries/0_stateless/02572_system_logs_materialized_views_ignore_errors.sql","errors":[]},{"query":"create materialized view push_to_logs_proxy_mv_02572 to log_proxy_02572 as select * from system.query_log;","fileName":"../ClickHouse/tests/queries/0_stateless/02572_system_logs_materialized_views_ignore_errors.sql","errors":[]},{"query":"create table data_02572 (key Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02572_materialized_views_ignore_errors.sql","errors":[]},{"query":"create table proxy_02572 (key Int) engine=Distributed('test_shard_localhost', currentDatabase(), 'receiver_02572');","fileName":"../ClickHouse/tests/queries/0_stateless/02572_materialized_views_ignore_errors.sql","errors":[]},{"query":"create table receiver_02572 as data_02572;","fileName":"../ClickHouse/tests/queries/0_stateless/02572_materialized_views_ignore_errors.sql","errors":[]},{"query":"CREATE TABLE ttttttt (\n\\`timestamp\\` DateTime,\n\\`col1\\` Float64,\n\\`col2\\` Float64,\n\\`col3\\` Float64\n)\nENGINE = MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02569_order_by_aggregation_result.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ttttttt (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE table1 (\nid String,\ndevice UUID\n)\nENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02569_order_by_aggregation_result.sql","errors":[]},{"query":"CREATE TABLE t1 (c0 Int32, PRIMARY KEY (c0)) ENGINE=MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/02568_and_consistency.sql","errors":[]},{"query":"CREATE TABLE t2(c0 Int32) ENGINE = MergeTree ORDER BY c0;","fileName":"../ClickHouse/tests/queries/0_stateless/02567_and_consistency.sql","errors":[]},{"query":"CREATE TABLE t_update_empty_nested (\n\\`id\\` UInt32,\n\\`nested.arr1\\` Array(UInt64),\n)\nENGINE = MergeTree\nORDER BY id\nSETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02565_update_empty_nested.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_update_empty_nested (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE mytable (\ntimestamp        UInt64,\ninsert_timestamp UInt64,\nkey              UInt64,\nvalue            Float64\n) ENGINE = ReplacingMergeTree(insert_timestamp)\nPRIMARY KEY (key, timestamp)\nORDER BY (key, timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/02564_read_in_order_final_desc.sql","errors":[]},{"query":"CREATE TABLE t1 (a UInt64, b UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02564_analyzer_cross_to_inner.sql","errors":[]},{"query":"CREATE TABLE t2 (a UInt64, b UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02564_analyzer_cross_to_inner.sql","errors":[]},{"query":"CREATE TABLE t3 (a UInt64, b UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02564_analyzer_cross_to_inner.sql","errors":[]},{"query":"CREATE DATABASE 02563_db;","fileName":"../ClickHouse/tests/queries/0_stateless/02563_analyzer_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 02563'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 02563_db.test_merge_table_1 (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02563_analyzer_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02563'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02563_db.test_merge_table_2 (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02563_analyzer_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02563'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02563_db.test_merge_table (\nid UInt64,\nvalue String\n) ENGINE=Merge(02563_db, '^test_merge_table');","fileName":"../ClickHouse/tests/queries/0_stateless/02563_analyzer_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02563'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02563_db.t_1 (\ntimestamp DateTime64(9),\na String,\nb String\n)\nENGINE = MergeTree\nPARTITION BY formatDateTime(toStartOfMinute(timestamp), '%Y%m%d%H', 'UTC')\nORDER BY (timestamp, a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/02563_analyzer_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02563'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02563_db.dist_t_1 (timestamp DateTime64(9), a String, b String) ENGINE = Distributed('test_shard_localhost', '02563_db', 't_1');","fileName":"../ClickHouse/tests/queries/0_stateless/02563_analyzer_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02563'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02563_db.m ENGINE = Merge('02563_db', '^dist_');","fileName":"../ClickHouse/tests/queries/0_stateless/02563_analyzer_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02563'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE test_table (string_value String) ENGINE = MergeTree ORDER BY string_value SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02561_sorting_constants_and_distinct_crash.sql","errors":[]},{"query":"create table tvm (c0 UInt64, c1 UInt64, c2 UInt64, c3 UInt64, c4 UInt64, c5 UInt64, c6 UInt64, c7 UInt64, c8 UInt64, c9 UInt64, c10 UInt64, c11 UInt64, c12 UInt64, c13 UInt64, c14 UInt64, c15 UInt64, c16 UInt64, c17 UInt64, c18 UInt64, c19 UInt64, c20 UInt64, c21 UInt64, c22 UInt64, c23 UInt64, c24 UInt64, c25 UInt64, c26 UInt64, c27 UInt64, c28 UInt64, c29 UInt64, c30 UInt64, c31 UInt64, c32 UInt64, c33 UInt64, c34 UInt64, c35 UInt64, c36 UInt64, c37 UInt64, c38 UInt64, c39 UInt64, c40 UInt64, c41 UInt64, c42 UInt64, c43 UInt64, c44 UInt64, c45 UInt64, c46 UInt64, c47 UInt64, c48 UInt64, c49 UInt64, c50 UInt64, c51 UInt64, c52 UInt64, c53 UInt64, c54 UInt64, c55 UInt64, c56 UInt64, c57 UInt64, c58 UInt64, c59 UInt64, c60 UInt64, c61 UInt64, c62 UInt64, c63 UInt64, c64 UInt64, c65 UInt64, c66 UInt64, c67 UInt64, c68 UInt64, c69 UInt64, c70 UInt64, c71 UInt64, c72 UInt64, c73 UInt64, c74 UInt64, c75 UInt64, c76 UInt64, c77 UInt64, c78 UInt64, c79 UInt64, c80 UInt64, c81 UInt64, c82 UInt64, c83 UInt64, c84 UInt64, c85 UInt64, c86 UInt64, c87 UInt64, c88 UInt64, c89 UInt64, c90 UInt64, c91 UInt64, c92 UInt64, c93 UInt64, c94 UInt64, c95 UInt64, c96 UInt64, c97 UInt64, c98 UInt64, c99 UInt64, c100 UInt64, c101 UInt64, c102 UInt64, c103 UInt64, c104 UInt64, c105 UInt64, c106 UInt64, c107 UInt64, c108 UInt64, c109 UInt64, c110 UInt64, c111 UInt64, c112 UInt64, c113 UInt64, c114 UInt64, c115 UInt64, c116 UInt64, c117 UInt64, c118 UInt64, c119 UInt64, c120 UInt64, c121 UInt64, c122 UInt64, c123 UInt64, c124 UInt64, c125 UInt64, c126 UInt64, c127 UInt64, c128 UInt64, c129 UInt64, c130 UInt64, c131 UInt64, c132 UInt64, c133 UInt64, c134 UInt64, c135 UInt64, c136 UInt64, c137 UInt64, c138 UInt64, c139 UInt64, c140 UInt64, c141 UInt64, c142 UInt64, c143 UInt64, c144 UInt64, c145 UInt64, c146 UInt64, c147 UInt64, c148 UInt64, c149 UInt64, c150 UInt64, c151 UInt64, c152 UInt64, c153 UInt64, c154 UInt64, c155 UInt64, c156 UInt64, c157 UInt64, c158 UInt64, c159 UInt64, c160 UInt64, c161 UInt64, c162 UInt64, c163 UInt64, c164 UInt64, c165 UInt64, c166 UInt64, c167 UInt64, c168 UInt64, c169 UInt64, c170 UInt64, c171 UInt64, c172 UInt64, c173 UInt64, c174 UInt64, c175 UInt64, c176 UInt64, c177 UInt64, c178 UInt64, c179 UInt64, c180 UInt64, c181 UInt64, c182 UInt64, c183 UInt64, c184 UInt64, c185 UInt64, c186 UInt64, c187 UInt64, c188 UInt64, c189 UInt64, c190 UInt64, c191 UInt64, c192 UInt64, c193 UInt64, c194 UInt64, c195 UInt64, c196 UInt64, c197 UInt64, c198 UInt64, c199 UInt64, c200 UInt64, c201 UInt64, c202 UInt64, c203 UInt64, c204 UInt64, c205 UInt64, c206 UInt64, c207 UInt64, c208 UInt64, c209 UInt64, c210 UInt64, c211 UInt64, c212 UInt64, c213 UInt64, c214 UInt64, c215 UInt64, c216 UInt64, c217 UInt64, c218 UInt64, c219 UInt64, c220 UInt64, c221 UInt64, c222 UInt64, c223 UInt64, c224 UInt64, c225 UInt64, c226 UInt64, c227 UInt64, c228 UInt64, c229 UInt64, c230 UInt64, c231 UInt64, c232 UInt64, c233 UInt64, c234 UInt64, c235 UInt64, c236 UInt64, c237 UInt64, c238 UInt64, c239 UInt64, c240 UInt64, c241 UInt64, c242 UInt64, c243 UInt64, c244 UInt64, c245 UInt64, c246 UInt64, c247 UInt64, c248 UInt64, c249 UInt64, c250 UInt64, c251 UInt64, c252 UInt64, c253 UInt64, c254 UInt64, c255 UInt64, c256 UInt64, c257 UInt64, c258 UInt64, c259 UInt64, c260 UInt64, c261 UInt64, c262 UInt64, c263 UInt64, c264 UInt64, c265 UInt64, c266 UInt64, c267 UInt64, c268 UInt64, c269 UInt64, c270 UInt64, c271 UInt64, c272 UInt64, c273 UInt64, c274 UInt64, c275 UInt64, c276 UInt64, c277 UInt64, c278 UInt64, c279 UInt64, c280 UInt64, c281 UInt64, c282 UInt64, c283 UInt64, c284 UInt64, c285 UInt64, c286 UInt64, c287 UInt64, c288 UInt64, c289 UInt64, c290 UInt64, c291 UInt64, c292 UInt64, c293 UInt64, c294 UInt64, c295 UInt64, c296 UInt64, c297 UInt64, c298 UInt64, c299 UInt64) engine = MergeTree order by tuple() settings min_rows_for_wide_part = 10, min_bytes_for_wide_part=0, vertical_merge_algorithm_min_rows_to_activate=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02560_vertical_merge_memory_usage.sql","errors":[]},{"query":"CREATE TABLE nums(n UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02560_quantile_min_max.sql","errors":[]},{"query":"create table test (x UInt64) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02560_null_as_default.sql","errors":[]},{"query":"create table test (x LowCardinality(String) default 'Hello') engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02560_null_as_default.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02560_analyzer_materialized_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_materialized_view (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id AS SELECT id, value FROM test_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02560_analyzer_materialized_view.sql","errors":[]},{"query":"CREATE TABLE test_table_data (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02560_analyzer_materialized_view.sql","errors":[]},{"query":"create table tab (d Int64, s AggregateFunction(groupUniqArrayArray, Array(UInt64)), c SimpleAggregateFunction(groupUniqArrayArray, Array(UInt64))) engine = SummingMergeTree() order by d;","fileName":"../ClickHouse/tests/queries/0_stateless/02560_agg_state_deserialization_hash_table_crash.sql","errors":[]},{"query":"CREATE TABLE data_compact (\n\\`root.array\\` Array(UInt8),\n)\nENGINE = MergeTree()\nORDER BY tuple()\nSETTINGS min_rows_for_wide_part=100, min_bytes_for_wide_part=1e9;","fileName":"../ClickHouse/tests/queries/0_stateless/02559_nested_multiple_levels_default.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE data_compact (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE data_wide (\n\\`root.array\\` Array(UInt8),\n)\nENGINE = MergeTree()\nORDER BY tuple()\nSETTINGS min_rows_for_wide_part=0, min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02559_nested_multiple_levels_default.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE data_wide (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_02559 (a Int64, b Int64, c Int64) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02559_multiple_read_steps_in_prewhere_reuse_computation.sql","errors":[]},{"query":"CREATE TABLE t_02559 ( key UInt64,\nvalue Array(String))\nENGINE = MergeTree\nORDER BY key\nSETTINGS index_granularity=400, min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02559_multiple_read_steps_in_prewhere_missing_columns_2.sql","errors":[]},{"query":"CREATE TABLE test_02559 (x UInt8, s String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02559_multiple_read_steps_in_prewhere_missing_columns.sql","errors":[]},{"query":"CREATE TABLE test_02559__fuzz_20(\\`id1\\` Int16, \\`id2\\` Decimal(18, 14)) ENGINE = MergeTree ORDER BY id1;","fileName":"../ClickHouse/tests/queries/0_stateless/02559_multiple_read_steps_in_prewhere_fuzz.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_02559__fuzz_20(\\'","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"CREATE TABLE test_02559 (id1 UInt64, id2 UInt64) ENGINE=MergeTree ORDER BY id1 SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02559_multiple_read_steps_in_prewhere.sql","errors":[]},{"query":"CREATE ROW POLICY 02559_filter_1 ON test_02559 USING id2=2 AS permissive TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02559_multiple_read_steps_in_prewhere.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY 02559_filter_2 ON test_02559 USING id2<=2 AS restrictive TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02559_multiple_read_steps_in_prewhere.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE ip_bloom (\n\\`a\\` UInt32,\n\\`ip4\\` Nullable(IPv4),\n\\`ip6\\` Nullable(IPv6),\nINDEX x4 ip4 TYPE bloom_filter(0.1) GRANULARITY 3,\nINDEX x6 ip6 TYPE bloom_filter(0.1) GRANULARITY 3\n)\nENGINE = MergeTree\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02559_ip_types_bloom.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ip_bloom (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE check_system_tables (\nname1 UInt8,\nname2 UInt8,\nname3 UInt8\n) ENGINE = MergeTree()\nORDER BY name1\nPARTITION BY name2\nSAMPLE BY name1\nSETTINGS min_bytes_for_wide_part = 0, compress_marks=false, compress_primary_key=false;","fileName":"../ClickHouse/tests/queries/0_stateless/02559_add_parts.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE check_system_tables (\\nname1 UInt8,\\nname2 UInt8,\\nname3 UInt8\\n) ENGINE = MergeTree()\\nORDER BY name1\\nPARTITION BY name2\\nSAMPLE BY name1\\nSETTINGS min_bytes_for_wide_part = 0, compress_marks=false'","startColumn":53,"startLine":9,"endColumn":58,"endLine":9}]},{"query":"CREATE TABLE test_2554_log (n UInt32) ENGINE = Log SETTINGS storage_policy = 'default';","fileName":"../ClickHouse/tests/queries/0_stateless/02554_log_faminy_support_storage_policy.sql","errors":[]},{"query":"CREATE TABLE test_2554_tinylog (n UInt32) ENGINE = Log SETTINGS storage_policy = 'default';","fileName":"../ClickHouse/tests/queries/0_stateless/02554_log_faminy_support_storage_policy.sql","errors":[]},{"query":"CREATE TABLE test_2554_stripelog (n UInt32) ENGINE = StripeLog SETTINGS storage_policy = 's3_cache';","fileName":"../ClickHouse/tests/queries/0_stateless/02554_log_faminy_support_storage_policy.sql","errors":[]},{"query":"CREATE VIEW X TO Y AS SELECT 1; -- { clientError SYNTAX_ERROR } ","fileName":"../ClickHouse/tests/queries/0_stateless/02554_invalid_create_view_syntax.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW X TO'","startColumn":14,"startLine":1,"endColumn":16,"endLine":1}]},{"query":"CREATE TABLE json_columns (n UInt32, s String) ENGINE = MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/02554_format_json_columns_for_empty.sql","errors":[]},{"query":"CREATE TABLE test_grouping_sets_predicate (\nday_ Date,\ntype_1 String\n)\nENGINE=MergeTree\nORDER BY day_;","fileName":"../ClickHouse/tests/queries/0_stateless/02554_fix_grouping_sets_predicate_push_down.sql","errors":[]},{"query":"CREATE TABLE t_json_analyzer (a Object('json')) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02553_type_object_analyzer.sql","errors":[]},{"query":"CREATE TABLE t_json_attach_partition(b UInt64, c Object('json')) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02553_type_json_attach_partition.sql","errors":[]},{"query":"CREATE TABLE t_json_attach_partition(b UInt64, c JSON) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02553_new_type_json_attach_partition.sql","errors":[]},{"query":"CREATE TABLE t_sparse_intersect (a UInt64, c Int64) ENGINE = MergeTree ORDER BY tuple() SETTINGS ratio_of_defaults_for_sparse_serialization = 0.8;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_sparse_columns_intersect.sql","errors":[]},{"query":"CREATE TABLE tab (key Tuple(UInt64, UInt64), val UInt64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_siphash128_reference.sql","errors":[]},{"query":"CREATE TABLE sipHashKeyed_test ENGINE = Memory() AS SELECT 1 a, 'test' b;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_siphash128_reference.sql","errors":[]},{"query":"CREATE TABLE sipHashKeyed_keys (key Tuple(UInt64, UInt64), val UInt64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_siphash128_reference.sql","errors":[]},{"query":"CREATE TABLE sipHashKeyed_keys (key0 UInt64, key1 UInt64, val UInt64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_siphash128_reference.sql","errors":[]},{"query":"CREATE TABLE sipHashKeyed_keys (key0 UInt64, key1 UInt64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_siphash128_reference.sql","errors":[]},{"query":"CREATE TABLE store_sales (\n\\`ss_sold_date_sk\\` Float64,\n\\`ss_sold_time_sk\\` Float64,\n\\`ss_customer_sk\\` Float64,\n\\`ss_cdemo_sk\\` Float64,\n\\`ss_hdemo_sk\\` Float64\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_regression_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE store_sales (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t0 (c0 Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_inner_join_with_where_true.sql","errors":[]},{"query":"CREATE TABLE t1 (c1 Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_inner_join_with_where_true.sql","errors":[]},{"query":"CREATE TABLE src (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_check_referential_table_dependencies.sql","errors":[]},{"query":"CREATE TABLE dst (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_check_referential_table_dependencies.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv TO dst AS SELECT x FROM src;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_check_referential_table_dependencies.sql","errors":[]},{"query":"CREATE TABLE src (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_check_referential_table_dependencies.sql","errors":[]},{"query":"CREATE TABLE dst (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_check_referential_table_dependencies.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv TO dst AS SELECT x FROM src;","fileName":"../ClickHouse/tests/queries/0_stateless/02552_check_referential_table_dependencies.sql","errors":[]},{"query":"CREATE TABLE ip4test (ip IPv4) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02551_ipv4_implicit_uint64.sql","errors":[]},{"query":"create table test as format(TSV, 'cust_id UInt128', '20210129005809043707\\\\n123456789\\\\n987654321');","fileName":"../ClickHouse/tests/queries/0_stateless/02542_table_function_format.sql","errors":[]},{"query":"CREATE TABLE test_tuple_element (\ntuple Tuple(k1 Nullable(UInt64), k2 UInt64)\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02541_tuple_element_with_null.sql","errors":[]},{"query":"CREATE TABLE t1_local ON CLUSTER test_shard_localhost(partition_col_1 String, tc1 int,tc2 int) ENGINE=MergeTree() PARTITION BY partition_col_1 ORDER BY tc1;","fileName":"../ClickHouse/tests/queries/0_stateless/02541_lightweight_delete_on_cluster.sql","errors":[]},{"query":"CREATE TABLE 02540_date (txt String, x Date) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02540_date_column_consistent_insert_behaviour.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02540'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue_alias ALIAS concat('AliasValue_', toString(id)),\nvalue_materialized MATERIALIZED concat('MaterializedValue_', toString(id))\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02540_analyzer_matcher_alias_materialized_columns.sql","errors":[]},{"query":"CREATE TABLE t_compact_vertical_merge (id UInt64, s LowCardinality(String), arr Array(UInt64)) ENGINE MergeTree ORDER BY id\nSETTINGS\nindex_granularity = 16,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 100,\nvertical_merge_algorithm_min_rows_to_activate = 1,\nvertical_merge_algorithm_min_columns_to_activate = 1,\nallow_vertical_merges_from_compact_to_wide_parts = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02539_vertical_merge_compact_parts.sql","errors":[]},{"query":"CREATE TABLE tbl ( v1_gor Nullable(Float64) CODEC(Gorilla),\nv1_fpc Nullable(Float64) CODEC(FPC),\nv2_gor Array(Float64) CODEC(Gorilla),\nv2_fpc Array(Float64) CODEC(FPC),\nv3_gor Array(Array(Float64)) CODEC(Gorilla),\nv3_fpc Array(Array(Float64)) CODEC(FPC),\nv4_gor Array(Nullable(Float64)) CODEC(Gorilla),\nv4_fpc Array(Nullable(Float64)) CODEC(FPC),\nv5_gor Array(Tuple(Float64)) CODEC(Gorilla),\nv5_fpc Array(Tuple(Float64)) CODEC(FPC),\nv6_gor Tuple(Float64) CODEC(Gorilla),\nv6_fpc Tuple(Float64) CODEC(FPC),\nv7_gor Tuple(Tuple(Float64)) CODEC(Gorilla),\nv7_fpc Tuple(Tuple(Float64)) CODEC(FPC),\nv8_gor Tuple(Nullable(Float64)) CODEC(Gorilla),\nv8_fpc Tuple(Nullable(Float64)) CODEC(FPC),\nv9_gor Tuple(Array(Float64)) CODEC(Gorilla),\nv9_fpc Tuple(Array(Float64)) CODEC(FPC),\n) Engine = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02538_nullable_array_tuple_timeseries.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tbl ( v1_gor Nullable(Float64) CODEC(Gorilla),\\nv1_fpc Nullable(Float64) CODEC(FPC),\\nv2_gor Array(Float64) CODEC(Gorilla),\\nv2_fpc Array(Float64) CODEC(FPC),\\nv3_gor Array(Array(Float64)) CODEC(Gorilla),\\nv3_fpc Array(Array(Float64)) CODEC(FPC),\\nv4_gor Array(Nullable(Float64)) CODEC(Gorilla),\\nv4_fpc Array(Nullable(Float64)) CODEC(FPC),\\nv5_gor Array(Tuple(Float64)) CODEC(Gorilla),\\nv5_fpc Array(Tuple(Float64)) CODEC(FPC),\\nv6_gor Tuple(Float64) CODEC(Gorilla),\\nv6_fpc Tuple(Float64) CODEC(FPC),\\nv7_gor Tuple(Tuple(Float64)) CODEC(Gorilla),\\nv7_fpc Tuple(Tuple(Float64)) CODEC(FPC),\\nv8_gor Tuple(Nullable(Float64)) CODEC(Gorilla),\\nv8_fpc Tuple(Nullable(Float64)) CODEC(FPC),\\nv9_gor Tuple(Array(Float64)) CODEC(Gorilla),\\nv9_fpc Tuple(Array(Float64)) CODEC(FPC),\\n)'","startColumn":0,"startLine":19,"endColumn":1,"endLine":19}]},{"query":"CREATE TABLE 02538_bf_ngrambf_map_values_test (\\`row_id\\` Int128, \\`map\\` Map(String, String), \\`map_fixed\\` Map(FixedString(2), String), INDEX map_values_ngrambf mapKeys(map) TYPE ngrambf_v1(4, 256, 2, 0) GRANULARITY 1,\nINDEX map_fixed_values_ngrambf mapKeys(map_fixed) TYPE ngrambf_v1(4, 256, 2, 0) GRANULARITY 1)\nENGINE = MergeTree\nORDER BY row_id\nSETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02538_ngram_bf_index_with_null.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02538'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE test_table_data (\nid UInt64,\nvalue String\n) ENGINE=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02538_analyzer_create_table_as_select.sql","errors":[]},{"query":"CREATE TABLE test_table ENGINE=MergeTree() ORDER BY tuple() AS SELECT * FROM test_table_data;","fileName":"../ClickHouse/tests/queries/0_stateless/02538_analyzer_create_table_as_select.sql","errors":[]},{"query":"CREATE TABLE wrong_metadata( column1 UInt64,\ncolumn2 UInt64,\ncolumn3 UInt64\n)\nENGINE ReplicatedMergeTree('/test/{database}/tables/wrong_metadata', '1')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02538_alter_rename_sequence.sql","errors":[]},{"query":"CREATE TABLE wrong_metadata_wide( column1 UInt64,\ncolumn2 UInt64,\ncolumn3 UInt64\n)\nENGINE ReplicatedMergeTree('/test/{database}/tables/wrong_metadata_wide', '1')\nORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02538_alter_rename_sequence.sql","errors":[]},{"query":"CREATE TABLE test_tab (id UInt32, haystack String, needle String, replacement String)\nengine = MergeTree()\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02536_replace_with_nonconst_needle_and_replacement.sql","errors":[]},{"query":"CREATE TABLE test_tab (id UInt32, haystack String, needle String, replacement String)\nengine = MergeTree()\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02536_replace_with_nonconst_needle_and_replacement.sql","errors":[]},{"query":"create table test (x Tuple(a UInt32, b UInt32)) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02536_hdfs_cluster_use_structure_from_table.sql","errors":[]},{"query":"CREATE TABLE test_02536 (n Int8) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02536_distributed_detach_table.sql","errors":[]},{"query":"CREATE TABLE test_dist_02536 (n Int8) ENGINE=Distributed(test_cluster_two_shards, currentDatabase(), test_02536, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/02536_distributed_detach_table.sql","errors":[]},{"query":"create table bug_delta_gorilla (value_bug UInt64 codec (Delta, Gorilla))\nengine = MergeTree\norder by tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi'\nas (select 0 from numbers(20000000));","fileName":"../ClickHouse/tests/queries/0_stateless/02536_delta_gorilla_corruption.sql","errors":[]},{"query":"create table bug_delta_gorilla (val UInt64 codec (Delta, Gorilla)) engine = MergeTree\norder by val SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02536_delta_gorilla_corruption.sql","errors":[]},{"query":"CREATE TABLE test ENGINE = ReplacingMergeTree\nPRIMARY KEY id\nAS SELECT number AS id FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/02535_analyzer_group_by_use_nulls.sql","errors":[]},{"query":"create table test (x UInt32, y UInt32, z UInt32) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02534_s3_cluster_insert_select_schema_inference.sql","errors":[]},{"query":"CREATE TABLE tab (key Tuple(UInt64, UInt64), val UInt64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02534_keyed_siphash.sql","errors":[]},{"query":"CREATE TABLE sipHashKeyed_test ENGINE = Memory() AS SELECT 1 a, 'test' b;","fileName":"../ClickHouse/tests/queries/0_stateless/02534_keyed_siphash.sql","errors":[]},{"query":"CREATE TABLE sipHashKeyed_keys (key Tuple(UInt64, UInt64), val UInt64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02534_keyed_siphash.sql","errors":[]},{"query":"CREATE TABLE sipHashKeyed_keys (key0 UInt64, key1 UInt64, val UInt64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02534_keyed_siphash.sql","errors":[]},{"query":"CREATE TABLE sipHashKeyed_keys (key0 UInt64, key1 UInt64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02534_keyed_siphash.sql","errors":[]},{"query":"CREATE TABLE sipHashKeyed_keys (\\`a\\` Map(String, String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02534_keyed_siphash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE sipHashKeyed_keys (\\'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE test1 ( \\`col1\\` UInt64, \\`col2\\` Int8 ) ENGINE = MergeTree ORDER BY col1;","fileName":"../ClickHouse/tests/queries/0_stateless/02534_join_prewhere_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test1 ( \\'","startColumn":21,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"CREATE TABLE test2 ( \\`col1\\` UInt64, \\`col3\\` Int16 ) ENGINE = MergeTree ORDER BY col1;","fileName":"../ClickHouse/tests/queries/0_stateless/02534_join_prewhere_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test2 ( \\'","startColumn":21,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"CREATE TABLE users_02534 (id Int16, name String, INDEX bf_idx(name) TYPE minmax) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02534_default_granularity.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE users_02534 (id Int16, name String, INDEX bf_idx(name) TYPE minmax)'","startColumn":79,"startLine":1,"endColumn":80,"endLine":1}]},{"query":"CREATE TABLE users_02534 (id Int16, name String) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02534_default_granularity.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02534_analyzer_grouping_function.sql","errors":[]},{"query":"create table test (x UInt32, y String) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02533_generate_random_schema_inference.sql","errors":[]},{"query":"CREATE TABLE t1__fuzz_8 (\\`x\\` LowCardinality(UInt32), \\`str\\` Nullable(Int16)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02531_storage_join_null_44940.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1__fuzz_8 (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE full_join__fuzz_4 (\\`x\\` LowCardinality(UInt32), \\`s\\` LowCardinality(String)) ENGINE = Join(\\`ALL\\`, FULL, x) SETTINGS join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02531_storage_join_null_44940.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE full_join__fuzz_4 (\\'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE ip_part_test ( ipv4 IPv4, ipv6 IPv6 ) ENGINE = MergeTree PARTITION BY ipv4 ORDER BY ipv4 AS SELECT '1.2.3.4', '::ffff:1.2.3.4';","fileName":"../ClickHouse/tests/queries/0_stateless/02530_ip_part_id.sql","errors":[]},{"query":"CREATE TABLE ip_part_test ( ipv4 IPv4, ipv6 IPv6 ) ENGINE = MergeTree PARTITION BY ipv6 ORDER BY ipv6 AS SELECT '1.2.3.4', '::ffff:1.2.3.4';","fileName":"../ClickHouse/tests/queries/0_stateless/02530_ip_part_id.sql","errors":[]},{"query":"CREATE TABLE foo(Id Int32, Val Nullable(Int32)) Engine=MergeTree ORDER BY Id;","fileName":"../ClickHouse/tests/queries/0_stateless/02527_storage_merge_prewhere_different_type.sql","errors":[]},{"query":"CREATE TABLE merge1(Id Int32, Val Int32) Engine=Merge(currentDatabase(), '^foo');","fileName":"../ClickHouse/tests/queries/0_stateless/02527_storage_merge_prewhere_different_type.sql","errors":[]},{"query":"CREATE TABLE foo(Id Int32, Val Int32) Engine=MergeTree PARTITION BY Val ORDER BY Id;","fileName":"../ClickHouse/tests/queries/0_stateless/02526_merge_join_int_decimal.sql","errors":[]},{"query":"CREATE TABLE foo1(Id Int32, Val Decimal32(9)) Engine=MergeTree PARTITION BY Val ORDER BY Id;","fileName":"../ClickHouse/tests/queries/0_stateless/02526_merge_join_int_decimal.sql","errors":[]},{"query":"CREATE TABLE foo_merge as foo ENGINE=Merge(currentDatabase(), '^foo');","fileName":"../ClickHouse/tests/queries/0_stateless/02526_merge_join_int_decimal.sql","errors":[]},{"query":"CREATE TABLE t2 (Id Int32, Val Int64, X UInt256) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02526_merge_join_int_decimal.sql","errors":[]},{"query":"CREATE TABLE 02526_keeper_map (\\`key\\` String, \\`value\\` UInt32) ENGINE = KeeperMap('/' || currentDatabase() || '/02526_kv_filter_types') PRIMARY KEY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02526_kv_engine_different_filter_type.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02526'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02526_rocksdb (\\`key\\` String, \\`value\\` UInt32) ENGINE = EmbeddedRocksDB PRIMARY KEY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02526_kv_engine_different_filter_type.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02526'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE test_table (\nuid Int64,\nstart Int64,\nend Int64,\ninsert_time DateTime\n) ENGINE = MergeTree ORDER BY (uid, start);","fileName":"../ClickHouse/tests/queries/0_stateless/02525_range_hashed_dictionary_update_field.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary (\nstart Int64,\nend Int64,\ninsert_time DateTime,\nuid Int64\n) PRIMARY KEY uid\nLAYOUT(RANGE_HASHED())\nRANGE(MIN start MAX end)\nSOURCE(CLICKHOUSE(TABLE 'test_table' UPDATE_FIELD 'insert_time' UPDATE_LAG 10))\nLIFETIME(MIN 1 MAX 2);","fileName":"../ClickHouse/tests/queries/0_stateless/02525_range_hashed_dictionary_update_field.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_merge_tree_02525 (\nid UInt64,\ninfo String\n)\nENGINE = MergeTree\nORDER BY id\nPRIMARY KEY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02525_different_engines_in_temporary_tables.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_log_02525 (\nid UInt64,\ninfo String\n)\nENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02525_different_engines_in_temporary_tables.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_stripe_log_02525 (\nid UInt64,\ninfo String\n)\nENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02525_different_engines_in_temporary_tables.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_tiny_log_02525 (\nid UInt64,\ninfo String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02525_different_engines_in_temporary_tables.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_replicated_merge_tree_02525 (\nid UInt64,\ninfo String\n)\nENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02525/table_replicated_merge_tree_02525', 'r1')\nORDER BY id\nPRIMARY KEY id; -- { serverError INCORRECT_QUERY }\nDROP TEMPORARY TABLE IF EXISTS table_keeper_map_02525;","fileName":"../ClickHouse/tests/queries/0_stateless/02525_different_engines_in_temporary_tables.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt8,\nvalue Nullable(Decimal(38, 2))\n) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02525_analyzer_function_in_crash_fix.sql","errors":[]},{"query":"CREATE TABLE data_a_02187 (\n\\`a\\` Nullable(Int64)\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02524_fuzz_and_fuss_2.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE data_a_02187 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_s64_local (date Date, value Int64) ENGINE = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02522_different_types_in_storage_merge.sql","errors":[]},{"query":"CREATE TABLE test_u64_local (date Date, value UInt64) ENGINE = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02522_different_types_in_storage_merge.sql","errors":[]},{"query":"CREATE TABLE test_s64_distributed AS test_s64_local ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_s64_local, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/02522_different_types_in_storage_merge.sql","errors":[]},{"query":"CREATE TABLE test_u64_distributed AS test_u64_local ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_u64_local, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/02522_different_types_in_storage_merge.sql","errors":[]},{"query":"CREATE TABLE lwd_test_02521 (id UInt64, value String, event_time DateTime) ENGINE MergeTree()\nORDER BY id\nSETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_lightweight_delete_and_ttl.sql","errors":[]},{"query":"create table test(day Date, id UInt32) engine=MergeTree partition by day order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02521_cannot_find_column_in_projection.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02521_analyzer_array_join_crash.sql","errors":[]},{"query":"CREATE TABLE test_table (\nc0 String ALIAS c1,\nc1 String,\nc2 String,\n) ENGINE = MergeTree ORDER BY c1;","fileName":"../ClickHouse/tests/queries/0_stateless/02521_analyzer_aggregation_without_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\nc0 String ALIAS c1,\\nc1 String,\\nc2 String,\\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"create table t1(a UInt32) engine=MergeTree order by tuple() partition by a % 4 settings index_granularity = 8192, index_granularity_bytes = 10485760;","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t2(a UInt32) engine=MergeTree order by tuple() partition by a % 8 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t3(a UInt32) engine=MergeTree order by tuple() partition by a % 16 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t4(a UInt32) engine=MergeTree order by a partition by a % 4 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t5(a UInt32) engine=MergeTree order by a partition by a % 8 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t6(a UInt32) engine=MergeTree order by a partition by a % 16 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t7(a UInt32) engine=MergeTree order by a partition by intDiv(a, 2) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t8(a UInt32) engine=MergeTree order by a partition by intDiv(a, 2) * 2 + 1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t9(a UInt32) engine=MergeTree order by a partition by intDiv(a, 2) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t10(a UInt32, b UInt32) engine=MergeTree order by a partition by (intDiv(a, 2), intDiv(b, 3)) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t11(a UInt32, b UInt32) engine=MergeTree order by a partition by (intDiv(a, 2), intDiv(b, 3)) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t12(a UInt32, b UInt32) engine=MergeTree order by a partition by a % 16;","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t13(a UInt32, b UInt32) engine=MergeTree order by a partition by (intDiv(a, 2), intDiv(b, 3)) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t14(a UInt32, b UInt32) engine=MergeTree order by a partition by intDiv(a, 2) + intDiv(b, 3) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t15(a UInt32, b UInt32) engine=MergeTree order by a partition by a < 90 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t16(a UInt32, b UInt32) engine=MergeTree order by a partition by a % 16 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t17(a UInt32, b UInt32) engine=MergeTree order by a partition by a < 90 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t18(a UInt32, b UInt32) engine=MergeTree order by a partition by a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t19(a UInt32, b UInt32) engine=MergeTree order by a partition by a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t20(a UInt32, b UInt32) engine=MergeTree order by a partition by a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t21(a UInt64, b UInt64) engine=MergeTree order by a partition by a % 16 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table t22(a UInt32, b UInt32) engine=SummingMergeTree order by a partition by a % 16 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02521_aggregation_by_partitions.sql","errors":[]},{"query":"create table simple_agg_groupArrayLastArray (key Int, value SimpleAggregateFunction(groupArrayLastArray(5), Array(UInt64))) engine=AggregatingMergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/02520_group_array_last.sql","errors":[]},{"query":"CREATE TABLE t (x Decimal(18, 3)) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02519_monotonicity_fuzz.sql","errors":[]},{"query":"CREATE TABLE t (x DateTime64(3)) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02519_monotonicity_fuzz.sql","errors":[]},{"query":"CREATE TABLE test_table_join_1 (id UInt64, value String) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02518_qualified_asterisks_alias_table_name.sql","errors":[]},{"query":"CREATE TABLE test_table_join_2 (id UInt64, value String) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02518_qualified_asterisks_alias_table_name.sql","errors":[]},{"query":"CREATE TABLE test_table_join_3 (id UInt64, value String ) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02518_qualified_asterisks_alias_table_name.sql","errors":[]},{"query":"CREATE TABLE foo (\\`Id\\` Int32, \\`Val\\` Int32) ENGINE = MergeTree ORDER BY Id;","fileName":"../ClickHouse/tests/queries/0_stateless/02518_merge_engine_nullable_43324.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE foo (\\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE foo__fuzz_0 (\\`Id\\` Int64, \\`Val\\` Nullable(Int32)) ENGINE = MergeTree ORDER BY Id;","fileName":"../ClickHouse/tests/queries/0_stateless/02518_merge_engine_nullable_43324.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE foo__fuzz_0 (\\'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE merge1 AS foo ENGINE = Merge(currentDatabase(), '^foo');","fileName":"../ClickHouse/tests/queries/0_stateless/02518_merge_engine_nullable_43324.sql","errors":[]},{"query":"CREATE TABLE merge2 (\\`Id\\` Int32, \\`Val\\` Int32) ENGINE = Merge(currentDatabase(), '^foo');","fileName":"../ClickHouse/tests/queries/0_stateless/02518_merge_engine_nullable_43324.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE merge2 (\\'","startColumn":21,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"CREATE TABLE merge3 (\\`Id\\` Int32, \\`Val\\` Int32) ENGINE = Merge(currentDatabase(), '^foo__fuzz_0');","fileName":"../ClickHouse/tests/queries/0_stateless/02518_merge_engine_nullable_43324.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE merge3 (\\'","startColumn":21,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"CREATE TABLE kek (a UInt32) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02518_delete_on_materialized_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW kekv ENGINE = MergeTree ORDER BY tuple() AS SELECT * FROM kek;","fileName":"../ClickHouse/tests/queries/0_stateless/02518_delete_on_materialized_view.sql","errors":[]},{"query":"CREATE OR REPLACE TABLE alias10__fuzz_13 (\\`Id\\` Array(Array(UInt256)), \\`EventDate\\` Array(String), \\`field1\\` Array(Array(Nullable(Int8))), \\`field2\\` Array(Date), \\`field3\\` Array(Array(Array(UInt128)))) ENGINE = Distributed(test_shard_localhost, currentDatabase(), alias_local10);","fileName":"../ClickHouse/tests/queries/0_stateless/02517_wrong_total_structure_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE OR REPLACE TABLE alias10__fuzz_13 (\\'","startColumn":42,"startLine":1,"endColumn":43,"endLine":1}]},{"query":"CREATE OR REPLACE TABLE alias_local10 ( Id Int8,\nEventDate Date DEFAULT '2000-01-01',\nfield1 Int8,\nfield2 String,\nfield3 ALIAS CASE WHEN field1 = 1 THEN field2 ELSE '0' END\n) ENGINE = MergeTree(EventDate, (Id, EventDate), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/02517_wrong_total_structure_crash.sql","errors":[]},{"query":"CREATE OR REPLACE TABLE distributed (x Array(Int8)) ENGINE = Distributed(test_shard_localhost, currentDatabase(), local);","fileName":"../ClickHouse/tests/queries/0_stateless/02517_wrong_total_structure_crash.sql","errors":[]},{"query":"CREATE TABLE temp (\n\\`id\\` UInt64,\n\\`field1\\` UUID,\n\\`field2\\` UUID,\n\\`field3\\` Int64,\n\\`field4\\` Int64,\n\\`field5\\` LowCardinality(String),\n\\`field6\\` FixedString(3),\n\\`field7\\` String,\n\\`field8\\` Nullable(UUID),\n\\`event_at\\` DateTime('UTC'),\n\\`order_id\\` Nullable(UUID),\n\\`identity\\` LowCardinality(String)\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMM(event_at)\nORDER BY (field1, event_at, field2, field5, id)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02517_uuid_parsing.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE temp (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t1 (c0 Int32, PRIMARY KEY (c0)) ENGINE = MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/02517_union_columns_order.sql","errors":[]},{"query":"CREATE TABLE test_table (value String) ENGINE=ExecutablePool('nonexist.py', 'TabSeparated', (foobar)); -- {serverError BAD_ARGUMENTS} CREATE TABLE test_table (value String) ENGINE=ExecutablePool('nonexist.py', 'TabSeparated', '(SELECT 1)'); -- {serverError BAD_ARGUMENTS}\nCREATE TABLE test_table (value String) ENGINE=ExecutablePool('nonexist.py', 'TabSeparated', [1,2,3]); -- {serverError BAD_ARGUMENTS}\n","fileName":"../ClickHouse/tests/queries/0_stateless/02517_executable_pool_bad_input_query.sql","errors":[]},{"query":"CREATE TABLE video_log (\n\\`datetime\\` DateTime,\n\\`user_id\\` UInt64,\n\\`device_id\\` UInt64,\n\\`domain\\` LowCardinality(String),\n\\`bytes\\` UInt64,\n\\`duration\\` UInt64\n)\nENGINE = MergeTree\nPARTITION BY toDate(datetime)\nORDER BY (user_id, device_id)\nSETTINGS index_granularity_bytes=10485760, index_granularity=8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02516_projections_with_rollup.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE video_log (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE video_log_result__fuzz_0 (\n\\`hour\\` Nullable(DateTime),\n\\`sum_bytes\\` UInt64,\n\\`avg_duration\\` Float64\n)\nENGINE = MergeTree\nPARTITION BY toDate(hour)\nORDER BY sum_bytes\nSETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02516_projections_with_rollup.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE video_log_result__fuzz_0 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE rng (\n\\`user_id_raw\\` UInt64,\n\\`device_id_raw\\` UInt64,\n\\`domain_raw\\` UInt64,\n\\`bytes_raw\\` UInt64,\n\\`duration_raw\\` UInt64\n)\nENGINE = GenerateRandom(1024);","fileName":"../ClickHouse/tests/queries/0_stateless/02516_projections_with_rollup.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE rng (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test1__fuzz_37 (\\`i\\` Date) ENGINE = MergeTree ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/02516_projections_and_context.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test1__fuzz_37 (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE t (x UInt8, PROJECTION p (SELECT x GROUP BY x)) ENGINE = MergeTree ORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/02515_projections_with_totals.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (x UInt8, PROJECTION p (SELECT x GROUP BY x)) ENGINE = MergeTree ORDER BY ()'","startColumn":90,"startLine":1,"endColumn":91,"endLine":1}]},{"query":"CREATE TABLE fh(a_value UInt32, b_value Float64, c_value Float64, d_value Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02515_aggregate_functions_statistics.sql","errors":[]},{"query":"CREATE DICTIONARY null_dict ( id              UInt64,\nval             UInt8,\ndefault_val     UInt8 DEFAULT 123,\nnullable_val    Nullable(UInt8)\n)\nPRIMARY KEY id\nSOURCE(NULL())\nLAYOUT(FLAT())\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02514_null_dictionary_source.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY null_dict ( id              UInt64,\\nval             UInt8,\\ndefault_val     UInt8 DEFAULT 123,\\nnullable_val    Nullable(UInt8)\\n)\\nPRIMARY KEY id\\nSOURCE(NULL'","startColumn":7,"startLine":7,"endColumn":11,"endLine":7}]},{"query":"CREATE DICTIONARY null_ip_dict ( network String,\nval     UInt8 DEFAULT 77\n)\nPRIMARY KEY network\nSOURCE(NULL())\nLAYOUT(IP_TRIE())\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02514_null_dictionary_source.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY null_ip_dict ( network String,\\nval     UInt8 DEFAULT 77\\n)\\nPRIMARY KEY network\\nSOURCE(NULL'","startColumn":7,"startLine":5,"endColumn":11,"endLine":5}]},{"query":"create table if not exists t (\\`arr.key\\` Array(LowCardinality(String)), \\`arr.value\\` Array(LowCardinality(String))) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02514_if_with_lazy_low_cardinality.sql","errors":[{"message":"no viable alternative at input 'create table if not exists t (\\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE t (\nid Int64,\nd String,\np Map(String, String)\n)\nENGINE = ReplacingMergeTree order by id settings index_granularity = 0; -- { serverError BAD_ARGUMENTS }\n","fileName":"../ClickHouse/tests/queries/0_stateless/02514_bad_index_granularity.sql","errors":[]},{"query":"CREATE TABLE a (k UInt64, a1 UInt64, a2 String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02514_analyzer_drop_join_on.sql","errors":[]},{"query":"CREATE TABLE b (k UInt64, b1 UInt64, b2 String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02514_analyzer_drop_join_on.sql","errors":[]},{"query":"CREATE TABLE c (k UInt64, c1 UInt64, c2 String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02514_analyzer_drop_join_on.sql","errors":[]},{"query":"CREATE TABLE d (k UInt64, d1 UInt64, d2 String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02514_analyzer_drop_join_on.sql","errors":[]},{"query":"CREATE TABLE table_02513 (n UInt64) ENGINE=MergeTree() ORDER BY tuple() SETTINGS index_granularity=100;","fileName":"../ClickHouse/tests/queries/0_stateless/02513_prewhere_combine_step_filters.sql","errors":[]},{"query":"CREATE TABLE datetime_date_table ( col_date Date,\ncol_datetime DateTime,\ncol_datetime64 DateTime64(3),\ncol_date_string String,\ncol_datetime_string String,\ncol_datetime64_string DateTime64,\ncol_date_lc LowCardinality(String),\ncol_datetime_lc LowCardinality(String),\ncol_datetime64_lc LowCardinality(String),\nPRIMARY KEY col_date\n) ENGINE = MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/02513_date_string_comparison.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE datetime_date_table ( col_date Date,\\ncol_datetime DateTime,\\ncol_datetime64 DateTime64(3),\\ncol_date_string String,\\ncol_datetime_string String,\\ncol_datetime64_string DateTime64,\\ncol_date_lc LowCardinality(String),\\ncol_datetime_lc LowCardinality(String),\\ncol_datetime64_lc LowCardinality(String),\\nPRIMARY KEY col_date'","startColumn":12,"startLine":10,"endColumn":20,"endLine":10}]},{"query":"CREATE TABLE products (\\`price\\` UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02513_analyzer_sort_msan.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE products (\\'","startColumn":23,"startLine":1,"endColumn":24,"endLine":1}]},{"query":"CREATE TABLE x ( \\`arr.key\\` Array(String), \\`arr.value\\` Array(String), \\`n\\` String ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02512_array_join_name_resolution.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE x ( \\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table table1 ( col1 Int32,\ncol2 Int32\n)\nENGINE = MergeTree\npartition by tuple()\norder by col1;","fileName":"../ClickHouse/tests/queries/0_stateless/02510_group_by_prewhere_null.sql","errors":[]},{"query":"CREATE TABLE data_table (id UInt64, longitude Float64, latitude Float64) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02509_h3_arguments.sql","errors":[]},{"query":"CREATE TABLE table (uid UUID, date DateTime('Asia/Kamchatka')) ENGINE = MergeTree ORDER BY date;","fileName":"../ClickHouse/tests/queries/0_stateless/02508_index_analysis_to_date_timezone.sql","errors":[]},{"query":"create table test_graphite (key UInt32, Path String, Time DateTime('UTC'), Value UInt8, Version UInt32, col UInt64) engine = GraphiteMergeTree('graphite_rollup') order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/02508_bad_graphite.sql","errors":[]},{"query":"CREATE TABLE regexp_dictionary_source_table (\nid UInt64,\nparent_id UInt64,\nregexp String,\nkeys   Array(String),\nvalues Array(String),\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02504_regexp_dictionary_table_source.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE regexp_dictionary_source_table (\\nid UInt64,\\nparent_id UInt64,\\nregexp String,\\nkeys   Array(String),\\nvalues Array(String),\\n)'","startColumn":0,"startLine":7,"endColumn":1,"endLine":7}]},{"query":"create dictionary regexp_dict1 (\nregexp String,\nname String,\nversion Nullable(UInt64),\ncomment String default 'nothing'\n)\nPRIMARY KEY(regexp)\nSOURCE(CLICKHOUSE(TABLE 'regexp_dictionary_source_table'))\nLIFETIME(0)\nLAYOUT(regexp_tree);","fileName":"../ClickHouse/tests/queries/0_stateless/02504_regexp_dictionary_table_source.sql","errors":[{"message":"no viable alternative at input 'create dictionary regexp_dict1 (\\nregexp String,\\nname String,\\nversion Nullable(UInt64),\\ncomment String default 'nothing'\\n)\\nPRIMARY KEY(regexp)\\nSOURCE(CLICKHOUSE(TABLE 'regexp_dictionary_source_table'))\\nLIFETIME(0)\\nLAYOUT(regexp_tree)'","startColumn":18,"startLine":10,"endColumn":19,"endLine":10}]},{"query":"CREATE TABLE needle_table (\nkey String\n)\nENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02504_regexp_dictionary_table_source.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE my_table (col_date Date, col_date32 Date32, col_datetime DateTime('UTC'), col_datetime32 DateTime32('UTC'), col_datetime64 DateTime64);","fileName":"../ClickHouse/tests/queries/0_stateless/02504_parse_datetime_best_effort_calebeaires.sql","errors":[]},{"query":"CREATE TABLE test_02504 (\\`a\\` UInt32,\\`b\\` UInt32) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02504_disallow_arrayjoin_in_mutations.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_02504 (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE test54378 (\\`part_date\\` Date, \\`pk_date\\` Date, \\`date\\` Date) ENGINE = MergeTree(part_date, pk_date, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/02502_fuzz_bad_cast_to_ast_literal.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test54378 (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02502_analyzer_insert_select_crash_fix.sql","errors":[]},{"query":"CREATE TABLE test_table_data (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02502_analyzer_insert_select_crash_fix.sql","errors":[]},{"query":"CREATE TABLE 02501_test(\\`a\\` UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02501_limits_on_result_for_view.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02501'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02501_dist(\\`a\\` UInt64) ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), 02501_test);","fileName":"../ClickHouse/tests/queries/0_stateless/02501_limits_on_result_for_view.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02501'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE VIEW 02501_view(\\`a\\` UInt64) AS SELECT a FROM 02501_dist;","fileName":"../ClickHouse/tests/queries/0_stateless/02501_limits_on_result_for_view.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW 02501'","startColumn":12,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE test_table (\nb Int64,\na Int64,\ngrp_aggreg AggregateFunction(groupArrayArray, Array(UInt64))\n) ENGINE = MergeTree() ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02501_analyzer_expired_context_crash_fix.sql","errors":[]},{"query":"CREATE TABLE 02500_nested(nes Nested(a Int32, b Int32)) Engine=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02500_prevent_drop_nested_if_empty_part.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02500'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02500_nested(nes Nested(a Int32, b Int32), z Int32) Engine=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02500_prevent_drop_nested_if_empty_part.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02500'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02500_nested(nes Nested(a Int32, b Int32)) Engine=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02500_prevent_drop_nested_if_empty_part.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02500'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02500_nested(nes Array(Tuple(a Int32, b Int32)), z Int32) Engine=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02500_prevent_drop_nested_if_empty_part.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02500'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE test_table (\nf1 Int32,\nf2 Int32,\npk Int32\n) ENGINE = MergeTree PARTITION BY pk ORDER BY f1;","fileName":"../ClickHouse/tests/queries/0_stateless/02500_analyzer_storage_view_crash_fix.sql","errors":[]},{"query":"CREATE VIEW test_view AS SELECT f1, f2 FROM test_table WHERE pk = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02500_analyzer_storage_view_crash_fix.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String,\nINDEX value_idx (value) TYPE set(1000) GRANULARITY 1\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02499_analyzer_set_index.sql","errors":[]},{"query":"CREATE TABLE test_table (id UInt64, value Tuple(a UInt64)) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02498_analyzer_settings_push_down.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue UInt64\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02498_analyzer_aggregate_functions_arithmetic_operations_pass_fix.sql","errors":[]},{"query":"CREATE TABLE t1 (key UInt64, a UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02497_storage_join_right_assert.sql","errors":[]},{"query":"CREATE TABLE t2 (key UInt64, a UInt64) ENGINE = Join(ALL, RIGHT, key);","fileName":"../ClickHouse/tests/queries/0_stateless/02497_storage_join_right_assert.sql","errors":[]},{"query":"CREATE TABLE t_source_part_is_intact (id UInt64, u UInt64) ENGINE = MergeTree ORDER BY id\nSETTINGS min_bytes_for_wide_part=1, ratio_of_defaults_for_sparse_serialization = 0.5;","fileName":"../ClickHouse/tests/queries/0_stateless/02497_source_part_is_intact_when_mutation.sql","errors":[]},{"query":"create table fat_granularity (x UInt32, fat FixedString(160000)) engine = MergeTree order by x settings storage_policy = 's3_cache';","fileName":"../ClickHouse/tests/queries/0_stateless/02497_remote_disk_fat_column.sql","errors":[]},{"query":"CREATE TABLE t_s3_events_02496 (a UInt64) ENGINE = S3(s3_conn, filename = 'test_02496_{_partition_id}', format = Parquet)\nPARTITION BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02496_storage_s3_profile_events.sql","errors":[]},{"query":"CREATE TABLE t_s3_filter_02495 (a UInt64) ENGINE = S3(s3_conn, filename = 'test_02495_{_partition_id}', format = Parquet)\nPARTITION BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02495_s3_filter_by_file.sql","errors":[]},{"query":"CREATE TABLE tj (key2 UInt64, key1 Int64, a UInt64, b UInt64, x UInt64, y UInt64) ENGINE = Join(ALL, RIGHT, key1, key2);","fileName":"../ClickHouse/tests/queries/0_stateless/02495_analyzer_storage_join.sql","errors":[]},{"query":"CREATE TABLE t1 (id2 UInt64, id1 Int64, val UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02495_analyzer_storage_join.sql","errors":[]},{"query":"CREATE TABLE t (key2 UInt64, key1 Int64, b UInt64, x UInt64, val UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02495_analyzer_storage_join.sql","errors":[]},{"query":"CREATE TABLE wikistat1 (\ntime DateTime,\nproject LowCardinality(String),\nsubproject LowCardinality(String),\npath String,\nhits UInt64,\nPROJECTION total\n(\nSELECT\nproject,\nsubproject,\npath,\nsum(hits),\ncount()\nGROUP BY\nproject,\nsubproject,\npath\n)\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/02494_zero_copy_and_projection', '1')\nORDER BY (path, time)\nSETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0,\ncleanup_thread_preferred_points_per_iteration=0, allow_remote_fs_zero_copy_replication=1, min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_zero_copy_and_projection_and_mutation_work_together.sql","errors":[]},{"query":"CREATE TABLE wikistat2 (\ntime DateTime,\nproject LowCardinality(String),\nsubproject LowCardinality(String),\npath String,\nhits UInt64,\nPROJECTION total\n(\nSELECT\nproject,\nsubproject,\npath,\nsum(hits),\ncount()\nGROUP BY\nproject,\nsubproject,\npath\n)\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/02494_zero_copy_and_projection', '2')\nORDER BY (path, time)\nSETTINGS old_parts_lifetime = 1, cleanup_delay_period = 0, cleanup_delay_period_random_add = 0,\ncleanup_thread_preferred_points_per_iteration=0, allow_remote_fs_zero_copy_replication=1, min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_zero_copy_and_projection_and_mutation_work_together.sql","errors":[]},{"query":"CREATE TABLE tbl (key UInt64, agg UInt64) ENGINE = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_totals_extremes.sql","errors":[]},{"query":"CREATE TABLE system (c UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_system_tables.sql","errors":[]},{"query":"CREATE TABLE system.system (c UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_system_tables.sql","errors":[]},{"query":"CREATE TABLE t(c String) ENGINE=MergeTree ORDER BY c;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_squash_partial_results.sql","errors":[]},{"query":"CREATE TABLE t_cache_sparse (id UInt64, v UInt64) ENGINE = MergeTree ORDER BY id\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_sparse_columns.sql","errors":[]},{"query":"CREATE DATABASE db1;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE db1;'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE DATABASE db2;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE db2;'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE db1.tab(a UInt64, PRIMARY KEY a);","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE db1.tab(a UInt64, PRIMARY KEY a'","startColumn":43,"startLine":1,"endColumn":44,"endLine":1}]},{"query":"CREATE TABLE db2.tab(a UInt64, PRIMARY KEY a);","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE db2.tab(a UInt64, PRIMARY KEY a'","startColumn":43,"startLine":1,"endColumn":44,"endLine":1}]},{"query":"CREATE TABLE eligible_test (a String) ENGINE=MergeTree ORDER BY a; --  SETTINGS use_query_cache = true; -- SETTINGS rejected as unknown SELECT COUNT(*) FROM system.query_cache;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_eligible_queries.sql","errors":[]},{"query":"CREATE TABLE t(c String) ENGINE=MergeTree ORDER BY c;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_compression.sql","errors":[]},{"query":"CREATE TABLE tab(c UInt64) ENGINE = Memory AS SELECT 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_bugs.sql","errors":[]},{"query":"CREATE TABLE tab(c UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_query_cache_bugs.sql","errors":[]},{"query":"CREATE TABLE t(timestamp DateTime, day ALIAS toYYYYMMDD(timestamp)) Engine = MergeTree ORDER BY timestamp;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_optimize_group_by_function_keys_and_alias_columns.sql","errors":[]},{"query":"CREATE TABLE test_table ( fingerprint UInt16,\nfields Nested(name Array(UInt32), value String)\n) ENGINE = MergeTree\nORDER BY fingerprint;","fileName":"../ClickHouse/tests/queries/0_stateless/02494_analyzer_compound_expression_crash_fix.sql","errors":[]},{"query":"create table t (x UInt64) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02493_max_streams_for_merge_tree_reading.sql","errors":[]},{"query":"CREATE TABLE table1 (column1 String) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02493_do_not_assume_that_the_original_query_was_valid_when_transforming_joins.sql","errors":[]},{"query":"CREATE TABLE table2 (column1 String, column2 String, column3 String) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02493_do_not_assume_that_the_original_query_was_valid_when_transforming_joins.sql","errors":[]},{"query":"CREATE TABLE table3 (column3 String) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02493_do_not_assume_that_the_original_query_was_valid_when_transforming_joins.sql","errors":[]},{"query":"create table data_02491 (key Int) engine=MergeTree() order by tuple() settings old_parts_lifetime=600;","fileName":"../ClickHouse/tests/queries/0_stateless/02491_part_log_has_table_uuid.sql","errors":[]},{"query":"CREATE TABLE test (uid String, version UInt32, is_deleted UInt8) ENGINE = ReplacingMergeTree(version) Order by (uid) settings allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE test (uid String, version UInt32, is_deleted UInt8) ENGINE = ReplacingMergeTree(version) Order by (uid) SETTINGS clean_deleted_rows='Always', allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE test (uid String, version UInt32, is_deleted UInt8) ENGINE = ReplacingMergeTree(version, is_deleted) Order by (uid) settings allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE test (uid String, version UInt32, is_deleted UInt8) ENGINE = ReplacingMergeTree(version, is_deleted) Order by (uid) settings allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE test (uid String, version UInt32, is_deleted UInt8) ENGINE = ReplacingMergeTree(version, is_deleted) Order by (uid) SETTINGS clean_deleted_rows='Always', allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE testCleanupR1 (uid String, version UInt32, is_deleted UInt8) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/{database}/tables/test_cleanup/', 'r1', version, is_deleted)\nORDER BY uid settings allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE testSettingsR1 (col1 String, version UInt32, is_deleted UInt8) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/{database}/tables/test_setting/', 'r1', version, is_deleted)\nORDER BY col1\nSETTINGS clean_deleted_rows = 'Always', allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE test (uid String, version UInt32, is_deleted UInt8) ENGINE = ReplacingMergeTree(version, is_deleted) Order by (uid) settings allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE test (uid String, version UInt32, is_deleted String) ENGINE = ReplacingMergeTree(version, is_deleted) Order by (uid); -- { serverError BAD_TYPE_OF_FIELD } CREATE TABLE test (uid String, version UInt32, is_deleted UInt8) ENGINE = ReplacingMergeTree(version, is_deleted) Order by (uid);","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE test (uid String, version UInt32, is_deleted UInt8) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/{database}/tables/no_cleanup/', 'r1', version, is_deleted) Order by (uid);","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE testMT (uid String, version UInt32, is_deleted UInt8) ENGINE = MergeTree() Order by (uid) SETTINGS clean_deleted_rows='Always', allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE testSummingMT (uid String, version UInt32, is_deleted UInt8) ENGINE = SummingMergeTree() Order by (uid) SETTINGS clean_deleted_rows='Always', allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE testAggregatingMT (uid String, version UInt32, is_deleted UInt8) ENGINE = AggregatingMergeTree() Order by (uid) SETTINGS clean_deleted_rows='Always', allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE testCollapsingMT (uid String, version UInt32, is_deleted UInt8, sign Int8) ENGINE = CollapsingMergeTree(sign) Order by (uid) SETTINGS clean_deleted_rows='Always', allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE testVersionedCMT (uid String, version UInt32, is_deleted UInt8, sign Int8) ENGINE = VersionedCollapsingMergeTree(sign, version) Order by (uid) SETTINGS clean_deleted_rows='Always', allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02490_replacing_merge_tree_is_deleted_column.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue_1 String,\nvalue_2 String,\nvalue_3 String,\nINDEX value_1_idx (value_1) TYPE bloom_filter GRANULARITY 1,\nINDEX value_2_idx (value_2) TYPE ngrambf_v1(3, 512, 2, 0) GRANULARITY 1,\nINDEX value_3_idx (value_3) TYPE tokenbf_v1(512, 3, 0) GRANULARITY 1\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02489_analyzer_indexes.sql","errors":[]},{"query":"create table rmt (n int, ts DateTime64(8, 'UTC')) engine=ReplicatedMergeTree('/test/02487/{database}/rmt', '1') order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/02487_create_index_normalize_functions.sql","errors":[]},{"query":"create index idx2 on rmt date(ts) TYPE MinMax GRANULARITY 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02487_create_index_normalize_functions.sql","errors":[{"message":"no viable alternative at input 'create index'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"create table rmt2 (n int, ts DateTime64(8, 'UTC'), index idx1 date(ts) TYPE MinMax GRANULARITY 1, index idx2 date(ts) TYPE MinMax GRANULARITY 1) engine=ReplicatedMergeTree('/test/02487/{database}/rmt', '2') order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/02487_create_index_normalize_functions.sql","errors":[]},{"query":"create table rmt (n int) engine=ReplicatedMergeTree('/test/02468/{database}', '1') order by tuple() partition by n % 2 settings replicated_max_ratio_of_wrong_parts=0, max_suspicious_broken_parts=0, max_suspicious_broken_parts_bytes=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02486_truncate_and_unexpected_parts.sql","errors":[]},{"query":"create table rmt1 (n int) engine=ReplicatedMergeTree('/test/02468/{database}', '2') order by tuple() partition by n % 2 settings replicated_max_ratio_of_wrong_parts=0, max_suspicious_broken_parts=0, max_suspicious_broken_parts_bytes=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02486_truncate_and_unexpected_parts.sql","errors":[]},{"query":"create table rmt2 (n int) engine=ReplicatedMergeTree('/test/02468/{database}2', '1') order by tuple() partition by n % 2 settings replicated_max_ratio_of_wrong_parts=0, max_suspicious_broken_parts=0, max_suspicious_broken_parts_bytes=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02486_truncate_and_unexpected_parts.sql","errors":[]},{"query":"create table rmt3 (n int) engine=ReplicatedMergeTree('/test/02468/{database}3', '1') order by tuple() settings replicated_max_ratio_of_wrong_parts=0, max_suspicious_broken_parts=0, max_suspicious_broken_parts_bytes=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02486_truncate_and_unexpected_parts.sql","errors":[]},{"query":"create table rmt1 (n int, m int, k int) engine=ReplicatedMergeTree('/test/02485/{database}/rmt', '1') order by n settings storage_policy='s3_cache', allow_remote_fs_zero_copy_replication=1, old_parts_lifetime=60, cleanup_delay_period=60, max_cleanup_delay_period=60, cleanup_delay_period_random_add=1, min_bytes_for_wide_part=0, simultaneous_parts_removal_limit=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02485_zero_copy_commit_error.sql","errors":[]},{"query":"create table rmt2 (n int, m int, k int) engine=ReplicatedMergeTree('/test/02485/{database}/rmt', '2') order by n settings storage_policy='s3_cache', allow_remote_fs_zero_copy_replication=1, old_parts_lifetime=0, cleanup_delay_period=0, max_cleanup_delay_period=1, cleanup_delay_period_random_add=1, min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02485_zero_copy_commit_error.sql","errors":[]},{"query":"CREATE FUNCTION 02484_plusone AS (a) -> a + 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02484_substitute_udf_storage_args.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02484_plustwo AS (a) -> a + 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02484_substitute_udf_storage_args.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02484_plusthreemonths AS (a) -> a + INTERVAL 3 MONTH;","fileName":"../ClickHouse/tests/queries/0_stateless/02484_substitute_udf_storage_args.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE 02484_substitute_udf (id UInt32, dt DateTime, number UInt32)  ENGINE=MergeTree() \nORDER BY 02484_plusone(id)\nPARTITION BY 02484_plustwo(id)\nSAMPLE BY 02484_plusone(id)\nTTL 02484_plusthreemonths(dt);","fileName":"../ClickHouse/tests/queries/0_stateless/02484_substitute_udf_storage_args.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02484'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE FUNCTION 02484_plusthree AS (a) -> a + 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02484_substitute_udf_storage_args.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02484_plusthreedays AS (a) -> a + INTERVAL 3 DAY;","fileName":"../ClickHouse/tests/queries/0_stateless/02484_substitute_udf_storage_args.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02483_plusone AS (a) -> a + 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02483_substitute_udf_create.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE 02483_substitute_udf (id UInt32, number UInt32 DEFAULT 02483_plusone(id)) ENGINE=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02483_substitute_udf_create.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02483'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE FUNCTION 02483_plustwo AS (a) -> a + 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02483_substitute_udf_create.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02483_plusthree AS (a) -> a + 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02483_substitute_udf_create.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"create table test (line String, _file String, _path String) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02483_check_virtuals_shile_using_structure_from_insertion_table.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS replicated_database_test ENGINE = Replicated('some/path/' || currentDatabase() || '/replicated_database_test', 'shard_1', 'replica_1') SETTINGS max_broken_tables_ratio=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02483_add_engine_full_column_to_system_databases.sql","errors":[{"message":"mismatched input 'SETTINGS' expecting <EOF>","startColumn":165,"startLine":1,"endColumn":173,"endLine":1}]},{"query":"CREATE TABLE range_key_dictionary_source_table__fuzz_323 (\n\\`key\\` UInt256,\n\\`start_date\\` Int8,\n\\`end_date\\` LowCardinality(UInt256),\n\\`value\\` Tuple(UInt8, Array(DateTime), Decimal(9, 1), Array(Int16), Array(UInt8)),\n\\`value_nullable\\` UUID\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02482_value_block_assert.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE range_key_dictionary_source_table__fuzz_323 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE tmp_02482 (i UInt64, n LowCardinality(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02482_insert_into_dist_race.sql","errors":[]},{"query":"CREATE TABLE dist_02482(i UInt64, n LowCardinality(Nullable(String))) ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), tmp_02482, i);","fileName":"../ClickHouse/tests/queries/0_stateless/02482_insert_into_dist_race.sql","errors":[]},{"query":"create table test (x LowCardinality(Int32)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02482_execute_functions_before_sorting_bug.sql","errors":[]},{"query":"create table test_02481_mismatch_files (a UInt64, b String) engine = S3(s3_conn, filename='test_02481_mismatch_files_{_partition_id}', format=Parquet) partition by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02481_s3_throw_if_mismatch_files.sql","errors":[]},{"query":"CREATE TABLE test_filter(a Int32, b Int32, c Int32) ENGINE = MergeTree() ORDER BY a SETTINGS index_granularity = 3, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02481_prewhere_filtered_rows_div_by_zero.sql","errors":[]},{"query":"CREATE TABLE gen (\nrepo_name String,\nevent_type Enum8('CommitCommentEvent' = 1, 'CreateEvent' = 2, 'DeleteEvent' = 3, 'ForkEvent' = 4, 'GollumEvent' = 5, 'IssueCommentEvent' = 6, 'IssuesEvent' = 7, 'MemberEvent' = 8, 'PublicEvent' = 9, 'PullRequestEvent' = 10, 'PullRequestReviewCommentEvent' = 11, 'PushEvent' = 12, 'ReleaseEvent' = 13, 'SponsorshipEvent' = 14, 'WatchEvent' = 15, 'GistEvent' = 16, 'FollowEvent' = 17, 'DownloadEvent' = 18, 'PullRequestReviewEvent' = 19, 'ForkApplyEvent' = 20, 'Event' = 21, 'TeamAddEvent' = 22),\nactor_login String,\ncreated_at DateTime,\naction Enum8('none' = 0, 'created' = 1, 'added' = 2, 'edited' = 3, 'deleted' = 4, 'opened' = 5, 'closed' = 6, 'reopened' = 7, 'assigned' = 8, 'unassigned' = 9, 'labeled' = 10, 'unlabeled' = 11, 'review_requested' = 12, 'review_request_removed' = 13, 'synchronize' = 14, 'started' = 15, 'published' = 16, 'update' = 17, 'create' = 18, 'fork' = 19, 'merged' = 20),\nnumber UInt32,\nmerged_at DateTime\n)\nENGINE = GenerateRandom;","fileName":"../ClickHouse/tests/queries/0_stateless/02481_pk_analysis_with_enum_to_string.sql","errors":[]},{"query":"CREATE TABLE github_events AS gen ENGINE=MergeTree ORDER BY (event_type, repo_name, created_at) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02481_pk_analysis_with_enum_to_string.sql","errors":[]},{"query":"CREATE TABLE 02481_mergetree(x UInt64, y UInt64, arr Array(String)) ENGINE = MergeTree ORDER BY x SAMPLE BY x SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02481_merge_array_join_sample_by.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02481'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02481_merge(x UInt64, y UInt64, arr Array(String)) ENGINE = Merge(currentDatabase(), '^(02481_mergetree)\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/02481_merge_array_join_sample_by.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02481'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table issue_46128 ( \tid Int64,\n\ta LowCardinality(Nullable(String)),\n\tb LowCardinality(Nullable(String))\n) Engine = MergeTree order by id\nas  select number%100, 'xxxx', 'yyyy' from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/02481_low_cardinality_with_short_circuit_functins_mutations.sql","errors":[]},{"query":"CREATE TABLE test_rlp (a Int32, b Int32) ENGINE=MergeTree() ORDER BY a SETTINGS index_granularity=5, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02481_default_value_used_in_row_level_filter.sql","errors":[]},{"query":"CREATE ROW POLICY test_rlp_policy ON test_rlp FOR SELECT USING c%2 == 0 TO default;","fileName":"../ClickHouse/tests/queries/0_stateless/02481_default_value_used_in_row_level_filter.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE arrays_test (\ns String,\narr1 Array(UInt8),\nmap1 Map(UInt8, String),\nmap2 Map(UInt8, String)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02481_array_join_with_map.sql","errors":[]},{"query":"CREATE TABLE test_table_join_1 (\nid UInt8,\nvalue String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02481_analyzer_join_alias_unknown_identifier_crash.sql","errors":[]},{"query":"CREATE TABLE test_table_join_2 (\nid UInt16,\nvalue String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02481_analyzer_join_alias_unknown_identifier_crash.sql","errors":[]},{"query":"create table tab (a Int32, b Int32, c Int32, d Int32) engine = MergeTree order by (a, b, c);","fileName":"../ClickHouse/tests/queries/0_stateless/02481_aggregation_in_order_plan.sql","errors":[]},{"query":"create table test (val LowCardinality(Float32)) engine MergeTree order by val;","fileName":"../ClickHouse/tests/queries/0_stateless/02480_suspicious_lowcard_in_key.sql","errors":[]},{"query":"create table test_02480_support_wildcard_write (a UInt64, b String) engine = S3(s3_conn, filename='test_02480_support_wildcard_{_partition_id}', format=Parquet) partition by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02480_s3_support_wildcard.sql","errors":[]},{"query":"create table test_02480_support_wildcard_write2 (a UInt64, b String) engine = S3(s3_conn, filename='prefix/test_02480_support_wildcard_{_partition_id}', format=Parquet) partition by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02480_s3_support_wildcard.sql","errors":[]},{"query":"create table test_table (A Nullable(String), B Nullable(String)) engine MergeTree order by (A,B) settings index_granularity = 1, allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02479_nullable_primary_key_non_first_column.sql","errors":[]},{"query":"CREATE TABLE dm_metric_small2 (\\`x\\` Nullable(Int64), \\`y\\` Nullable(Int64), \\`z\\` Nullable(Int64)) ENGINE = MergeTree() ORDER BY (x, y, z) SETTINGS index_granularity = 1, allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02479_nullable_primary_key_non_first_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dm_metric_small2 (\\'","startColumn":31,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE foo (key UInt32, a String, b Int64, c String) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02479_mysql_connect_to_self.sql","errors":[]},{"query":"CREATE TABLE lc_00906__fuzz_46 (\\`b\\` Int64) ENGINE = MergeTree ORDER BY b;","fileName":"../ClickHouse/tests/queries/0_stateless/02479_analyzer_aggregation_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE lc_00906__fuzz_46 (\\'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE testing (\na String,\nb String,\nc Int32,\nd Int32,\ne Int32,\nPROJECTION proj_1\n(\nSELECT c ORDER BY d\n),\nPROJECTION proj_2\n(\nSELECT c ORDER BY e, d\n)\n)\nENGINE = MergeTree() PRIMARY KEY (a) SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02478_projection_with_group_by_alter.sql","errors":[]},{"query":"CREATE TABLE testing (\na String,\nb String,\nc String,\nd String,\nPROJECTION proj_1\n(\nSELECT b, c\nORDER BY d\n)\n)\nENGINE = MergeTree()\nPRIMARY KEY (a)\nORDER BY (a, b)\nSETTINGS index_granularity = 8192, index_granularity_bytes = 0, min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02478_projection_and_alter_low_cardinality.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02478_analyzer_table_expression_aliases.sql","errors":[]},{"query":"CREATE TABLE argmaxstate_hex_small (\n\\`v\\` String,\n\\`state\\` String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02477_single_value_data_string_regression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE argmaxstate_hex_small (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE argmaxstate_hex_large (\n\\`v\\` String,\n\\`state\\` String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02477_single_value_data_string_regression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE argmaxstate_hex_large (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE argmaxstate_hex_empty (\n\\`v\\` String,\n\\`state\\` String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02477_single_value_data_string_regression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE argmaxstate_hex_empty (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table aggr (n int, s AggregateFunction(max, String)) engine=MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/02477_single_value_data_string_regression.sql","errors":[]},{"query":"create table t (c1 Int64, c2 String, c3 DateTime, c4 Int8, c5 String, c6 String, c7 String, c8 String, c9 String, c10 String, c11 String, c12 String, c13 Int8, c14 Int64, c15 String, c16 String, c17 String, c18 Int64, c19 Int64, c20 Int64) engine ReplicatedMergeTree('/clickhouse/test/{database}/test_02477', '1') order by c18 SETTINGS allow_remote_fs_zero_copy_replication=1, index_granularity=8192, index_granularity_bytes='10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02477_projection_materialize_and_zero_copy.sql","errors":[]},{"query":"CREATE TABLE t_logical_expressions_optimizer_low_cardinality (a LowCardinality(String), b UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02477_logical_expressions_optimizer_low_cardinality.sql","errors":[]},{"query":"CREATE TABLE fuse_tbl(a Nullable(Int32), b Int32) Engine = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02477_fuse_quantiles.sql","errors":[]},{"query":"create table test_rows_compact_part__fuzz_11 (x UInt32) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02477_exists_fuzz_43478.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64\n) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02477_analyzer_ast_key_condition_crash.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String,\nvalue_array Array(UInt64)\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02477_analyzer_array_join_with_join.sql","errors":[]},{"query":"CREATE TABLE 02476_query_parameters_insert (x Int32) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02476_query_parameters_insert.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02476'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE fuse_tbl(a Nullable(Int8), b Int8) Engine = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02476_fuse_sum_count.sql","errors":[]},{"query":"CREATE TABLE tab1 (a1 Int32, b1 Int32, val UInt64) ENGINE = MergeTree ORDER BY a1;","fileName":"../ClickHouse/tests/queries/0_stateless/02475_join_bug_42832.sql","errors":[]},{"query":"CREATE TABLE tab2 (a2 LowCardinality(Int32), b2 Int32) ENGINE = MergeTree ORDER BY a2;","fileName":"../ClickHouse/tests/queries/0_stateless/02475_join_bug_42832.sql","errors":[]},{"query":"create table unhex_in_fix_string_table ( dt Date, s1 FixedString(20), s2 String) engine=MergeTree partition by dt order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02474_unhex_in_fix_string.sql","errors":[]},{"query":"CREATE DATABASE conv_mian ENGINE QALL(COLUMNS('|T.D'),¸mp} -- { clientError SYNTAX_ERROR } ","fileName":"../ClickHouse/tests/queries/0_stateless/02474_fix_function_parser_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE conv_mian ENGINE QALL(COLUMNS('|T.D'),mp}'","startColumn":57,"startLine":1,"endColumn":58,"endLine":1}]},{"query":"CREATE TABLE prewhere_int128 (a Int128) ENGINE=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02473_prewhere_with_bigint.sql","errors":[]},{"query":"CREATE TABLE prewhere_int256 (a Int256) ENGINE=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02473_prewhere_with_bigint.sql","errors":[]},{"query":"CREATE TABLE prewhere_uint128 (a UInt128) ENGINE=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02473_prewhere_with_bigint.sql","errors":[]},{"query":"CREATE TABLE prewhere_uint256 (a UInt256) ENGINE=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02473_prewhere_with_bigint.sql","errors":[]},{"query":"CREATE TABLE tdm__fuzz_23 (\\`x\\` UInt256) ENGINE = MergeTree ORDER BY x SETTINGS write_final_mark = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02471_wrong_date_monotonicity.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tdm__fuzz_23 (\\'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE TABLE alias_2__fuzz_25 (\\`dt\\` LowCardinality(Date), \\`col\\` DateTime, \\`col2\\` Nullable(Int256), \\`colAlias0\\` Nullable(DateTime64(3)) ALIAS col, \\`colAlias3\\` Nullable(Int32) ALIAS col3 + colAlias0, \\`colAlias1\\` LowCardinality(UInt16) ALIAS colAlias0 + col2, \\`colAlias2\\` LowCardinality(Int32) ALIAS colAlias0 + colAlias1, \\`col3\\` Nullable(UInt8)) ENGINE = MergeTree ORDER BY dt;","fileName":"../ClickHouse/tests/queries/0_stateless/02470_suspicious_low_cardinality_msan.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE alias_2__fuzz_25 (\\'","startColumn":31,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE bloom_filter_nullable_index__fuzz_0 (\n\\`order_key\\` UInt64,\n\\`str\\` Nullable(String),\nINDEX idx str TYPE bloom_filter GRANULARITY 1\n)\nENGINE = MergeTree ORDER BY order_key SETTINGS index_granularity = 6, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02467_set_with_lowcardinality_type.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE bloom_filter_nullable_index__fuzz_0 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE bloom_filter_nullable_index__fuzz_1 (\n\\`order_key\\` UInt64,\n\\`str\\` String,\nINDEX idx str TYPE bloom_filter GRANULARITY 1\n)\nENGINE = MergeTree ORDER BY order_key SETTINGS index_granularity = 6, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02467_set_with_lowcardinality_type.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE bloom_filter_nullable_index__fuzz_1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE nullable_string_value__fuzz_2 (\\`value\\` LowCardinality(String)) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02467_set_with_lowcardinality_type.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE nullable_string_value__fuzz_2 (\\'","startColumn":44,"startLine":1,"endColumn":45,"endLine":1}]},{"query":"CREATE TABLE t_max_rows_to_read (a UInt64) ENGINE = MergeTree ORDER BY a\nSETTINGS index_granularity = 4, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02465_limit_trivial_max_rows_to_read.sql","errors":[]},{"query":"CREATE TABLE series__fuzz_35 (\\`i\\` UInt8, \\`x_value\\` Decimal(18, 14), \\`y_value\\` DateTime) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02464_decimal_scale_buffer_overflow.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE series__fuzz_35 (\\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE mt_match_pk (v String) ENGINE = MergeTree ORDER BY v SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02462_match_regexp_pk.sql","errors":[]},{"query":"CREATE TABLE welch_ttest__fuzz_7 (left UInt128, right UInt128) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_welch_t_test_fuzz.sql","errors":[]},{"query":"create table tab (x Nullable(UInt8)) engine = MergeTree order by x settings allow_nullable_key = 1, index_granularity = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_mullable_pk_monotonicity_bug.sql","errors":[]},{"query":"create table tab (x LowCardinality(UInt8)) engine = MergeTree order by x settings allow_nullable_key = 1, index_granularity = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_mullable_pk_monotonicity_bug.sql","errors":[]},{"query":"create table tab (x UInt128) engine = MergeTree order by x settings allow_nullable_key = 1, index_granularity = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_mullable_pk_monotonicity_bug.sql","errors":[]},{"query":"create table tab (x DateTime) engine = MergeTree order by x settings allow_nullable_key = 1, index_granularity = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_mullable_pk_monotonicity_bug.sql","errors":[]},{"query":"CREATE TABLE t1__fuzz_13 (id Nullable(Int16)) ENGINE = MergeTree() ORDER BY id SETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_join_lc_issue_42380.sql","errors":[]},{"query":"CREATE TABLE t2__fuzz_47 (id LowCardinality(Int16)) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_join_lc_issue_42380.sql","errors":[]},{"query":"create table src( A Int64, B String, C String) Engine=MergeTree order by A SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.sql","errors":[]},{"query":"create table src( A String, B String, C String) Engine=MergeTree order by A SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.sql","errors":[]},{"query":"create table src( A String, B String, C String) Engine=MergeTree order by A SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.sql","errors":[]},{"query":"create table src( A String, B String, C String) Engine=MergeTree order by A SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.sql","errors":[]},{"query":"create table src( A Int64, B String, C String) Engine=ReplicatedMergeTree('/clickhouse/{database}/test/src1', '1') order by A SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.sql","errors":[]},{"query":"create table src( A String, B String, C String) Engine=ReplicatedMergeTree('/clickhouse/{database}/test/src2', '1') order by A SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.sql","errors":[]},{"query":"create table src( A String, B String, C String) Engine=ReplicatedMergeTree('/clickhouse/{database}/test/src3', '1') order by A SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.sql","errors":[]},{"query":"create table src( A String, B String, C String) Engine=ReplicatedMergeTree('/clickhouse/{database}/test/src4', '1') order by A SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02461_alter_update_respect_part_column_type_bug.sql","errors":[]},{"query":"CREATE TABLE row_level_policy_prewhere (x Int16, y String) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02460_prewhere_row_level_policy.sql","errors":[]},{"query":"CREATE ROW POLICY row_level_policy_prewhere_policy0 ON row_level_policy_prewhere FOR SELECT USING x >= 0 TO default;","fileName":"../ClickHouse/tests/queries/0_stateless/02460_prewhere_row_level_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE mytable_stored (\\`a\\` UInt8) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02459_read_in_order_bufer.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mytable_stored (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE mytable (\\`a\\` UInt8) ENGINE = Buffer(currentDatabase(), 'mytable_stored', 4, 600, 3600, 10, 100, 10000, 10000000);","fileName":"../ClickHouse/tests/queries/0_stateless/02459_read_in_order_bufer.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mytable (\\'","startColumn":22,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE session (\n\\`day\\` Date,\n\\`uid\\` String,\n\\`dummy\\` String DEFAULT ''\n)\nENGINE = MergeTree\nORDER BY (day, uid);","fileName":"../ClickHouse/tests/queries/0_stateless/02459_materialized_view_default_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE session (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE queue (\n\\`day\\` Date,\n\\`uid\\` String\n)\nENGINE = MergeTree\nORDER BY (day, uid);","fileName":"../ClickHouse/tests/queries/0_stateless/02459_materialized_view_default_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE queue (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE MATERIALIZED VIEW IF NOT EXISTS forward TO session AS SELECT\nday,\nuid\nFROM queue;","fileName":"../ClickHouse/tests/queries/0_stateless/02459_materialized_view_default_value.sql","errors":[]},{"query":"CREATE TABLE group_by_pk_lc_uint128 (\\`k\\` LowCardinality(UInt128), \\`v\\` UInt32) ENGINE = MergeTree ORDER BY k PARTITION BY v%50;","fileName":"../ClickHouse/tests/queries/0_stateless/02459_low_cardinality_uint128_aggregator.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE group_by_pk_lc_uint128 (\\'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE TABLE group_by_pk_lc_uint256 (\\`k\\` LowCardinality(UInt256), \\`v\\` UInt32) ENGINE = MergeTree ORDER BY k PARTITION BY v%50;","fileName":"../ClickHouse/tests/queries/0_stateless/02459_low_cardinality_uint128_aggregator.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE group_by_pk_lc_uint256 (\\'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE TABLE group_by_all (\na String,\nb int,\nc int\n)\nengine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02459_group_by_all.sql","errors":[]},{"query":"create table test (x Nullable(UInt32), y UInt32) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02458_use_structure_from_insertion_table.sql","errors":[]},{"query":"create table test (x Nullable(UInt32)) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02458_use_structure_from_insertion_table.sql","errors":[]},{"query":"CREATE TABLE test (x UInt64, s String) ENGINE = MergeTree ORDER BY tuple() SETTINGS parts_to_throw_insert = 3, max_parts_to_merge_at_once = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02458_relax_too_many_parts.sql","errors":[]},{"query":"CREATE TABLE data (str String) ENGINE=MergeTree ORDER BY str;","fileName":"../ClickHouse/tests/queries/0_stateless/02458_key_condition_not_like_prefix.sql","errors":[]},{"query":"create table morton_numbers_mask_02457( n1 UInt8,\nn2 UInt8,\nn3 UInt8,\nn4 UInt8\n)\nEngine=MergeTree()\nORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02457_morton_coding_with_mask.sql","errors":[]},{"query":"create table morton_numbers_mask_1_02457( n1 UInt64,\nn2 UInt64,\nn3 UInt64,\nn4 UInt64\n)\nEngine=MergeTree()\nORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02457_morton_coding_with_mask.sql","errors":[]},{"query":"create table morton_numbers_mask_02457( n1 UInt32,\nn2 UInt8\n)\nEngine=MergeTree()\nORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02457_morton_coding_with_mask.sql","errors":[]},{"query":"create table morton_numbers_mask_2_02457( n1 UInt64,\nn2 UInt64\n)\nEngine=MergeTree()\nORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02457_morton_coding_with_mask.sql","errors":[]},{"query":"create table morton_numbers_mask_02457( n1 UInt16,\nn2 UInt16,\nn3 UInt8,\n)\nEngine=MergeTree()\nORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02457_morton_coding_with_mask.sql","errors":[{"message":"no viable alternative at input 'create table morton_numbers_mask_02457( n1 UInt16,\\nn2 UInt16,\\nn3 UInt8,\\n)'","startColumn":0,"startLine":4,"endColumn":1,"endLine":4}]},{"query":"create table morton_numbers_mask_3_02457( n1 UInt64,\nn2 UInt64,\nn3 UInt64\n)\nEngine=MergeTree()\nORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02457_morton_coding_with_mask.sql","errors":[]},{"query":"create table morton_numbers_02457( n1 UInt32,\nn2 UInt32,\nn3 UInt16,\nn4 UInt16,\nn5 UInt8,\nn6 UInt8,\nn7 UInt8,\nn8 UInt8\n)\nEngine=MergeTree()\nORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02457_morton_coding.sql","errors":[]},{"query":"create table morton_numbers_1_02457( n1 UInt64,\nn2 UInt64,\nn3 UInt64,\nn4 UInt64,\nn5 UInt64,\nn6 UInt64,\nn7 UInt64,\nn8 UInt64\n)\nEngine=MergeTree()\nORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02457_morton_coding.sql","errors":[]},{"query":"create table morton_numbers_2_02457( n1 UInt64,\nn2 UInt64,\nn3 UInt64,\nn4 UInt64\n)\nEngine=MergeTree()\nORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02457_morton_coding.sql","errors":[]},{"query":"create table morton_numbers_3_02457( n1 UInt64,\nn2 UInt64\n)\nEngine=MergeTree()\nORDER BY n1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02457_morton_coding.sql","errors":[]},{"query":"create table test (Printer LowCardinality(String), IntervalStart DateTime) engine MergeTree partition by (hiveHash(Printer), toYear(IntervalStart)) order by (Printer, IntervalStart);","fileName":"../ClickHouse/tests/queries/0_stateless/02457_key_condition_with_types_that_cannot_be_nullable.sql","errors":[]},{"query":"CREATE TABLE mutation_1 (\na UInt64,\nb String\n)\nENGINE = ReplicatedMergeTree('/clickhouse/test/{database}/t', '1')\nORDER BY tuple() SETTINGS min_bytes_for_wide_part=0, allow_remote_fs_zero_copy_replication=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02456_test_zero_copy_mutation.sql","errors":[]},{"query":"CREATE TABLE mutation_2 (\na UInt64,\nb String\n)\nENGINE = ReplicatedMergeTree('/clickhouse/test/{database}/t', '2')\nORDER BY tuple() SETTINGS min_bytes_for_wide_part=0, allow_remote_fs_zero_copy_replication=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02456_test_zero_copy_mutation.sql","errors":[]},{"query":"CREATE TABLE t_summing_lc (\n\\`key\\` UInt32,\n\\`val\\` LowCardinality(UInt32),\n\\`date\\` DateTime\n)\nENGINE = SummingMergeTree(val)\nPARTITION BY date\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02456_summing_mt_lc.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_summing_lc (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE keeper_retries_r1(a UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/02456_keeper_retries_during_insert', 'r1') ORDER BY tuple ();","fileName":"../ClickHouse/tests/queries/0_stateless/02456_keeper_retries_during_insert.sql","errors":[]},{"query":"CREATE TABLE keeper_retries_r2(a UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/02456_keeper_retries_during_insert', 'r2') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02456_keeper_retries_during_insert.sql","errors":[]},{"query":"CREATE TABLE column_modify_test (id UInt64, val String, other_col UInt64) engine=MergeTree ORDER BY id SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02456_alter-nullable-column-bag.sql","errors":[]},{"query":"CREATE TABLE t1  (v UInt64) ENGINE=ReplicatedMergeTree('/test/tables/{database}/test/t1', 'r1') ORDER BY v PARTITION BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/02456_alter-nullable-column-bag-2.sql","errors":[]},{"query":"CREATE TABLE test_a (id UInt32, company UInt32, total UInt64) ENGINE=SummingMergeTree() PARTITION BY company PRIMARY KEY (id) ORDER BY (id, company);","fileName":"../ClickHouse/tests/queries/0_stateless/02455_improve_feedback_when_replacing_partition_with_different_primary_key.sql","errors":[]},{"query":"CREATE TABLE test_b (id UInt32, company UInt32, total UInt64) ENGINE=SummingMergeTree() PARTITION BY company ORDER BY (id, company);","fileName":"../ClickHouse/tests/queries/0_stateless/02455_improve_feedback_when_replacing_partition_with_different_primary_key.sql","errors":[]},{"query":"CREATE TABLE test_fixed_string_nested_json (data String) ENGINE MergeTree ORDER BY data;","fileName":"../ClickHouse/tests/queries/0_stateless/02455_extract_fixed_string_from_nested_json.sql","errors":[]},{"query":"create table a (i int, j int) engine Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02455_count_state_asterisk.sql","errors":[]},{"query":"create materialized view b engine Log as select countState(*) from a;","fileName":"../ClickHouse/tests/queries/0_stateless/02455_count_state_asterisk.sql","errors":[]},{"query":"create table t_row_exists(a int, _row_exists int) engine=MergeTree order by a; --{serverError ILLEGAL_COLUMN} create table t_row_exists(a int, b int) engine=MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02454_disable_mergetree_with_lightweight_delete_column.sql","errors":[]},{"query":"create table t_row_exists(a int, _row_exists int) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02454_disable_mergetree_with_lightweight_delete_column.sql","errors":[]},{"query":"create table t_row_exists(a int, b int) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02454_disable_mergetree_with_lightweight_delete_column.sql","errors":[]},{"query":"CREATE TABLE test (a Int32) ENGINE = MergeTree() order by tuple()\nSETTINGS disk = disk(type=local, path='/local/'); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE test (a Int32)\nENGINE = MergeTree() order by tuple()\nSETTINGS disk = disk(type=local, path='/var/lib/clickhouse/disks/local/');","fileName":"../ClickHouse/tests/queries/0_stateless/02454_create_table_with_custom_disk.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (a Int32) ENGINE = MergeTree() order by tuple()\\nSETTINGS disk = disk'","startColumn":16,"startLine":2,"endColumn":20,"endLine":2}]},{"query":"create table cc (a UInt64, b String) ENGINE = MergeTree order by (a, b) SETTINGS compress_marks = true;","fileName":"../ClickHouse/tests/queries/0_stateless/02454_compressed_marks_in_compact_part.sql","errors":[{"message":"no viable alternative at input 'create table cc (a UInt64, b String) ENGINE = MergeTree order by (a, b) SETTINGS compress_marks = true'","startColumn":98,"startLine":1,"endColumn":102,"endLine":1}]},{"query":"CREATE TABLE test_low_cardinality_string (data String) ENGINE MergeTree ORDER BY data;","fileName":"../ClickHouse/tests/queries/0_stateless/02452_check_low_cardinality.sql","errors":[]},{"query":"CREATE TABLE test_low_cardinality_uuid (data String) ENGINE MergeTree ORDER BY data;","fileName":"../ClickHouse/tests/queries/0_stateless/02452_check_low_cardinality.sql","errors":[]},{"query":"CREATE TABLE test_low_cardinality_int (data String) ENGINE MergeTree ORDER BY data;","fileName":"../ClickHouse/tests/queries/0_stateless/02452_check_low_cardinality.sql","errors":[]},{"query":"CREATE TABLE view (id UInt32, value String) ENGINE=ReplicatedMergeTree('/test/2449/{database}', '1') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.sql","errors":[]},{"query":"CREATE DICTIONARY dict (id UInt32, value String) PRIMARY KEY id\nSOURCE(CLICKHOUSE(host 'localhost' port tcpPort() user 'default' db currentDatabase() table 'view'))\nLAYOUT (HASHED()) LIFETIME (MIN 600 MAX 600);","fileName":"../ClickHouse/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.sql","errors":[]},{"query":"CREATE TABLE table (\ncol MATERIALIZED dictGet(currentDatabase() || '.dict', 'value', toUInt32(1))\n)\nENGINE = MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02449_check_dependencies_and_table_shutdown.sql","errors":[]},{"query":"create table rmt1 (n int) engine=ReplicatedMergeTree('/test/02448/{database}/rmt', '1') order by tuple() settings min_replicated_logs_to_keep=1, max_replicated_logs_to_keep=2,\nmax_cleanup_delay_period=1, cleanup_delay_period=0, cleanup_delay_period_random_add=1,\ncleanup_thread_preferred_points_per_iteration=0, old_parts_lifetime=0, max_parts_to_merge_at_once=4,\nmerge_selecting_sleep_ms=1000, max_merge_selecting_sleep_ms=2000;","fileName":"../ClickHouse/tests/queries/0_stateless/02448_clone_replica_lost_part.sql","errors":[]},{"query":"create table rmt2 (n int) engine=ReplicatedMergeTree('/test/02448/{database}/rmt', '2') order by tuple() settings min_replicated_logs_to_keep=1, max_replicated_logs_to_keep=2,\nmax_cleanup_delay_period=1, cleanup_delay_period=0, cleanup_delay_period_random_add=1,\ncleanup_thread_preferred_points_per_iteration=0, old_parts_lifetime=0, max_parts_to_merge_at_once=4,\nmerge_selecting_sleep_ms=1000, max_merge_selecting_sleep_ms=2000;","fileName":"../ClickHouse/tests/queries/0_stateless/02448_clone_replica_lost_part.sql","errors":[]},{"query":"create table rmt1 (n int, m int, k int) engine=ReplicatedMergeTree('/test/02446/{database}/rmt', '1') order by n settings storage_policy='s3_cache', allow_remote_fs_zero_copy_replication=1, old_parts_lifetime=0, cleanup_delay_period=0, max_cleanup_delay_period=1, cleanup_delay_period_random_add=1, min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02446_parent_zero_copy_locks.sql","errors":[]},{"query":"create table rmt2 (n int, m int, k int) engine=ReplicatedMergeTree('/test/02446/{database}/rmt', '2') order by n settings storage_policy='s3_cache', allow_remote_fs_zero_copy_replication=1, old_parts_lifetime=0, cleanup_delay_period=0, max_cleanup_delay_period=1, cleanup_delay_period_random_add=1, min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02446_parent_zero_copy_locks.sql","errors":[]},{"query":"create table t1_r1 (x Int32) engine=ReplicatedMergeTree('/test/02442/{database}/t', 'r1') order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02442_auxiliary_zookeeper_endpoint_id.sql","errors":[]},{"query":"create table t1_r2 (x Int32) engine=ReplicatedMergeTree('/test/02442/{database}/t', 'r2') order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02442_auxiliary_zookeeper_endpoint_id.sql","errors":[]},{"query":"create table t2 (x Int32) engine=ReplicatedMergeTree('zookeeper2:/test/02442/{database}/t', 'r1') order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02442_auxiliary_zookeeper_endpoint_id.sql","errors":[]},{"query":"create table mut (n int, m int, k int) engine=ReplicatedMergeTree('/test/02441/{database}/mut', '1') order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/02441_alter_delete_and_drop_column.sql","errors":[]},{"query":"create table mut (n int) engine=ReplicatedMergeTree('/test/02440/{database}/mut', '1') order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02440_mutations_finalization.sql","errors":[]},{"query":"create table tmp (n int) engine=MergeTree order by tuple() settings index_granularity=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02440_mutations_finalization.sql","errors":[]},{"query":"create table rmt (n int, m int) engine=ReplicatedMergeTree('/test/02439/{shard}/{database}', '{replica}') partition by n order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/02439_merge_selecting_partitions.sql","errors":[]},{"query":"create table rmt1 (n int) engine=ReplicatedMergeTree('/test/{database}/02438/', '1') order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02438_sync_replica_lightweight.sql","errors":[]},{"query":"create table rmt2 (n int) engine=ReplicatedMergeTree('/test/{database}/02438/', '2') order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02438_sync_replica_lightweight.sql","errors":[]},{"query":"create table mt (n int, s String) engine=MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/02436_system_zookeeper_context.sql","errors":[]},{"query":"CREATE TABLE id_join (\\`country\\` String, \\`location\\` Array(Int32)) ENGINE = Join(ANY, LEFT, country);","fileName":"../ClickHouse/tests/queries/0_stateless/02433_default_expression_operator_in.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE id_join (\\'","startColumn":22,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE dep (\n\\`id\\` Int32,\n\\`country\\` LowCardinality(String),\n\\`purchase_location\\` UInt16 MATERIALIZED if(id IN joinGet(concat(currentDatabase(), '.id_join'), 'location', 'CLICK'), 123, 456)\n)\nENGINE = ReplicatedMergeTree('/test/02433/{database}/dep', '1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02433_default_expression_operator_in.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dep (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE dep2 (\n\\`id\\` Int32,\n\\`country\\` LowCardinality(String),\n\\`purchase_location\\` UInt16 MATERIALIZED if(id IN joinGet(concat(currentDatabase(), '.id_join'), 'location', 'CLICK'), 123, 456)\n)\nENGINE = ReplicatedMergeTree('/test/02433/{database}/dep', '2') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02433_default_expression_operator_in.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dep2 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table test (n int, m default n in 'default.table_name') engine=Memory; -- { serverError TYPE_MISMATCH } create table test (n int, m default in(n, 'default.table_name')) engine=Memory; -- { serverError TYPE_MISMATCH }\nDROP TABLE dep;","fileName":"../ClickHouse/tests/queries/0_stateless/02433_default_expression_operator_in.sql","errors":[]},{"query":"create table rmt (n int, m int, k int) engine=ReplicatedMergeTree('/test/02432/{database}', '1') order by tuple() settings storage_policy = 's3_cache', allow_remote_fs_zero_copy_replication=1,\nconcurrent_part_removal_threshold=1, cleanup_delay_period=1, cleanup_delay_period_random_add=1, cleanup_thread_preferred_points_per_iteration=0,\nmax_replicated_merges_in_queue=0, max_replicated_mutations_in_queue=0, min_bytes_for_wide_part=0, min_rows_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02432_s3_parallel_parts_cleanup.sql","errors":[]},{"query":"create table rmt2 (n int, m int, k String) engine=ReplicatedMergeTree('/test/02432/{database}', '2') order by tuple() settings storage_policy = 's3_cache', allow_remote_fs_zero_copy_replication=1,\nconcurrent_part_removal_threshold=1, cleanup_delay_period=1, cleanup_delay_period_random_add=1, cleanup_thread_preferred_points_per_iteration=0,\nmin_bytes_for_wide_part=0, min_rows_for_wide_part=0, max_replicated_merges_in_queue=1,\nold_parts_lifetime=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02432_s3_parallel_parts_cleanup.sql","errors":[]},{"query":"CREATE TABLE t ENGINE = Log AS SELECT * FROM system.numbers LIMIT 20;","fileName":"../ClickHouse/tests/queries/0_stateless/02429_offset_pipeline_stuck_bug.sql","errors":[]},{"query":"create table partial_sort_opt_bug (x UInt64) engine = MergeTree order by tuple() settings index_granularity = 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/02428_partial_sort_optimization_bug.sql","errors":[]},{"query":"create table t(z String, ts DateTime) Engine=Memory as  select '1', '2020-01-01 00:00:00';","fileName":"../ClickHouse/tests/queries/0_stateless/02428_parameterized_view_param_in_select_section.sql","errors":[]},{"query":"CREATE VIEW v1 AS SELECT z, 'test' = {m:String} AS c\nFROM t \nWHERE ts > '2019-01-01 00:00:00'\nGROUP BY z, c;","fileName":"../ClickHouse/tests/queries/0_stateless/02428_parameterized_view_param_in_select_section.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW v1 AS SELECT z, 'test' = {'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE VIEW v2 AS SELECT z, {m:String} AS c\nFROM t \nWHERE ts > '2019-01-01 00:00:00'\nGROUP BY z, c;","fileName":"../ClickHouse/tests/queries/0_stateless/02428_parameterized_view_param_in_select_section.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW v2 AS SELECT z, {'","startColumn":28,"startLine":1,"endColumn":29,"endLine":1}]},{"query":"CREATE VIEW v3 AS SELECT z, {m:String} \nFROM t;","fileName":"../ClickHouse/tests/queries/0_stateless/02428_parameterized_view_param_in_select_section.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW v3 AS SELECT z, {'","startColumn":28,"startLine":1,"endColumn":29,"endLine":1}]},{"query":"create table t(z String, ts DateTime) Engine=MergeTree ORDER BY z as  select '1', '2020-01-01 00:00:00';","fileName":"../ClickHouse/tests/queries/0_stateless/02428_parameterized_view_param_in_select_section.sql","errors":[]},{"query":"CREATE VIEW v1 AS SELECT z, 'test' = {m:String} AS c\nFROM t \nWHERE ts > '2019-01-01 00:00:00'\nGROUP BY z, c;","fileName":"../ClickHouse/tests/queries/0_stateless/02428_parameterized_view_param_in_select_section.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW v1 AS SELECT z, 'test' = {'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE VIEW v2 AS SELECT z, {m:String} AS c\nFROM t \nWHERE ts > '2019-01-01 00:00:00'\nGROUP BY z, c;","fileName":"../ClickHouse/tests/queries/0_stateless/02428_parameterized_view_param_in_select_section.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW v2 AS SELECT z, {'","startColumn":28,"startLine":1,"endColumn":29,"endLine":1}]},{"query":"CREATE VIEW v3 AS SELECT z, {m:String} \nFROM t;","fileName":"../ClickHouse/tests/queries/0_stateless/02428_parameterized_view_param_in_select_section.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW v3 AS SELECT z, {'","startColumn":28,"startLine":1,"endColumn":29,"endLine":1}]},{"query":"create table test(a UInt64, m UInt64, d DateTime) engine MergeTree partition by toYYYYMM(d) order by (a, m, d) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02428_index_analysis_with_null_literal.sql","errors":[]},{"query":"create table test_null_filter(key UInt64, value UInt32) engine MergeTree order by key SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02428_index_analysis_with_null_literal.sql","errors":[]},{"query":"create table test (id Int32, key String) engine=MergeTree() order by tuple() settings index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02428_delete_with_settings.sql","errors":[]},{"query":"CREATE TABLE decimal_in_float_test ( \\`a\\` Decimal(18, 0), \\`b\\` Decimal(36, 2) ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02428_decimal_in_floating_point_literal.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE decimal_in_float_test ( \\'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table test (x AggregateFunction(uniq, UInt64), y Int64) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02428_combinators_with_over_statement.sql","errors":[]},{"query":"CREATE TABLE mutate_and_zero_copy_replication1 (\na UInt64,\nb String,\nc Float64\n)\nENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02427_mutate_and_zero_copy_replication/alter', '1')\nORDER BY tuple()\nSETTINGS old_parts_lifetime=0, cleanup_delay_period=300, max_cleanup_delay_period=300, cleanup_delay_period_random_add=300, min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02427_mutate_and_zero_copy_replication_zookeeper.sql","errors":[]},{"query":"CREATE TABLE mutate_and_zero_copy_replication2 (\na UInt64,\nb String,\nc Float64\n)\nENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02427_mutate_and_zero_copy_replication/alter', '2')\nORDER BY tuple()\nSETTINGS old_parts_lifetime=0, cleanup_delay_period=300,  max_cleanup_delay_period=300, cleanup_delay_period_random_add=300;","fileName":"../ClickHouse/tests/queries/0_stateless/02427_mutate_and_zero_copy_replication_zookeeper.sql","errors":[]},{"query":"CREATE TABLE fixed_string (id UInt64, s FixedString(256)) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02426_create_suspicious_fixed_string.sql","errors":[]},{"query":"CREATE TABLE suspicious_fixed_string (id UInt64, s FixedString(257)) ENGINE = MergeTree() ORDER BY id; -- { serverError ILLEGAL_COLUMN } SET allow_suspicious_fixed_string_types = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02426_create_suspicious_fixed_string.sql","errors":[]},{"query":"CREATE TABLE suspicious_fixed_string (id UInt64, s FixedString(257)) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02426_create_suspicious_fixed_string.sql","errors":[]},{"query":"CREATE TABLE table_one (id UInt64, value UInt64) ENGINE = MergeTree\nPARTITION BY id\nORDER BY value\nSETTINGS index_granularity = 8192, index_granularity_bytes = 0, min_bytes_for_wide_part = 100;","fileName":"../ClickHouse/tests/queries/0_stateless/02422_insert_different_granularity.sql","errors":[]},{"query":"CREATE TABLE table_two (id UInt64, value UInt64) ENGINE = MergeTree\nPARTITION BY id\nORDER BY value\nSETTINGS index_granularity = 8192, index_granularity_bytes = 1024, min_bytes_for_wide_part = 100;","fileName":"../ClickHouse/tests/queries/0_stateless/02422_insert_different_granularity.sql","errors":[]},{"query":"CREATE TABLE table_one (id UInt64, value UInt64) ENGINE = MergeTree\nPARTITION BY id\nORDER BY value\nSETTINGS index_granularity = 8192, index_granularity_bytes = 0, min_bytes_for_wide_part = 100;","fileName":"../ClickHouse/tests/queries/0_stateless/02422_insert_different_granularity.sql","errors":[]},{"query":"CREATE TABLE table_two (id UInt64, value UInt64) ENGINE = MergeTree\nPARTITION BY id\nORDER BY value\nSETTINGS index_granularity = 8192, index_granularity_bytes = 0, min_bytes_for_wide_part = 100;","fileName":"../ClickHouse/tests/queries/0_stateless/02422_insert_different_granularity.sql","errors":[]},{"query":"CREATE TABLE table_one (id UInt64, value UInt64) ENGINE = MergeTree\nPARTITION BY id\nORDER BY value\nSETTINGS index_granularity = 8192, index_granularity_bytes = 1024, min_bytes_for_wide_part = 100;","fileName":"../ClickHouse/tests/queries/0_stateless/02422_insert_different_granularity.sql","errors":[]},{"query":"CREATE TABLE table_two (id UInt64, value UInt64) ENGINE = MergeTree\nPARTITION BY id\nORDER BY value\nSETTINGS index_granularity = 8192, index_granularity_bytes = 1024, min_bytes_for_wide_part = 100;","fileName":"../ClickHouse/tests/queries/0_stateless/02422_insert_different_granularity.sql","errors":[]},{"query":"CREATE TABLE table_one (id UInt64, value UInt64) ENGINE = MergeTree\nPARTITION BY id\nORDER BY value\nSETTINGS index_granularity = 8192, index_granularity_bytes = 1024, min_bytes_for_wide_part = 100;","fileName":"../ClickHouse/tests/queries/0_stateless/02422_insert_different_granularity.sql","errors":[]},{"query":"CREATE TABLE table_two (id UInt64, value UInt64) ENGINE = MergeTree\nPARTITION BY id\nORDER BY value\nSETTINGS index_granularity = 8192, index_granularity_bytes = 0, min_bytes_for_wide_part = 100;","fileName":"../ClickHouse/tests/queries/0_stateless/02422_insert_different_granularity.sql","errors":[]},{"query":"CREATE TABLE store_sales (\n\\`ss_sold_date_sk\\` Nullable(Int64),\n\\`ss_sold_time_sk\\` Nullable(Int64),\n\\`ss_item_sk\\` Int64,\n\\`ss_customer_sk\\` Nullable(Int64),\n\\`ss_cdemo_sk\\` Nullable(Int64),\n\\`ss_hdemo_sk\\` Nullable(Int64),\n\\`ss_addr_sk\\` Nullable(Int64),\n\\`ss_store_sk\\` Nullable(Int64),\n\\`ss_promo_sk\\` Nullable(Int64),\n\\`ss_ticket_number\\` Int64,\n\\`ss_quantity\\` Nullable(Int64),\n\\`ss_wholesale_cost\\` Nullable(Float32),\n\\`ss_list_price\\` Nullable(Float32),\n\\`ss_sales_price\\` Nullable(Float32),\n\\`ss_ext_discount_amt\\` Nullable(Float32),\n\\`ss_ext_sales_price\\` Nullable(Float32),\n\\`ss_ext_wholesale_cost\\` Nullable(Float32),\n\\`ss_ext_list_price\\` Nullable(Float32),\n\\`ss_ext_tax\\` Nullable(Float32),\n\\`ss_coupon_amt\\` Nullable(Float32),\n\\`ss_net_paid\\` Nullable(Float32),\n\\`ss_net_paid_inc_tax\\` Nullable(Float32),\n\\`ss_net_profit\\` Nullable(Float32),\n\\`ss_promo_sk_nn\\` Int16,\n\\`ss_promo_sk_n2\\` Nullable(Int16)\n)\nENGINE = MergeTree ORDER BY (ss_item_sk, ss_ticket_number);","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE store_sales (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE store_returns (\n\\`sr_returned_date_sk\\` Nullable(Int64),\n\\`sr_return_time_sk\\` Nullable(Int64),\n\\`sr_item_sk\\` Int64,\n\\`sr_customer_sk\\` Nullable(Int64),\n\\`sr_cdemo_sk\\` Nullable(Int64),\n\\`sr_hdemo_sk\\` Nullable(Int64),\n\\`sr_addr_sk\\` Nullable(Int64),\n\\`sr_store_sk\\` Nullable(Int64),\n\\`sr_reason_sk\\` Nullable(Int64),\n\\`sr_ticket_number\\` Int64,\n\\`sr_return_quantity\\` Nullable(Int64),\n\\`sr_return_amt\\` Nullable(Float32),\n\\`sr_return_tax\\` Nullable(Float32),\n\\`sr_return_amt_inc_tax\\` Nullable(Float32),\n\\`sr_fee\\` Nullable(Float32),\n\\`sr_return_ship_cost\\` Nullable(Float32),\n\\`sr_refunded_cash\\` Nullable(Float32),\n\\`sr_reversed_charge\\` Nullable(Float32),\n\\`sr_store_credit\\` Nullable(Float32),\n\\`sr_net_loss\\` Nullable(Float32)\n)\nENGINE = MergeTree ORDER BY (sr_item_sk, sr_ticket_number);","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE store_returns (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE catalog_sales (\n\\`cs_sold_date_sk\\` Nullable(Int64),\n\\`cs_sold_time_sk\\` Nullable(Int64),\n\\`cs_ship_date_sk\\` Nullable(Int64),\n\\`cs_bill_customer_sk\\` Nullable(Int64),\n\\`cs_bill_cdemo_sk\\` Nullable(Int64),\n\\`cs_bill_hdemo_sk\\` Nullable(Int64),\n\\`cs_bill_addr_sk\\` Nullable(Int64),\n\\`cs_ship_customer_sk\\` Nullable(Int64),\n\\`cs_ship_cdemo_sk\\` Nullable(Int64),\n\\`cs_ship_hdemo_sk\\` Nullable(Int64),\n\\`cs_ship_addr_sk\\` Nullable(Int64),\n\\`cs_call_center_sk\\` Nullable(Int64),\n\\`cs_catalog_page_sk\\` Nullable(Int64),\n\\`cs_ship_mode_sk\\` Nullable(Int64),\n\\`cs_warehouse_sk\\` Nullable(Int64),\n\\`cs_item_sk\\` Int64,\n\\`cs_promo_sk\\` Nullable(Int64),\n\\`cs_order_number\\` Int64,\n\\`cs_quantity\\` Nullable(Int64),\n\\`cs_wholesale_cost\\` Nullable(Float32),\n\\`cs_list_price\\` Nullable(Float32),\n\\`cs_sales_price\\` Nullable(Float32),\n\\`cs_ext_discount_amt\\` Nullable(Float32),\n\\`cs_ext_sales_price\\` Nullable(Float32),\n\\`cs_ext_wholesale_cost\\` Nullable(Float32),\n\\`cs_ext_list_price\\` Nullable(Float32),\n\\`cs_ext_tax\\` Nullable(Float32),\n\\`cs_coupon_amt\\` Nullable(Float32),\n\\`cs_ext_ship_cost\\` Nullable(Float32),\n\\`cs_net_paid\\` Nullable(Float32),\n\\`cs_net_paid_inc_tax\\` Nullable(Float32),\n\\`cs_net_paid_inc_ship\\` Nullable(Float32),\n\\`cs_net_paid_inc_ship_tax\\` Nullable(Float32),\n\\`cs_net_profit\\` Nullable(Float32)\n)\nENGINE = MergeTree ORDER BY (cs_item_sk, cs_order_number);","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE catalog_sales (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE catalog_returns (\n\\`cr_returned_date_sk\\` Nullable(Int64),\n\\`cr_returned_time_sk\\` Nullable(Int64),\n\\`cr_item_sk\\` Int64,\n\\`cr_refunded_customer_sk\\` Nullable(Int64),\n\\`cr_refunded_cdemo_sk\\` Nullable(Int64),\n\\`cr_refunded_hdemo_sk\\` Nullable(Int64),\n\\`cr_refunded_addr_sk\\` Nullable(Int64),\n\\`cr_returning_customer_sk\\` Nullable(Int64),\n\\`cr_returning_cdemo_sk\\` Nullable(Int64),\n\\`cr_returning_hdemo_sk\\` Nullable(Int64),\n\\`cr_returning_addr_sk\\` Nullable(Int64),\n\\`cr_call_center_sk\\` Nullable(Int64),\n\\`cr_catalog_page_sk\\` Nullable(Int64),\n\\`cr_ship_mode_sk\\` Nullable(Int64),\n\\`cr_warehouse_sk\\` Nullable(Int64),\n\\`cr_reason_sk\\` Nullable(Int64),\n\\`cr_order_number\\` Int64,\n\\`cr_return_quantity\\` Nullable(Int64),\n\\`cr_return_amount\\` Nullable(Float32),\n\\`cr_return_tax\\` Nullable(Float32),\n\\`cr_return_amt_inc_tax\\` Nullable(Float32),\n\\`cr_fee\\` Nullable(Float32),\n\\`cr_return_ship_cost\\` Nullable(Float32),\n\\`cr_refunded_cash\\` Nullable(Float32),\n\\`cr_reversed_charge\\` Nullable(Float32),\n\\`cr_store_credit\\` Nullable(Float32),\n\\`cr_net_loss\\` Nullable(Float32)\n)\nENGINE = MergeTree ORDER BY (cr_item_sk, cr_order_number);","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE catalog_returns (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE date_dim (\n\\`d_date_sk\\` Int64,\n\\`d_date_id\\` String,\n\\`d_date\\` Nullable(Date),\n\\`d_month_seq\\` Nullable(Int64),\n\\`d_week_seq\\` Nullable(Int64),\n\\`d_quarter_seq\\` Nullable(Int64),\n\\`d_year\\` Nullable(Int64),\n\\`d_dow\\` Nullable(Int64),\n\\`d_moy\\` Nullable(Int64),\n\\`d_dom\\` Nullable(Int64),\n\\`d_qoy\\` Nullable(Int64),\n\\`d_fy_year\\` Nullable(Int64),\n\\`d_fy_quarter_seq\\` Nullable(Int64),\n\\`d_fy_week_seq\\` Nullable(Int64),\n\\`d_day_name\\` Nullable(String),\n\\`d_quarter_name\\` Nullable(String),\n\\`d_holiday\\` Nullable(String),\n\\`d_weekend\\` Nullable(String),\n\\`d_following_holiday\\` Nullable(String),\n\\`d_first_dom\\` Nullable(Int64),\n\\`d_last_dom\\` Nullable(Int64),\n\\`d_same_day_ly\\` Nullable(Int64),\n\\`d_same_day_lq\\` Nullable(Int64),\n\\`d_current_day\\` Nullable(String),\n\\`d_current_week\\` Nullable(String),\n\\`d_current_month\\` Nullable(String),\n\\`d_current_quarter\\` Nullable(String),\n\\`d_current_year\\` Nullable(String)\n)\nENGINE = MergeTree ORDER BY d_date_sk;","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE date_dim (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE store (\n\\`s_store_sk\\` Int64,\n\\`s_store_id\\` String,\n\\`s_rec_start_date\\` Nullable(Date),\n\\`s_rec_end_date\\` Nullable(Date),\n\\`s_closed_date_sk\\` Nullable(Int64),\n\\`s_store_name\\` Nullable(String),\n\\`s_number_employees\\` Nullable(Int64),\n\\`s_floor_space\\` Nullable(Int64),\n\\`s_hours\\` Nullable(String),\n\\`s_manager\\` Nullable(String),\n\\`s_market_id\\` Nullable(Int64),\n\\`s_geography_class\\` Nullable(String),\n\\`s_market_desc\\` Nullable(String),\n\\`s_market_manager\\` Nullable(String),\n\\`s_division_id\\` Nullable(Int64),\n\\`s_division_name\\` Nullable(String),\n\\`s_company_id\\` Nullable(Int64),\n\\`s_company_name\\` Nullable(String),\n\\`s_street_number\\` Nullable(String),\n\\`s_street_name\\` Nullable(String),\n\\`s_street_type\\` Nullable(String),\n\\`s_suite_number\\` Nullable(String),\n\\`s_city\\` Nullable(String),\n\\`s_county\\` Nullable(String),\n\\`s_state\\` Nullable(String),\n\\`s_zip\\` Nullable(String),\n\\`s_country\\` Nullable(String),\n\\`s_gmt_offset\\` Nullable(Float32),\n\\`s_tax_precentage\\` Nullable(Float32)\n)\nENGINE = MergeTree ORDER BY s_store_sk;","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE store (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE customer (\n\\`c_customer_sk\\` Int64,\n\\`c_customer_id\\` String,\n\\`c_current_cdemo_sk\\` Nullable(Int64),\n\\`c_current_hdemo_sk\\` Nullable(Int64),\n\\`c_current_addr_sk\\` Nullable(Int64),\n\\`c_first_shipto_date_sk\\` Nullable(Int64),\n\\`c_first_sales_date_sk\\` Nullable(Int64),\n\\`c_salutation\\` Nullable(String),\n\\`c_first_name\\` Nullable(String),\n\\`c_last_name\\` Nullable(String),\n\\`c_preferred_cust_flag\\` Nullable(String),\n\\`c_birth_day\\` Nullable(Int64),\n\\`c_birth_month\\` Nullable(Int64),\n\\`c_birth_year\\` Nullable(Int64),\n\\`c_birth_country\\` Nullable(String),\n\\`c_login\\` Nullable(String),\n\\`c_email_address\\` Nullable(String),\n\\`c_last_review_date\\` Nullable(String)\n)\nENGINE = MergeTree ORDER BY c_customer_sk;","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE customer (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE customer_demographics (\n\\`cd_demo_sk\\` Int64,\n\\`cd_gender\\` Nullable(String),\n\\`cd_marital_status\\` Nullable(String),\n\\`cd_education_status\\` Nullable(String),\n\\`cd_purchase_estimate\\` Nullable(Int64),\n\\`cd_credit_rating\\` Nullable(String),\n\\`cd_dep_count\\` Nullable(Int64),\n\\`cd_dep_employed_count\\` Nullable(Int64),\n\\`cd_dep_college_count\\` Nullable(Int64)\n)\nENGINE = MergeTree ORDER BY cd_demo_sk;","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE customer_demographics (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE promotion (\n\\`p_promo_sk\\` Int64,\n\\`p_promo_id\\` String,\n\\`p_start_date_sk\\` Nullable(Int64),\n\\`p_end_date_sk\\` Nullable(Int64),\n\\`p_item_sk\\` Nullable(Int64),\n\\`p_cost\\` Nullable(Float64),\n\\`p_response_target\\` Nullable(Int64),\n\\`p_promo_name\\` Nullable(String),\n\\`p_channel_dmail\\` Nullable(String),\n\\`p_channel_email\\` Nullable(String),\n\\`p_channel_catalog\\` Nullable(String),\n\\`p_channel_tv\\` Nullable(String),\n\\`p_channel_radio\\` Nullable(String),\n\\`p_channel_press\\` Nullable(String),\n\\`p_channel_event\\` Nullable(String),\n\\`p_channel_demo\\` Nullable(String),\n\\`p_channel_details\\` Nullable(String),\n\\`p_purpose\\` Nullable(String),\n\\`p_discount_active\\` Nullable(String)\n)\nENGINE = MergeTree ORDER BY p_promo_sk;","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE promotion (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE household_demographics (\n\\`hd_demo_sk\\` Int64,\n\\`hd_income_band_sk\\` Nullable(Int64),\n\\`hd_buy_potential\\` Nullable(String),\n\\`hd_dep_count\\` Nullable(Int64),\n\\`hd_vehicle_count\\` Nullable(Int64)\n)\nENGINE = MergeTree ORDER BY hd_demo_sk;","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE household_demographics (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE customer_address (\n\\`ca_address_sk\\` Int64,\n\\`ca_address_id\\` String,\n\\`ca_street_number\\` Nullable(String),\n\\`ca_street_name\\` Nullable(String),\n\\`ca_street_type\\` Nullable(String),\n\\`ca_suite_number\\` Nullable(String),\n\\`ca_city\\` Nullable(String),\n\\`ca_county\\` Nullable(String),\n\\`ca_state\\` Nullable(String),\n\\`ca_zip\\` Nullable(String),\n\\`ca_country\\` Nullable(String),\n\\`ca_gmt_offset\\` Nullable(Float32),\n\\`ca_location_type\\` Nullable(String)\n)\nENGINE = MergeTree ORDER BY ca_address_sk;","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE customer_address (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE income_band (\n\\`ib_income_band_sk\\` Int64,\n\\`ib_lower_bound\\` Nullable(Int64),\n\\`ib_upper_bound\\` Nullable(Int64)\n)\nENGINE = MergeTree ORDER BY ib_income_band_sk;","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE income_band (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE item (\n\\`i_item_sk\\` Int64,\n\\`i_item_id\\` String,\n\\`i_rec_start_date\\` Nullable(Date),\n\\`i_rec_end_date\\` Nullable(Date),\n\\`i_item_desc\\` Nullable(String),\n\\`i_current_price\\` Nullable(Float32),\n\\`i_wholesale_cost\\` Nullable(Float32),\n\\`i_brand_id\\` Nullable(Int64),\n\\`i_brand\\` Nullable(String),\n\\`i_class_id\\` Nullable(Int64),\n\\`i_class\\` Nullable(String),\n\\`i_category_id\\` Nullable(Int64),\n\\`i_category\\` Nullable(String),\n\\`i_manufact_id\\` Nullable(Int64),\n\\`i_manufact\\` Nullable(String),\n\\`i_size\\` Nullable(String),\n\\`i_formulation\\` Nullable(String),\n\\`i_color\\` Nullable(String),\n\\`i_units\\` Nullable(String),\n\\`i_container\\` Nullable(String),\n\\`i_manager_id\\` Nullable(Int64),\n\\`i_product_name\\` Nullable(String)\n)\nENGINE = MergeTree ORDER BY i_item_sk;","fileName":"../ClickHouse/tests/queries/0_stateless/02421_exponential_join_rewrite_21557.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE item (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t1 ( a UInt64 ) Engine = MergeTree ORDER BY tuple() AS SELECT number AS a FROM system.numbers LIMIT 100000;","fileName":"../ClickHouse/tests/queries/0_stateless/02421_explain_subquery.sql","errors":[]},{"query":"CREATE TABLE dtest ( \\`a\\` Decimal(18, 0), \\`b\\` Decimal(18, 1), \\`c\\` Decimal(36, 0) ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02421_decimal_in_precision_issue_41125.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dtest ( \\'","startColumn":21,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"create table tba (event_id Int64, event_dt Int64) Engine =MergeTree order by event_id ;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_key_condition_actions_dag_bug_40599.sql","errors":[]},{"query":"create table if not exists replacing_mt (x String) engine=ReplacingMergeTree() ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[]},{"query":"create table if not exists lhs (x String) engine=ReplacingMergeTree() ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[]},{"query":"create table if not exists rhs (x String) engine=ReplacingMergeTree() ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[]},{"query":"create table if not exists regular_mt_table (x String) engine=MergeTree() ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[]},{"query":"create materialized VIEW mv_regular_mt_table TO regular_mt_table AS SELECT * FROM regular_mt_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[]},{"query":"create view nv_regular_mt_table AS SELECT * FROM mv_regular_mt_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[]},{"query":"create table if not exists left_table (id UInt64, val_left String) engine=ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[]},{"query":"create table if not exists middle_table (id UInt64, val_middle String) engine=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[]},{"query":"create table if not exists right_table (id UInt64, val_right String) engine=ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[]},{"query":"create table if not exists table_to_merge_a (id UInt64, val String) engine=ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[]},{"query":"create table if not exists table_to_merge_b (id UInt64, val String) engine=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[]},{"query":"create table if not exists table_to_merge_c (id UInt64, val String) engine=ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[]},{"query":"CREATE TABLE merge_table Engine=Merge(currentDatabase(), '^(table_to_merge_[a-z])\\$') AS table_to_merge_a;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting_analyzer.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE merge_table Engine=Merge(currentDatabase(), '^(table_to_merge_[a-z])\\$') AS table_to_merge_a'","startColumn":89,"startLine":1,"endColumn":105,"endLine":1}]},{"query":"create table if not exists replacing_mt (x String) engine=ReplacingMergeTree() ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create table if not exists lhs (x String) engine=ReplacingMergeTree() ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create table if not exists rhs (x String) engine=ReplacingMergeTree() ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create table if not exists regular_mt_table (x String) engine=MergeTree() ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create materialized VIEW mv_regular_mt_table TO regular_mt_table AS SELECT * FROM regular_mt_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create view nv_regular_mt_table AS SELECT * FROM mv_regular_mt_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create table if not exists left_table (id UInt64, val_left String) engine=ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create table if not exists middle_table (id UInt64, val_middle String) engine=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create table if not exists right_table (id UInt64, val_right String) engine=ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create table if not exists left_table (id UInt64, val_left String) engine=ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create table if not exists middle_table (id UInt64, val_middle String) engine=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create table if not exists right_table_local (id UInt64, val_right String) engine=ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create table if not exists right_table engine=Distributed('test_shard_localhost', currentDatabase(), right_table_local) AS right_table_local;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[{"message":"no viable alternative at input 'create table if not exists right_table engine=Distributed('test_shard_localhost', currentDatabase(), right_table_local) AS right_table_local'","startColumn":123,"startLine":1,"endColumn":140,"endLine":1}]},{"query":"create table if not exists table_to_merge_a (id UInt64, val String) engine=ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create table if not exists table_to_merge_b (id UInt64, val String) engine=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"create table if not exists table_to_merge_c (id UInt64, val String) engine=ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[]},{"query":"CREATE TABLE merge_table Engine=Merge(currentDatabase(), '^(table_to_merge_[a-z])\\$') AS table_to_merge_a;","fileName":"../ClickHouse/tests/queries/0_stateless/02420_final_setting.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE merge_table Engine=Merge(currentDatabase(), '^(table_to_merge_[a-z])\\$') AS table_to_merge_a'","startColumn":89,"startLine":1,"endColumn":105,"endLine":1}]},{"query":"CREATE TABLE constCondOptimization (\nd Date DEFAULT today(),\ntime DateTime DEFAULT now(),\nn Int64\n)\nENGINE = MergeTree ORDER BY (time, n) SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02418_tautological_if_index.sql","errors":[]},{"query":"CREATE TABLE 02418_test (key UInt64, value Float64) Engine=KeeperMap('/' || currentDatabase() || '/test2418', 3) PRIMARY KEY(key);","fileName":"../ClickHouse/tests/queries/0_stateless/02418_keeper_map_keys_limit.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02418'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02418_test_another (key UInt64, value Float64) Engine=KeeperMap('/' || currentDatabase() || '/test2418', 4) PRIMARY KEY(key);","fileName":"../ClickHouse/tests/queries/0_stateless/02418_keeper_map_keys_limit.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02418'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table test (x Map(UInt8, AggregateFunction(uniq, UInt64))) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02418_aggregate_combinators.sql","errors":[]},{"query":"create table test (x Map(UInt8, Array(Map(UInt8, Array(AggregateFunction(uniq, UInt64)))))) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02418_aggregate_combinators.sql","errors":[]},{"query":"create table test (x Array(Array(AggregateFunction(uniq, UInt64)))) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02418_aggregate_combinators.sql","errors":[]},{"query":"create table test (x Array(Array(Map(UInt8, AggregateFunction(uniq, UInt64))))) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02418_aggregate_combinators.sql","errors":[]},{"query":"CREATE TABLE 02417_test (key UInt64, value UInt64) Engine=KeeperMap('/' || currentDatabase() || '/test2417') PRIMARY KEY(key);","fileName":"../ClickHouse/tests/queries/0_stateless/02417_keeper_map_create_drop.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02417'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02417_test_another (key UInt64, value UInt64) Engine=KeeperMap('/' || currentDatabase() || '/test2417') PRIMARY KEY(key);","fileName":"../ClickHouse/tests/queries/0_stateless/02417_keeper_map_create_drop.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02417'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table tbl (s String, i int) engine MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/02416_row_policy_always_false_index.sql","errors":[]},{"query":"create row policy filter on tbl using 0 to all;","fileName":"../ClickHouse/tests/queries/0_stateless/02416_row_policy_always_false_index.sql","errors":[{"message":"no viable alternative at input 'create row'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE 02416_rocksdb (key UInt64, value String, value2 UInt64) Engine=EmbeddedRocksDB PRIMARY KEY(key);","fileName":"../ClickHouse/tests/queries/0_stateless/02416_rocksdb_delete_update.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02416'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02416_test (key String, value UInt32) Engine=KeeperMap('/' || currentDatabase() || '/test2416'); -- { serverError BAD_ARGUMENTS } CREATE TABLE 02416_test (key String, value UInt32) Engine=KeeperMap('/' || currentDatabase() || '/test2416') PRIMARY KEY(key2); -- { serverError UNKNOWN_IDENTIFIER }\nCREATE TABLE 02416_test (key String, value UInt32) Engine=KeeperMap('/' || currentDatabase() || '/test2416') PRIMARY KEY(key, value); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE 02416_test (key String, value UInt32) Engine=KeeperMap('/' || currentDatabase() || '/test2416') PRIMARY KEY(concat(key, value)); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE 02416_test (key Tuple(String, UInt32), value UInt64) Engine=KeeperMap('/' || currentDatabase() || '/test2416') PRIMARY KEY(key);","fileName":"../ClickHouse/tests/queries/0_stateless/02416_keeper_map.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02416'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02416_test (key String, value UInt32) Engine=KeeperMap('/' || currentDatabase() || '/test2416') PRIMARY KEY(key);","fileName":"../ClickHouse/tests/queries/0_stateless/02416_keeper_map.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02416'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02416_test (k UInt32, value UInt64, dummy Tuple(UInt32, Float64), bm AggregateFunction(groupBitmap, UInt64)) Engine=KeeperMap('/' || currentDatabase() || '/test2416') PRIMARY KEY(k);","fileName":"../ClickHouse/tests/queries/0_stateless/02416_keeper_map.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02416'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02416_test_memory AS 02416_test Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02416_keeper_map.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02416'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE set_crash (key1 Int32, id1 Int64, c1 Int64) ENGINE = MergeTree PARTITION BY id1 ORDER BY key1;","fileName":"../ClickHouse/tests/queries/0_stateless/02416_in_set_same_ast_diff_columns.sql","errors":[]},{"query":"CREATE TABLE test02416(a UInt64, b UInt64) ENGINE=MergeTree() ORDER BY (a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/02416_grouping_function_compatibility.sql","errors":[]},{"query":"create table src1 (n int) engine=ReplicatedMergeTree('/test/02413/{database}/src', '1') order by tuple() settings storage_policy='s3_cache', allow_remote_fs_zero_copy_replication=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02413_replace_partition_zero_copy.sql","errors":[]},{"query":"create table src2 (n int) engine=ReplicatedMergeTree('/test/02413/{database}/src', '2') order by tuple() settings storage_policy='s3_cache', allow_remote_fs_zero_copy_replication=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02413_replace_partition_zero_copy.sql","errors":[]},{"query":"create table dst1 (n int) engine=ReplicatedMergeTree('/test/02413/{database}/dst', '1') order by tuple() settings storage_policy='s3_cache', allow_remote_fs_zero_copy_replication=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02413_replace_partition_zero_copy.sql","errors":[]},{"query":"create table dst2 (n int) engine=ReplicatedMergeTree('/test/02413/{database}/dst', '2') order by tuple() settings storage_policy='s3_cache', allow_remote_fs_zero_copy_replication=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02413_replace_partition_zero_copy.sql","errors":[]},{"query":"CREATE TABLE data_02411 (\nkey Int32\n)\nENGINE = MergeTree\nORDER BY key\nSETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02411_merge_tree_zero_max_read_buffer_size.sql","errors":[]},{"query":"CREATE TABLE t1 (x UInt64) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02405_pmj_issue_40335.sql","errors":[]},{"query":"CREATE TABLE t2 (x UInt64, value String) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02405_pmj_issue_40335.sql","errors":[]},{"query":"create table t(a UInt64, b UInt64) engine=MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02404_memory_bound_merging.sql","errors":[]},{"query":"create table dist_t as t engine = Distributed(test_cluster_two_shards, currentDatabase(), t, a % 2);","fileName":"../ClickHouse/tests/queries/0_stateless/02404_memory_bound_merging.sql","errors":[]},{"query":"create database if not exists shard_1;","fileName":"../ClickHouse/tests/queries/0_stateless/02404_memory_bound_merging.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_1;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table t_different_dbs(a UInt64, b UInt64) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02404_memory_bound_merging.sql","errors":[]},{"query":"create table shard_1.t_different_dbs(a UInt64, b UInt64) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02404_memory_bound_merging.sql","errors":[]},{"query":"create table dist_t_different_dbs as t engine = Distributed(test_cluster_two_shards_different_databases_with_local, '', t_different_dbs);","fileName":"../ClickHouse/tests/queries/0_stateless/02404_memory_bound_merging.sql","errors":[]},{"query":"create table pr_t(a UInt64, b UInt64) engine=MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02404_memory_bound_merging.sql","errors":[]},{"query":"CREATE TABLE lwd_test (\n\\`id\\` UInt64,\n\\`value\\` String\n)\nENGINE = MergeTree\nORDER BY id\nSETTINGS\nvertical_merge_algorithm_min_rows_to_activate = 1,\nvertical_merge_algorithm_min_columns_to_activate = 1,\nmin_rows_for_wide_part = 1,\nmin_bytes_for_wide_part = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02404_lightweight_delete_vertical_merge.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE lwd_test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE ttl_table (\nEventDate Date,\nLongitude Float64 TTL EventDate + toIntervalWeek(2)\n)\nENGINE = MergeTree()\nORDER BY EventDate\nSETTINGS vertical_merge_algorithm_min_rows_to_activate=1, vertical_merge_algorithm_min_columns_to_activate=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02403_ttl_column_multiple_times.sql","errors":[]},{"query":"CREATE TABLE m0 (id UInt64) ENGINE=MergeTree ORDER BY id SETTINGS index_granularity = 1, ratio_of_defaults_for_sparse_serialization = 1.0;","fileName":"../ClickHouse/tests/queries/0_stateless/02402_merge_engine_with_view.sql","errors":[]},{"query":"CREATE TABLE m1 (id UInt64, s String) ENGINE=MergeTree ORDER BY id SETTINGS index_granularity = 1, ratio_of_defaults_for_sparse_serialization = 1.0;","fileName":"../ClickHouse/tests/queries/0_stateless/02402_merge_engine_with_view.sql","errors":[]},{"query":"CREATE VIEW m1v AS SELECT id FROM m1;","fileName":"../ClickHouse/tests/queries/0_stateless/02402_merge_engine_with_view.sql","errors":[]},{"query":"CREATE TABLE m2 (id UInt64) ENGINE=Merge(currentDatabase(),'m0|m1v');","fileName":"../ClickHouse/tests/queries/0_stateless/02402_merge_engine_with_view.sql","errors":[]},{"query":"CREATE VIEW v AS SELECT 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02402_merge_engine_with_view.sql","errors":[]},{"query":"CREATE TABLE test_inserts (\\`key\\` Int, \\`part\\` Int) ENGINE = MergeTree PARTITION BY part ORDER BY key SETTINGS temporary_directories_lifetime = 0, merge_tree_clear_old_temporary_directories_interval_seconds = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02401_merge_tree_old_tmp_dirs_cleanup.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_inserts (\\'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"create table local_t_l5ydey on cluster test_shard_localhost ( c_qv5rv INTEGER ,\nc_rutjs4 INTEGER ,\nc_wmj INTEGER ,\nc_m3 TEXT NOT NULL,\nprimary key(c_qv5rv)\n) engine=ReplicatedMergeTree('/clickhouse/tables/test_' || currentDatabase() || '/{shard}/local_t_l5ydey', '{replica}');","fileName":"../ClickHouse/tests/queries/0_stateless/02400_create_table_on_cluster_normalization.sql","errors":[{"message":"no viable alternative at input 'create table local_t_l5ydey on cluster test_shard_localhost ( c_qv5rv INTEGER ,\\nc_rutjs4 INTEGER ,\\nc_wmj INTEGER ,\\nc_m3 TEXT NOT'","startColumn":10,"startLine":4,"endColumn":13,"endLine":4}]},{"query":"create table t_l5ydey on cluster test_shard_localhost as local_t_l5ydey engine=Distributed('test_shard_localhost', currentDatabase(),'local_t_l5ydey', rand());","fileName":"../ClickHouse/tests/queries/0_stateless/02400_create_table_on_cluster_normalization.sql","errors":[]},{"query":"create database local_t_l5ydey engine=Replicated('/clickhouse/tables/test_' || currentDatabase() || '/{shard}/local_t_l5ydey', '1', '1'); -- { serverError BAD_ARGUMENTS } drop table local_t_l5ydey;","fileName":"../ClickHouse/tests/queries/0_stateless/02400_create_table_on_cluster_normalization.sql","errors":[]},{"query":"create table mt (p int, n int) engine=MergeTree order by tuple() partition by p;","fileName":"../ClickHouse/tests/queries/0_stateless/02399_merge_tree_mutate_in_partition.sql","errors":[]},{"query":"create table m (n int) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02399_merge_tree_mutate_in_partition.sql","errors":[]},{"query":"create table t engine=Log as select * from system.numbers limit 20;","fileName":"../ClickHouse/tests/queries/0_stateless/02398_subquery_where_pushdown_and_limit_offset.sql","errors":[]},{"query":"CREATE TABLE test (key UInt32) Engine = Buffer(currentDatabase(), test, 16, 10, 100, 10000, 1000000, 10000000, 100000000);","fileName":"../ClickHouse/tests/queries/0_stateless/02391_recursive_buffer.sql","errors":[]},{"query":"CREATE TABLE test1 (key UInt32) Engine = Buffer(currentDatabase(), test2, 16, 10, 100, 10000, 1000000, 10000000, 100000000);","fileName":"../ClickHouse/tests/queries/0_stateless/02391_recursive_buffer.sql","errors":[]},{"query":"CREATE TABLE test2 (key UInt32) Engine = Buffer(currentDatabase(), test1, 16, 10, 100, 10000, 1000000, 10000000, 100000000); -- { serverError INFINITE_LOOP } DROP TABLE test1;","fileName":"../ClickHouse/tests/queries/0_stateless/02391_recursive_buffer.sql","errors":[]},{"query":"CREATE TABLE test_table (\nkey UInt64,\nvalue UInt16\n) ENGINE=Memory() AS SELECT number, number FROM numbers(1e5);","fileName":"../ClickHouse/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable (\nkey UInt64,\nvalue Nullable(UInt16)\n) ENGINE=Memory() AS SELECT number, number % 2 == 0 ? NULL : number FROM numbers(1e5);","fileName":"../ClickHouse/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql","errors":[]},{"query":"CREATE TABLE test_table_string (\nkey String,\nvalue UInt16\n) ENGINE=Memory() AS SELECT 'foo' || number::String, number FROM numbers(1e5);","fileName":"../ClickHouse/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql","errors":[{"message":"mismatched input ':' expecting <EOF>","startColumn":43,"startLine":4,"endColumn":44,"endLine":4}]},{"query":"CREATE TABLE test_table_complex (\nkey_1 UInt64,\nkey_2 UInt64,\nvalue UInt16\n) ENGINE=Memory() AS SELECT number, number, number FROM numbers(1e5);","fileName":"../ClickHouse/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary_10_shards (\nkey UInt64,\nvalue UInt16\n) PRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE test_table))\nLAYOUT(SPARSE_HASHED(SHARDS 10))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary_10_shards_nullable (\nkey UInt64,\nvalue Nullable(UInt16)\n) PRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE test_table_nullable))\nLAYOUT(SPARSE_HASHED(SHARDS 10))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql","errors":[]},{"query":"CREATE DICTIONARY test_complex_dictionary_10_shards (\nkey_1 UInt64,\nkey_2 UInt64,\nvalue UInt16\n) PRIMARY KEY key_1, key_2\nSOURCE(CLICKHOUSE(TABLE test_table_complex))\nLAYOUT(COMPLEX_KEY_SPARSE_HASHED(SHARDS 10))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary_10_shards_string (\nkey String,\nvalue UInt16\n) PRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE test_table_string))\nLAYOUT(SPARSE_HASHED(SHARDS 10))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary_10_shards_incremental (\nkey UInt64,\nvalue UInt16\n) PRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE test_table_last_access UPDATE_FIELD last_access))\nLAYOUT(SPARSE_HASHED(SHARDS 10))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02391_hashed_dictionary_shards.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02389_analyzer_nested_lambda.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test (\\`i\\` Int64, \\`d\\` DateTime);","fileName":"../ClickHouse/tests/queries/0_stateless/02387_parse_date_as_datetime.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE test (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE test (\\`i\\` Int64, \\`d\\` DateTime64);","fileName":"../ClickHouse/tests/queries/0_stateless/02387_parse_date_as_datetime.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE test (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02387_analyzer_cte.sql","errors":[]},{"query":"CREATE TABLE userid_set(userid UInt64, name String) ENGINE = Set;","fileName":"../ClickHouse/tests/queries/0_stateless/02386_set_columns_order.sql","errors":[]},{"query":"CREATE TABLE userid_test (userid UInt64, name String) ENGINE = MergeTree() PARTITION BY (intDiv(userid, 500)) ORDER BY (userid) SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02386_set_columns_order.sql","errors":[]},{"query":"CREATE TABLE userid_set2(userid UInt64, name String, birthdate Date) ENGINE = Set;","fileName":"../ClickHouse/tests/queries/0_stateless/02386_set_columns_order.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t (x UInt64);","fileName":"../ClickHouse/tests/queries/0_stateless/02385_profile_events_overflow.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02384_analyzer_dict_get_join_get.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nLAYOUT(FLAT())\nSOURCE(CLICKHOUSE(TABLE 'test_table'))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02384_analyzer_dict_get_join_get.sql","errors":[]},{"query":"CREATE TABLE test_table_join (\nid UInt64,\nvalue String\n) ENGINE=Join(Any, Left, id);","fileName":"../ClickHouse/tests/queries/0_stateless/02384_analyzer_dict_get_join_get.sql","errors":[]},{"query":"CREATE TABLE test_table_join_1 (\nid UInt64,\nvalue String\n) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02383_analyzer_merge_tree_self_join.sql","errors":[]},{"query":"CREATE TABLE test_table_join_2 (\nid UInt64,\nvalue String\n) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02383_analyzer_merge_tree_self_join.sql","errors":[]},{"query":"CREATE TABLE t1 (x UInt64, y UInt64) ENGINE = MergeTree ORDER BY y AS SELECT sipHash64(number, 't1_x') % 100 AS x, sipHash64(number, 't1_y') % 100 AS y FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/02382_join_and_filtering_set.sql","errors":[]},{"query":"CREATE TABLE t2 (x UInt64, y UInt64) ENGINE = MergeTree ORDER BY y AS SELECT sipHash64(number, 't2_x') % 100 AS x, sipHash64(number, 't2_y') % 100 AS y FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/02382_join_and_filtering_set.sql","errors":[]},{"query":"CREATE TABLE test_table_join_1 (\nid UInt8,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02382_analyzer_matcher_join_using.sql","errors":[]},{"query":"CREATE TABLE test_table_join_2 (\nid UInt16,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02382_analyzer_matcher_join_using.sql","errors":[]},{"query":"CREATE TABLE test_table_join_3 (\nid UInt64,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02382_analyzer_matcher_join_using.sql","errors":[]},{"query":"CREATE TABLE t_parse_tuples (\nid UInt32,\narr Array(Array(Tuple(c1 Int32, c2 UInt8)))\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02381_parse_array_of_tuples.sql","errors":[]},{"query":"create table test_02381(a UInt64, b UInt64) ENGINE = MergeTree order by (a, b) SETTINGS compress_marks = false, compress_primary_key = false, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02381_compress_marks_and_primary_key.sql","errors":[{"message":"no viable alternative at input 'create table test_02381(a UInt64, b UInt64) ENGINE = MergeTree order by (a, b) SETTINGS compress_marks = false'","startColumn":105,"startLine":1,"endColumn":110,"endLine":1}]},{"query":"create table test_02381_compress(a UInt64, b UInt64) ENGINE = MergeTree order by (a, b) SETTINGS compress_marks = true, compress_primary_key = true, marks_compression_codec = 'ZSTD(3)', primary_key_compression_codec = 'ZSTD(3)', marks_compress_block_size = 65536, primary_key_compress_block_size = 65536, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02381_compress_marks_and_primary_key.sql","errors":[{"message":"no viable alternative at input 'create table test_02381_compress(a UInt64, b UInt64) ENGINE = MergeTree order by (a, b) SETTINGS compress_marks = true'","startColumn":114,"startLine":1,"endColumn":118,"endLine":1}]},{"query":"create table test_02381_compact (a UInt64, b String) ENGINE = MergeTree order by (a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/02381_compress_marks_and_primary_key.sql","errors":[]},{"query":"CREATE TABLE test_table_join_1 (\nid UInt64,\nvalue UInt64\n) ENGINE=SummingMergeTree(value)\nORDER BY id\nSAMPLE BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02381_analyzer_join_final.sql","errors":[]},{"query":"CREATE TABLE test_table_join_2 (\nid UInt64,\nvalue UInt64\n) ENGINE=SummingMergeTree(value)\nORDER BY id\nSAMPLE BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02381_analyzer_join_final.sql","errors":[]},{"query":"CREATE TABLE test_table_join_1 (\nid UInt64,\nvalue String\n) ENGINE=MergeTree\nORDER BY id\nSAMPLE BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02380_analyzer_join_sample.sql","errors":[]},{"query":"CREATE TABLE test_table_join_2 (\nid UInt64,\nvalue String\n) ENGINE=MergeTree\nORDER BY id\nSAMPLE BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02380_analyzer_join_sample.sql","errors":[]},{"query":"CREATE TABLE part_log_profile_events_r1 (x UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02378/part_log_profile_events', 'r1')\nORDER BY x\nPARTITION BY x >= 128\n;","fileName":"../ClickHouse/tests/queries/0_stateless/02378_part_log_profile_events_replicated.sql","errors":[]},{"query":"CREATE TABLE part_log_profile_events_r2 (x UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02378/part_log_profile_events', 'r2')\nORDER BY x\nPARTITION BY x >= 128\n;","fileName":"../ClickHouse/tests/queries/0_stateless/02378_part_log_profile_events_replicated.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02378_analyzer_projection_names.sql","errors":[]},{"query":"CREATE TABLE test_table_in (\nid UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02378_analyzer_projection_names.sql","errors":[]},{"query":"CREATE TABLE test_table_compound (\nid UInt64,\ntuple_value Tuple(value_1 UInt64, value_2 String)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02378_analyzer_projection_names.sql","errors":[]},{"query":"CREATE TABLE test_table_join_1 (\nid UInt64,\nvalue String,\nvalue_join_1 String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02378_analyzer_projection_names.sql","errors":[]},{"query":"CREATE TABLE test_table_join_2 (\nid UInt64,\nvalue String,\nvalue_join_2 String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02378_analyzer_projection_names.sql","errors":[]},{"query":"CREATE TABLE test_table_join_3 (\nid UInt64,\nvalue String,\nvalue_join_3 String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02378_analyzer_projection_names.sql","errors":[]},{"query":"CREATE TABLE optimize_sorting (a UInt64, b UInt64) ENGINE MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02377_optimize_sorting_by_input_stream_properties.sql","errors":[]},{"query":"CREATE TABLE optimize_sorting (a UInt64, b UInt64, c UInt64) ENGINE MergeTree() ORDER BY (a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/02377_optimize_sorting_by_input_stream_properties.sql","errors":[]},{"query":"CREATE TABLE t_nested_modify (id UInt64, \\`n.a\\` Array(UInt32), \\`n.b\\` Array(String)) ENGINE = MergeTree ORDER BY id\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02377_modify_column_from_nested.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_nested_modify (id UInt64, \\'","startColumn":41,"startLine":1,"endColumn":42,"endLine":1}]},{"query":"CREATE TABLE t_modify_from_lc_1 (\nid UInt64,\na LowCardinality(UInt32) CODEC(NONE)\n)\nENGINE = MergeTree ORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02377_modify_column_from_lc.sql","errors":[]},{"query":"CREATE TABLE t_modify_from_lc_2 (\nid UInt64,\na LowCardinality(UInt32) CODEC(NONE)\n)\nENGINE = MergeTree ORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02377_modify_column_from_lc.sql","errors":[]},{"query":"CREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02377/quorum', '1') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/02377_majority_insert_quorum_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02377/quorum', '2') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/02377_majority_insert_quorum_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02377/quorum1', '1') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/02377_majority_insert_quorum_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02377/quorum1', '2') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/02377_majority_insert_quorum_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum3(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02377/quorum1', '3') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/02377_majority_insert_quorum_zookeeper_long.sql","errors":[]},{"query":"create table test_02377 (n UInt32, s String) engine=File(CSVWithNames);","fileName":"../ClickHouse/tests/queries/0_stateless/02377_fix_file_virtual_column.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02377_analyzer_in_function_set.sql","errors":[]},{"query":"CREATE TABLE special_set_table (\nid UInt64\n) ENGINE=Set;","fileName":"../ClickHouse/tests/queries/0_stateless/02377_analyzer_in_function_set.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02376_analyzer_in_function_subquery.sql","errors":[]},{"query":"CREATE TABLE test_table_for_in (\nid UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02376_analyzer_in_function_subquery.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02375_analyzer_union.sql","errors":[]},{"query":"CREATE TABLE t_in_tuple_index (\n\\`ID\\` String,\n\\`USER_ID\\` String,\n\\`PLATFORM\\` LowCardinality(String)\n)\nENGINE = MergeTree()\nORDER BY (PLATFORM, USER_ID, ID)\nSETTINGS index_granularity = 2048, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02374_in_tuple_index.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_in_tuple_index (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table m (a int) engine Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02374_combine_multi_if_and_count_if_opt.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String,\nvalue_array Array(UInt64),\nvalue_array_array Array(Array(UInt64))\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02374_analyzer_array_join.sql","errors":[]},{"query":"CREATE TABLE test_table_join_1 (\nid UInt64,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02373_analyzer_join_use_nulls.sql","errors":[]},{"query":"CREATE TABLE test_table_join_2 (\nid UInt64,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02373_analyzer_join_use_nulls.sql","errors":[]},{"query":"CREATE TABLE video_log (\n\\`datetime\\` DateTime,\n\\`user_id\\` UInt64,\n\\`device_id\\` UInt64,\n\\`domain\\` LowCardinality(String),\n\\`bytes\\` UInt64,\n\\`duration\\` UInt64\n)\nENGINE = MergeTree\nPARTITION BY toDate(datetime)\nORDER BY (user_id, device_id)\nSETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02371_select_projection_normal_agg.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE video_log (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE rng (\n\\`user_id_raw\\` UInt64,\n\\`device_id_raw\\` UInt64,\n\\`domain_raw\\` UInt64,\n\\`bytes_raw\\` UInt64,\n\\`duration_raw\\` UInt64\n)\nENGINE = GenerateRandom(1024);","fileName":"../ClickHouse/tests/queries/0_stateless/02371_select_projection_normal_agg.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE rng (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE video_log_result (\n\\`hour\\` DateTime,\n\\`sum_bytes\\` UInt64,\n\\`avg_duration\\` Float64\n)\nENGINE = MergeTree\nPARTITION BY toDate(hour)\nORDER BY sum_bytes\nSETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02371_select_projection_normal_agg.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE video_log_result (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TEMPORARY TABLE test_02327 (name String) AS SELECT * FROM VALUES(('Vasya'), ('Petya'));","fileName":"../ClickHouse/tests/queries/0_stateless/02371_create_temporary_table_as_with_columns_list.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE test_02327 (name String) AS SELECT * FROM VALUES(('","startColumn":72,"startLine":1,"endColumn":73,"endLine":1}]},{"query":"CREATE TABLE test_table_join_1 (\nid UInt64,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02371_analyzer_join_cross.sql","errors":[]},{"query":"CREATE TABLE test_table_join_2 (\nid UInt64,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02371_analyzer_join_cross.sql","errors":[]},{"query":"CREATE TABLE test_table_join_3 (\nid UInt64,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02371_analyzer_join_cross.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue_1 Array(UInt8),\nvalue_2 Array(UInt8),\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02369_analyzer_array_join_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\nid UInt64,\\nvalue_1 Array(UInt8),\\nvalue_2 Array(UInt8),\\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"create table t(id UInt32) engine MergeTree order by id as select 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02367_optimize_trivial_count_with_array_join.sql","errors":[]},{"query":"create table t1(a Array(UInt32)) ENGINE = MergeTree ORDER BY tuple() as select [1,2];","fileName":"../ClickHouse/tests/queries/0_stateless/02367_optimize_trivial_count_with_array_join.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nalias_value_1 ALIAS id + alias_value_2 + 1,\nalias_value_2 ALIAS id + 5\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02367_analyzer_table_alias_columns.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String,\nalias_value ALIAS ((id + 1) AS inside_value) + inside_value\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02367_analyzer_table_alias_columns.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String,\nalias_value ALIAS ((id + 1) AS value) + value\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02367_analyzer_table_alias_columns.sql","errors":[]},{"query":"CREATE TABLE Customers (    \nFirstName Nullable(String),\nLastName String, \nOccupation String,\nEducation String,\nAge Nullable(UInt8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_tabular.sql","errors":[]},{"query":"CREATE TABLE Customers (    \nFirstName Nullable(String),\nLastName String, \nOccupation String,\nEducation String,\nAge Nullable(UInt8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_summarize.sql","errors":[]},{"query":"create table EventLog (\nLogEntry String,\nCreated Int64\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_summarize.sql","errors":[]},{"query":"create table Dates (\nEventTime DateTime,\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_summarize.sql","errors":[{"message":"no viable alternative at input 'create table Dates (\\nEventTime DateTime,\\n)'","startColumn":0,"startLine":3,"endColumn":1,"endLine":3}]},{"query":"CREATE TABLE Customers (    \nFirstName Nullable(String),\nLastName String, \nOccupation String,\nEducation String,\nAge Nullable(UInt8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_operator_in_sql.sql","errors":[]},{"query":"CREATE TABLE mv_expand_test_table (    \na UInt8,\nb Array(String),\nc Array(Int8),\nd Array(Int8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_mvexpand.sql","errors":[]},{"query":"CREATE TABLE Customers (    \nFirstName Nullable(String),\nLastName String, \nOccupation String,\nEducation String,\nAge Nullable(UInt8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_func_string.sql","errors":[]},{"query":"CREATE TABLE Versions (    \nVersion String\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_func_string.sql","errors":[]},{"query":"CREATE TABLE Bin_at_test (    \n\\`Date\\` DateTime('UTC'),\nNum Nullable(UInt8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_func_scalar.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE Bin_at_test (    \\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE array_test (floats Array(Float64), strings Array(String),\nnullable_strings Array(Nullable(String))\n) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_func_dynamic.sql","errors":[]},{"query":"CREATE TABLE Ledger (    \nSupplier Nullable(String),\nFruit String ,\nPrice Float64,\nPurchase Date \n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_extend.sql","errors":[]},{"query":"CREATE TABLE Customers (    \nFirstName Nullable(String),\nLastName String, \nOccupation String,\nEducation String,\nAge Nullable(UInt8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_distinct.sql","errors":[]},{"query":"CREATE TABLE Customers (\nFirstName Nullable(String),\nLastName String,\nOccupation String,\nEducation String,\nAge Nullable(UInt8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_create_table.sql","errors":[]},{"query":"CREATE TABLE kql_table1 ENGINE = Memory AS select *, now() as new_column From kql(\\$\\$Customers | project LastName | filter LastName=='Diaz'\\$\\$);","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_create_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE kql_table1 ENGINE = Memory AS select *, now() as new_column From kql(\\'","startColumn":82,"startLine":1,"endColumn":83,"endLine":1}]},{"query":"CREATE TABLE kql_table2 (\nFirstName Nullable(String),\nLastName String,\nAge Nullable(UInt8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_kql_create_table.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_explain_query_tree.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_direct_dictionary_dict_has.sql","errors":[]},{"query":"CREATE TABLE test_lookup_table (\nid UInt64,\nlookup_key UInt64,\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_direct_dictionary_dict_has.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_lookup_table (\\nid UInt64,\\nlookup_key UInt64,\\n)'","startColumn":0,"startLine":4,"endColumn":1,"endLine":4}]},{"query":"CREATE DICTIONARY test_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'test_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02366_direct_dictionary_dict_has.sql","errors":[]},{"query":"CREATE TABLE consumer_02366 (\n\\`id\\` UInt16,\n\\`dec\\` AggregateFunction(argMin, Decimal(24, 10), UInt16)\n)\nENGINE = AggregatingMergeTree\nPRIMARY KEY id\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_decimal_agg_state_conversion.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE consumer_02366 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE producer_02366 (\n\\`id\\` UInt16,\n\\`dec\\` String\n)\nENGINE = MergeTree\nPRIMARY KEY id\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_decimal_agg_state_conversion.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE producer_02366 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE MATERIALIZED VIEW mv_02366 TO consumer_02366 AS SELECT\nid,\nargMinState(dec, id) AS dec\nFROM\n(\nSELECT\nid,\ntoDecimal128(dec, 10) AS dec\nFROM producer_02366\n)\nGROUP BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_decimal_agg_state_conversion.sql","errors":[]},{"query":"CREATE TABLE t1 (c1 Int32, c2 Int32) ENGINE MergeTree ORDER BY c1;","fileName":"../ClickHouse/tests/queries/0_stateless/02366_asof_optimize_predicate_bug_37813.sql","errors":[]},{"query":"CREATE TABLE t2 (c1 Int32, c2 Int32, c3 String) ENGINE MergeTree ORDER BY (c1, c2, c3);","fileName":"../ClickHouse/tests/queries/0_stateless/02366_asof_optimize_predicate_bug_37813.sql","errors":[]},{"query":"CREATE TABLE t1 ( x Int ) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02364_setting_cross_to_inner_rewrite.sql","errors":[]},{"query":"CREATE TABLE t2 ( x Int ) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02364_setting_cross_to_inner_rewrite.sql","errors":[]},{"query":"create table dat (blockNum Decimal(10,0), eventTimestamp DateTime64(9)) Engine=MergeTree() primary key eventTimestamp;","fileName":"../ClickHouse/tests/queries/0_stateless/02364_dictionary_datetime_64_attribute_crash.sql","errors":[]},{"query":"CREATE DICTIONARY datDictionary (\n\\`blockNum\\` Decimal(10, 0),\n\\`eventTimestamp\\` DateTime64(9)\n)\nPRIMARY KEY blockNum\nSOURCE(CLICKHOUSE(TABLE 'dat'))\nLIFETIME(MIN 0 MAX 1000)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/02364_dictionary_datetime_64_attribute_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY datDictionary (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE map_test(\\`tags\\` Map(String, String)) ENGINE = MergeTree PRIMARY KEY tags ORDER BY tags SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02363_mapupdate_improve.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE map_test(\\'","startColumn":22,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE data_horizontal ( key Int\n)\nEngine=MergeTree()\nORDER BY key\nSETTINGS old_parts_lifetime=600;","fileName":"../ClickHouse/tests/queries/0_stateless/02362_part_log_merge_algorithm.sql","errors":[]},{"query":"CREATE TABLE data_vertical (\nkey UInt64,\nvalue String\n)\nENGINE = MergeTree()\nORDER BY key\nSETTINGS index_granularity_bytes = 0, enable_mixed_granularity_parts = 0, min_bytes_for_wide_part = 0,\nvertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1,\nold_parts_lifetime=600;","fileName":"../ClickHouse/tests/queries/0_stateless/02362_part_log_merge_algorithm.sql","errors":[]},{"query":"create table test(a Int64) Engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02356_trivial_count_with_empty_set.sql","errors":[]},{"query":"CREATE TABLE 02356_destination (a Int64, b String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02356_insert_query_log_metrics.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02356'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE t1 (a Int64);","fileName":"../ClickHouse/tests/queries/0_stateless/02354_with_statement_non_exist_column.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t2 (a Int64, b Int64);","fileName":"../ClickHouse/tests/queries/0_stateless/02354_with_statement_non_exist_column.sql","errors":[]},{"query":"CREATE TABLE tab1 (id Int32, vec Array(Float32), PRIMARY KEY id, INDEX vec_idx(vec) TYPE vector_similarity('hnsw', 'L2Distance'));","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_unquoted_index_parameters.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab1 (id Int32, vec Array(Float32), PRIMARY KEY id'","startColumn":61,"startLine":1,"endColumn":63,"endLine":1}]},{"query":"CREATE TABLE tab2 (id Int32, vec Array(Float32), PRIMARY KEY id, INDEX vec_idx(vec) TYPE vector_similarity(hnsw, L2Distance));","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_unquoted_index_parameters.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab2 (id Int32, vec Array(Float32), PRIMARY KEY id'","startColumn":61,"startLine":1,"endColumn":63,"endLine":1}]},{"query":"CREATE TABLE tab1 (id Int32, vec Array(Float32), PRIMARY KEY id);","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_unquoted_index_parameters.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab1 (id Int32, vec Array(Float32), PRIMARY KEY id'","startColumn":61,"startLine":1,"endColumn":63,"endLine":1}]},{"query":"CREATE TABLE tab2 (id Int32, vec Array(Float32), PRIMARY KEY id);","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_unquoted_index_parameters.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab2 (id Int32, vec Array(Float32), PRIMARY KEY id'","startColumn":61,"startLine":1,"endColumn":63,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance')) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_queries.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance'))'","startColumn":105,"startLine":1,"endColumn":106,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance') GRANULARITY 2) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_queries.sql","errors":[]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'cosineDistance', 'f32', 42, 99, 66) GRANULARITY 2) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_queries.sql","errors":[]},{"query":"CREATE TABLE tab_f64(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance', 'f64', 0, 0, 0) GRANULARITY 2) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_queries.sql","errors":[]},{"query":"CREATE TABLE tab_f32(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance', 'f32', 0, 0, 0) GRANULARITY 2) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_queries.sql","errors":[]},{"query":"CREATE TABLE tab_f16(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance', 'f16', 0, 0, 0) GRANULARITY 2) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_queries.sql","errors":[]},{"query":"CREATE TABLE tab_bf16(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance', 'bf16', 0, 0, 0) GRANULARITY 2) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_queries.sql","errors":[]},{"query":"CREATE TABLE tab_i8(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance', 'i8', 0, 0, 0) GRANULARITY 2) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_queries.sql","errors":[]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float64), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance') GRANULARITY 2) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_queries.sql","errors":[]},{"query":"CREATE TABLE tab (id Int32, vec Array(Float32), PRIMARY KEY id, INDEX vec_idx(vec) TYPE vector_similarity('hnsw', 'L2Distance'));","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_multiple_indexes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (id Int32, vec Array(Float32), PRIMARY KEY id'","startColumn":60,"startLine":1,"endColumn":62,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX vec_idx vec TYPE annoy()) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_legacy_index_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX vec_idx vec TYPE annoy())'","startColumn":77,"startLine":1,"endColumn":78,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX vec_idx vec TYPE usearch()) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_legacy_index_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX vec_idx vec TYPE usearch())'","startColumn":79,"startLine":1,"endColumn":80,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_QUERY } CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity()) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_QUERY }\nCREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('cant_have_one_arg')) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_QUERY }\nCREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('cant', 'have', 'three_args')) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_QUERY }\nCREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('cant', 'have', 'more', 'than', 'six', 'args', '!')) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_QUERY }\nSELECT '1st argument (method) must be String and hnsw';","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_index_creation_negative.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity)'","startColumn":83,"startLine":1,"endColumn":84,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity(3, 'L2Distance')) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_QUERY } CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('not_hnsw', 'L2Distance')) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_DATA }\nSELECT '2nd argument (distance function) must be String and L2Distance or cosineDistance';","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_index_creation_negative.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity(3, 'L2Distance'))'","startColumn":100,"startLine":1,"endColumn":101,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 3)) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_QUERY } CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'invalid_distance')) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_DATA }\nSELECT '3nd argument (quantization), if given, must be String and f32, f16, ...';","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_index_creation_negative.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 3))'","startColumn":94,"startLine":1,"endColumn":95,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance', 1, 1, 1, 1)) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_QUERY } CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance', 'invalid', 2, 1, 1)) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_DATA }\nSELECT '4nd argument (M), if given, must be UInt64 and > 1';","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_index_creation_negative.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance', 1, 1, 1, 1))'","startColumn":117,"startLine":1,"endColumn":118,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance', 'f32', 'invalid', 1, 1)) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_QUERY } CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance', 'f32', 1, 1, 1)) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_DATA }\nSELECT 'Must be created on single column';","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_index_creation_negative.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance', 'f32', 'invalid', 1, 1))'","startColumn":129,"startLine":1,"endColumn":130,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx (vec, id) TYPE vector_similarity('hnsw', 'L2Distance')) ENGINE = MergeTree ORDER BY id; -- { serverError INCORRECT_NUMBER_OF_COLUMNS } SELECT 'Must be created on Array(Float32) columns';","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_index_creation_negative.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx (vec, id) TYPE vector_similarity('hnsw', 'L2Distance'))'","startColumn":111,"startLine":1,"endColumn":112,"endLine":1}]},{"query":"CREATE TABLE tab (id UInt32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance')) ENGINE = MergeTree ORDER BY tuple(); -- { serverError SUPPORT_IS_DISABLED } SET allow_experimental_vector_similarity_index = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_experimental_setting.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (id UInt32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance'))'","startColumn":107,"startLine":1,"endColumn":108,"endLine":1}]},{"query":"CREATE TABLE tab (id UInt32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance')) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_experimental_setting.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (id UInt32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance'))'","startColumn":107,"startLine":1,"endColumn":108,"endLine":1}]},{"query":"CREATE TABLE tab (id UInt32, vec Array(Float32)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_experimental_setting.sql","errors":[]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance')) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_detach_attach.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance'))'","startColumn":105,"startLine":1,"endColumn":106,"endLine":1}]},{"query":"CREATE TABLE tab (id Int32, vec Array(Float32), INDEX idx(vec) TYPE vector_similarity('hnsw', 'L2Distance')) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_default_granularity.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (id Int32, vec Array(Float32), INDEX idx(vec) TYPE vector_similarity('hnsw', 'L2Distance'))'","startColumn":107,"startLine":1,"endColumn":108,"endLine":1}]},{"query":"CREATE TABLE tab (id Int32, vec Array(Float32)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_default_granularity.sql","errors":[]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance')) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_bugs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance'))'","startColumn":105,"startLine":1,"endColumn":106,"endLine":1}]},{"query":"CREATE TABLE tab (id UInt64, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance')) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_bugs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (id UInt64, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance'))'","startColumn":107,"startLine":1,"endColumn":108,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance')) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_bugs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance'))'","startColumn":105,"startLine":1,"endColumn":106,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance')) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity_bytes = 0, min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0, index_granularity = 8192; -- disable adaptive granularity due to bug INSERT INTO tab SELECT number, [toFloat32(number), 0.0] from numbers(10000);","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_bugs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'L2Distance'))'","startColumn":105,"startLine":1,"endColumn":106,"endLine":1}]},{"query":"CREATE TABLE tab(id Int32, vec Array(Float32), INDEX idx vec TYPE vector_similarity('hnsw', 'cosineDistance', 'f16', 0, 0, 0) GRANULARITY 2) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/02354_vector_search_bugs.sql","errors":[]},{"query":"CREATE TABLE order (\nID Int64,\nType Int64,\nNum UInt64,\nt DateTime\n)\nENGINE = MergeTree()\nPARTITION BY toYYYYMMDD(t)\nORDER BY (ID, Type, Num);","fileName":"../ClickHouse/tests/queries/0_stateless/02354_read_in_order_prewhere.sql","errors":[]},{"query":"create table t_2354_dist_with_external_aggr(a UInt64, b String, c FixedString(100)) engine = MergeTree order by tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02354_distributed_with_external_aggregation_memory_usage.sql","errors":[]},{"query":"create table n(nc Nullable(int)) engine = MergeTree order by (tuple()) partition by (nc) settings allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02353_partition_prune_nullable_key.sql","errors":[]},{"query":"CREATE TABLE replicated_table_r1(id Int32, name String) ENGINE = ReplicatedMergeTree('/test/02352/{database}/t_rep','1') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02352_lightweight_delete_on_replicated_merge_tree.sql","errors":[]},{"query":"CREATE TABLE replicated_table_r2(id Int32, name String) ENGINE = ReplicatedMergeTree('/test/02352/{database}/t_rep','2') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02352_lightweight_delete_on_replicated_merge_tree.sql","errors":[]},{"query":"CREATE TABLE t_light_r1(a int, b int, c int, index i_c(b) TYPE minmax granularity 4) ENGINE = ReplicatedMergeTree('/test/02352/{database}/t_light','1') ORDER BY a PARTITION BY c % 5;","fileName":"../ClickHouse/tests/queries/0_stateless/02352_lightweight_delete_on_replicated_merge_tree.sql","errors":[]},{"query":"CREATE TABLE t_light_r2(a int, b int, c int, index i_c(b) TYPE minmax granularity 4) ENGINE = ReplicatedMergeTree('/test/02352/{database}/t_light','2') ORDER BY a PARTITION BY c % 5;","fileName":"../ClickHouse/tests/queries/0_stateless/02352_lightweight_delete_on_replicated_merge_tree.sql","errors":[]},{"query":"CREATE TABLE t_light_sync_r1(a int, b int, c int, index i_c(b) TYPE minmax granularity 4) ENGINE = ReplicatedMergeTree('/test/02352/{database}/t_sync','1') ORDER BY a PARTITION BY c % 5 SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02352_lightweight_delete_on_replicated_merge_tree.sql","errors":[]},{"query":"CREATE TABLE t_light_sync_r2(a int, b int, c int, index i_c(b) TYPE minmax granularity 4) ENGINE = ReplicatedMergeTree('/test/02352/{database}/t_sync','2') ORDER BY a PARTITION BY c % 5 SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02352_lightweight_delete_on_replicated_merge_tree.sql","errors":[]},{"query":"CREATE TABLE t_merge_tree(time Date, id String , name String) ENGINE = MergeTree() PARTITION BY time ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02352_lightweight_delete_in_partition.sql","errors":[]},{"query":"CREATE TABLE t_replicated_merge_tree(time Date, id String, name String) ENGINE = ReplicatedMergeTree('/test/02352/{database}/t_rep','1') PARTITION BY time ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02352_lightweight_delete_in_partition.sql","errors":[]},{"query":"CREATE TABLE t_obj(id Int32, name Object('json')) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02352_lightweight_delete_and_object_column.sql","errors":[]},{"query":"CREATE TABLE lwd_test (id UInt64 , value String) ENGINE MergeTree() ORDER BY id SETTINGS index_granularity=8192, index_granularity_bytes='10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02352_lightweight_delete.sql","errors":[]},{"query":"create table t (a UInt64) Engine = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/02350_views_max_insert_threads.sql","errors":[]},{"query":"create materialized view t_mv Engine = Null AS select now() as ts, max(a) from t group by ts;","fileName":"../ClickHouse/tests/queries/0_stateless/02350_views_max_insert_threads.sql","errors":[]},{"query":"create table test_tz_hour(t DateTime, x String) engine MergeTree partition by toYYYYMMDD(t) order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_to_hour_monotonicity_fix.sql","errors":[]},{"query":"create table tab (id UInt32, haystack String, pattern String) engine = MergeTree() order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_position_countsubstrings_zero_byte.sql","errors":[]},{"query":"CREATE TABLE nnd (\nid Int8, ts DateTime64(3, 'UTC'), metric Float64\n)\nENGINE=MergeTree()\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_non_negative_derivative.sql","errors":[]},{"query":"CREATE TABLE tab (\n\\`key\\` UInt64,\n\\`str\\` String\n)\nENGINE = MergeTree\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_inverted_index_experimental_flag.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE tab(k UInt64, s String, INDEX af(s) TYPE full_text(2)) ENGINE = MergeTree() ORDER BY k\nSETTINGS index_granularity = 2, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_search.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(k UInt64, s String, INDEX af(s) TYPE full_text(2))'","startColumn":66,"startLine":1,"endColumn":67,"endLine":1}]},{"query":"CREATE TABLE tab_x(k UInt64, s String, INDEX af(s) TYPE full_text()) ENGINE = MergeTree() ORDER BY k\nSETTINGS index_granularity = 2, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_search.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab_x(k UInt64, s String, INDEX af(s) TYPE full_text())'","startColumn":67,"startLine":1,"endColumn":68,"endLine":1}]},{"query":"create table tab (k UInt64, s Array(String), INDEX af(s) TYPE full_text(2)) ENGINE = MergeTree() ORDER BY k\nSETTINGS index_granularity = 2, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_search.sql","errors":[{"message":"no viable alternative at input 'create table tab (k UInt64, s Array(String), INDEX af(s) TYPE full_text(2))'","startColumn":74,"startLine":1,"endColumn":75,"endLine":1}]},{"query":"CREATE TABLE tab (k UInt64, s Map(String,String), INDEX af(mapKeys(s)) TYPE full_text(2)) ENGINE = MergeTree() ORDER BY k\nSETTINGS index_granularity = 2, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_search.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (k UInt64, s Map(String,String), INDEX af(mapKeys(s)) TYPE full_text(2))'","startColumn":88,"startLine":1,"endColumn":89,"endLine":1}]},{"query":"CREATE TABLE tab(k UInt64, s String, INDEX af(s) TYPE full_text(2)) ENGINE = MergeTree() ORDER BY k\nSETTINGS index_granularity = 2, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_search.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(k UInt64, s String, INDEX af(s) TYPE full_text(2))'","startColumn":66,"startLine":1,"endColumn":67,"endLine":1}]},{"query":"CREATE TABLE tab(k UInt64, s String, INDEX af(s) TYPE full_text(2)) ENGINE = MergeTree()\nORDER BY k\nSETTINGS index_granularity = 2, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_search.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(k UInt64, s String, INDEX af(s) TYPE full_text(2))'","startColumn":66,"startLine":1,"endColumn":67,"endLine":1}]},{"query":"CREATE TABLE tab (row_id UInt32, str String, INDEX idx str TYPE full_text) ENGINE = MergeTree ORDER BY row_id;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_search.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (row_id UInt32, str String, INDEX idx str TYPE full_text)'","startColumn":73,"startLine":1,"endColumn":74,"endLine":1}]},{"query":"CREATE TABLE tab(k UInt64, s String, INDEX af(s) TYPE full_text(0, 12040)) Engine=MergeTree\nORDER BY (k)\nAS\nSELECT\nnumber,\nformat('{},{},{},{}', hex(12345678), hex(87654321), hex(number/17 + 5), hex(13579012)) as s\nFROM numbers(1024);","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_search.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(k UInt64, s String, INDEX af(s) TYPE full_text(0, 12040))'","startColumn":73,"startLine":1,"endColumn":74,"endLine":1}]},{"query":"CREATE TABLE tab(k UInt64, s String, INDEX idx(s) TYPE inverted(2)) ENGINE = MergeTree() ORDER BY k; -- { serverError ILLEGAL_INDEX } SET allow_experimental_inverted_index = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_old_name.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(k UInt64, s String, INDEX idx(s) TYPE inverted(2))'","startColumn":66,"startLine":1,"endColumn":67,"endLine":1}]},{"query":"CREATE TABLE tab(k UInt64, s String, INDEX idx(s) TYPE inverted(2)) ENGINE = MergeTree() ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_old_name.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab(k UInt64, s String, INDEX idx(s) TYPE inverted(2))'","startColumn":66,"startLine":1,"endColumn":67,"endLine":1}]},{"query":"CREATE TABLE tab (\nid UInt32,\nstr String,\nINDEX inv_idx(str) TYPE full_text(0) GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY id\nSETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_match_predicate.sql","errors":[]},{"query":"CREATE TABLE t (\nkey UInt64,\nstr String,\nINDEX inv_idx str TYPE full_text(0) GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_detach_attach.sql","errors":[]},{"query":"CREATE TABLE tab (\nid UInt64,\ndoc String,\nINDEX text_idx doc TYPE full_text\n)\nENGINE = MergeTree\nORDER BY id\nSETTINGS index_granularity = 2, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_bug59039.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\nid UInt64,\\ndoc String,\\nINDEX text_idx doc TYPE full_text\\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"CREATE TABLE tab ( k UInt64,\ns Map(String, String),\nINDEX idx mapKeys(s) TYPE full_text(2) GRANULARITY 1)\nENGINE = MergeTree\nORDER BY k\nSETTINGS index_granularity = 2, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_bug52019.sql","errors":[]},{"query":"CREATE TABLE tab (\nid UInt64,\nstr String,\nINDEX idx str TYPE full_text(3) GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS min_rows_for_wide_part = 1, min_bytes_for_wide_part = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_fulltext_index_bug47393.sql","errors":[]},{"query":"create table table_1 (x UInt32, y String, INDEX a (length(y)) TYPE minmax GRANULARITY 1) engine = MergeTree order by x settings index_granularity = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters_index.sql","errors":[]},{"query":"CREATE TABLE distr_table (x UInt32, y String) ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), 'table_1');","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters_index.sql","errors":[]},{"query":"create database if not exists shard_0;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters_distr.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_0;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create database if not exists shard_1;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters_distr.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_1;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table shard_0.data_02346 (x UInt32, y String) engine = MergeTree order by x settings index_granularity = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters_distr.sql","errors":[]},{"query":"create table shard_1.data_02346 (x UInt32, y String) engine = MergeTree order by x settings index_granularity = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters_distr.sql","errors":[]},{"query":"create table dist_02346 (x UInt32, y String) engine=Distributed('test_cluster_two_shards_different_databases',  '', data_02346);","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters_distr.sql","errors":[]},{"query":"create table table_1 (x UInt32, y String) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters.sql","errors":[]},{"query":"CREATE TABLE distr_table (x UInt32, y String) ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), 'table_1');","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters.sql","errors":[]},{"query":"create view v_numbers as select number + 1 as x from system.numbers limit 5;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters.sql","errors":[]},{"query":"create table table_2 (x UInt32, y String) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters.sql","errors":[]},{"query":"create materialized view mv_table to table_2 (x UInt32, y String) as select * from table_1;","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters.sql","errors":[{"message":"no viable alternative at input 'create materialized view mv_table to table_2 ('","startColumn":45,"startLine":1,"endColumn":46,"endLine":1}]},{"query":"create table m_table (x UInt32, y String) engine = Merge(currentDatabase(), '^table_');","fileName":"../ClickHouse/tests/queries/0_stateless/02346_additional_filters.sql","errors":[]},{"query":"CREATE TABLE landing (n Int64) engine=MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/02345_implicit_transaction.sql","errors":[]},{"query":"CREATE TABLE target  (n Int64) engine=MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/02345_implicit_transaction.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW landing_to_target TO target AS SELECT n + throwIf(n == 3333) AS n\nFROM landing;","fileName":"../ClickHouse/tests/queries/0_stateless/02345_implicit_transaction.sql","errors":[]},{"query":"CREATE TABLE trailing_comma_1 (id INT NOT NULL DEFAULT 1,) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02345_create_table_allow_trailing_comma.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE trailing_comma_1 (id INT NOT'","startColumn":38,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"CREATE TABLE trailing_comma_2 (id INT DEFAULT 1,) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02345_create_table_allow_trailing_comma.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE trailing_comma_2 (id INT DEFAULT 1,)'","startColumn":48,"startLine":1,"endColumn":49,"endLine":1}]},{"query":"CREATE TABLE trailing_comma_3 (x UInt8, y UInt8,) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02345_create_table_allow_trailing_comma.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE trailing_comma_3 (x UInt8, y UInt8,)'","startColumn":48,"startLine":1,"endColumn":49,"endLine":1}]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02345_analyzer_subqueries.sql","errors":[]},{"query":"create table data_02344 (key Int) engine=Null;","fileName":"../ClickHouse/tests/queries/0_stateless/02344_insert_profile_events_stress.sql","errors":[]},{"query":"create table t_distinct_limit (d Date, id Int64) engine = MergeTree partition by toYYYYMM(d) order by d SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02344_distinct_limit_distiributed.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02344_analyzer_multiple_aliases_for_expression.sql","errors":[]},{"query":"CREATE TABLE t_s3_compressed_blocks (id UInt64, s String CODEC(NONE)) ENGINE = MergeTree ORDER BY id\nSETTINGS storage_policy = 's3_cache',\nmin_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02343_read_from_s3_compressed_blocks.sql","errors":[]},{"query":"create table t engine=Memory empty; -- { clientError SYNTAX_ERROR } create table t engine=Memory empty as; -- { clientError SYNTAX_ERROR }\ncreate table t engine=Memory as; -- { clientError SYNTAX_ERROR }\ncreate table t engine=Memory empty as select 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02343_create_empty_as_select.sql","errors":[{"message":"mismatched input 'empty' expecting <EOF>","startColumn":29,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"create materialized view mv engine=Memory empty as select 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02343_create_empty_as_select.sql","errors":[{"message":"no viable alternative at input 'create materialized view mv engine=Memory empty'","startColumn":42,"startLine":1,"endColumn":47,"endLine":1}]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02343_analyzer_lambdas.sql","errors":[]},{"query":"CREATE TABLE test_table_tuple (\nid UInt64,\nvalue Tuple(value_0_level_0 String, value_1_level_0 String)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02343_analyzer_lambdas.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02343_analyzer_column_transformers_strict.sql","errors":[]},{"query":"CREATE TABLE proj_agg_02343 (\nk1 UInt32,\nk2 UInt32,\nk3 UInt32,\nvalue UInt32,\nPROJECTION aaaa\n(\nSELECT\nk1,\nk2,\nk3,\nsum(value)\nGROUP BY k1, k2, k3\n)\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02343_aggregation_pipeline.sql","errors":[]},{"query":"create table t(a UInt64) engine = MergeTree order by (a);","fileName":"../ClickHouse/tests/queries/0_stateless/02343_aggregation_pipeline.sql","errors":[]},{"query":"create table dist_t as t engine = Distributed(test_cluster_two_shards, currentDatabase(), t, a % 2);","fileName":"../ClickHouse/tests/queries/0_stateless/02343_aggregation_pipeline.sql","errors":[]},{"query":"CREATE TABLE data_02342 (a UInt8) ENGINE=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02342_window_view_different_struct.sql","errors":[]},{"query":"CREATE WINDOW VIEW window_view_02342 ENGINE=Memory AS SELECT count(a), tumbleStart(wid) AS w_start, tumbleEnd(tumble(now(), INTERVAL '3' SECOND)) AS w_end FROM data_02342 GROUP BY tumble(now(), INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/02342_window_view_different_struct.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE TABLE data_02342 (a UInt8) ENGINE=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02342_window_view_different_struct.sql","errors":[]},{"query":"CREATE WINDOW VIEW window_view_02342 ENGINE=Memory AS SELECT count(a), tumbleStart(wid) AS w_start, tumbleEnd(tumble(now(), INTERVAL '3' SECOND)) AS w_end FROM data_02342 GROUP BY tumble(now(), INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/02342_window_view_different_struct.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE TABLE data_02342 (a UInt8, s String) ENGINE=MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02342_window_view_different_struct.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue Tuple(value_0_level_0 Tuple(value_0_level_1 String, value_1_level_1 String), value_1_level_0 String)\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02342_analyzer_compound_types.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue Nested (value_0_level_0 Nested(value_0_level_1 String, value_1_level_1 String), value_1_level_0 String)\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02342_analyzer_compound_types.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02341_analyzer_aliases_basics.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02340_analyzer_functions.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02339_analyzer_matcher_basic.sql","errors":[]},{"query":"CREATE DATABASE 02339_db;","fileName":"../ClickHouse/tests/queries/0_stateless/02339_analyzer_matcher_basic.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 02339'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 02339_db.test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02339_analyzer_matcher_basic.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02339'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE nested_name_tuples (\n\\`a\\` Tuple(x String, y Tuple(i Int32, j String))\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02337_check_translate_qualified_names_matcher.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE nested_name_tuples (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02337_analyzer_columns_basic.sql","errors":[]},{"query":"CREATE DATABASE 02337_db;","fileName":"../ClickHouse/tests/queries/0_stateless/02337_analyzer_columns_basic.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 02337'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 02337_db.test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02337_analyzer_columns_basic.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02337'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t_sparse_s3 (id UInt32, cond UInt8, s String) engine = MergeTree ORDER BY id\nsettings ratio_of_defaults_for_sparse_serialization = 0.01, storage_policy = 's3_cache',\nmin_bytes_for_wide_part = 0, min_compress_block_size = 1,\nindex_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02336_sparse_columns_s3.sql","errors":[]},{"query":"CREATE TABLE segfault (\nid          UInt32,\nuuid        UUID,\ntags_ids    Array(UInt32)\n) ENGINE = MergeTree()\nORDER BY (id);","fileName":"../ClickHouse/tests/queries/0_stateless/02324_map_combinator_bug.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW segfault_mv ENGINE = AggregatingMergeTree()\nORDER BY (id)\nAS SELECT\nid,\nuniqState(uuid) as uniq_uuids,\nuniqMapState(CAST((tags_ids, arrayMap(_ -> toString(uuid), tags_ids)), 'Map(UInt32, String)')) as uniq_tags_ids\nFROM segfault\nGROUP BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02324_map_combinator_bug.sql","errors":[]},{"query":"CREATE TABLE test (id String, \\`abc.1\\` String, \\`abc.2\\` String, \\`abc\\` String) ENGINE MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02320_alter_columns_with_dots.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (id String, \\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"create table t_index(a int, b String) engine=MergeTree() order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_sql_standard_create_drop_index.sql","errors":[]},{"query":"create index i_a on t_index(a) TYPE minmax GRANULARITY 4;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_sql_standard_create_drop_index.sql","errors":[{"message":"no viable alternative at input 'create index'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"create index if not exists i_a on t_index(a) TYPE minmax GRANULARITY 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_sql_standard_create_drop_index.sql","errors":[{"message":"no viable alternative at input 'create index'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"create index i_b on t_index(b) TYPE bloom_filter GRANULARITY 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_sql_standard_create_drop_index.sql","errors":[{"message":"no viable alternative at input 'create index'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"create table t_index(a int, b String) engine=ReplicatedMergeTree('/test/2319/{database}', '1') order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_sql_standard_create_drop_index.sql","errors":[]},{"query":"create table t_index_replica(a int, b String) engine=ReplicatedMergeTree('/test/2319/{database}', '2') order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_sql_standard_create_drop_index.sql","errors":[]},{"query":"create index i_a on t_index(a) TYPE minmax GRANULARITY 4;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_sql_standard_create_drop_index.sql","errors":[{"message":"no viable alternative at input 'create index'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"create index if not exists i_a on t_index(a) TYPE minmax GRANULARITY 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_sql_standard_create_drop_index.sql","errors":[{"message":"no viable alternative at input 'create index'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"create index i_b on t_index(b) TYPE bloom_filter GRANULARITY 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_sql_standard_create_drop_index.sql","errors":[{"message":"no viable alternative at input 'create index'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE TABLE decimal (\na Decimal32(4),\nb Decimal64(8),\nc Decimal128(8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_quantile_interpolated_weighted.sql","errors":[]},{"query":"CREATE TABLE test_table (\\`n\\` UInt64, \\`s\\` String) ENGINE = MergeTree\nPRIMARY KEY n ORDER BY n SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02319_no_columns_in_row_level_filter.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE ROW POLICY test_filter_policy ON test_table USING False TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_no_columns_in_row_level_filter.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY test_filter_policy_2 ON test_table USING (n % 5) >= 3 TO default;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_no_columns_in_row_level_filter.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE merge_table_standard_delete(id Int32, name String) ENGINE = MergeTree order by id settings min_bytes_for_wide_part=10000000;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_lightweight_delete_on_merge_tree_compact_parts.sql","errors":[]},{"query":"create table t_light(a int, b int, c int, index i_c(b) type minmax granularity 4) engine = MergeTree order by a partition by c % 5 settings min_bytes_for_wide_part=10000000;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_lightweight_delete_on_merge_tree_compact_parts.sql","errors":[]},{"query":"CREATE TABLE t_large(a UInt32, b int) ENGINE=MergeTree order BY a settings min_bytes_for_wide_part=0, index_granularity=8192, index_granularity_bytes='10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02319_lightweight_delete_on_merge_tree_compact_parts.sql","errors":[]},{"query":"CREATE TABLE merge_table_standard_delete(id Int32, name String) ENGINE = MergeTree order by id settings min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_lightweight_delete_on_merge_tree.sql","errors":[]},{"query":"create table t_light(a int, b int, c int, index i_c(b) type minmax granularity 4) engine = MergeTree order by a partition by c % 5 settings min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_lightweight_delete_on_merge_tree.sql","errors":[]},{"query":"CREATE TABLE t_large(a UInt32, b int) ENGINE=MergeTree order BY a settings min_bytes_for_wide_part=0, index_granularity=8192, index_granularity_bytes='10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02319_lightweight_delete_on_merge_tree.sql","errors":[]},{"query":"CREATE TABLE t_proj(a UInt32, b int) ENGINE=MergeTree order BY a settings min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_lightweight_delete_on_merge_tree.sql","errors":[]},{"query":"CREATE TABLE merge_table_standard_delete(id Int32, name String) ENGINE = MergeTree order by id settings min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_lightweight_delete_on_merge_tree.sql","errors":[]},{"query":"CREATE TABLE dictionary_source_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_dict_get_check_arguments_size.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nLAYOUT(FLAT())\nSOURCE(CLICKHOUSE(TABLE 'dictionary_source_table'))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02319_dict_get_check_arguments_size.sql","errors":[]},{"query":"CREATE TABLE dictionary_source_table (\nkey UInt64,\nstart UInt64,\nend UInt64,\nvalue String\n) Engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02319_dict_get_check_arguments_size.sql","errors":[]},{"query":"CREATE DICTIONARY range_hashed_dictionary (\nkey UInt64,\nstart UInt64,\nend UInt64,\nvalue String\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE 'dictionary_source_table'))\nLAYOUT(RANGE_HASHED())\nRANGE(MIN start MAX end)\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02319_dict_get_check_arguments_size.sql","errors":[]},{"query":"CREATE TABLE tab (haystack String, pattern String) engine = MergeTree() ORDER BY haystack;","fileName":"../ClickHouse/tests/queries/0_stateless/02317_like_with_trailing_escape.sql","errors":[]},{"query":"create table distinct_in_order (a int) engine=MergeTree() order by a settings index_granularity=10;","fileName":"../ClickHouse/tests/queries/0_stateless/02317_distinct_in_order_optimization.sql","errors":[]},{"query":"create table distinct_in_order (a int) engine=MergeTree() order by a settings index_granularity=10;","fileName":"../ClickHouse/tests/queries/0_stateless/02317_distinct_in_order_optimization.sql","errors":[]},{"query":"create table distinct_in_order (a int, b int, c int) engine=MergeTree() order by (a, b) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02317_distinct_in_order_optimization.sql","errors":[]},{"query":"CREATE TABLE distinct_cardinality_low (low UInt64, medium UInt64, high UInt64) ENGINE MergeTree() ORDER BY (low, medium) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02317_distinct_in_order_optimization.sql","errors":[]},{"query":"create table distinct_in_order (low UInt64, medium UInt64, high UInt64) engine=MergeTree() order by (low, medium) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02317_distinct_in_order_optimization.sql","errors":[]},{"query":"create table ordinary_distinct (low UInt64, medium UInt64, high UInt64) engine=MergeTree() order by (low, medium) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02317_distinct_in_order_optimization.sql","errors":[]},{"query":"create table distinct_in_order (low UInt64, medium UInt64, high UInt64) engine=MergeTree() order by (low, medium) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02317_distinct_in_order_optimization.sql","errors":[]},{"query":"create table ordinary_distinct (low UInt64, medium UInt64, high UInt64) engine=MergeTree() order by (low, medium) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02317_distinct_in_order_optimization.sql","errors":[]},{"query":"create table distinct_in_order (low UInt64, medium UInt64, high UInt64) engine=MergeTree() order by (low, medium) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02317_distinct_in_order_optimization.sql","errors":[]},{"query":"create table ordinary_distinct (low UInt64, medium UInt64, high UInt64) engine=MergeTree() order by (low, medium) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02317_distinct_in_order_optimization.sql","errors":[]},{"query":"create table sorting_key_empty_tuple (a int, b int) engine=MergeTree() order by tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02317_distinct_in_order_optimization.sql","errors":[]},{"query":"create table sorting_key_contain_function (datetime DateTime, a int) engine=MergeTree() order by (toDate(datetime)) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02317_distinct_in_order_optimization.sql","errors":[]},{"query":"CREATE TABLE ipv4_test (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02316_cast_to_ip_address_default_column.sql","errors":[]},{"query":"CREATE TABLE ipv6_test (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02316_cast_to_ip_address_default_column.sql","errors":[]},{"query":"CREATE TABLE test02315(a UInt64, b UInt64) ENGINE=MergeTree() ORDER BY (a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/02315_grouping_constant_folding.sql","errors":[]},{"query":"CREATE TABLE codecTest ( key      UInt64,\nname     String,\nref_valueF64 Float64,\nref_valueF32 Float32,\nvalueF64 Float64  CODEC(FPC),\nvalueF32 Float32  CODEC(FPC)\n) Engine = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02313_test_fpc_codec.sql","errors":[]},{"query":"CREATE TABLE codecTest ( key      UInt64,\nname     String,\nref_valueF64 Float64,\nref_valueF32 Float32,\nvalueF64 Float64  CODEC(FPC(4)),\nvalueF32 Float32  CODEC(FPC(4))\n) Engine = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02313_test_fpc_codec.sql","errors":[]},{"query":"CREATE TABLE test02313 (\na Enum('one' = 1, 'two' = 2),\nb Enum('default' = 0, 'non-default' = 1),\nc UInt8\n)\nENGINE = MergeTree()\nORDER BY (a, b, c);","fileName":"../ClickHouse/tests/queries/0_stateless/02313_group_by_modifiers_with_non_default_types.sql","errors":[]},{"query":"create table test_02312 (x Tuple(a UInt32, b UInt32)) engine=File(Parquet);","fileName":"../ClickHouse/tests/queries/0_stateless/02312_parquet_orc_arrow_names_tuples.sql","errors":[]},{"query":"create table test_02312 (x Tuple(a UInt32, b UInt32)) engine=File(Arrow);","fileName":"../ClickHouse/tests/queries/0_stateless/02312_parquet_orc_arrow_names_tuples.sql","errors":[]},{"query":"create table test_02312 (x Tuple(a UInt32, b UInt32)) engine=File(ORC);","fileName":"../ClickHouse/tests/queries/0_stateless/02312_parquet_orc_arrow_names_tuples.sql","errors":[]},{"query":"create table test_02312 (a Nested(b Nested(c UInt32))) engine=File(Parquet);","fileName":"../ClickHouse/tests/queries/0_stateless/02312_parquet_orc_arrow_names_tuples.sql","errors":[]},{"query":"create table test_02312 (a Nested(b Nested(c UInt32))) engine=File(Arrow);","fileName":"../ClickHouse/tests/queries/0_stateless/02312_parquet_orc_arrow_names_tuples.sql","errors":[]},{"query":"create table test_02312 (a Nested(b Nested(c UInt32))) engine=File(ORC);","fileName":"../ClickHouse/tests/queries/0_stateless/02312_parquet_orc_arrow_names_tuples.sql","errors":[]},{"query":"CREATE TABLE bug_36995( \\`time\\` DateTime,\n\\`product\\` String)\nENGINE = MergeTree\nORDER BY time AS\nSELECT '2022-01-01 00:00:00','1';","fileName":"../ClickHouse/tests/queries/0_stateless/02312_is_not_null_prewhere.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE bug_36995( \\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"create table test_zkinsert ( \tname String,\n\tpath String,\n\tvalue String\n) ENGINE Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02311_system_zookeeper_insert.sql","errors":[]},{"query":"CREATE TABLE dictionary_source_table (\nkey UInt64,\nstart UInt64,\nend UInt64,\nvalue String\n) Engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02311_range_hashed_dictionary_range_cast.sql","errors":[]},{"query":"CREATE DICTIONARY range_hashed_dictionary (\nkey UInt64,\nstart UInt64,\nend UInt64,\nvalue String\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE 'dictionary_source_table'))\nLAYOUT(RANGE_HASHED())\nRANGE(MIN start MAX end)\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02311_range_hashed_dictionary_range_cast.sql","errors":[]},{"query":"create table test_02311 (x UInt32) engine=File(UnknownFormat); -- {serverError UNKNOWN_FORMAT} create table test_02311 (x UInt32) engine=URL('http://some/url', UnknownFormat); -- {serverError UNKNOWN_FORMAT}\ncreate table test_02311 (x UInt32) engine=S3('http://host:2020/test/data', UnknownFormat); -- {serverError UNKNOWN_FORMAT}\ncreate table test_02311 (x UInt32) engine=HDFS('http://hdfs:9000/data', UnknownFormat); -- {serverError UNKNOWN_FORMAT}\n","fileName":"../ClickHouse/tests/queries/0_stateless/02311_create_table_with_unknown_format.sql","errors":[]},{"query":"create table id_val(id Int32, val Array(Int32)) engine Join(ANY, LEFT, id) settings join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02307_join_get_array_null.sql","errors":[]},{"query":"CREATE TABLE t_parts_profile_events (a UInt32) ENGINE = MergeTree ORDER BY tuple()\nSETTINGS min_rows_for_wide_part = 10, min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02306_part_types_profile_events.sql","errors":[]},{"query":"create table test_02302 (a UInt64) engine = S3(s3_conn, filename='test_02302_{_partition_id}', format=Parquet) partition by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02302_s3_file_pruning.sql","errors":[]},{"query":"create table test_02302 (a UInt64) engine = S3(s3_conn, filename='test_02302.2', format=Parquet);","fileName":"../ClickHouse/tests/queries/0_stateless/02302_s3_file_pruning.sql","errors":[]},{"query":"create table test_02302 (a UInt64) engine = S3(s3_conn, filename='test_02302.1', format=Parquet);","fileName":"../ClickHouse/tests/queries/0_stateless/02302_s3_file_pruning.sql","errors":[]},{"query":"create table test_02302 (a UInt64) engine = S3(s3_conn, filename='test_02302', format=Parquet);","fileName":"../ClickHouse/tests/queries/0_stateless/02302_s3_file_pruning.sql","errors":[]},{"query":"create table test_agg_proj_02302 (x Int32, y Int32, PROJECTION x_plus_y (select sum(x - y), argMax(x, y) group by x + y)) ENGINE = MergeTree order by tuple() settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02302_projections_GROUP_BY_ORDERY_BY_optimize_aggregation_in_order.sql","errors":[]},{"query":"CREATE TABLE lc_nullable_string(\\`c1\\` LowCardinality(Nullable(String)) DEFAULT CAST(NULL, 'LowCardinality(Nullable(String))'))  ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02302_lc_nullable_string_insert_as_number.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE lc_nullable_string(\\'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE null_before (id INT NULL) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_column_decl_null_before_defaul_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_before (id INT NULL'","startColumn":33,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE null_before (id INT NOT NULL) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_column_decl_null_before_defaul_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_before (id INT NOT'","startColumn":33,"startLine":1,"endColumn":36,"endLine":1}]},{"query":"CREATE TABLE null_before (id INT NULL DEFAULT 1) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_column_decl_null_before_defaul_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_before (id INT NULL'","startColumn":33,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE null_before (id INT NOT NULL DEFAULT 1) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_column_decl_null_before_defaul_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_before (id INT NOT'","startColumn":33,"startLine":1,"endColumn":36,"endLine":1}]},{"query":"CREATE TABLE null_before (id INT DEFAULT 1 NULL) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_column_decl_null_before_defaul_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_before (id INT DEFAULT 1 NULL'","startColumn":43,"startLine":1,"endColumn":47,"endLine":1}]},{"query":"CREATE TABLE null_before (id INT DEFAULT 1 NOT NULL) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_column_decl_null_before_defaul_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_before (id INT DEFAULT 1 NOT NULL'","startColumn":47,"startLine":1,"endColumn":51,"endLine":1}]},{"query":"CREATE TABLE null_before (id NULL DEFAULT 1) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_column_decl_null_before_defaul_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_before (id NULL'","startColumn":29,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE null_before (id NOT NULL DEFAULT 1) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_column_decl_null_before_defaul_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_before (id NOT NULL'","startColumn":33,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE null_before (id DEFAULT 1 NULL) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_column_decl_null_before_defaul_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_before (id DEFAULT 1 NULL'","startColumn":39,"startLine":1,"endColumn":43,"endLine":1}]},{"query":"CREATE TABLE null_before (id DEFAULT 1 NOT NULL) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_column_decl_null_before_defaul_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_before (id DEFAULT 1 NOT NULL'","startColumn":43,"startLine":1,"endColumn":47,"endLine":1}]},{"query":"CREATE TABLE null_before (id INT NOT NULL) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_column_decl_null_before_defaul_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_before (id INT NOT'","startColumn":33,"startLine":1,"endColumn":36,"endLine":1}]},{"query":"CREATE TABLE null_before (id INT NOT NULL) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_column_decl_null_before_defaul_value.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE null_before (id INT NOT'","startColumn":33,"startLine":1,"endColumn":36,"endLine":1}]},{"query":"CREATE TABLE e ( a UInt64, t DateTime ) ENGINE = MergeTree PARTITION BY toDate(t) ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02302_clash_const_aggegate_join.sql","errors":[]},{"query":"CREATE TABLE t_ttl_non_deterministic(A Int64) ENGINE = MergeTree ORDER BY A TTL now() + toIntervalMonth(1); -- {serverError BAD_ARGUMENTS}\nCREATE TABLE t_ttl_non_deterministic(A Int64)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/ttl1', '1') ORDER BY A TTL now() + toIntervalMonth(1); -- {serverError BAD_ARGUMENTS}\nCREATE TABLE t_ttl_non_deterministic(A Int64) ENGINE = MergeTree ORDER BY A;","fileName":"../ClickHouse/tests/queries/0_stateless/02296_ttl_non_deterministic.sql","errors":[]},{"query":"CREATE TABLE t_ttl_non_deterministic(A Int64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/ttl2', '1') ORDER BY A;","fileName":"../ClickHouse/tests/queries/0_stateless/02296_ttl_non_deterministic.sql","errors":[]},{"query":"CREATE TABLE t_ttl_non_deterministic(A Int64, B Int64 TTL now() + toIntervalMonth(1)) ENGINE = MergeTree ORDER BY A; -- {serverError BAD_ARGUMENTS}\nCREATE TABLE t_ttl_non_deterministic(A Int64, B Int64 TTL now() + toIntervalMonth(1))\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/ttl3', '1') ORDER BY A; -- {serverError BAD_ARGUMENTS}\nCREATE TABLE t_ttl_non_deterministic(A Int64, B Int64) ENGINE = MergeTree ORDER BY A;","fileName":"../ClickHouse/tests/queries/0_stateless/02296_ttl_non_deterministic.sql","errors":[]},{"query":"CREATE TABLE t_ttl_non_deterministic(A Int64, B Int64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/ttl4', '1') ORDER BY A;","fileName":"../ClickHouse/tests/queries/0_stateless/02296_ttl_non_deterministic.sql","errors":[]},{"query":"create table data_02295 ( b Int64,\na Int64,\ngrp_aggreg AggregateFunction(groupArrayArray, Array(UInt64))\n) engine = MergeTree() order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02295_GROUP_BY_AggregateFunction.sql","errors":[]},{"query":"create table non_const_needle (id UInt32, haystack String, needle String)\nengine = MergeTree()\norder by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02294_stringsearch_with_nonconst_needle.sql","errors":[]},{"query":"create table data_02294 (a Int64, b Int64, grp_aggreg AggregateFunction(groupArrayArray, Array(UInt64)), grp_simple SimpleAggregateFunction(groupArrayArray, Array(UInt64))) engine = MergeTree() order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02294_optimize_aggregation_in_order_prefix_Array_functions.sql","errors":[]},{"query":"CREATE SETTINGS PROFILE 02294_profile1 SETTINGS timeout_before_checking_execution_speed = 3 TO default;","fileName":"../ClickHouse/tests/queries/0_stateless/02294_fp_seconds_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE SETTINGS'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE SETTINGS PROFILE 02294_profile2 SETTINGS max_execution_time = 0.5 TO default;","fileName":"../ClickHouse/tests/queries/0_stateless/02294_fp_seconds_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE SETTINGS'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE test_hierarchy_source_table (\nid UInt64,\nparent_id UInt64\n) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02294_dictionaries_hierarchical_index.sql","errors":[]},{"query":"CREATE DICTIONARY hierarchy_flat_dictionary_index (\nid UInt64,\nparent_id UInt64 BIDIRECTIONAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'test_hierarchy_source_table'))\nLAYOUT(FLAT())\nLIFETIME(0); -- {serverError BAD_ARGUMENTS }\nDROP DICTIONARY IF EXISTS hierarchy_flat_dictionary_index;","fileName":"../ClickHouse/tests/queries/0_stateless/02294_dictionaries_hierarchical_index.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY hierarchy_flat_dictionary_index (\\nid UInt64,\\nparent_id UInt64 BIDIRECTIONAL'","startColumn":17,"startLine":3,"endColumn":30,"endLine":3}]},{"query":"CREATE DICTIONARY hierarchy_flat_dictionary_index (\nid UInt64,\nparent_id UInt64 HIERARCHICAL BIDIRECTIONAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'test_hierarchy_source_table'))\nLAYOUT(FLAT())\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02294_dictionaries_hierarchical_index.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY hierarchy_flat_dictionary_index (\\nid UInt64,\\nparent_id UInt64 HIERARCHICAL BIDIRECTIONAL'","startColumn":30,"startLine":3,"endColumn":43,"endLine":3}]},{"query":"CREATE DICTIONARY hierarchy_hashed_dictionary_index (\nid UInt64,\nparent_id UInt64 HIERARCHICAL BIDIRECTIONAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'test_hierarchy_source_table'))\nLAYOUT(FLAT())\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02294_dictionaries_hierarchical_index.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY hierarchy_hashed_dictionary_index (\\nid UInt64,\\nparent_id UInt64 HIERARCHICAL BIDIRECTIONAL'","startColumn":30,"startLine":3,"endColumn":43,"endLine":3}]},{"query":"CREATE DICTIONARY hierarchy_hashed_array_dictionary_index (\nid UInt64,\nparent_id UInt64 HIERARCHICAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'test_hierarchy_source_table'))\nLAYOUT(HASHED_ARRAY())\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02294_dictionaries_hierarchical_index.sql","errors":[]},{"query":"create table data_02293 (a Int64, grp_aggreg AggregateFunction(groupArrayArray, Array(UInt64)), grp_simple SimpleAggregateFunction(groupArrayArray, Array(UInt64))) engine = MergeTree() order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02293_optimize_aggregation_in_order_Array_functions.sql","errors":[]},{"query":"CREATE TABLE tab (col FixedString(2)) engine = MergeTree() ORDER BY col;","fileName":"../ClickHouse/tests/queries/0_stateless/02293_ilike_on_fixed_strings.sql","errors":[]},{"query":"CREATE TABLE h3_indexes (id int, start String, end String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02293_h3_line.sql","errors":[]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64, k UInt16) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02293_h3_hex_ring.sql","errors":[]},{"query":"CREATE TABLE h3_indexes (id int, start String, end String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02293_h3_distance.sql","errors":[]},{"query":"CREATE TABLE ignore_auto_increment ( id int AUTO_INCREMENT\n) ENGINE=MergeTree() ORDER BY tuple(); -- {serverError SYNTAX_ERROR}\nselect 'enable AUTO_INCREMENT compatibility mode';","fileName":"../ClickHouse/tests/queries/0_stateless/02293_compatibility_ignore_auto_increment_in_create_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ignore_auto_increment ( id int AUTO_INCREMENT'","startColumn":44,"startLine":1,"endColumn":58,"endLine":1}]},{"query":"CREATE TABLE ignore_auto_increment ( id int AUTO_INCREMENT\n) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02293_compatibility_ignore_auto_increment_in_create_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ignore_auto_increment ( id int AUTO_INCREMENT'","startColumn":44,"startLine":1,"endColumn":58,"endLine":1}]},{"query":"CREATE TABLE ignore_auto_increment ( id AUTO_INCREMENT\n) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02293_compatibility_ignore_auto_increment_in_create_table.sql","errors":[]},{"query":"CREATE TABLE ignore_auto_increment ( id int AUTO_INCREMENT, di AUTO_INCREMENT, s String AUTO_INCREMENT\n) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02293_compatibility_ignore_auto_increment_in_create_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ignore_auto_increment ( id int AUTO_INCREMENT'","startColumn":44,"startLine":1,"endColumn":58,"endLine":1}]},{"query":"CREATE TABLE ignore_auto_increment ( di DEFAULT 1, id int AUTO_INCREMENT, s String EPHEMERAL\n) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02293_compatibility_ignore_auto_increment_in_create_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ignore_auto_increment ( di DEFAULT 1, id int AUTO_INCREMENT'","startColumn":58,"startLine":1,"endColumn":72,"endLine":1}]},{"query":"CREATE TABLE ignore_auto_increment (id int DEFAULT 1 AUTO_INCREMENT) ENGINE=MergeTree() ORDER BY tuple(); -- {clientError SYNTAX_ERROR} select 'create table failed, column -type +DEFAULT +AUTO_INCREMENT';","fileName":"../ClickHouse/tests/queries/0_stateless/02293_compatibility_ignore_auto_increment_in_create_table.sql","errors":[]},{"query":"CREATE TABLE ignore_auto_increment (id int DEFAULT 1 AUTO_INCREMENT) ENGINE=MergeTree() ORDER BY tuple(); -- {clientError SYNTAX_ERROR} select 'create table failed, column +type +AUTO_INCREMENT +DEFAULT';","fileName":"../ClickHouse/tests/queries/0_stateless/02293_compatibility_ignore_auto_increment_in_create_table.sql","errors":[]},{"query":"CREATE TABLE ignore_auto_increment (id int AUTO_INCREMENT DEFAULT 1) ENGINE=MergeTree() ORDER BY tuple(); -- {clientError SYNTAX_ERROR} select 'create table failed, column -type +AUTO_INCREMENT +DEFAULT';","fileName":"../ClickHouse/tests/queries/0_stateless/02293_compatibility_ignore_auto_increment_in_create_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ignore_auto_increment (id int AUTO_INCREMENT'","startColumn":43,"startLine":1,"endColumn":57,"endLine":1}]},{"query":"CREATE TABLE ignore_auto_increment (id int AUTO_INCREMENT DEFAULT 1) ENGINE=MergeTree() ORDER BY tuple(); -- {clientError SYNTAX_ERROR} DROP TABLE IF EXISTS ignore_auto_increment SYNC;","fileName":"../ClickHouse/tests/queries/0_stateless/02293_compatibility_ignore_auto_increment_in_create_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ignore_auto_increment (id int AUTO_INCREMENT'","startColumn":43,"startLine":1,"endColumn":57,"endLine":1}]},{"query":"CREATE TABLE t_nested_detach (n Nested(u UInt32, s String)) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02292_nested_not_flattened_detach.sql","errors":[]},{"query":"create function foo as x -- { serverError UNSUPPORTED_METHOD } ","fileName":"../ClickHouse/tests/queries/0_stateless/02292_create_function_validate.sql","errors":[{"message":"no viable alternative at input 'create function'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE test_local (text String, text2 String) ENGINE = MergeTree() ORDER BY text;","fileName":"../ClickHouse/tests/queries/0_stateless/02291_join_const_literal_36279.sql","errors":[]},{"query":"CREATE TABLE test_distributed (text String, text2 String) ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_local);","fileName":"../ClickHouse/tests/queries/0_stateless/02291_join_const_literal_36279.sql","errors":[]},{"query":"CREATE TABLE user_local ( id Int64, name String, age Int32 ) ENGINE = MergeTree ORDER BY name;","fileName":"../ClickHouse/tests/queries/0_stateless/02291_join_const_literal_36279.sql","errors":[]},{"query":"CREATE TABLE user_all ( id Int64, name String, age Int32 ) ENGINE = Distributed('test_shard_localhost', currentDatabase(), user_local, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/02291_join_const_literal_36279.sql","errors":[]},{"query":"CREATE TABLE event ( id Int64, user_id Int64, content String, created_time DateTime ) ENGINE = MergeTree ORDER BY user_id;","fileName":"../ClickHouse/tests/queries/0_stateless/02291_join_const_literal_36279.sql","errors":[]},{"query":"CREATE TABLE test_dictionary_source_table (\nid UInt64,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02291_dictionary_scalar_subquery_reload.sql","errors":[]},{"query":"CREATE VIEW test_dictionary_view (\nid UInt64,\nvalue String\n) AS SELECT id, value FROM test_dictionary_source_table WHERE id = (SELECT max(id) FROM test_dictionary_source_table);","fileName":"../ClickHouse/tests/queries/0_stateless/02291_dictionary_scalar_subquery_reload.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'test_dictionary_view'))\nLIFETIME(MIN 0 MAX 1)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/02291_dictionary_scalar_subquery_reload.sql","errors":[]},{"query":"CREATE TABLE t_object_convert(id UInt64, data Object(Nullable('JSON'))) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02287_type_object_convert.sql","errors":[]},{"query":"CREATE TABLE t_object_convert2(id UInt64, data Object('JSON')) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02287_type_object_convert.sql","errors":[]},{"query":"CREATE TABLE test(a UInt8, b String EPHEMERAL) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02287_ephemeral_format_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test(a UInt8, b String EPHEMERAL'","startColumn":36,"startLine":1,"endColumn":45,"endLine":1}]},{"query":"CREATE TABLE test(a UInt8, b EPHEMERAL String) Engine=Memory(); -- { serverError UNKNOWN_IDENTIFIER } CREATE TABLE test(a UInt8, b EPHEMERAL 'a' String) Engine=Memory(); -- { clientError SYNTAX_ERROR }\nCREATE TABLE test(a UInt8, b String EPHEMERAL test) Engine=Memory(); -- { serverError UNKNOWN_IDENTIFIER }\nCREATE TABLE test(a UInt8, b String EPHEMERAL 1+2) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02287_ephemeral_format_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test(a UInt8, b EPHEMERAL String'","startColumn":39,"startLine":1,"endColumn":45,"endLine":1}]},{"query":"CREATE TABLE t_vertical_merges (\na   Nullable(String),\nb   Int8\n)\nENGINE = MergeTree\nORDER BY tuple()\nsettings\nvertical_merge_algorithm_min_columns_to_activate=1,\nvertical_merge_algorithm_min_rows_to_activate=1,\nmin_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02286_vertical_merges_missed_column.sql","errors":[]},{"query":"CREATE TABLE t_vertical_merges (\na   Array(Int16),\nb   Int8\n)\nENGINE = MergeTree\nORDER BY tuple()\nsettings\nvertical_merge_algorithm_min_columns_to_activate=1,\nvertical_merge_algorithm_min_rows_to_activate=1,\nmin_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02286_vertical_merges_missed_column.sql","errors":[]},{"query":"CREATE TABLE t_tuple_numeric (t Tuple(\\`1\\` Tuple(\\`2\\` Int, \\`3\\` Int), \\`4\\` Int)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02286_tuple_numeric_identifier.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_tuple_numeric (t Tuple(\\'","startColumn":38,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE t_tuple_numeric (t Tuple(Tuple(Int, Int), Int)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02286_tuple_numeric_identifier.sql","errors":[]},{"query":"CREATE TABLE t_tuple_numeric (t Object('json')) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02286_tuple_numeric_identifier.sql","errors":[]},{"query":"CREATE TABLE issue32107(A Int64, s_quantiles AggregateFunction(quantilesTDigest(0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99), Float64)) ENGINE = AggregatingMergeTree ORDER BY A;","fileName":"../ClickHouse/tests/queries/0_stateless/02286_quantile_tdigest_infinity.sql","errors":[]},{"query":"CREATE TABLE vec1 (id UInt64, v Array(UInt8)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02283_array_norm.sql","errors":[]},{"query":"CREATE TABLE vec1f (id UInt64, v Array(Float32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02283_array_norm.sql","errors":[]},{"query":"CREATE TABLE vec1d (id UInt64, v Array(Float64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02283_array_norm.sql","errors":[]},{"query":"CREATE TABLE vec1 (id UInt64, v Array(UInt8)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02282_array_distance.sql","errors":[]},{"query":"CREATE TABLE vec2 (id UInt64, v Array(Int64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02282_array_distance.sql","errors":[]},{"query":"CREATE TABLE vec2f (id UInt64, v Array(Float32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02282_array_distance.sql","errors":[]},{"query":"CREATE TABLE vec2d (id UInt64, v Array(Float64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02282_array_distance.sql","errors":[]},{"query":"CREATE TABLE table_for_alter ( id UInt64,\nData String\n) ENGINE = MergeTree() ORDER BY id SETTINGS parts_to_throw_insert = 1, parts_to_delay_insert = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02280_add_query_level_settings.sql","errors":[]},{"query":"CREATE TABLE t1 (key UInt32, val UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02276_full_sort_join_unsupported.sql","errors":[]},{"query":"CREATE TABLE t2 (key UInt32, val UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02276_full_sort_join_unsupported.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE 02271_temporary_table_show_rows_bytes (A Int64) Engine=Memory as SELECT * FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02271_temporary_table_show_rows_bytes.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE 02271'","startColumn":23,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE TABLE replace_partition_source (\nkey UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/source', '1')\nPARTITION BY key\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02271_replace_partition_many_tables.sql","errors":[]},{"query":"CREATE TABLE replace_partition_dest1 (\nkey UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest1', '1')\nPARTITION BY key\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02271_replace_partition_many_tables.sql","errors":[]},{"query":"CREATE TABLE replace_partition_dest1_2 (\nkey UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest1', '2')\nPARTITION BY key\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02271_replace_partition_many_tables.sql","errors":[]},{"query":"CREATE TABLE replace_partition_dest2 (\nkey UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest2', '1')\nPARTITION BY key\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02271_replace_partition_many_tables.sql","errors":[]},{"query":"CREATE TABLE replace_partition_dest2_2 (\nkey UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest2', '2')\nPARTITION BY key\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02271_replace_partition_many_tables.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t1_02271 (x INT(11));","fileName":"../ClickHouse/tests/queries/0_stateless/02271_int_sql_compatibility.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t2_02271 (x INT(11) DEFAULT 1);","fileName":"../ClickHouse/tests/queries/0_stateless/02271_int_sql_compatibility.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t3_02271 (x INT(11) UNSIGNED);","fileName":"../ClickHouse/tests/queries/0_stateless/02271_int_sql_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE t3_02271 (x INT(11) UNSIGNED'","startColumn":43,"startLine":1,"endColumn":51,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE t4_02271 (x INT(11) SIGNED);","fileName":"../ClickHouse/tests/queries/0_stateless/02271_int_sql_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE t4_02271 (x INT(11) SIGNED'","startColumn":43,"startLine":1,"endColumn":49,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE t5_02271 (x INT(11) SIGNED DEFAULT 1);","fileName":"../ClickHouse/tests/queries/0_stateless/02271_int_sql_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE t5_02271 (x INT(11) SIGNED'","startColumn":43,"startLine":1,"endColumn":49,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE t6_02271 (x INT());","fileName":"../ClickHouse/tests/queries/0_stateless/02271_int_sql_compatibility.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t7_02271 (x INT() DEFAULT 1);","fileName":"../ClickHouse/tests/queries/0_stateless/02271_int_sql_compatibility.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t8_02271 (x INT() UNSIGNED);","fileName":"../ClickHouse/tests/queries/0_stateless/02271_int_sql_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE t8_02271 (x INT() UNSIGNED'","startColumn":41,"startLine":1,"endColumn":49,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE t9_02271 (x INT() SIGNED);","fileName":"../ClickHouse/tests/queries/0_stateless/02271_int_sql_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE t9_02271 (x INT() SIGNED'","startColumn":41,"startLine":1,"endColumn":47,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE t10_02271 (x INT() SIGNED DEFAULT 1);","fileName":"../ClickHouse/tests/queries/0_stateless/02271_int_sql_compatibility.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE t10_02271 (x INT() SIGNED'","startColumn":42,"startLine":1,"endColumn":48,"endLine":1}]},{"query":"CREATE TABLE github_events (\n\\`file_time\\` DateTime,\n\\`event_type\\` Enum8('CommitCommentEvent' = 1, 'CreateEvent' = 2, 'DeleteEvent' = 3, 'ForkEvent' = 4, 'GollumEvent' = 5, 'IssueCommentEvent' = 6, 'IssuesEvent' = 7, 'MemberEvent' = 8, 'PublicEvent' = 9, 'PullRequestEvent' = 10, 'PullRequestReviewCommentEvent' = 11, 'PushEvent' = 12, 'ReleaseEvent' = 13, 'SponsorshipEvent' = 14, 'WatchEvent' = 15, 'GistEvent' = 16, 'FollowEvent' = 17, 'DownloadEvent' = 18, 'PullRequestReviewEvent' = 19, 'ForkApplyEvent' = 20, 'Event' = 21, 'TeamAddEvent' = 22),\n\\`actor_login\\` LowCardinality(String),\n\\`repo_name\\` LowCardinality(String),\n\\`created_at\\` DateTime,\n\\`updated_at\\` DateTime,\n\\`action\\` Enum8('none' = 0, 'created' = 1, 'added' = 2, 'edited' = 3, 'deleted' = 4, 'opened' = 5, 'closed' = 6, 'reopened' = 7, 'assigned' = 8, 'unassigned' = 9, 'labeled' = 10, 'unlabeled' = 11, 'review_requested' = 12, 'review_request_removed' = 13, 'synchronize' = 14, 'started' = 15, 'published' = 16, 'update' = 17, 'create' = 18, 'fork' = 19, 'merged' = 20),\n\\`comment_id\\` UInt64,\n\\`body\\` String,\n\\`path\\` String,\n\\`position\\` Int32,\n\\`line\\` Int32,\n\\`ref\\` LowCardinality(String),\n\\`ref_type\\` Enum8('none' = 0, 'branch' = 1, 'tag' = 2, 'repository' = 3, 'unknown' = 4),\n\\`creator_user_login\\` LowCardinality(String),\n\\`number\\` UInt32,\n\\`title\\` String,\n\\`labels\\` Array(LowCardinality(String)),\n\\`state\\` Enum8('none' = 0, 'open' = 1, 'closed' = 2),\n\\`locked\\` UInt8,\n\\`assignee\\` LowCardinality(String),\n\\`assignees\\` Array(LowCardinality(String)),\n\\`comments\\` UInt32,\n\\`author_association\\` Enum8('NONE' = 0, 'CONTRIBUTOR' = 1, 'OWNER' = 2, 'COLLABORATOR' = 3, 'MEMBER' = 4, 'MANNEQUIN' = 5),\n\\`closed_at\\` DateTime,\n\\`merged_at\\` DateTime,\n\\`merge_commit_sha\\` String,\n\\`requested_reviewers\\` Array(LowCardinality(String)),\n\\`requested_teams\\` Array(LowCardinality(String)),\n\\`head_ref\\` LowCardinality(String),\n\\`head_sha\\` String,\n\\`base_ref\\` LowCardinality(String),\n\\`base_sha\\` String,\n\\`merged\\` UInt8,\n\\`mergeable\\` UInt8,\n\\`rebaseable\\` UInt8,\n\\`mergeable_state\\` Enum8('unknown' = 0, 'dirty' = 1, 'clean' = 2, 'unstable' = 3, 'draft' = 4),\n\\`merged_by\\` LowCardinality(String),\n\\`review_comments\\` UInt32,\n\\`maintainer_can_modify\\` UInt8,\n\\`commits\\` UInt32,\n\\`additions\\` UInt32,\n\\`deletions\\` UInt32,\n\\`changed_files\\` UInt32,\n\\`diff_hunk\\` String,\n\\`original_position\\` UInt32,\n\\`commit_id\\` String,\n\\`original_commit_id\\` String,\n\\`push_size\\` UInt32,\n\\`push_distinct_size\\` UInt32,\n\\`member_login\\` LowCardinality(String),\n\\`release_tag_name\\` String,\n\\`release_name\\` String,\n\\`review_state\\` Enum8('none' = 0, 'approved' = 1, 'changes_requested' = 2, 'commented' = 3, 'dismissed' = 4, 'pending' = 5)\n)\nENGINE = MergeTree ORDER BY (event_type, repo_name, created_at);","fileName":"../ClickHouse/tests/queries/0_stateless/02271_fix_column_matcher_and_column_transformer.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE github_events (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE github_events__fuzz_0 (\\`file_time\\` Int64, \\`event_type\\` Enum8('CommitCommentEvent' = 1, 'CreateEvent' = 2, 'DeleteEvent' = 3, 'ForkEvent' = 4, 'GollumEvent' = 5, 'IssueCommentEvent' = 6, 'IssuesEvent' = 7, 'MemberEvent' = 8, 'PublicEvent' = 9, 'PullRequestEvent' = 10, 'PullRequestReviewCommentEvent' = 11, 'PushEvent' = 12, 'ReleaseEvent' = 13, 'SponsorshipEvent' = 14, 'WatchEvent' = 15, 'GistEvent' = 16, 'FollowEvent' = 17, 'DownloadEvent' = 18, 'PullRequestReviewEvent' = 19, 'ForkApplyEvent' = 20, 'Event' = 21, 'TeamAddEvent' = 22), \\`actor_login\\` LowCardinality(String), \\`repo_name\\` LowCardinality(Nullable(String)), \\`created_at\\` DateTime, \\`updated_at\\` DateTime, \\`action\\` Array(Enum8('none' = 0, 'created' = 1, 'added' = 2, 'edited' = 3, 'deleted' = 4, 'opened' = 5, 'closed' = 6, 'reopened' = 7, 'assigned' = 8, 'unassigned' = 9, 'labeled' = 10, 'unlabeled' = 11, 'review_requested' = 12, 'review_request_removed' = 13, 'synchronize' = 14, 'started' = 15, 'published' = 16, 'update' = 17, 'create' = 18, 'fork' = 19, 'merged' = 20)), \\`comment_id\\` UInt64, \\`body\\` String, \\`path\\` LowCardinality(String), \\`position\\` Int32, \\`line\\` Int32, \\`ref\\` String, \\`ref_type\\` Enum8('none' = 0, 'branch' = 1, 'tag' = 2, 'repository' = 3, 'unknown' = 4), \\`creator_user_login\\` Int16, \\`number\\` UInt32, \\`title\\` String, \\`labels\\` Array(Array(LowCardinality(String))), \\`state\\` Enum8('none' = 0, 'open' = 1, 'closed' = 2), \\`locked\\` UInt8, \\`assignee\\` Array(LowCardinality(String)), \\`assignees\\` Array(LowCardinality(String)), \\`comments\\` UInt32, \\`author_association\\` Array(Enum8('NONE' = 0, 'CONTRIBUTOR' = 1, 'OWNER' = 2, 'COLLABORATOR' = 3, 'MEMBER' = 4, 'MANNEQUIN' = 5)), \\`closed_at\\` UUID, \\`merged_at\\` DateTime, \\`merge_commit_sha\\` Nullable(String), \\`requested_reviewers\\` Array(LowCardinality(Int64)), \\`requested_teams\\` Array(String), \\`head_ref\\` String, \\`head_sha\\` String, \\`base_ref\\` String, \\`base_sha\\` String, \\`merged\\` Nullable(UInt8), \\`mergeable\\` Nullable(UInt8), \\`rebaseable\\` LowCardinality(UInt8), \\`mergeable_state\\` Array(Enum8('unknown' = 0, 'dirty' = 1, 'clean' = 2, 'unstable' = 3, 'draft' = 4)), \\`merged_by\\` LowCardinality(String), \\`review_comments\\` UInt32, \\`maintainer_can_modify\\` Nullable(UInt8), \\`commits\\` UInt32, \\`additions\\` Nullable(UInt32), \\`deletions\\` UInt32, \\`changed_files\\` UInt32, \\`diff_hunk\\` Nullable(String), \\`original_position\\` UInt32, \\`commit_id\\` String, \\`original_commit_id\\` String, \\`push_size\\` UInt32, \\`push_distinct_size\\` UInt32, \\`member_login\\` LowCardinality(String), \\`release_tag_name\\` LowCardinality(String), \\`release_name\\` String, \\`review_state\\` Int16) ENGINE = MergeTree ORDER BY (event_type, repo_name, created_at) settings allow_nullable_key=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02271_fix_column_matcher_and_column_transformer.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE github_events__fuzz_0 (\\'","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE t_02267_collation (x varchar(255) COLLATE utf8_unicode_ci NOT NULL) ENGINE = Memory; -- {serverError NOT_IMPLEMENTED} SET compatibility_ignore_collation_in_create_table=true;","fileName":"../ClickHouse/tests/queries/0_stateless/02269_create_table_with_collation.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_02267_collation (x varchar(255) COLLATE'","startColumn":47,"startLine":1,"endColumn":54,"endLine":1}]},{"query":"CREATE TABLE t_02267_collation (x varchar(255) COLLATE utf8_unicode_ci NOT NULL) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02269_create_table_with_collation.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_02267_collation (x varchar(255) COLLATE'","startColumn":47,"startLine":1,"endColumn":54,"endLine":1}]},{"query":"CREATE TABLE 02267_t (n1 UInt32, n2 UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02267_jsonlines_ndjson_format.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02267'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t (n UInt32) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02267_insert_empty_data.sql","errors":[]},{"query":"CREATE TABLE t_02267 (\na Array(String),\nb UInt32,\nc Array(String)\n)\nENGINE = MergeTree\nORDER BY b\nSETTINGS index_granularity = 500, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02267_empty_arrays_read_reverse.sql","errors":[]},{"query":"CREATE TABLE 02266_auto_add_nullable (\nval0 Int8 DEFAULT NULL,\nval1 Nullable(Int8) DEFAULT NULL,\nval2 UInt8 DEFAULT NUll,\nval3 String DEFAULT null,\nval4 LowCardinality(Int8) DEFAULT NULL,\nval5 LowCardinality(Nullable(Int8)) DEFAULT NULL\n)\nENGINE = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02266_auto_add_nullable.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02266'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DATABASE 02265_atomic_db ENGINE = Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/02265_rename_join_ordinary_to_atomic.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 02265'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE DATABASE 02265_ordinary_db ENGINE = Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/02265_rename_join_ordinary_to_atomic.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 02265'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 02265_ordinary_db.join_table ( \\`a\\` Int64 ) ENGINE = Join(\\`ALL\\`, LEFT, a);","fileName":"../ClickHouse/tests/queries/0_stateless/02265_rename_join_ordinary_to_atomic.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02265'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table per_table_ttl_02265 (key Int, date Date, value String) engine=MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/02265_per_table_ttl_mutation_on_change.sql","errors":[]},{"query":"create table ttl_02265    (date Date, key Int, value String TTL date + interval 1 month) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/ttl_02265', 'r1') order by key partition by date settings min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02265_column_ttl.sql","errors":[]},{"query":"create table ttl_02265_r2 (date Date, key Int, value String TTL date + interval 1 month) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/ttl_02265', 'r2') order by key partition by date settings min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02265_column_ttl.sql","errors":[]},{"query":"CREATE TABLE most_ordinary_mt (\nKey UInt64\n)\nENGINE = MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02252_reset_non_existing_setting.sql","errors":[]},{"query":"CREATE TABLE alter_enum_array( Key UInt64,\nValue Array(Enum8('Option1'=1, 'Option2'=2))\n)\nENGINE=MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02251_alter_enum_nested_struct.sql","errors":[]},{"query":"create table test_02250 (x Nullable(UInt32)) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02250_insert_select_from_file_schema_inference.sql","errors":[]},{"query":"CREATE TABLE t (a DateTime('UTC'), b String, c String, d String, e Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02249_parse_date_time_basic.sql","errors":[]},{"query":"create table test_02249 (x UInt32, y String) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02249_insert_select_from_input_schema_inference.sql","errors":[]},{"query":"CREATE TABLE t_flatten_tuple(t Tuple(t1 Nested(a UInt32, s String), b UInt32, t2 Tuple(k String, v UInt32))) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02246_flatten_tuple.sql","errors":[]},{"query":"CREATE TABLE t_flatten_object(data Object('json')) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02246_flatten_tuple.sql","errors":[]},{"query":"CREATE TABLE weird_partitions_02245(d DateTime, d1 DateTime default d - toIntervalHour(8), id Int64) Engine=MergeTree\nPARTITION BY (toYYYYMM(toDateTime(d)), ignore(d1))\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02245_weird_partitions_pruning.sql","errors":[]},{"query":"create table test_02245 (a UInt64) engine = S3(s3_conn, filename='test_02245', format=Parquet);","fileName":"../ClickHouse/tests/queries/0_stateless/02245_s3_virtual_columns.sql","errors":[]},{"query":"create table test_02245_2 (a UInt64, _path Int32) engine = S3(s3_conn, filename='test_02245_2', format=Parquet);","fileName":"../ClickHouse/tests/queries/0_stateless/02245_s3_virtual_columns.sql","errors":[]},{"query":"create table test_02245_s3_nested_parquet1(a Int64, b Tuple(a Int64, b String)) engine=S3(s3_conn, filename='test_02245_s3_nested_parquet1_{_partition_id}', format='Parquet') partition by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02245_s3_support_read_nested_column.sql","errors":[]},{"query":"create table test_02245_s3_nested_parquet2(a Int64, b Tuple(a Int64, b Tuple(c Int64, d String))) engine=S3(s3_conn, filename='test_02245_s3_nested_parquet2_{_partition_id}', format='Parquet') partition by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02245_s3_support_read_nested_column.sql","errors":[]},{"query":"create table test_02245_s3_nested_arrow1(a Int64, b Tuple(a Int64, b String)) engine=S3(s3_conn, filename='test_02245_s3_nested_arrow1_{_partition_id}', format='Arrow') partition by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02245_s3_support_read_nested_column.sql","errors":[]},{"query":"create table test_02245_s3_nested_arrow2(a Int64, b Tuple(a Int64, b Tuple(c Int64, d String))) engine=S3(s3_conn, filename='test_02245_s3_nested_arrow2_{_partition_id}', format='Arrow') partition by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02245_s3_support_read_nested_column.sql","errors":[]},{"query":"create table test_02245_s3_nested_orc1(a Int64, b Tuple(a Int64, b String)) engine=S3(s3_conn, filename='test_02245_s3_nested_orc1_{_partition_id}', format='ORC') partition by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02245_s3_support_read_nested_column.sql","errors":[]},{"query":"create table test_02245_s3_nested_orc2(a Int64, b Tuple(a Int64, b Tuple(c Int64, d String))) engine=S3(s3_conn, filename='test_02245_s3_nested_orc2_{_partition_id}', format='ORC') partition by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02245_s3_support_read_nested_column.sql","errors":[]},{"query":"CREATE TABLE with_nullable ( timestamp UInt32,\ncountry LowCardinality(Nullable(String)) ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02245_join_with_nullable_lowcardinality_crash.sql","errors":[]},{"query":"CREATE TABLE  without_nullable ( timestamp UInt32,\ncountry LowCardinality(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02245_join_with_nullable_lowcardinality_crash.sql","errors":[]},{"query":"create table url (i String) engine=URL('http://127.0.0.1:8123?query=select+12', 'RawBLOB', headers('X-ClickHouse-Format'='JSONEachRow'));","fileName":"../ClickHouse/tests/queries/0_stateless/02244_url_engine_headers_test.sql","errors":[]},{"query":"CREATE TABLE lc_table (\ncol LowCardinality(String)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02244_lowcardinality_hash_join.sql","errors":[]},{"query":"CREATE TABLE test_table_ipv4 (\nip String,\nipv4 IPv4\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02244_ip_address_invalid_insert.sql","errors":[]},{"query":"CREATE TABLE test_table_ipv4_materialized (\nip String,\nipv6 IPv4 MATERIALIZED toIPv4(ip)\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02244_ip_address_invalid_insert.sql","errors":[]},{"query":"CREATE TABLE test_table_ipv6 (\nip String,\nipv6 IPv6\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02244_ip_address_invalid_insert.sql","errors":[]},{"query":"CREATE TABLE test_table_ipv6_materialized (\nip String,\nipv6 IPv6 MATERIALIZED toIPv6(ip)\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02244_ip_address_invalid_insert.sql","errors":[]},{"query":"CREATE TABLE test_table (id UInt64, value IPv6) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02243_ipv6_long_parsing.sql","errors":[]},{"query":"CREATE TABLE test_table (id UInt64, value_ipv4 IPv4, value_ipv6 IPv6) ENGINE=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02243_in_ip_address.sql","errors":[]},{"query":"CREATE TABLE t_subcolumns_sizes (id UInt64, arr Array(UInt64), n Nullable(String), d Object('json')) ENGINE = MergeTree ORDER BY id\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02242_subcolumns_sizes.sql","errors":[]},{"query":"CREATE TABLE rdb (key UInt32, value Array(UInt32), value2 String) ENGINE = EmbeddedRocksDB PRIMARY KEY (key);","fileName":"../ClickHouse/tests/queries/0_stateless/02242_join_rocksdb.sql","errors":[]},{"query":"CREATE TABLE t1 (k UInt32) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02242_join_rocksdb.sql","errors":[]},{"query":"CREATE TABLE t2 (k UInt16) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02242_join_rocksdb.sql","errors":[]},{"query":"CREATE TABLE test (key UInt32, value String) Engine=MergeTree()\nORDER BY key\nSETTINGS min_bytes_for_wide_part = 10485760,\ncompress_marks=false,\ncompress_primary_key=false,\ndisk = disk(\ntype = cache,\nmax_size = '128Mi',\npath = 'filesystem_query_cache/',\ncache_on_write_operations= 1,\nenable_filesystem_query_cache_limit = 1,\ndelayed_cleanup_interval_ms = 100,\ndisk = 's3_disk');","fileName":"../ClickHouse/tests/queries/0_stateless/02240_filesystem_query_cache.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (key UInt32, value String) Engine=MergeTree()\\nORDER BY key\\nSETTINGS min_bytes_for_wide_part = 10485760,\\ncompress_marks=false'","startColumn":15,"startLine":4,"endColumn":20,"endLine":4}]},{"query":"CREATE TABLE test (key UInt32, value String) Engine=MergeTree()\nORDER BY key\nSETTINGS min_bytes_for_wide_part = 10485760,\ncompress_marks=false,\ncompress_primary_key=false,\ndisk = disk(\ntype = cache,\nmax_size = '128Mi',\npath = 'filesystem_cache_bypass_cache_threshold/',\nenable_bypass_cache_with_threshold = 1,\nbypass_cache_threshold = 100,\ndelayed_cleanup_interval_ms = 100,\ndisk = 's3_disk');","fileName":"../ClickHouse/tests/queries/0_stateless/02240_filesystem_cache_bypass_cache_threshold.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (key UInt32, value String) Engine=MergeTree()\\nORDER BY key\\nSETTINGS min_bytes_for_wide_part = 10485760,\\ncompress_marks=false'","startColumn":15,"startLine":4,"endColumn":20,"endLine":4}]},{"query":"CREATE TABLE t_sparse_02235 (a UInt8) ENGINE = MergeTree ORDER BY tuple() SETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02235_check_table_sparse_serialization.sql","errors":[]},{"query":"CREATE TABLE t_1 (\n\\`order_0\\` UInt64,\n\\`ordinary_1\\` UInt32,\n\\`p_time\\` Date,\n\\`computed\\` ALIAS 'computed_' || cast(\\`p_time\\` AS String),\n\\`granule\\` MATERIALIZED cast(\\`order_0\\` / 0x2000 AS UInt64) % 3,\nINDEX \\`index_granule\\` \\`granule\\` TYPE minmax GRANULARITY 1\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMM(p_time)\nORDER BY order_0\nSETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02235_add_part_offset_virtual_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_random_1 (\n\\`ordinary_1\\` UInt32\n)\nENGINE = GenerateRandom(1, 5, 3);","fileName":"../ClickHouse/tests/queries/0_stateless/02235_add_part_offset_virtual_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_random_1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table dict_table (\n\\`strField\\` String,\n\\`dateField\\` Date,\n\\`float64Field\\` Float64\n) Engine Log();","fileName":"../ClickHouse/tests/queries/0_stateless/02234_column_function_short_circuit.sql","errors":[{"message":"no viable alternative at input 'create table dict_table (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create dictionary dict (\n\\`strField\\` String,\n\\`dateField\\` Date,\n\\`float64Field\\` Float64\n)\nPRIMARY KEY strField, dateField\nSOURCE (CLICKHOUSE(TABLE 'dict_table'))\nLIFETIME(MIN 300 MAX 360)\nLAYOUT (COMPLEX_KEY_HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/02234_column_function_short_circuit.sql","errors":[{"message":"no viable alternative at input 'create dictionary dict (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table data_table (\n\\`float64Field1\\` Float64,\n\\`float64Field2\\` Float64,\n\\`strField1\\` String,\n\\`strField2\\` String\n) Engine Log();","fileName":"../ClickHouse/tests/queries/0_stateless/02234_column_function_short_circuit.sql","errors":[{"message":"no viable alternative at input 'create table data_table (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE ev (a Int32, b Int32) Engine=MergeTree() ORDER BY a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02233_set_enable_with_statement_cte_perf.sql","errors":[]},{"query":"CREATE TABLE idx (a Int32) Engine=MergeTree() ORDER BY a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02233_set_enable_with_statement_cte_perf.sql","errors":[]},{"query":"create table data_02233 (partition Int, parent_key Int, child_key Int, value Int) engine=MergeTree() partition by partition order by parent_key;","fileName":"../ClickHouse/tests/queries/0_stateless/02233_optimize_aggregation_in_order_prefix_with_merge.sql","errors":[]},{"query":"create table data_02233 (parent_key Int, child_key Int, value Int) engine=MergeTree() order by parent_key;","fileName":"../ClickHouse/tests/queries/0_stateless/02233_optimize_aggregation_in_order_prefix.sql","errors":[]},{"query":"CREATE TABLE t_inter_02233 (n Int32) ENGINE = MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/02233_interpolate_1.sql","errors":[]},{"query":"CREATE TABLE lower_test ( a Int32,\nb String\n) ENGINE=MergeTree\nPARTITION BY b\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02232_partition_pruner_single_point.sql","errors":[]},{"query":"CREATE TABLE broken (time UInt64) ENGINE = MergeTree PARTITION BY toYYYYMMDD(toDate(time / 1000)) ORDER BY time;","fileName":"../ClickHouse/tests/queries/0_stateless/02232_partition_pruner_mixed_constant_type.sql","errors":[]},{"query":"CREATE TABLE t_functions_to_subcolumns_alias (id UInt64, t Tuple(UInt64, String), m Map(String, UInt64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02232_functions_to_subcolumns_alias.sql","errors":[]},{"query":"CREATE TABLE hierarchy_source_table (id UInt64, parent_id UInt64) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02231_hierarchical_dictionaries_constant.sql","errors":[]},{"query":"CREATE DICTIONARY hierarchy_flat_dictionary (\nid UInt64,\nparent_id UInt64 HIERARCHICAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'hierarchy_source_table'))\nLAYOUT(FLAT())\nLIFETIME(MIN 1 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/02231_hierarchical_dictionaries_constant.sql","errors":[]},{"query":"create table buffer_02231 (\nkey Int,\nv1 AggregateFunction(groupArray, String)\n) engine = Buffer(currentDatabase(), 'out_02231',\n1\n);","fileName":"../ClickHouse/tests/queries/0_stateless/02231_buffer_aggregate_states_leak.sql","errors":[]},{"query":"create table out_02231 as buffer_02231 engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/02231_buffer_aggregate_states_leak.sql","errors":[]},{"query":"create table in_02231 (number Int) engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/02231_buffer_aggregate_states_leak.sql","errors":[]},{"query":"create materialized view mv_02231 to buffer_02231 as select number as key,\ngroupArrayState(toString(number)) as v1\nfrom in_02231\ngroup by key;","fileName":"../ClickHouse/tests/queries/0_stateless/02231_buffer_aggregate_states_leak.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_sizing_pk( key UInt64,\nvalue UInt64,\nINDEX key_bf key TYPE bloom_filter(0.01) GRANULARITY 2147483648\n) ENGINE=MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02231_bloom_filter_sizing.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_sizing_sec( key1 UInt64,\nkey2 UInt64,\nvalue UInt64,\nINDEX key_bf key2 TYPE bloom_filter(0.01) GRANULARITY 2147483648\n) ENGINE=MergeTree ORDER BY key1;","fileName":"../ClickHouse/tests/queries/0_stateless/02231_bloom_filter_sizing.sql","errors":[]},{"query":"create table data_02230_ttl (date Date, key Int) Engine=MergeTree() order by key TTL date + 14;","fileName":"../ClickHouse/tests/queries/0_stateless/02230_create_table_as_ignore_ttl.sql","errors":[]},{"query":"create table null_02230_ttl engine=Null() as data_02230_ttl;","fileName":"../ClickHouse/tests/queries/0_stateless/02230_create_table_as_ignore_ttl.sql","errors":[{"message":"no viable alternative at input 'create table null_02230_ttl engine=Null() as data_02230_ttl'","startColumn":45,"startLine":1,"endColumn":59,"endLine":1}]},{"query":"create table data_02230_column_ttl (date Date, value Int TTL date + 7, key Int) Engine=MergeTree() order by key TTL date + 14;","fileName":"../ClickHouse/tests/queries/0_stateless/02230_create_table_as_ignore_ttl.sql","errors":[]},{"query":"create table null_02230_column_ttl engine=Null() as data_02230_column_ttl;","fileName":"../ClickHouse/tests/queries/0_stateless/02230_create_table_as_ignore_ttl.sql","errors":[{"message":"no viable alternative at input 'create table null_02230_column_ttl engine=Null() as data_02230_column_ttl'","startColumn":52,"startLine":1,"endColumn":73,"endLine":1}]},{"query":"create table data_02228 (key1 UInt32, sign Int8, s UInt64) engine = CollapsingMergeTree(sign) order by (key1) partition by key1 % 100;","fileName":"../ClickHouse/tests/queries/0_stateless/02228_merge_tree_insert_memory_usage.sql","errors":[]},{"query":"create table data_rep_02228 (key1 UInt32, sign Int8, s UInt64) engine = ReplicatedCollapsingMergeTree('/clickhouse/{database}', 'r1', sign) order by (key1) partition by key1 % 100;","fileName":"../ClickHouse/tests/queries/0_stateless/02228_merge_tree_insert_memory_usage.sql","errors":[]},{"query":"CREATE TABLE bf_tokenbf_lowcard_test (\nrow_id UInt32,\nlc LowCardinality(String),\nlc_fixed LowCardinality(FixedString(8)),\nINDEX lc_bf_tokenbf lc TYPE tokenbf_v1(256,2,0) GRANULARITY 1,\nINDEX lc_fixed_bf_tokenbf lc_fixed TYPE tokenbf_v1(256,2,0) GRANULARITY 1\n) Engine=MergeTree() ORDER BY row_id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02226_low_cardinality_text_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bf_ngram_lowcard_test (\nrow_id UInt32,\nlc LowCardinality(String),\nlc_fixed LowCardinality(FixedString(8)),\nINDEX lc_ngram lc TYPE ngrambf_v1(4,256,2,0) GRANULARITY 1,\nINDEX lc_fixed_ngram lc_fixed TYPE ngrambf_v1(4,256,2,0) GRANULARITY 1\n) Engine=MergeTree() ORDER BY row_id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02226_low_cardinality_text_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE calendar ( \\`year\\` Int64, \\`month\\` Int64 ) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02226_in_untuple_issue_34810.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE calendar ( \\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE events32 ( \\`year\\` Int32, \\`month\\` Int32 ) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02226_in_untuple_issue_34810.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE events32 ( \\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE t_async_insert_table_function (id UInt32, s String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02226_async_insert_table_function.sql","errors":[]},{"query":"create table dst_02224 (key Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02224_parallel_distributed_insert_select_cluster.sql","errors":[]},{"query":"create table src_02224 (key Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02224_parallel_distributed_insert_select_cluster.sql","errors":[]},{"query":"create table test (x UInt32, y String, d Date) engine=Memory() as select number as x, toString(number) as y, toDate(number) as d from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/02223_insert_select_schema_inference.sql","errors":[]},{"query":"CREATE TABLE data_02222 engine=MergeTree() ORDER BY dummy AS SELECT * FROM system.one;","fileName":"../ClickHouse/tests/queries/0_stateless/02222_allow_experimental_projection_optimization__enable_global_with_statement.sql","errors":[]},{"query":"CREATE TABLE table1 (lat1 Float64, lon1 Float64, lat2 Float64, lon2 Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02212_h3_point_dist.sql","errors":[]},{"query":"CREATE TABLE table1 (resolution UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02212_h3_get_pentagon_indexes.sql","errors":[]},{"query":"CREATE TABLE t_ttl_move_if_exists (d DateTime, a UInt32) ENGINE = MergeTree ORDER BY tuple()\nTTL d TO DISK IF EXISTS 'non_existing_disk';","fileName":"../ClickHouse/tests/queries/0_stateless/02207_ttl_move_if_exists.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_ttl_move_if_exists (d DateTime, a UInt32) ENGINE = MergeTree ORDER BY tuple()\\nTTL d TO DISK IF'","startColumn":14,"startLine":2,"endColumn":16,"endLine":2}]},{"query":"CREATE TABLE t_key_condition_float (a Float32) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02207_key_condition_floats.sql","errors":[]},{"query":"CREATE TABLE t_key_condition_float (a Float64) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02207_key_condition_floats.sql","errors":[]},{"query":"CREATE TABLE t_key_condition_float (a UInt64) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02207_key_condition_floats.sql","errors":[]},{"query":"CREATE TABLE minimum_sample_size_continuos (baseline UInt64, sigma UInt64) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02206_minimum_sample_size.sql","errors":[]},{"query":"CREATE TABLE minimum_sample_size_continuos (baseline Float64, sigma Float64) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02206_minimum_sample_size.sql","errors":[]},{"query":"CREATE TABLE minimum_sample_size_conversion (p1 Float64) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02206_minimum_sample_size.sql","errors":[]},{"query":"CREATE TABLE 02005_test_table (\nvalue Map(Int64, Int64)\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02205_map_populate_series_non_const.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02005'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02005_test_table (\nkey Array(Int64),\nvalue Array(Int64)\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02205_map_populate_series_non_const.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02005'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t_ephemeral_02205_1 (x UInt32 DEFAULT y, y UInt32 EPHEMERAL 17, z UInt32 DEFAULT 5) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02205_ephemeral_1.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_ephemeral_02205_1 (x UInt32 DEFAULT y, y UInt32 EPHEMERAL'","startColumn":63,"startLine":1,"endColumn":72,"endLine":1}]},{"query":"CREATE TABLE data_02201 ( key Int,\nvalue_max SimpleAggregateFunction(max, Int),\nINDEX idx value_max TYPE minmax GRANULARITY 1\n)\nEngine=AggregatingMergeTree()\nORDER BY key\nPARTITION BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02202_use_skip_indexes_if_final.sql","errors":[]},{"query":"CREATE TABLE data_02201 ( key Int,\nvalue Int,\nINDEX idx value TYPE minmax GRANULARITY 1\n)\nEngine=AggregatingMergeTree()\nORDER BY key\nPARTITION BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02201_use_skip_indexes_if_final.sql","errors":[]},{"query":"CREATE TABLE data_02200 ( key Int,\nvalue Int,\nINDEX idx value TYPE minmax GRANULARITY 1\n)\nEngine=MergeTree()\nORDER BY key\nPARTITION BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02200_use_skip_indexes.sql","errors":[]},{"query":"CREATE TABLE t_async_insert_02193_1 (id UInt32, s String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02193_async_insert_tcp_client_1.sql","errors":[]},{"query":"CREATE TABLE t_nested_with_dots (n Nested(id UInt64, \\`values.id\\` Array(UInt64))) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02191_nested_with_dots.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_nested_with_dots (n Nested(id UInt64, \\'","startColumn":53,"startLine":1,"endColumn":54,"endLine":1}]},{"query":"CREATE TABLE t_nested_with_dots (n Nested(id UInt64, \\`values.id\\` Array(UInt64))) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02191_nested_with_dots.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_nested_with_dots (n Nested(id UInt64, \\'","startColumn":53,"startLine":1,"endColumn":54,"endLine":1}]},{"query":"CREATE TABLE t_nested_with_dots (\\`t.t2\\` Tuple(\\`t3.t4.t5\\` Tuple(\\`s1.s2\\` String, \\`u1.u2\\` UInt64), \\`s3.s4.s5\\` String)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02191_nested_with_dots.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_nested_with_dots (\\'","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"create table test as format(JSONEachRow,  \\$\\$\n{\"a\": \"Hello\", \"b\": 111}\n{\"a\": \"World\", \"b\": 123}\n{\"a\": \"Hello\", \"b\": 111}\n{\"a\": \"Hello\", \"b\": 131}\n{\"a\": \"World\", \"b\": 123}\n\\$\\$);","fileName":"../ClickHouse/tests/queries/0_stateless/02188_table_function_format.sql","errors":[{"message":"no viable alternative at input 'create table test as format(JSONEachRow,  \\'","startColumn":42,"startLine":1,"endColumn":43,"endLine":1}]},{"query":"CREATE TABLE 02188_test_dictionary_source (\nid UInt64,\nvalue String\n)\nENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02188_parser_dictionary_primary_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02188'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02188_test_dictionary_simple_primary_key (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02188_test_dictionary_source'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02188_parser_dictionary_primary_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02188'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02188_test_dictionary_simple_primary_key (\nid UInt64,\nvalue String\n)\nPRIMARY KEY (id)\nSOURCE(CLICKHOUSE(TABLE '02188_test_dictionary_source'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02188_parser_dictionary_primary_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02188'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02188_test_dictionary_complex_primary_key (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id, value\nSOURCE(CLICKHOUSE(TABLE '02188_test_dictionary_source'))\nLAYOUT(COMPLEX_KEY_DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02188_parser_dictionary_primary_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02188'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02188_test_dictionary_complex_primary_key (\nid UInt64,\nvalue String\n)\nPRIMARY KEY (id, value)\nSOURCE(CLICKHOUSE(TABLE '02188_test_dictionary_source'))\nLAYOUT(COMPLEX_KEY_DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02188_parser_dictionary_primary_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02188'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE test_02187 ( info String,\nid Int32\n)\nENGINE = ReplacingMergeTree(id)\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02187_test_final_and_limit_modifier.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS data_a_02187 (a Int64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02187_insert_values_with_mv.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS data_b_02187 (a Int64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02187_insert_values_with_mv.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW IF NOT EXISTS mv1 TO data_b_02187 AS Select sleepEachRow(0.05) as a FROM data_a_02187;","fileName":"../ClickHouse/tests/queries/0_stateless/02187_insert_values_with_mv.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW IF NOT EXISTS mv2 TO data_b_02187 AS Select sleepEachRow(0.05) as a FROM data_a_02187;","fileName":"../ClickHouse/tests/queries/0_stateless/02187_insert_values_with_mv.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW IF NOT EXISTS mv3 TO data_b_02187 AS Select sleepEachRow(0.05) as a FROM data_a_02187;","fileName":"../ClickHouse/tests/queries/0_stateless/02187_insert_values_with_mv.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW IF NOT EXISTS mv4 TO data_b_02187 AS Select sleepEachRow(0.05) as a FROM data_a_02187;","fileName":"../ClickHouse/tests/queries/0_stateless/02187_insert_values_with_mv.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW IF NOT EXISTS mv5 TO data_b_02187 AS Select sleepEachRow(0.05) as a FROM data_a_02187;","fileName":"../ClickHouse/tests/queries/0_stateless/02187_insert_values_with_mv.sql","errors":[]},{"query":"CREATE TABLE 02186_range_dictionary_source_table (\nid UInt64,\nstart Date,\nend Date,\nvalue String\n)\nEngine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02186_range_hashed_dictionary_intersecting_intervals.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02186'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02186_range_dictionary (\nid UInt64,\nstart Date,\nend Date,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02186_range_dictionary_source_table'))\nLAYOUT(RANGE_HASHED(range_lookup_strategy 'min'))\nRANGE(MIN start MAX end)\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02186_range_hashed_dictionary_intersecting_intervals.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02186'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02186_range_dictionary (\nid UInt64,\nstart Date,\nend Date,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02186_range_dictionary_source_table'))\nLAYOUT(RANGE_HASHED(range_lookup_strategy 'max'))\nRANGE(MIN start MAX end)\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02186_range_hashed_dictionary_intersecting_intervals.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02186'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 02185_range_dictionary_source_table (\nid UInt64,\nstart Nullable(UInt64),\nend Nullable(UInt64),\nvalue String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02185_range_hashed_dictionary_open_ranges.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02185'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02185_range_dictionary (\nid UInt64,\nstart UInt64,\nend UInt64,\nvalue String DEFAULT 'DefaultValue'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02185_range_dictionary_source_table'))\nLAYOUT(RANGE_HASHED(convert_null_range_bound_to_open 1))\nRANGE(MIN start MAX end)\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02185_range_hashed_dictionary_open_ranges.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02185'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02185_range_dictionary (\nid UInt64,\nstart UInt64,\nend UInt64,\nvalue String DEFAULT 'DefaultValue'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02185_range_dictionary_source_table'))\nLAYOUT(RANGE_HASHED(convert_null_range_bound_to_open 0))\nRANGE(MIN start MAX end)\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02185_range_hashed_dictionary_open_ranges.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02185'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"create table t (\ns Array(Int),\nl Int8,\nr Int8\n) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02185_arraySlice_negative_offset_size.sql","errors":[]},{"query":"CREATE TABLE mergeTree_02184 (id UInt64, name String, dt Date) Engine=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_storage_add_support_ttl.sql","errors":[]},{"query":"CREATE TABLE distributed_02184 (id UInt64, name String, dt Date) Engine=Distributed('test_cluster_two_shards', 'default', 'mergeTree_02184', rand());","fileName":"../ClickHouse/tests/queries/0_stateless/02184_storage_add_support_ttl.sql","errors":[]},{"query":"CREATE TABLE buffer_02184 (id UInt64, name String, dt Date) ENGINE = Buffer(default, mergeTree_02184, 16, 10, 100, 10000, 1000000, 10000000, 100000000);","fileName":"../ClickHouse/tests/queries/0_stateless/02184_storage_add_support_ttl.sql","errors":[]},{"query":"CREATE TABLE merge_02184 (id UInt64, name String, dt Date) ENGINE = Merge('default', 'distributed_02184');","fileName":"../ClickHouse/tests/queries/0_stateless/02184_storage_add_support_ttl.sql","errors":[]},{"query":"CREATE TABLE null_02184 AS system.one Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/02184_storage_add_support_ttl.sql","errors":[]},{"query":"CREATE TABLE file_02184 (id UInt64, name String, dt Date) ENGINE = File(TabSeparated);","fileName":"../ClickHouse/tests/queries/0_stateless/02184_storage_add_support_ttl.sql","errors":[]},{"query":"CREATE TABLE memory_02184 (id UInt64, name String, dt Date) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02184_storage_add_support_ttl.sql","errors":[]},{"query":"CREATE TABLE log_02184 (id UInt64, name String, dt Date) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/02184_storage_add_support_ttl.sql","errors":[]},{"query":"CREATE TABLE ting_log_02184 (id UInt64, name String, dt Date) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/02184_storage_add_support_ttl.sql","errors":[]},{"query":"CREATE TABLE stripe_log_02184 (id UInt64, name String, dt Date) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_storage_add_support_ttl.sql","errors":[]},{"query":"CREATE TABLE 02184_range_dictionary_source_table (\nid UInt64,\nstart UInt64,\nend UInt64,\nvalue_0 String,\nvalue_1 String,\nvalue_2 String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_range_hashed_dictionary_outside_range_values.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02184'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02184_range_dictionary (\nid UInt64,\nstart UInt64,\nend UInt64,\nvalue_0 String,\nvalue_1 String,\nvalue_2 String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02184_range_dictionary_source_table'))\nLAYOUT(RANGE_HASHED())\nRANGE(MIN start MAX end)\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02184_range_hashed_dictionary_outside_range_values.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02184'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE t_nested_tuple (\nendUserIDs Tuple(\n_experience Tuple(\naaid Tuple(\nid Nullable(String),\nnamespace Tuple(\ncode LowCardinality(Nullable(String))\n),\nprimary LowCardinality(Nullable(UInt8))\n),\nmcid Tuple(\nid Nullable(String),\nnamespace Tuple(\ncode LowCardinality(Nullable(String))\n),\nprimary LowCardinality(Nullable(UInt8))\n)\n)\n)\n)\nENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02184_nested_tuple.sql","errors":[]},{"query":"create table ips_v6(i IPv6) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_ipv6_select_parsing.sql","errors":[]},{"query":"CREATE TABLE ipv6_test26473 ( \\`ip\\` String,\n\\`ipv6\\` IPv6 MATERIALIZED toIPv6(ip),\n\\`is_ipv6\\` Boolean   MATERIALIZED isIPv6String(ip),\n\\`cblock\\` IPv6   MATERIALIZED cutIPv6(ipv6, 10, 1),\n\\`cblock1\\` IPv6  MATERIALIZED toIPv6(cutIPv6(ipv6, 10, 1))  \n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_ipv6_cast_test.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ipv6_test26473 ( \\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE table_02184 (x UInt8); --{serverError ENGINE_REQUIRED} SET default_table_engine = 'Log';","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE table_02184 (x UInt8);","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE table_02184 (x UInt8); --{serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH} CREATE TABLE table_02184 (x UInt8, PRIMARY KEY (x));","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE test_optimize_exception (date Date) PARTITION BY toYYYYMM(date) ORDER BY date;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"mismatched input 'PARTITION' expecting <EOF>","startColumn":49,"startLine":1,"endColumn":58,"endLine":1}]},{"query":"CREATE TABLE table_02184 (x UInt8) PARTITION BY x; --{serverError BAD_ARGUMENTS} CREATE TABLE table_02184 (x UInt8) ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"mismatched input 'PARTITION' expecting <EOF>","startColumn":35,"startLine":1,"endColumn":44,"endLine":1}]},{"query":"CREATE TABLE table_02184 (x UInt8) PRIMARY KEY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"mismatched input 'PRIMARY' expecting <EOF>","startColumn":35,"startLine":1,"endColumn":42,"endLine":1}]},{"query":"CREATE TABLE numbers1 AS SELECT number FROM numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE numbers2 ORDER BY intHash32(number) SAMPLE BY intHash32(number) AS SELECT number FROM numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"mismatched input 'ORDER' expecting <EOF>","startColumn":22,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE numbers3 ENGINE = Log AS SELECT number FROM numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE test_table (EventDate Date, CounterID UInt32,  UserID UInt64,  EventTime DateTime('America/Los_Angeles'), UTCEventTime DateTime('UTC')) PARTITION BY EventDate PRIMARY KEY CounterID;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"mismatched input 'PARTITION' expecting <EOF>","startColumn":149,"startLine":1,"endColumn":158,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW test_view (Rows UInt64,  MaxHitTime DateTime('America/Los_Angeles')) AS SELECT count() AS Rows, max(UTCEventTime) AS MaxHitTime FROM test_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW test_view (Rows UInt64,  MaxHitTime DateTime('America/Los_Angeles')) AS'","startColumn":94,"startLine":1,"endColumn":96,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW test_view_filtered (EventDate Date, CounterID UInt32) POPULATE AS SELECT CounterID, EventDate FROM test_table WHERE EventDate < '2013-01-01';","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW test_view_filtered (EventDate Date, CounterID UInt32) POPULATE'","startColumn":79,"startLine":1,"endColumn":87,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW test_view ORDER BY Rows AS SELECT count() AS Rows, max(UTCEventTime) AS MaxHitTime FROM test_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW test_view ORDER'","startColumn":35,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE t1 AS test_view;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE t2 ENGINE=Memory AS test_view;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 ENGINE=Memory AS test_view'","startColumn":33,"startLine":1,"endColumn":42,"endLine":1}]},{"query":"CREATE DATABASE test_02184 ORDER BY kek; -- {serverError INCORRECT_QUERY} CREATE DATABASE test_02184 SETTINGS x=1; -- {serverError UNKNOWN_SETTING}\nCREATE TABLE table_02184 (x UInt8, y int, PRIMARY KEY (x)) ENGINE=MergeTree PRIMARY KEY y; -- {clientError BAD_ARGUMENTS}\nSET default_table_engine = 'MergeTree';","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE test_02184 ORDER'","startColumn":27,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE table_02184 (x UInt8, y int, PRIMARY KEY (x)) PRIMARY KEY y; -- {clientError BAD_ARGUMENTS} CREATE TABLE mt (a UInt64, b Nullable(String), PRIMARY KEY (a, coalesce(b, 'test')), INDEX b_index b TYPE set(123) GRANULARITY 1);","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"mismatched input 'PRIMARY' expecting <EOF>","startColumn":59,"startLine":1,"endColumn":66,"endLine":1}]},{"query":"CREATE TABLE mt2 AS mt;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE tmp (n int);","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE tmp1 (n int) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE tmp2 (n int) ENGINE=Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE tmp2 (n int) ORDER BY n; -- {serverError BAD_ARGUMENTS} CREATE TEMPORARY TABLE tmp2 (n int, PRIMARY KEY (n)); -- {serverError BAD_ARGUMENTS}\nCREATE TABLE log (n int);","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"mismatched input 'ORDER' expecting <EOF>","startColumn":36,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"CREATE TABLE log1 AS log;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE mem AS log1 ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE mem AS SELECT 1 as n; --{serverError ENGINE_REQUIRED} SET default_table_engine = 'Memory';","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE mem ORDER BY n AS SELECT 1 as n; -- {serverError BAD_ARGUMENTS} SET default_table_engine = 'MergeTree';","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"mismatched input 'ORDER' expecting <EOF>","startColumn":17,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"CREATE TABLE mt ORDER BY n AS SELECT 1 as n;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"mismatched input 'ORDER' expecting <EOF>","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE mem ENGINE=Memory AS SELECT 1 as n;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE val AS values('n int', 1, 2);","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE val2 AS val;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE log ENGINE=Log AS val;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE log ENGINE=Log AS val'","startColumn":31,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"CREATE TABLE kek (n int) SETTINGS log_queries=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"mismatched input 'SETTINGS' expecting <EOF>","startColumn":25,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE lol (n int) ENGINE=MergeTree ORDER BY n SETTINGS min_bytes_for_wide_part=123 SETTINGS log_queries=1;","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[{"message":"no viable alternative at input 'SETTINGS'","startColumn":90,"startLine":1,"endColumn":98,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE tmp_log (n int);","fileName":"../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql","errors":[]},{"query":"CREATE TABLE 02183_dictionary_test_table (id UInt64) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_no_attributes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02183'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_flat_dictionary (\nid UInt64\n)\nPRIMARY KEY id\nLAYOUT(FLAT())\nSOURCE(CLICKHOUSE(TABLE '02183_dictionary_test_table'))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_no_attributes.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_hashed_dictionary (\nid UInt64\n)\nPRIMARY KEY id\nLAYOUT(HASHED())\nSOURCE(CLICKHOUSE(TABLE '02183_dictionary_test_table'))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_no_attributes.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_hashed_array_dictionary (\nid UInt64\n)\nPRIMARY KEY id\nLAYOUT(HASHED_ARRAY())\nSOURCE(CLICKHOUSE(TABLE '02183_dictionary_test_table'))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_no_attributes.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_cache_dictionary (\nid UInt64\n)\nPRIMARY KEY id\nLAYOUT(CACHE(SIZE_IN_CELLS 10))\nSOURCE(CLICKHOUSE(TABLE '02183_dictionary_test_table'))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_no_attributes.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_direct_dictionary (\nid UInt64\n)\nPRIMARY KEY id\nLAYOUT(HASHED())\nSOURCE(CLICKHOUSE(TABLE '02183_dictionary_test_table'))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_no_attributes.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE ip_trie_dictionary_source_table (\nprefix String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_no_attributes.sql","errors":[]},{"query":"CREATE DICTIONARY 02183_ip_trie_dictionary (\nprefix String\n)\nPRIMARY KEY prefix\nSOURCE(CLICKHOUSE(TABLE 'ip_trie_dictionary_source_table'))\nLAYOUT(IP_TRIE())\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_no_attributes.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 02183_polygon_dictionary_source_table (\nkey Array(Array(Array(Tuple(Float64, Float64))))\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_no_attributes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02183'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_polygon_dictionary (\nkey Array(Array(Array(Tuple(Float64, Float64))))\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE '02183_polygon_dictionary_source_table'))\nLAYOUT(POLYGON(store_polygon_key_column 1))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_no_attributes.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 02183_range_dictionary_source_table (\nkey UInt64,\nstart UInt64,\nend UInt64\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_no_attributes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02183'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_range_dictionary (\nkey UInt64,\nstart UInt64,\nend UInt64\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE '02183_range_dictionary_source_table'))\nLAYOUT(RANGE_HASHED())\nRANGE(MIN start MAX end)\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_no_attributes.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 02183_dictionary_source_table (\nid UInt64,\nvalue_date Date,\nvalue_date_32 Date32,\nvalue_date_time DateTime,\nvalue_date_time_64 DateTime64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_date_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02183'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_flat_dictionary (\nid UInt64,\nvalue_date Date,\nvalue_date_32 Date32,\nvalue_date_time DateTime,\nvalue_date_time_64 DateTime64\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02183_dictionary_source_table'))\nLIFETIME(0)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_date_types.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_hashed_dictionary (\nid UInt64,\nvalue_date Date,\nvalue_date_32 Date32,\nvalue_date_time DateTime,\nvalue_date_time_64 DateTime64\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02183_dictionary_source_table'))\nLIFETIME(0)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_date_types.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_hashed_array_dictionary (\nid UInt64,\nvalue_date Date,\nvalue_date_32 Date32,\nvalue_date_time DateTime,\nvalue_date_time_64 DateTime64\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02183_dictionary_source_table'))\nLIFETIME(0)\nLAYOUT(HASHED_ARRAY());","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_date_types.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_cache_dictionary (\nid UInt64,\nvalue_date Date,\nvalue_date_32 Date32,\nvalue_date_time DateTime,\nvalue_date_time_64 DateTime64\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02183_dictionary_source_table'))\nLIFETIME(0)\nLAYOUT(CACHE(SIZE_IN_CELLS 10));","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_date_types.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_direct_dictionary (\nid UInt64,\nvalue_date Date,\nvalue_date_32 Date32,\nvalue_date_time DateTime,\nvalue_date_time_64 DateTime64\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02183_dictionary_source_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_date_types.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 02183_ip_trie_dictionary_source_table (\nprefix String,\nvalue_date Date,\nvalue_date_32 Date32,\nvalue_date_time DateTime,\nvalue_date_time_64 DateTime64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_date_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02183'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_ip_trie_dictionary (\nprefix String,\nvalue_date Date,\nvalue_date_32 Date32,\nvalue_date_time DateTime,\nvalue_date_time_64 DateTime64\n)\nPRIMARY KEY prefix\nSOURCE(CLICKHOUSE(TABLE '02183_ip_trie_dictionary_source_table'))\nLAYOUT(IP_TRIE(access_to_key_from_attributes 1))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_date_types.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 02183_polygon_dictionary_source_table (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\nvalue_date Date,\nvalue_date_32 Date32,\nvalue_date_time DateTime,\nvalue_date_time_64 DateTime64\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_date_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02183'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_polygon_dictionary (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\nvalue_date Date,\nvalue_date_32 Date32,\nvalue_date_time DateTime,\nvalue_date_time_64 DateTime64\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE '02183_polygon_dictionary_source_table'))\nLAYOUT(POLYGON(store_polygon_key_column 1))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_date_types.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 02183_range_dictionary_source_table (\nkey UInt64,\nstart UInt64,\nend UInt64,\nvalue_date Date,\nvalue_date_32 Date32,\nvalue_date_time DateTime,\nvalue_date_time_64 DateTime64\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_date_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02183'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02183_range_dictionary (\nkey UInt64,\nstart UInt64,\nend UInt64,\nvalue_date Date,\nvalue_date_32 Date32,\nvalue_date_time DateTime,\nvalue_date_time_64 DateTime64\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE '02183_range_dictionary_source_table'))\nLAYOUT(RANGE_HASHED())\nRANGE(MIN start MAX end)\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02183_dictionary_date_types.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02183'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE FUNCTION 02181_invalid_lambda AS lambda(((x * 2) AS x_doubled) + x_doubled); --{serverError UNSUPPORTED_METHOD} CREATE FUNCTION 02181_invalid_lambda AS lambda(x); --{serverError UNSUPPORTED_METHOD}\nCREATE FUNCTION 02181_invalid_lambda AS lambda(); --{serverError UNSUPPORTED_METHOD}\nCREATE FUNCTION 02181_invalid_lambda AS lambda(tuple(x)) --{serverError UNSUPPORTED_METHOD}\n","fileName":"../ClickHouse/tests/queries/0_stateless/02181_sql_user_defined_functions_invalid_lambda.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE 02181_test_table (\nid UInt64,\nvalue String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02181_dictionary_attach_detach.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02181'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02181_test_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02181_test_table'))\nLAYOUT(HASHED())\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02181_dictionary_attach_detach.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02181'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"create table t (x Bool) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02180_insert_into_values_settings.sql","errors":[]},{"query":"create table if not exists t_group_by_lowcardinality(p_date Date, val LowCardinality(Nullable(String)))  engine=MergeTree() partition by p_date order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02180_group_by_lowcardinality.sql","errors":[]},{"query":"CREATE TABLE t_sparse_detach(id UInt64, s String) ENGINE = MergeTree ORDER BY id\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/02179_sparse_columns_detach.sql","errors":[]},{"query":"CREATE TABLE 02179_test_table (\nid UInt64,\nvalue String,\nstart Int64,\nend Int64\n) Engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02179_range_hashed_dictionary_invalid_interval.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02179'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02179_test_dictionary (\nid UInt64,\nvalue String DEFAULT 'DefaultValue',\nstart Int64,\nend Int64\n) PRIMARY KEY id\nLAYOUT(RANGE_HASHED())\nSOURCE(CLICKHOUSE(TABLE '02179_test_table'))\nRANGE(MIN start MAX end)\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02179_range_hashed_dictionary_invalid_interval.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02179'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"create table t (c Decimal32(9)) engine MergeTree order by c;","fileName":"../ClickHouse/tests/queries/0_stateless/02179_key_condition_no_common_type.sql","errors":[]},{"query":"CREATE DATABASE dict_db_02179;","fileName":"../ClickHouse/tests/queries/0_stateless/02179_dict_reload_on_cluster.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE dict_db_02179;'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE dict_db_02179.dict_data (key UInt64, val UInt64) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02179_dict_reload_on_cluster.sql","errors":[]},{"query":"CREATE DICTIONARY dict_db_02179.dict (\nkey UInt64 DEFAULT 0,\nval UInt64 DEFAULT 10\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict_data' PASSWORD '' DB 'dict_db_02179'))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/02179_dict_reload_on_cluster.sql","errors":[]},{"query":"CREATE DATABASE empty_db_02179;","fileName":"../ClickHouse/tests/queries/0_stateless/02179_dict_reload_on_cluster.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE empty_db_02179;'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE test_degs_to_rads (degrees Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02179_degrees_radians.sql","errors":[]},{"query":"CREATE TABLE test_rads_to_degs (radians Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02179_degrees_radians.sql","errors":[]},{"query":"CREATE TABLE TESTTABLE ( _id UInt64,  pt String, attr_list Array(String)\n) ENGINE = MergeTree() PARTITION BY (pt) ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02178_column_function_insert_from.sql","errors":[]},{"query":"CREATE TABLE data (\n\\`n\\` UInt32,\n\\`t\\` DateTime\n)\nENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/02177_sum_if_not_found.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE data (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE agg ENGINE = AggregatingMergeTree\nORDER BY tuple() AS\nSELECT\nt,\nsumIF(n, 0)\nFROM data\nGROUP BY t; -- { serverError UNKNOWN_FUNCTION}\nCREATE TABLE agg\nENGINE = AggregatingMergeTree\nORDER BY tuple() AS\nSELECT\nt,\nsumIf(n, 0)\nFROM data\nGROUP BY t;","fileName":"../ClickHouse/tests/queries/0_stateless/02177_sum_if_not_found.sql","errors":[]},{"query":"create table data_02177 (key Int) Engine=MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/02177_merge_optimize_aggregation_in_order.sql","errors":[]},{"query":"CREATE TABLE left ( key UInt32, value String ) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02177_issue_31009.sql","errors":[]},{"query":"CREATE TABLE right (  key UInt32, value String ) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02177_issue_31009.sql","errors":[]},{"query":"CREATE TABLE t02176(timestamp DateTime) ENGINE = MergeTree PARTITION BY toStartOfWeek(timestamp)\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02176_toStartOfWeek_overflow_pruning.sql","errors":[]},{"query":"create table data_02176 (key Int) Engine=MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/02176_optimize_aggregation_in_order_empty.sql","errors":[]},{"query":"CREATE TABLE 02176_test_simple_key_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02176_dict_get_has_implicit_key_cast.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02176'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02176_test_simple_key_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02176_test_simple_key_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02176_dict_get_has_implicit_key_cast.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02176'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 02176_test_complex_key_table (\nid UInt64,\nid_key String,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02176_dict_get_has_implicit_key_cast.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02176'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02176_test_complex_key_dictionary (\nid UInt64,\nid_key String,\nvalue String\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(TABLE '02176_test_complex_key_table'))\nLAYOUT(COMPLEX_KEY_DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02176_dict_get_has_implicit_key_cast.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02176'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"create table local_02175 engine=Memory() as select * from system.one;","fileName":"../ClickHouse/tests/queries/0_stateless/02175_distributed_join_current_database.sql","errors":[]},{"query":"create table dist_02175 as local_02175 engine=Distributed(test_cluster_two_shards, currentDatabase(), local_02175);","fileName":"../ClickHouse/tests/queries/0_stateless/02175_distributed_join_current_database.sql","errors":[]},{"query":"CREATE TABLE t1 (i Int64, j Int64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02174_cte_scalar_cache_mv.sql","errors":[]},{"query":"CREATE TABLE t2 (k Int64, l Int64, m Int64, n Int64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02174_cte_scalar_cache_mv.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv1 TO t2 AS WITH\n(SELECT max(i) FROM t1) AS t1\nSELECT\nt1 as k, -- Using local cache x 4\nt1 as l,\nt1 as m,\nt1 as n\nFROM t1\nLIMIT 5;","fileName":"../ClickHouse/tests/queries/0_stateless/02174_cte_scalar_cache_mv.sql","errors":[]},{"query":"CREATE TABLE t3 (z Int64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02174_cte_scalar_cache_mv.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv2 TO t3 AS SELECT\nsum(i) + sum(j) + (SELECT * FROM (SELECT min(i) + min(j) FROM (SELECT * FROM system.one _a, t1 _b))) AS z\nFROM t1;","fileName":"../ClickHouse/tests/queries/0_stateless/02174_cte_scalar_cache_mv.sql","errors":[]},{"query":"CREATE TABLE t4 (z Int64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02174_cte_scalar_cache_mv.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv3 TO t4 AS SELECT\nmin(i) + min(j) + (SELECT * FROM (SELECT min(k) + min(l) FROM (SELECT * FROM system.one _a, t2 _b))) AS z\nFROM t1;","fileName":"../ClickHouse/tests/queries/0_stateless/02174_cte_scalar_cache_mv.sql","errors":[]},{"query":"CREATE TABLE table_map (id UInt32, col Map(String, UInt64)) engine = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02169_map_functions.sql","errors":[]},{"query":"CREATE TABLE counter (id UInt64, createdAt DateTime) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02169_fix_view_offset_limit_setting.sql","errors":[]},{"query":"CREATE VIEW vcounter AS SELECT intDiv(id, 10) AS tens, max(createdAt) AS maxid FROM counter GROUP BY tens;","fileName":"../ClickHouse/tests/queries/0_stateless/02169_fix_view_offset_limit_setting.sql","errors":[]},{"query":"CREATE TABLE test_nested_default (\n\\`id\\` String,\n\\`with_dot.str\\` String,\n\\`with_dot.array\\` Array(String)\n)\nENGINE = MergeTree()\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02167_columns_with_dots_default_values.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_nested_default (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02165_h3_exact_edge_length_rads.sql","errors":[]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02165_h3_exact_edge_length_m.sql","errors":[]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02165_h3_exact_edge_length_Km.sql","errors":[]},{"query":"CREATE TABLE test_tb (a UInt64, s String) ENGINE = MergeTree() ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02164_materialized_view_support_virtual_column.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_view_tb ENGINE = MergeTree() ORDER BY a AS SELECT * FROM test_tb;","fileName":"../ClickHouse/tests/queries/0_stateless/02164_materialized_view_support_virtual_column.sql","errors":[]},{"query":"CREATE TABLE 02162_test_table (\nid UInt64,\nvalue String,\nrange_value UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02162_range_hashed_dictionary_ddl_expression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02162'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02162_test_dictionary (\nid UInt64,\nvalue String,\nrange_value UInt64,\nstart UInt64 EXPRESSION range_value,\nend UInt64 EXPRESSION range_value\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02162_test_table'))\nLAYOUT(RANGE_HASHED())\nRANGE(MIN start MAX end)\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02162_range_hashed_dictionary_ddl_expression.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02162'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02160_h3_cell_area_rads2.sql","errors":[]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02160_h3_cell_area_m2.sql","errors":[]},{"query":"CREATE TABLE mean_ztest (v int, s UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02158_ztest.sql","errors":[]},{"query":"CREATE TABLE proportions_ztest (sx UInt64, sy UInt64, tx UInt64, ty UInt64) Engine = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02158_proportions_ztest.sql","errors":[]},{"query":"create table merge_kek_1 (x UInt32, y UInt32) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere_not_ready_set_bug.sql","errors":[]},{"query":"create table merge_kek_2 (x UInt32, y UInt32) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere_not_ready_set_bug.sql","errors":[]},{"query":"CREATE TABLE t_02156_ololo_1 (k UInt32, v Nullable(String)) ENGINE = MergeTree order by k;","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere_2.sql","errors":[]},{"query":"CREATE TABLE t_02156_ololo_2 (k UInt32, v String) ENGINE = MergeTree order by k;","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere_2.sql","errors":[]},{"query":"CREATE TABLE t_02156_ololo_dist (k UInt32, v String) ENGINE = Distributed(test_shard_localhost, currentDatabase(), t_02156_ololo_2);","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere_2.sql","errors":[]},{"query":"CREATE TABLE t_02156_ololo_dist2 (k UInt32, v Nullable(String)) ENGINE = Distributed(test_shard_localhost, currentDatabase(), t_02156_ololo_1);","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere_2.sql","errors":[]},{"query":"CREATE TABLE t_02156_mt1 (k UInt32, v String) ENGINE = MergeTree ORDER BY k SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere.sql","errors":[]},{"query":"CREATE TABLE t_02156_mt2 (k UInt32, v String) ENGINE = MergeTree ORDER BY k SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere.sql","errors":[]},{"query":"CREATE TABLE t_02156_log (k UInt32, v String) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere.sql","errors":[]},{"query":"CREATE TABLE t_02156_dist (k UInt32, v String) ENGINE = Distributed(test_shard_localhost, currentDatabase(), t_02156_mt1);","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere.sql","errors":[]},{"query":"CREATE TABLE t_02156_merge1 (k UInt32, v String) ENGINE = Merge(currentDatabase(), 't_02156_mt1|t_02156_mt2');","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere.sql","errors":[]},{"query":"CREATE TABLE t_02156_merge2 (k UInt32, v String) ENGINE = Merge(currentDatabase(), 't_02156_mt1|t_02156_log');","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere.sql","errors":[]},{"query":"CREATE TABLE t_02156_merge3 (k UInt32, v String) ENGINE = Merge(currentDatabase(), 't_02156_mt2|t_02156_dist');","fileName":"../ClickHouse/tests/queries/0_stateless/02156_storage_merge_prewhere.sql","errors":[]},{"query":"CREATE TABLE t_max_rows_to_read (a UInt64) ENGINE = MergeTree ORDER BY a\nSETTINGS index_granularity = 4, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02155_read_in_order_max_rows_to_read.sql","errors":[]},{"query":"CREATE TABLE nested_test (x UInt32, \\`nest.col1\\` Array(String), \\`nest.col2\\` Array(Int8)) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02155_nested_lc_defalut_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE nested_test (x UInt32, \\'","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"create table test (number UInt64) engine=File('Parquet');","fileName":"../ClickHouse/tests/queries/0_stateless/02155_multiple_inserts_for_formats_with_suffix.sql","errors":[]},{"query":"create table test (number UInt64) engine=File('Parquet', 'test_02155/test1/data.Parquet');","fileName":"../ClickHouse/tests/queries/0_stateless/02155_multiple_inserts_for_formats_with_suffix.sql","errors":[]},{"query":"create table test (number UInt64) engine=File('Parquet', 'test_02155/test3/data.Parquet.gz');","fileName":"../ClickHouse/tests/queries/0_stateless/02155_multiple_inserts_for_formats_with_suffix.sql","errors":[]},{"query":"CREATE TABLE h3_indexes (id UInt8, h3_index UInt64, res UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02155_h3_to_center_child.sql","errors":[]},{"query":"CREATE TABLE 02155_test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02155_dictionary_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02155'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02155_test_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02155_test_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02155_dictionary_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02155'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 02155_test_dictionary_view (\nid UInt64,\nvalue String\n) ENGINE=Dictionary(concat(currentDatabase(), '.02155_test_dictionary'));","fileName":"../ClickHouse/tests/queries/0_stateless/02155_dictionary_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02155'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table t02155_t64_tz ( a DateTime64(9, America/Chicago)) Engine = Memory; -- { clientError SYNTAX_ERROR } create table t02155_t_tz ( a DateTime(America/Chicago)) Engine = Memory; -- { clientError SYNTAX_ERROR }\ncreate table t02155_t64_tz ( a DateTime64(9, 'America/Chicago')) Engine = Memory; ","fileName":"../ClickHouse/tests/queries/0_stateless/02155_create_table_w_timezone.sql","errors":[]},{"query":"create table t02155_t_tz ( a DateTime('America/Chicago')) Engine = Memory; ","fileName":"../ClickHouse/tests/queries/0_stateless/02155_create_table_w_timezone.sql","errors":[]},{"query":"CREATE TABLE t(d1 Decimal32(5), d2 Decimal64(10), d3 Decimal128(20), d4 Decimal256(40), f1 Float32, f2 Float64) ENGINE=Memory; ","fileName":"../ClickHouse/tests/queries/0_stateless/02155_binary_op_between_float_and_decimal.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE IF NOT EXISTS default_table (x UInt32, y UInt32 DEFAULT 42, z UInt32 DEFAULT 33) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02154_default_keyword_insert.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue Date32\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02152_dictionary_date32_type.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary (\nid UInt64,\nvalue Date32\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'test_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02152_dictionary_date32_type.sql","errors":[]},{"query":"create table test_02152 (x UInt32, y String, z Array(UInt32), t Tuple(UInt32, String, Array(UInt32))) engine=File('CSV') settings format_csv_delimiter=';';","fileName":"../ClickHouse/tests/queries/0_stateless/02152_csv_tuple.sql","errors":[]},{"query":"create table test_02152 (x UInt32, y String, z Array(UInt32), t Tuple(UInt32, String, Array(UInt32))) engine=File('CustomSeparated') settings format_custom_field_delimiter='<field_delimiter>', format_custom_row_before_delimiter='<row_start>', format_custom_row_after_delimiter='<row_end_delimiter>', format_custom_escaping_rule='CSV';","fileName":"../ClickHouse/tests/queries/0_stateless/02152_csv_tuple.sql","errors":[]},{"query":"create table table_02152 (a String, b LowCardinality(String)) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02152_count_distinct_optimization.sql","errors":[]},{"query":"CREATE TABLE tab_lc (x UInt64, y LowCardinality(String)) engine = MergeTree order by x SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02151_lc_prefetch.sql","errors":[]},{"query":"CREATE TABLE t_read_in_order(date Date, i UInt64, v UInt64) ENGINE = MergeTree ORDER BY (date, i) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02149_read_in_order_fixed_prefix.sql","errors":[]},{"query":"CREATE TABLE t_read_in_order(a UInt32, b UInt32) ENGINE = MergeTree ORDER BY (a, b)\nSETTINGS index_granularity = 3, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02149_read_in_order_fixed_prefix.sql","errors":[]},{"query":"CREATE TABLE t_read_in_order(dt DateTime, d Decimal64(5), v UInt64) ENGINE = MergeTree ORDER BY (toStartOfDay(dt), d) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02149_read_in_order_fixed_prefix.sql","errors":[]},{"query":"CREATE FUNCTION 02148_test_function AS () -> (SELECT 1);","fileName":"../ClickHouse/tests/queries/0_stateless/02148_sql_user_defined_function_subquery.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE OR REPLACE FUNCTION 02148_test_function AS () -> (SELECT 2);","fileName":"../ClickHouse/tests/queries/0_stateless/02148_sql_user_defined_function_subquery.sql","errors":[{"message":"no viable alternative at input 'CREATE OR REPLACE FUNCTION'","startColumn":18,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE FUNCTION 02148_test_function AS (x) -> (SELECT x + 1);","fileName":"../ClickHouse/tests/queries/0_stateless/02148_sql_user_defined_function_subquery.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02148_test_function_nested AS (x) -> 02148_test_function(x + 2);","fileName":"../ClickHouse/tests/queries/0_stateless/02148_sql_user_defined_function_subquery.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE 02148_test_table (id UInt64, value String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02148_sql_user_defined_function_subquery.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02148'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE FUNCTION 02148_test_function AS () -> (SELECT * FROM 02148_test_table LIMIT 1);","fileName":"../ClickHouse/tests/queries/0_stateless/02148_sql_user_defined_function_subquery.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE OR REPLACE FUNCTION 02148_test_function AS () -> (SELECT value FROM 02148_test_table LIMIT 1);","fileName":"../ClickHouse/tests/queries/0_stateless/02148_sql_user_defined_function_subquery.sql","errors":[{"message":"no viable alternative at input 'CREATE OR REPLACE FUNCTION'","startColumn":18,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE source (a Int32) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02139_MV_with_scalar_subquery.sql","errors":[]},{"query":"CREATE TABLE source_null AS source ENGINE=Null;","fileName":"../ClickHouse/tests/queries/0_stateless/02139_MV_with_scalar_subquery.sql","errors":[]},{"query":"CREATE TABLE dest_a (count UInt32, min Int32, max Int32, count_subquery Int32, min_subquery Int32, max_subquery Int32) ENGINE=MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02139_MV_with_scalar_subquery.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_null TO source_null AS SELECT * FROM source;","fileName":"../ClickHouse/tests/queries/0_stateless/02139_MV_with_scalar_subquery.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_a to dest_a AS SELECT\ncount() AS count,\nmin(a) AS min,\nmax(a) AS max,\n(SELECT count() FROM source_null) AS count_subquery,\n(SELECT min(a) FROM source_null) AS min_subquery,\n(SELECT max(a) FROM source_null) AS max_subquery\nFROM source_null\nGROUP BY count_subquery, min_subquery, max_subquery;","fileName":"../ClickHouse/tests/queries/0_stateless/02139_MV_with_scalar_subquery.sql","errors":[]},{"query":"CREATE TABLE main ( \\`id\\` String, \\`color\\` String, \\`section\\` String, \\`description\\` String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02137_mv_into_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE main ( \\'","startColumn":20,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE destination_join ( \\`key\\` String, \\`id\\` String, \\`color\\` String, \\`section\\` String, \\`description\\` String) ENGINE = Join(ANY, LEFT, key);","fileName":"../ClickHouse/tests/queries/0_stateless/02137_mv_into_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE destination_join ( \\'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE destination_set (\\`key\\` String) ENGINE = Set;","fileName":"../ClickHouse/tests/queries/0_stateless/02137_mv_into_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE destination_set (\\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW mv_to_join TO \\`destination_join\\` AS SELECT concat(id, '_', color) AS key, * FROM main;","fileName":"../ClickHouse/tests/queries/0_stateless/02137_mv_into_join.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv_to_join TO \\'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW mv_to_set TO \\`destination_set\\` AS SELECT key FROM destination_join;","fileName":"../ClickHouse/tests/queries/0_stateless/02137_mv_into_join.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv_to_set TO \\'","startColumn":38,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE t1 (\\`id\\` Int32, \\`key\\` String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02133_issue_32458.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t2 (\\`id\\` Int32, \\`key\\` String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02133_issue_32458.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE errors_local (level LowCardinality(String)) ENGINE=ReplacingMergeTree ORDER BY level settings min_bytes_for_wide_part = '10000000';","fileName":"../ClickHouse/tests/queries/0_stateless/02133_final_prewhere_where_lowcardinality_replacing.sql","errors":[]},{"query":"CREATE TABLE errors_local(level LowCardinality(String)) ENGINE=ReplacingMergeTree ORDER BY level;","fileName":"../ClickHouse/tests/queries/0_stateless/02133_final_prewhere_where_lowcardinality_replacing.sql","errors":[]},{"query":"create table a8x ENGINE = MergeTree ORDER BY tuple() settings min_bytes_for_wide_part=0 as SELECT number FROM system.numbers limit 100;","fileName":"../ClickHouse/tests/queries/0_stateless/02132_empty_mutation_livelock.sql","errors":[]},{"query":"CREATE TABLE 02131_rqtable (x UInt8) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_used_row_policies_in_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02131'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE ROW POLICY 02131_filter_1 ON 02131_rqtable USING x=1 AS permissive TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_used_row_policies_in_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY 02131_filter_2 ON 02131_rqtable USING x=2 AS permissive TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_used_row_policies_in_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY 02131_filter_3 ON 02131_rqtable USING x=3 AS permissive TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_used_row_policies_in_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY 02131_filter_4 ON 02131_rqtable USING x<=2 AS restrictive TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_used_row_policies_in_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY 02131_filter_5 ON 02131_rqtable USING x>=2 AS restrictive TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_used_row_policies_in_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE t_index_non_materialized (a UInt32) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02131_skip_index_not_materialized.sql","errors":[]},{"query":"CREATE TABLE 02131_rptable (x UInt8) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_row_policies_combination.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02131'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE ROW POLICY 02131_filter_1 ON 02131_rptable USING x=1 AS permissive TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_row_policies_combination.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY 02131_filter_2 ON 02131_rptable USING x=2 AS permissive TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_row_policies_combination.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY 02131_filter_3 ON 02131_rptable USING x=3 AS permissive TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_row_policies_combination.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY 02131_filter_4 ON 02131_rptable USING x<=2 AS restrictive TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_row_policies_combination.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY 02131_filter_5 ON 02131_rptable USING x>=2 AS restrictive TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_row_policies_combination.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"create table t (x UInt64) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_mv_many_chunks_bug.sql","errors":[]},{"query":"create materialized view t_mv engine = MergeTree order by tuple() as select uniq(x), bitAnd(x, 255) as y from t group by y;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_mv_many_chunks_bug.sql","errors":[]},{"query":"CREATE TABLE t_materialize_column (i Int32) ENGINE = MergeTree ORDER BY i PARTITION BY i\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02131_materialize_column_cast.sql","errors":[]},{"query":"create table ttl_test_02129(a Int64, b String, d Date) Engine=MergeTree partition by d order by a\nsettings min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0, materialize_ttl_recalculate_only = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02129_add_column_add_ttl.sql","errors":[]},{"query":"create table ttl_test_02129(a Int64, b String, d Date) Engine=MergeTree partition by d order by a\nsettings min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0, materialize_ttl_recalculate_only = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02129_add_column_add_ttl.sql","errors":[]},{"query":"CREATE TABLE 02127_join_settings_with_persistency_1 (k UInt64, s String) ENGINE = Join(ANY, LEFT, k) SETTINGS persistent=1, join_any_take_last_row=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02127_storage_join_settings_with_persistency.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02127'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 02127_join_settings_with_persistency_0 (k UInt64, s String) ENGINE = Join(ANY, LEFT, k) SETTINGS persistent=0, join_any_take_last_row=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02127_storage_join_settings_with_persistency.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02127'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE FUNCTION 02126_function AS x -> x;","fileName":"../ClickHouse/tests/queries/0_stateless/02126_identity_user_defined_function.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02126_function AS () -> x;","fileName":"../ClickHouse/tests/queries/0_stateless/02126_identity_user_defined_function.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02126_function AS () -> 5;","fileName":"../ClickHouse/tests/queries/0_stateless/02126_identity_user_defined_function.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE alter_column_02126 (a Int, x Int, y Int) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02126_alter_table_alter_column.sql","errors":[]},{"query":"CREATE FUNCTION 02125_function AS x -> 02125_function(x);","fileName":"../ClickHouse/tests/queries/0_stateless/02125_recursive_sql_user_defined_functions.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02125_function_1 AS x -> 02125_function_2(x);","fileName":"../ClickHouse/tests/queries/0_stateless/02125_recursive_sql_user_defined_functions.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02125_function_2 AS x -> 02125_function_1(x);","fileName":"../ClickHouse/tests/queries/0_stateless/02125_recursive_sql_user_defined_functions.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE OR REPLACE FUNCTION 02125_function_2 AS x -> x + 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02125_recursive_sql_user_defined_functions.sql","errors":[{"message":"no viable alternative at input 'CREATE OR REPLACE FUNCTION'","startColumn":18,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE data ( \\`id\\` UInt64, \\`timestamp\\` DateTime) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02125_query_views_log_window_function.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE data ( \\'","startColumn":20,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv Engine Memory as select count(id), tumbleStart(w_id) as window_start from data group by tumble(timestamp, INTERVAL '10' SECOND) as w_id;","fileName":"../ClickHouse/tests/queries/0_stateless/02125_query_views_log_window_function.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"create table src (key Int) engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/02125_query_views_log.sql","errors":[]},{"query":"create table dst (key Int) engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/02125_query_views_log.sql","errors":[]},{"query":"create materialized view mv1 to dst as select * from src;","fileName":"../ClickHouse/tests/queries/0_stateless/02125_query_views_log.sql","errors":[]},{"query":"create materialized view mv2 to dst as select * from src;","fileName":"../ClickHouse/tests/queries/0_stateless/02125_query_views_log.sql","errors":[]},{"query":"CREATE TABLE log (A String) ENGINE= FileLog('/tmp/aaa.csv', 'CSV'); -- {serverError BAD_ARGUMENTS } CREATE TABLE log (A String) ENGINE= FileLog('/tmp/aaa.csv', 'CSV'); -- {serverError BAD_ARGUMENTS }\nCREATE TABLE log (A String) ENGINE= FileLog('/tmp/aaa.csv', 'CSV'); -- {serverError BAD_ARGUMENTS }\n","fileName":"../ClickHouse/tests/queries/0_stateless/02125_fix_storage_filelog.sql","errors":[]},{"query":"CREATE TABLE 02125_test_table (\nid UInt64,\nvalue Nullable(String)\n)\nENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02125_dict_get_type_nullable_fix.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 02125'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 02125_test_dictionary (\nid UInt64,\nvalue Nullable(String)\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE '02125_test_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/02125_dict_get_type_nullable_fix.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 02125'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"create table test (x String) Engine=StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02125_constant_if_condition_and_not_existing_column.sql","errors":[]},{"query":"CREATE TABLE t_uncompressed_cache(id UInt32, n UInt32) ENGINE = MergeTree ORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0,\nmin_compress_block_size = 12, max_compress_block_size = 12,\nindex_granularity = 4;","fileName":"../ClickHouse/tests/queries/0_stateless/02124_uncompressed_cache.sql","errors":[]},{"query":"CREATE TABLE insert_dedup_token1 ( id Int32, val UInt32\n) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/insert_dedup_token', 'r1') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02124_insert_deduplication_token_replica.sql","errors":[]},{"query":"CREATE TABLE insert_dedup_token2 ( id Int32, val UInt32\n) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/insert_dedup_token', 'r2') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02124_insert_deduplication_token_replica.sql","errors":[]},{"query":"CREATE TABLE test (test String, A Int64, B Int64) ENGINE = ReplicatedMergeTree ('/clickhouse/tables/{database}/test_02124/{table}', '1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02124_insert_deduplication_token_materialized_views.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_mv_a Engine=ReplicatedMergeTree ('/clickhouse/tables/{database}/test_02124/{table}', '1') order by tuple() AS SELECT test, A, count() c FROM test group by test, A;","fileName":"../ClickHouse/tests/queries/0_stateless/02124_insert_deduplication_token_materialized_views.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_mv_b Engine=ReplicatedMergeTree ('/clickhouse/tables/{database}/test_02124/{table}', '1') partition by A order by tuple() AS SELECT test, A, count() c FROM test group by test, A;","fileName":"../ClickHouse/tests/queries/0_stateless/02124_insert_deduplication_token_materialized_views.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_mv_c Engine=ReplicatedMergeTree ('/clickhouse/tables/{database}/test_02124/{table}', '1') order by tuple() AS SELECT test, A, count() c FROM test group by test, A;","fileName":"../ClickHouse/tests/queries/0_stateless/02124_insert_deduplication_token_materialized_views.sql","errors":[]},{"query":"CREATE TABLE insert_dedup_token ( id Int32, val UInt32\n) ENGINE=MergeTree() ORDER BY id\nSETTINGS non_replicated_deduplication_window=0xFFFFFFFF;","fileName":"../ClickHouse/tests/queries/0_stateless/02124_insert_deduplication_token.sql","errors":[]},{"query":"CREATE TABLE t (\n\td1 Decimal32(5),\n\td2 Decimal64(10),\n\td3 Decimal128(30),\n\td4 Decimal256(50),\n\tf1 Float32,\n\tf2 Float32\n)ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02124_comparison_betwwen_decimal_and_float.sql","errors":[]},{"query":"CREATE TABLE s (\nid UInt64,\nvalue String\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02124_clickhouse_dictionary_with_predefined_configuration.sql","errors":[]},{"query":"CREATE DICTIONARY dict (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(NAME clickhouse_dictionary PORT tcpPort() DB currentDatabase()))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(CACHE(SIZE_IN_CELLS 10));","fileName":"../ClickHouse/tests/queries/0_stateless/02124_clickhouse_dictionary_with_predefined_configuration.sql","errors":[]},{"query":"CREATE TABLE table_MySQLWire (x UInt64) ENGINE = File(MySQLWire);","fileName":"../ClickHouse/tests/queries/0_stateless/02123_MySQLWire_regression.sql","errors":[]},{"query":"CREATE TABLE t_tuple_element(t1 Tuple(a UInt32, s String), t2 Tuple(UInt32, String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02116_tuple_element_analyzer.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS test_02115;","fileName":"../ClickHouse/tests/queries/0_stateless/02115_rewrite_local_join_right_distribute_table.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_02115;'","startColumn":40,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"create table t1_local(a Int32) engine=MergeTree() order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/02115_rewrite_local_join_right_distribute_table.sql","errors":[]},{"query":"create table t2_local as t1_local;","fileName":"../ClickHouse/tests/queries/0_stateless/02115_rewrite_local_join_right_distribute_table.sql","errors":[]},{"query":"create table t1_all as t1_local engine Distributed(test_cluster_two_shards_localhost, test_02115, t1_local, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/02115_rewrite_local_join_right_distribute_table.sql","errors":[]},{"query":"create table t2_all as t2_local engine Distributed(test_cluster_two_shards_localhost, test_02115, t2_local, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/02115_rewrite_local_join_right_distribute_table.sql","errors":[]},{"query":"CREATE TABLE t_map_contains (m Map(String, UInt32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02115_map_contains_analyzer.sql","errors":[]},{"query":"CREATE TABLE bool_test (value Bool,f String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02114_bool_type.sql","errors":[]},{"query":"CREATE TABLE tabl_1 (key String) ENGINE MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02113_base64encode_trailing_bytes.sql","errors":[]},{"query":"CREATE TABLE tabl_2 (key String) ENGINE MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/02113_base64encode_trailing_bytes.sql","errors":[]},{"query":"CREATE TABLE with_fill_date (d Date, d32 Date32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02112_with_fill_interval.sql","errors":[]},{"query":"CREATE TABLE with_fill_date (d DateTime('UTC'), d64 DateTime64(3, 'UTC')) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02112_with_fill_interval.sql","errors":[]},{"query":"create table set_index (a Int32, b Int32, INDEX b_set b type set(0) granularity 1) engine MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02112_skip_index_set_and_or.sql","errors":[]},{"query":"CREATE DATABASE 02111_modify_table_comment;","fileName":"../ClickHouse/tests/queries/0_stateless/02111_modify_table_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 02111'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE t (\n\\`n\\` Int8\n)\nENGINE = MergeTree\nORDER BY n\nCOMMENT 'this is a MergeTree table';","fileName":"../ClickHouse/tests/queries/0_stateless/02111_modify_table_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_merge AS t ENGINE = Merge('02111_modify_table_comment', 't')\nCOMMENT 'this is a Merge table';","fileName":"../ClickHouse/tests/queries/0_stateless/02111_modify_table_comment.sql","errors":[{"message":"mismatched input 'COMMENT' expecting <EOF>","startColumn":0,"startLine":2,"endColumn":7,"endLine":2}]},{"query":"CREATE TABLE map_extractKeyLike_test (id UInt32, map Map(String, String)) Engine=MergeTree() ORDER BY id settings index_granularity=2;","fileName":"../ClickHouse/tests/queries/0_stateless/02111_function_mapExtractKeyLike.sql","errors":[]},{"query":"CREATE FUNCTION 02103_test_function AS x -> x + 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02103_sql_user_defined_functions_composition.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02103_test_function_with_nested_function_empty_args AS () -> 02103_test_function(1);","fileName":"../ClickHouse/tests/queries/0_stateless/02103_sql_user_defined_functions_composition.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02103_test_function_with_nested_function_arg AS (x) -> 02103_test_function(x);","fileName":"../ClickHouse/tests/queries/0_stateless/02103_sql_user_defined_functions_composition.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION IF NOT EXISTS 02102_test_function AS x -> x + 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02102_sql_user_defined_functions_create_if_not_exists.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02102_test_function AS x -> x + 1; --{serverError FUNCTION_ALREADY_EXISTS} CREATE FUNCTION IF NOT EXISTS 02102_test_function AS x -> x + 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02102_sql_user_defined_functions_create_if_not_exists.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02101_test_function AS x -> x + 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02101_sql_user_defined_functions_drop_if_exists.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE OR REPLACE FUNCTION 02101_test_function AS x -> x + 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02101_sql_user_defined_functions_create_or_replace.sql","errors":[{"message":"no viable alternative at input 'CREATE OR REPLACE FUNCTION'","startColumn":18,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE OR REPLACE FUNCTION 02101_test_function AS x -> x + 2;","fileName":"../ClickHouse/tests/queries/0_stateless/02101_sql_user_defined_functions_create_or_replace.sql","errors":[{"message":"no viable alternative at input 'CREATE OR REPLACE FUNCTION'","startColumn":18,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE tbl_repr( ts DateTime,\nx  String)\nENGINE=MergeTree ORDER BY ts;","fileName":"../ClickHouse/tests/queries/0_stateless/02100_limit_push_down_bug.sql","errors":[]},{"query":"CREATE TABLE foo (ts DateTime, x UInt64) ENGINE = MergeTree PARTITION BY toYYYYMMDD(ts)\nORDER BY (ts);","fileName":"../ClickHouse/tests/queries/0_stateless/02100_alter_scalar_circular_deadlock.sql","errors":[]},{"query":"CREATE TABLE bar (ts DateTime, x UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02100_alter_scalar_circular_deadlock.sql","errors":[]},{"query":"CREATE FUNCTION 02099_lambda_function AS x -> arrayMap(array_element -> array_element * 2, x);","fileName":"../ClickHouse/tests/queries/0_stateless/02099_sql_user_defined_functions_lambda.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 02098_alias_function AS x -> (((x * 2) AS x_doubled) + x_doubled);","fileName":"../ClickHouse/tests/queries/0_stateless/02098_sql_user_defined_functions_aliases.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE t_remove_sample_by(id UInt64) ENGINE = MergeTree ORDER BY id SAMPLE BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02097_remove_sample_by.sql","errors":[]},{"query":"CREATE TABLE t_remove_sample_by(id UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/t_remove_sample_by', '1')\nORDER BY id SAMPLE BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02097_remove_sample_by.sql","errors":[]},{"query":"CREATE TABLE t_remove_sample_by(id UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02097_remove_sample_by.sql","errors":[]},{"query":"CREATE TABLE t_remove_sample_by(id String) ENGINE = MergeTree ORDER BY id SAMPLE BY id\nSETTINGS check_sample_column_is_correct = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02097_remove_sample_by.sql","errors":[]},{"query":"CREATE TABLE polygons_test_table (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\nname String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02097_polygon_dictionary_store_key.sql","errors":[]},{"query":"CREATE DICTIONARY polygons_test_dictionary_no_option (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\nname String\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE 'polygons_test_table'))\nLAYOUT(POLYGON())\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02097_polygon_dictionary_store_key.sql","errors":[]},{"query":"CREATE DICTIONARY polygons_test_dictionary (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\nname String\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE 'polygons_test_table'))\nLAYOUT(POLYGON(STORE_POLYGON_KEY_COLUMN 1))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/02097_polygon_dictionary_store_key.sql","errors":[]},{"query":"CREATE DATABASE 02097_db;","fileName":"../ClickHouse/tests/queries/0_stateless/02097_default_dict_get_add_database.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 02097'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE test_table (\nkey_column UInt64,\ndata_column_1 UInt64,\ndata_column_2 UInt8\n)\nENGINE = MergeTree\nORDER BY key_column;","fileName":"../ClickHouse/tests/queries/0_stateless/02097_default_dict_get_add_database.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary (\nkey_column UInt64 DEFAULT 0,\ndata_column_1 UInt64 DEFAULT 1,\ndata_column_2 UInt8 DEFAULT 1\n)\nPRIMARY KEY key_column\nLAYOUT(DIRECT())\nSOURCE(CLICKHOUSE(TABLE 'test_table'));","fileName":"../ClickHouse/tests/queries/0_stateless/02097_default_dict_get_add_database.sql","errors":[]},{"query":"CREATE TABLE test_table_default (\ndata_1 DEFAULT dictGetUInt64('02097_db.test_dictionary', 'data_column_1', toUInt64(0)),\ndata_2 DEFAULT dictGet(02097_db.test_dictionary, 'data_column_2', toUInt64(0))\n)\nENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02097_default_dict_get_add_database.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table_default (\\ndata_1 DEFAULT dictGetUInt64('02097_db.test_dictionary', 'data_column_1', toUInt64(0)),\\ndata_2 DEFAULT dictGet(02097_db.test_dictionary'","startColumn":32,"startLine":3,"endColumn":47,"endLine":3}]},{"query":"CREATE FUNCTION 02096_test_function AS x -> x + 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02096_sql_user_defined_function_alias.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE t (n UInt8) ENGINE=MergeTree ORDER BY n SAMPLE BY tuple(); -- { serverError INCORRECT_QUERY } CREATE TABLE t (n UInt8) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02096_sample_by_tuple.sql","errors":[]},{"query":"create database db_hang engine=Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/02096_rename_atomic_hang.sql","errors":[]},{"query":"create table db_hang.test(A Int64) Engine=MergeTree order by A;","fileName":"../ClickHouse/tests/queries/0_stateless/02096_rename_atomic_hang.sql","errors":[]},{"query":"create materialized view db_hang.test_mv(A Int64) Engine=MergeTree order by A as select * from db_hang.test;","fileName":"../ClickHouse/tests/queries/0_stateless/02096_rename_atomic_hang.sql","errors":[]},{"query":"create database db_hang_temp engine=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/02096_rename_atomic_hang.sql","errors":[]},{"query":"CREATE TABLE t1 ( \\`a1\\` Int64, \\`1a1\\` Int64 ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02096_join_unusual_identifier_begin.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 ( \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE t2 ( \\`b1\\` Int64, \\`1b1\\` Int64 ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02096_join_unusual_identifier_begin.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 ( \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE t3 ( \\`c1\\` Int64, \\`1c1\\` Int64 ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02096_join_unusual_identifier_begin.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t3 ( \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"create table utf8_overlap (str String) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02071_lower_upper_utf8_row_overlaps.sql","errors":[]},{"query":"CREATE TABLE join_on_disk (id Int) Engine=MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02070_join_on_disk.sql","errors":[]},{"query":"CREATE TABLE partslost_0 (x String) ENGINE=ReplicatedMergeTree('/clickhouse/table/{database}_02067_lost/partslost', '0') ORDER BY tuple() SETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0, old_parts_lifetime = 1,\ncleanup_delay_period = 1, cleanup_delay_period_random_add = 1, cleanup_thread_preferred_points_per_iteration=0,\nindex_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02067_lost_part_s3.sql","errors":[]},{"query":"CREATE TABLE partslost_1 (x String) ENGINE=ReplicatedMergeTree('/clickhouse/table/{database}_02067_lost/partslost', '1') ORDER BY tuple() SETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0, old_parts_lifetime = 1,\ncleanup_delay_period = 1, cleanup_delay_period_random_add = 1, cleanup_thread_preferred_points_per_iteration=0,\nindex_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02067_lost_part_s3.sql","errors":[]},{"query":"CREATE TABLE partslost_2 (x String) ENGINE=ReplicatedMergeTree('/clickhouse/table/{database}_02067_lost/partslost', '2') ORDER BY tuple() SETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0, old_parts_lifetime = 1,\ncleanup_delay_period = 1, cleanup_delay_period_random_add = 1, cleanup_thread_preferred_points_per_iteration=0,\nindex_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02067_lost_part_s3.sql","errors":[]},{"query":"create table data_02053 (id Int64, A Nullable(Int64), X Int64 materialized coalesce(A, -1)) engine=MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/02053_INSERT_SELECT_MATERIALIZED.sql","errors":[]},{"query":"CREATE TABLE remote_test(a1 UInt8) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02046_remote_table_function_named_collections.sql","errors":[]},{"query":"CREATE TABLE alter_table (a UInt8, b Int16) ENGINE = MergeTree\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02041_test_fuzzy_alter.sql","errors":[]},{"query":"CREATE TABLE test_table (message String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02036_jit_short_circuit.sql","errors":[]},{"query":"CREATE TABLE test_tuple_filter (id UInt32, value String, log_date Date) Engine=MergeTree() ORDER BY id PARTITION BY log_date SETTINGS index_granularity = 3, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/02030_tuple_filter.sql","errors":[]},{"query":"CREATE TABLE map_containsKeyLike_test (id UInt32, map Map(String, String)) Engine=MergeTree() ORDER BY id settings index_granularity=2;","fileName":"../ClickHouse/tests/queries/0_stateless/02030_function_mapContainsKeyLike.sql","errors":[]},{"query":"CREATE TABLE test_data ( col1 Nullable(String),\ncol2 Nullable(String),\ncol3 Nullable(String)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02029_output_csv_null_representation.sql","errors":[]},{"query":"CREATE TABLE test_table (\nkey UInt64,\nvalue String,\nINDEX value_index value TYPE minmax GRANULARITY 1\n)\nEngine=MergeTree()\nORDER BY key SETTINGS compress_marks=false;","fileName":"../ClickHouse/tests/queries/0_stateless/02028_system_data_skipping_indices_size.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\nkey UInt64,\\nvalue String,\\nINDEX value_index value TYPE minmax GRANULARITY 1\\n)\\nEngine=MergeTree()\\nORDER BY key SETTINGS compress_marks=false'","startColumn":37,"startLine":7,"endColumn":42,"endLine":7}]},{"query":"create table test_table engine MergeTree order by a as select a_table.a, b_table.b_arr from (select arrayJoin(range(10000)) as a) a_table cross join (select range(10000) as b_arr) b_table settings max_memory_usage = 1; -- { serverError MEMORY_LIMIT_EXCEEDED } ","fileName":"../ClickHouse/tests/queries/0_stateless/02028_create_select_settings.sql","errors":[]},{"query":"CREATE DATABASE 02028_db ON CLUSTER test_shard_localhost;","fileName":"../ClickHouse/tests/queries/0_stateless/02028_add_default_database_for_alterquery_on_cluster.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 02028'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE t1_local ON CLUSTER test_shard_localhost(partition_col_1 String, tc1 int,tc2 int)ENGINE=MergeTree() PARTITION BY partition_col_1 ORDER BY tc1;","fileName":"../ClickHouse/tests/queries/0_stateless/02028_add_default_database_for_alterquery_on_cluster.sql","errors":[]},{"query":"CREATE TABLE t2_local ON CLUSTER test_shard_localhost(partition_col_1 String, tc1 int,tc2 int)ENGINE=MergeTree() PARTITION BY partition_col_1 ORDER BY tc1;","fileName":"../ClickHouse/tests/queries/0_stateless/02028_add_default_database_for_alterquery_on_cluster.sql","errors":[]},{"query":"CREATE TABLE t_desc_subcolumns (\nd Date,\nn Nullable(String) COMMENT 'It is a nullable column',\narr1 Array(UInt32) CODEC(ZSTD),\narr2 Array(Array(String)) TTL d + INTERVAL 1 DAY,\nt Tuple(s String, a Array(Tuple(a UInt32, b UInt32))) CODEC(ZSTD)\n)\nENGINE = MergeTree ORDER BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/02026_describe_include_subcolumns.sql","errors":[]},{"query":"CREATE TABLE t_comp_subcolumns (id UInt32, n Nullable(String), arr Array(Array(UInt32))) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02025_subcolumns_compact_parts.sql","errors":[]},{"query":"CREATE TABLE test (\nd DateTime,\na String,\nb UInt64\n)\nENGINE = MergeTree\nPARTITION BY toDate(d)\nORDER BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/02025_having_filter_column.sql","errors":[]},{"query":"CREATE DATABASE 2025_test_db;","fileName":"../ClickHouse/tests/queries/0_stateless/02025_dictionary_view_different_db.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 2025'","startColumn":16,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE 2025_test_db.test_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02025_dictionary_view_different_db.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 2025'","startColumn":13,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE DICTIONARY 2025_test_db.test_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nLAYOUT(DIRECT())\nSOURCE(CLICKHOUSE(TABLE 'test_table' DB '2025_test_db'));","fileName":"../ClickHouse/tests/queries/0_stateless/02025_dictionary_view_different_db.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 2025'","startColumn":18,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"CREATE TABLE 2025_test_db.view_table (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02025_dictionary_view_different_db.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 2025'","startColumn":13,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE VIEW test_view_different_db AS SELECT id, value, dictGet('2025_test_db.test_dictionary', 'value', id) FROM 2025_test_db.view_table;","fileName":"../ClickHouse/tests/queries/0_stateless/02025_dictionary_view_different_db.sql","errors":[{"message":"no viable alternative at input 'CREATE VIEW test_view_different_db AS SELECT id, value, dictGet('2025_test_db.test_dictionary', 'value', id) FROM 2025'","startColumn":114,"startLine":1,"endColumn":118,"endLine":1}]},{"query":"CREATE TABLE dict_nested_map_test_table (\n\ttest_id UInt32,\n\ttype String,\n\ttest_config Array(Map(String, Decimal(28,12))),\n\tncp UInt8\n)\nENGINE=MergeTree()\nORDER BY test_id;","fileName":"../ClickHouse/tests/queries/0_stateless/02025_dictionary_array_nested_map.sql","errors":[]},{"query":"CREATE DICTIONARY dict_nested_map_dictionary (\n\ttest_id UInt32,\n\ttype String,\n\ttest_config Array(Map(String, Decimal(28,12))),\n\tncp UInt8\n)\nPRIMARY KEY test_id\nSOURCE(CLICKHOUSE(TABLE 'dict_nested_map_test_table'))\nLAYOUT(HASHED())\nLIFETIME(MIN 1 MAX 1000000);","fileName":"../ClickHouse/tests/queries/0_stateless/02025_dictionary_array_nested_map.sql","errors":[]},{"query":"CREATE TABLE t (b UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02024_merge_regexp_assert.sql","errors":[]},{"query":"CREATE TABLE source_table (\nid UInt64,\nvalue String\n) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02024_create_dictionary_with_comment.sql","errors":[]},{"query":"CREATE DICTIONARY 2024_dictionary_with_comment (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'source_table'))\nLAYOUT(FLAT())\nLIFETIME(MIN 0 MAX 1000)\nCOMMENT 'Test dictionary with comment';","fileName":"../ClickHouse/tests/queries/0_stateless/02024_create_dictionary_with_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 2024'","startColumn":18,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"CREATE TABLE t_transform_or(B AggregateFunction(uniq, String), A String) Engine=MergeTree ORDER BY (A);","fileName":"../ClickHouse/tests/queries/0_stateless/02023_transform_or_to_in.sql","errors":[]},{"query":"create table t1 (id LowCardinality(Nullable(Int64))) engine MergeTree order by id settings allow_nullable_key = 1, index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02023_nullable_int_uint_where.sql","errors":[]},{"query":"CREATE TABLE bf_tokenbf_array_test (\nrow_id UInt32,\narray Array(String),\narray_fixed Array(FixedString(2)),\nINDEX array_bf_tokenbf array TYPE tokenbf_v1(256,2,0) GRANULARITY 1,\nINDEX array_fixed_bf_tokenbf array_fixed TYPE tokenbf_v1(256,2,0) GRANULARITY 1\n) Engine=MergeTree() ORDER BY row_id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02022_array_full_text_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bf_ngram_array_test (\nrow_id UInt32,\narray Array(String),\narray_fixed Array(FixedString(2)),\nINDEX array_ngram array TYPE ngrambf_v1(4,256,2,0) GRANULARITY 1,\nINDEX array_fixed_ngram array_fixed TYPE ngrambf_v1(4,256,2,0) GRANULARITY 1\n) Engine=MergeTree() ORDER BY row_id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02022_array_full_text_bloom_filter_index.sql","errors":[]},{"query":"create table data_02021 (key Int) engine=MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/02021_prewhere_column_optimization.sql","errors":[]},{"query":"create table data_02021 (key Int) engine=MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/02021_prewhere_always_true_where.sql","errors":[]},{"query":"CREATE TABLE test_map (value Map(String, String)) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02021_map_has.sql","errors":[]},{"query":"CREATE TABLE map_test_index_map_keys (\nrow_id UInt32,\nmap Map(String, String),\nINDEX map_bloom_filter_keys mapKeys(map) TYPE bloom_filter GRANULARITY 1\n) Engine=MergeTree() ORDER BY row_id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02021_map_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE map_test_index_map_values (\nrow_id UInt32,\nmap Map(String, String),\nINDEX map_bloom_filter_values mapValues(map) TYPE bloom_filter GRANULARITY 1\n) Engine=MergeTree() ORDER BY row_id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02021_map_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02021_h3_is_res_classIII.sql","errors":[]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02021_h3_is_pentagon.sql","errors":[]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02021_h3_get_faces.sql","errors":[]},{"query":"create table t (val UInt32) engine = MergeTree order by val;","fileName":"../ClickHouse/tests/queries/0_stateless/02017_create_distributed_table_coredump.sql","errors":[]},{"query":"create table td1 engine = Distributed(test_shard_localhost, currentDatabase(), 't') as t;","fileName":"../ClickHouse/tests/queries/0_stateless/02017_create_distributed_table_coredump.sql","errors":[{"message":"no viable alternative at input 'create table td1 engine = Distributed(test_shard_localhost, currentDatabase(), 't') as t'","startColumn":87,"startLine":1,"endColumn":88,"endLine":1}]},{"query":"create table td2 engine = Distributed(test_shard_localhost, currentDatabase(), 't', xxHash32(val), default) as t;","fileName":"../ClickHouse/tests/queries/0_stateless/02017_create_distributed_table_coredump.sql","errors":[{"message":"no viable alternative at input 'create table td2 engine = Distributed(test_shard_localhost, currentDatabase(), 't', xxHash32(val), default) as t'","startColumn":111,"startLine":1,"endColumn":112,"endLine":1}]},{"query":"create table td3 engine = Distributed(test_shard_localhost, currentDatabase(), 't', xxHash32(val), 'default') as t;","fileName":"../ClickHouse/tests/queries/0_stateless/02017_create_distributed_table_coredump.sql","errors":[{"message":"no viable alternative at input 'create table td3 engine = Distributed(test_shard_localhost, currentDatabase(), 't', xxHash32(val), 'default') as t'","startColumn":113,"startLine":1,"endColumn":114,"endLine":1}]},{"query":"CREATE TABLE test_nested (\n\\`id\\` String,\n\\`with_dot.str\\` String,\n\\`with_dot.array\\` Array(Int32)\n)\nENGINE = MergeTree()\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02017_columns_with_dot_2.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_nested (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_with_dots (id UInt32, arr Array(UInt32), \\`b.id\\` UInt32, \\`b.arr\\` Array(UInt32)) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02017_columns_with_dot.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_with_dots (id UInt32, arr Array(UInt32), \\'","startColumn":56,"startLine":1,"endColumn":57,"endLine":1}]},{"query":"CREATE TABLE t_with_dots (id UInt32, arr Array(UInt32), \\`b.id\\` UInt32, \\`b.arr\\` Array(UInt32)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/02017_columns_with_dot.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_with_dots (id UInt32, arr Array(UInt32), \\'","startColumn":56,"startLine":1,"endColumn":57,"endLine":1}]},{"query":"CREATE TABLE t_with_dots (id UInt32, arr Array(UInt32), \\`b.id\\` UInt32, \\`b.arr\\` Array(UInt32)) ENGINE = MergeTree ORDER BY id\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02017_columns_with_dot.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_with_dots (id UInt32, arr Array(UInt32), \\'","startColumn":56,"startLine":1,"endColumn":57,"endLine":1}]},{"query":"CREATE TABLE test_bit_shift_left_string_integer (str String, fixedStr FixedString(10), id Int64) engine=Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02017_bit_shift_left_for_string_integer.sql","errors":[]},{"query":"CREATE TABLE summing_mt_aggregating_column (\nKey UInt64,\nValue UInt64,\nConcatArraySimple SimpleAggregateFunction(groupArrayArray, Array(UInt64)),\nConcatArrayComplex AggregateFunction(groupArrayArray, Array(UInt64))\n)\nENGINE = SummingMergeTree()\nORDER BY Key;","fileName":"../ClickHouse/tests/queries/0_stateless/02016_summing_mt_aggregating_column.sql","errors":[]},{"query":"CREATE TABLE test_bit_shift_right_string_integer (str String, fixedStr FixedString(10), id Int64) engine=Log;","fileName":"../ClickHouse/tests/queries/0_stateless/02016_bit_shift_right_for_string_integer.sql","errors":[]},{"query":"CREATE TABLE spark_bar_test (\\`cnt\\` UInt64,\\`event_date\\` Date) ENGINE = MergeTree ORDER BY event_date SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/02016_aggregation_spark_bar.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE spark_bar_test (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE nullable_division (x UInt32, y Nullable(UInt32), a Decimal(7, 2), b Nullable(Decimal(7, 2))) ENGINE=MergeTree() order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/02015_division_by_nullable.sql","errors":[]},{"query":"CREATE TABLE test_table (\nkey_column UInt64,\ndata_column_1 UInt64,\ndata_column_2 UInt8\n)\nENGINE = MergeTree\nORDER BY key_column;","fileName":"../ClickHouse/tests/queries/0_stateless/02015_column_default_dict_get_identifier.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary (\nkey_column UInt64 DEFAULT 0,\ndata_column_1 UInt64 DEFAULT 1,\ndata_column_2 UInt8 DEFAULT 1\n)\nPRIMARY KEY key_column\nLAYOUT(DIRECT())\nSOURCE(CLICKHOUSE(DB currentDatabase() TABLE 'test_table'));","fileName":"../ClickHouse/tests/queries/0_stateless/02015_column_default_dict_get_identifier.sql","errors":[]},{"query":"CREATE TABLE test_table_default (\ndata_1 DEFAULT dictGetUInt64('test_dictionary', 'data_column_1', toUInt64(0)),\ndata_2 DEFAULT dictGet(test_dictionary, 'data_column_2', toUInt64(0))\n)\nENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02015_column_default_dict_get_identifier.sql","errors":[]},{"query":"CREATE TABLE short (e Int64, t DateTime ) ENGINE = MergeTree PARTITION BY e ORDER BY t;","fileName":"../ClickHouse/tests/queries/0_stateless/02014_storage_merge_order_by.sql","errors":[]},{"query":"CREATE TABLE long (e Int64, t DateTime ) ENGINE = MergeTree PARTITION BY (e, toStartOfMonth(t)) ORDER BY t;","fileName":"../ClickHouse/tests/queries/0_stateless/02014_storage_merge_order_by.sql","errors":[]},{"query":"CREATE TABLE merged as short ENGINE = Merge(currentDatabase(), 'short|long');","fileName":"../ClickHouse/tests/queries/0_stateless/02014_storage_merge_order_by.sql","errors":[]},{"query":"CREATE TABLE t_map_02014(i1 UInt64, i2 Int32, m1 Map(UInt32, String), m2 Map(Int8, String), m3 Map(Int128, String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02014_map_different_keys.sql","errors":[]},{"query":"CREATE TABLE t_map_02014(s String, fs FixedString(3), m1 Map(String, String), m2 Map(FixedString(3), String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02014_map_different_keys.sql","errors":[]},{"query":"CREATE TABLE dictionary_non_nullable_source_table (id UInt64, value String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02014_dict_get_nullable_key.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary_non_nullable (id UInt64, value String) PRIMARY KEY id LAYOUT(DIRECT()) SOURCE(CLICKHOUSE(TABLE 'dictionary_non_nullable_source_table'));","fileName":"../ClickHouse/tests/queries/0_stateless/02014_dict_get_nullable_key.sql","errors":[]},{"query":"CREATE TABLE dictionary_nullable_source_table (id UInt64, value Nullable(String)) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02014_dict_get_nullable_key.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary_nullable (id UInt64, value Nullable(String)) PRIMARY KEY id LAYOUT(DIRECT()) SOURCE(CLICKHOUSE(TABLE 'dictionary_nullable_source_table'));","fileName":"../ClickHouse/tests/queries/0_stateless/02014_dict_get_nullable_key.sql","errors":[]},{"query":"create table test_uint64 (\\`data\\` UInt64 Default 0) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02013_emptystring_cast.sql","errors":[{"message":"no viable alternative at input 'create table test_uint64 (\\'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"create table test_float64 (\\`data\\` Float64 Default 0.0) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02013_emptystring_cast.sql","errors":[{"message":"no viable alternative at input 'create table test_float64 (\\'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"create table test_date (\\`data\\` Date) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02013_emptystring_cast.sql","errors":[{"message":"no viable alternative at input 'create table test_date (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"create table test_datetime (\\`data\\` DateTime) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02013_emptystring_cast.sql","errors":[{"message":"no viable alternative at input 'create table test_datetime (\\'","startColumn":28,"startLine":1,"endColumn":29,"endLine":1}]},{"query":"CREATE TABLE bftest ( k Int64,\ny Array(Int64) DEFAULT x,\nx Array(Int64),\nindex ix1(x) TYPE bloom_filter GRANULARITY 3\n)\nEngine=MergeTree\nORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/02013_bloom_filter_hasAll.sql","errors":[]},{"query":"create table enum_alter_issue (a Enum16('one' = 1, 'two' = 2), b Int) engine = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02012/enum_alter_issue', 'r2')\nORDER BY b;","fileName":"../ClickHouse/tests/queries/0_stateless/02012_zookeeper_changed_enum_type_incompatible.sql","errors":[]},{"query":"create table enum_alter_issue (a Enum8('one' = 1, 'two' = 2), b Int) engine = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02012/enum_alter_issue', 'r1')\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02012_zookeeper_changed_enum_type.sql","errors":[]},{"query":"CREATE TABLE defaults (\ns FixedString(20)\n)ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02012_sha512_fixedstring.sql","errors":[]},{"query":"CREATE TABLE table_with_range(\\`name\\` String,\\`number\\` UInt32)　ENGINE = S3('http://localhost:11111/test/tsv_with_header.tsv', 'test', 'testtest', 'TSVWithNames')　SETTINGS input_format_with_names_use_header = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02012_settings_clause_for_s3.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE table_with_range(\\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE tbl (\\`lc\\` LowCardinality(UUID)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02012_low_cardinality_uuid_with_extremes.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tbl (\\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"create table enum_alter_issue (a Enum8('one' = 1, 'two' = 2)) engine = MergeTree() ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/02012_changed_enum_type_non_replicated.sql","errors":[]},{"query":"CREATE TABLE normalize_test (id int, value String) ENGINE = MergeTree ORDER BY value;","fileName":"../ClickHouse/tests/queries/0_stateless/02011_normalize_utf8.sql","errors":[]},{"query":"CREATE TABLE test_table (id UInt64) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/02011_dictionary_empty_attribute_list.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary (id UInt64) PRIMARY KEY id LAYOUT(DIRECT()) SOURCE(CLICKHOUSE(TABLE 'test_table'));","fileName":"../ClickHouse/tests/queries/0_stateless/02011_dictionary_empty_attribute_list.sql","errors":[]},{"query":"CREATE TABLE table_2009_part (\\`i\\` Int64, \\`d\\` Date, \\`s\\` String) ENGINE = MergeTree PARTITION BY toYYYYMM(d) ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/02009_array_join_partition.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE table_2009_part (\\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE test02008 ( col Tuple(\na Tuple(key1 int, key2 int),\nb Tuple(key1 int, key2 int)\n)\n) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02008_tuple_to_name_value_pairs.sql","errors":[]},{"query":"CREATE TABLE test02008 ( col Tuple(CPU double, Memory double, Disk double)\n) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02008_tuple_to_name_value_pairs.sql","errors":[]},{"query":"create table test (name String, uuid UUID) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02008_test_union_distinct_in_subquery.sql","errors":[]},{"query":"CREATE TABLE tmp (x Int64) ENGINE = MergeTree() ORDER BY tuple() PARTITION BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02008_materialize_column.sql","errors":[]},{"query":"CREATE TABLE date_table (\nCountryID UInt64,\nCountryKey String,\nStartDate Date,\nEndDate Date,\nTax Float64\n)\nENGINE = MergeTree()\nORDER BY CountryID;","fileName":"../ClickHouse/tests/queries/0_stateless/02008_complex_key_range_hashed_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY range_dictionary (\nCountryID UInt64,\nCountryKey String,\nStartDate Date,\nEndDate Date,\nTax Float64 DEFAULT 0.2\n)\nPRIMARY KEY CountryID, CountryKey\nSOURCE(CLICKHOUSE(TABLE 'date_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(COMPLEX_KEY_RANGE_HASHED())\nRANGE(MIN StartDate MAX EndDate);","fileName":"../ClickHouse/tests/queries/0_stateless/02008_complex_key_range_hashed_dictionary.sql","errors":[]},{"query":"CREATE TABLE date_table (\nCountryID UInt64,\nCountryKey String,\nStartDate Date,\nEndDate Date,\nTax Nullable(Float64)\n)\nENGINE = MergeTree()\nORDER BY CountryID;","fileName":"../ClickHouse/tests/queries/0_stateless/02008_complex_key_range_hashed_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY range_dictionary_nullable (\nCountryID UInt64,\nCountryKey String,\nStartDate Date,\nEndDate Date,\nTax Nullable(Float64) DEFAULT 0.2\n)\nPRIMARY KEY CountryID, CountryKey\nSOURCE(CLICKHOUSE(TABLE 'date_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(COMPLEX_KEY_RANGE_HASHED())\nRANGE(MIN StartDate MAX EndDate);","fileName":"../ClickHouse/tests/queries/0_stateless/02008_complex_key_range_hashed_dictionary.sql","errors":[]},{"query":"CREATE TABLE click_storage ( \\`PhraseID\\` UInt64, \\`PhraseProcessedID\\` UInt64 ALIAS if(PhraseID > 5, PhraseID, 0) ) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02008_aliased_column_distributed_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE click_storage ( \\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE click_storage_dst ( \\`PhraseID\\` UInt64, \\`PhraseProcessedID\\` UInt64 ) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 'click_storage');","fileName":"../ClickHouse/tests/queries/0_stateless/02008_aliased_column_distributed_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE click_storage_dst ( \\'","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"CREATE TABLE t02006 on cluster test_shard_localhost (d Date)  ENGINE = MergeTree ORDER BY d\nformat Null;","fileName":"../ClickHouse/tests/queries/0_stateless/02006_test_positional_arguments_on_cluster.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW m02006 on cluster test_shard_localhost Engine = MergeTree ORDER BY tuple() AS SELECT d, 0 AS i FROM t02006 GROUP BY d, i\nformat Null;","fileName":"../ClickHouse/tests/queries/0_stateless/02006_test_positional_arguments_on_cluster.sql","errors":[]},{"query":"create table test(x1 Int, x2 Int, x3 Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/02006_test_positional_arguments.sql","errors":[]},{"query":"create table test2(x1 Int, x2 Int, x3 Int) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02006_test_positional_arguments.sql","errors":[]},{"query":"create table tp2(first_col String, second_col Int32) engine = MergeTree() order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/02006_test_positional_arguments.sql","errors":[]},{"query":"create table test (\n\\`id\\`  UInt32,\n\\`time\\` UInt32,\nindex \\`id\\` (\\`id\\`) type set(0) granularity 3,\nindex \\`time\\` (\\`time\\`) type minmax granularity 3\n) engine = MergeTree()\norder by (\\`time\\`);","fileName":"../ClickHouse/tests/queries/0_stateless/02006_test_positional_arguments.sql","errors":[{"message":"no viable alternative at input 'create table test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02006_h3_to_geo_boundary.sql","errors":[]},{"query":"CREATE TABLE rep_data (\np Int,\nt DateTime,\nINDEX idx t TYPE minmax GRANULARITY 1\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/rep_data', '1')\nPARTITION BY p\nORDER BY t\nSETTINGS number_of_free_entries_in_pool_to_execute_mutation=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02004_invalid_partition_mutation_stuck.sql","errors":[]},{"query":"CREATE TABLE data (\np Int,\nt DateTime,\nINDEX idx t TYPE minmax GRANULARITY 1\n)\nENGINE = MergeTree\nPARTITION BY p\nORDER BY t\nSETTINGS number_of_free_entries_in_pool_to_execute_mutation=0;","fileName":"../ClickHouse/tests/queries/0_stateless/02004_invalid_partition_mutation_stuck.sql","errors":[]},{"query":"create table tab (a LowCardinality(String), b LowCardinality(String)) engine = MergeTree partition by a order by tuple() settings min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02003_bug_from_23515.sql","errors":[]},{"query":"CREATE TABLE sessions (\n\\`user_id\\` UInt64\n)\nENGINE = MergeTree\nORDER BY user_id \nSAMPLE BY user_id;","fileName":"../ClickHouse/tests/queries/0_stateless/02002_sampling_and_unknown_column_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE sessions (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t_map_int_key (m1 Map(UInt32, UInt32), m2 Map(Date, UInt32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02002_parse_map_int_key.sql","errors":[]},{"query":"create table dist as system.one engine=Distributed('test_shard_localhost', system, one);","fileName":"../ClickHouse/tests/queries/0_stateless/02001_dist_on_dist_WithMergeableStateAfterAggregation.sql","errors":[]},{"query":"create user if not exists u_02001 default database system;","fileName":"../ClickHouse/tests/queries/0_stateless/02001_add_default_database_to_system_users.sql","errors":[{"message":"no viable alternative at input 'create user'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE TABLE bf_tokenbf_map_keys_test (\nrow_id UInt32,\nmap Map(String, String),\nmap_fixed Map(FixedString(2), String),\nINDEX map_keys_tokenbf mapKeys(map) TYPE tokenbf_v1(256,2,0) GRANULARITY 1,\nINDEX map_fixed_keys_tokenbf mapKeys(map_fixed) TYPE ngrambf_v1(4,256,2,0) GRANULARITY 1\n) Engine=MergeTree() ORDER BY row_id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02000_map_full_text_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bf_tokenbf_map_values_test (\nrow_id UInt32,\nmap Map(String, String),\nmap_fixed Map(FixedString(2), String),\nINDEX map_values_tokenbf mapValues(map) TYPE tokenbf_v1(256,2,0) GRANULARITY 1,\nINDEX map_fixed_values_tokenbf mapValues(map_fixed) TYPE ngrambf_v1(4,256,2,0) GRANULARITY 1\n) Engine=MergeTree() ORDER BY row_id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02000_map_full_text_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bf_ngrambf_map_keys_test (\nrow_id UInt32,\nmap Map(String, String),\nmap_fixed Map(FixedString(2), String),\nINDEX map_keys_ngrambf mapKeys(map) TYPE ngrambf_v1(4,256,2,0) GRANULARITY 1,\nINDEX map_fixed_keys_ngrambf mapKeys(map_fixed) TYPE ngrambf_v1(4,256,2,0) GRANULARITY 1\n) Engine=MergeTree() ORDER BY row_id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02000_map_full_text_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bf_ngrambf_map_values_test (\nrow_id UInt32,\nmap Map(String, String),\nmap_fixed Map(FixedString(2), String),\nINDEX map_values_ngrambf mapKeys(map) TYPE ngrambf_v1(4,256,2,0) GRANULARITY 1,\nINDEX map_fixed_values_ngrambf mapKeys(map_fixed) TYPE ngrambf_v1(4,256,2,0) GRANULARITY 1\n) Engine=MergeTree() ORDER BY row_id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/02000_map_full_text_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE t1 (id Int) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02000_join_on_const.sql","errors":[]},{"query":"CREATE TABLE t2 (id Int) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/02000_join_on_const.sql","errors":[]},{"query":"CREATE TABLE test (col Int8) ENGINE=MergeTree ORDER BY tuple() SETTINGS vertical_merge_algorithm_min_rows_to_activate=1,\nvertical_merge_algorithm_min_columns_to_activate=1,\nmin_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/02000_default_from_default_empty_column.sql","errors":[]},{"query":"CREATE USER test_user_01999;","fileName":"../ClickHouse/tests/queries/0_stateless/01999_grant_with_replace.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE role test_role_01999;","fileName":"../ClickHouse/tests/queries/0_stateless/01999_grant_with_replace.sql","errors":[{"message":"no viable alternative at input 'CREATE role'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE role test_role_01999_1;","fileName":"../ClickHouse/tests/queries/0_stateless/01999_grant_with_replace.sql","errors":[{"message":"no viable alternative at input 'CREATE role'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE DATABASE \\`01945.db\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/01948_dictionary_quoted_database_name.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE \\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE \\`01945.db\\`.test_dictionary_values (\n\tid UInt64,\n\tvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01948_dictionary_quoted_database_name.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY \\`01945.db\\`.test_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nLAYOUT(DIRECT())\nSOURCE(CLICKHOUSE(DB '01945.db' TABLE 'test_dictionary_values'));","fileName":"../ClickHouse/tests/queries/0_stateless/01948_dictionary_quoted_database_name.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE DICTIONARY \\`01945.db\\`.\\`test_dictionary.test\\` (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nLAYOUT(DIRECT())\nSOURCE(CLICKHOUSE(DB '01945.db' TABLE 'test_dictionary_values'));","fileName":"../ClickHouse/tests/queries/0_stateless/01948_dictionary_quoted_database_name.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE src Engine=MergeTree ORDER BY id AS SELECT number as id, toInt32(1) as value FROM numbers(1);","fileName":"../ClickHouse/tests/queries/0_stateless/01947_mv_subquery.sql","errors":[]},{"query":"CREATE TABLE dst (id UInt64, delta Int64) Engine=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01947_mv_subquery.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW src2dst_true TO dst AS SELECT\nid,\nsrc.value - deltas_sum as delta\nFROM src\nLEFT JOIN\n(\nSELECT id, sum(delta) as deltas_sum FROM dst\nWHERE id IN (SELECT id FROM src WHERE not sleepEachRow(0.001))\nGROUP BY id\n) _a\nUSING (id);","fileName":"../ClickHouse/tests/queries/0_stateless/01947_mv_subquery.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW src2dst_false TO dst AS SELECT\nid,\nsrc.value - deltas_sum as delta\nFROM src\nLEFT JOIN\n(\nSELECT id, sum(delta) as deltas_sum FROM dst\nWHERE id IN (SELECT id FROM src WHERE not sleepEachRow(0.001))\nGROUP BY id\n) _a\nUSING (id);","fileName":"../ClickHouse/tests/queries/0_stateless/01947_mv_subquery.sql","errors":[]},{"query":"CREATE VIEW sleep_view AS SELECT sleepEachRow(0.001) FROM system.numbers;","fileName":"../ClickHouse/tests/queries/0_stateless/01946_profile_sleep.sql","errors":[]},{"query":"CREATE TABLE tmp ENGINE = TinyLog AS SELECT queryID();","fileName":"../ClickHouse/tests/queries/0_stateless/01943_query_id_check.sql","errors":[]},{"query":"CREATE TABLE tmp ENGINE = TinyLog AS SELECT initialQueryID();","fileName":"../ClickHouse/tests/queries/0_stateless/01943_query_id_check.sql","errors":[]},{"query":"CREATE TABLE tmp (str String) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01943_query_id_check.sql","errors":[]},{"query":"CREATE TABLE a (number UInt64) ENGINE = MergeTree ORDER BY if(now() > toDateTime('2020-06-01 13:31:40'), toInt64(number), -number); -- { serverError BAD_ARGUMENTS } CREATE TABLE b (number UInt64) ENGINE = MergeTree ORDER BY now() > toDateTime(number); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE c (number UInt64) ENGINE = MergeTree ORDER BY now(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE d (number UInt64) ENGINE = MergeTree ORDER BY now() + 1 + 1 + number; -- { serverError BAD_ARGUMENTS }\n","fileName":"../ClickHouse/tests/queries/0_stateless/01943_non_deterministic_order_key.sql","errors":[]},{"query":"CREATE TABLE test_log (x UInt8, s String, a Array(Nullable(String))) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01943_log_column_sizes.sql","errors":[]},{"query":"CREATE TABLE test_tiny_log (x UInt8, s String, a Array(Nullable(String))) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01943_log_column_sizes.sql","errors":[]},{"query":"CREATE TABLE tab(val Int64, tz String) engine = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01942_snowflakeToDateTime.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS sample_incorrect (\\`x\\` UUID)\nENGINE = MergeTree\nORDER BY tuple(x)\nSAMPLE BY x;  -- { serverError ILLEGAL_TYPE_OF_COLUMN_FOR_FILTER }\nDROP TABLE IF EXISTS sample_correct;","fileName":"../ClickHouse/tests/queries/0_stateless/01942_create_table_with_sample.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS sample_incorrect (\\'","startColumn":45,"startLine":1,"endColumn":46,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS sample_correct (\\`x\\` String)\nENGINE = MergeTree\nORDER BY tuple(sipHash64(x))\nSAMPLE BY sipHash64(x);","fileName":"../ClickHouse/tests/queries/0_stateless/01942_create_table_with_sample.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE IF NOT EXISTS sample_correct (\\'","startColumn":43,"startLine":1,"endColumn":44,"endLine":1}]},{"query":"CREATE TABLE test_dictionary_source (key String, value String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01941_dict_get_has_complex_single_key.sql","errors":[]},{"query":"CREATE DICTIONARY test_dictionary(key String, value String) PRIMARY KEY key\nLAYOUT(COMPLEX_KEY_HASHED())\nSOURCE(CLICKHOUSE(TABLE 'test_dictionary_source'))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/01941_dict_get_has_complex_single_key.sql","errors":[]},{"query":"CREATE TABLE totimezone_op_mono(i int, tz String, create_time DateTime) ENGINE MergeTree PARTITION BY toDate(create_time) ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/01940_totimezone_operator_monotonicity.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE map_json (m1 Map(String, UInt64), m2 Map(UInt32, UInt32), m3 Map(Date, String));","fileName":"../ClickHouse/tests/queries/0_stateless/01939_type_map_json.sql","errors":[]},{"query":"create table \"/t0\" (a Int64, b Int64) engine = MergeTree() partition by a order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/01938_joins_identifiers.sql","errors":[]},{"query":"create table \"/t1\" (a Int64, b Int64) engine = MergeTree() partition by a order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/01938_joins_identifiers.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test (\\`id\\` String, \\`products\\` Nested (\\`产品\\` Array(String), \\`销量\\` Array(Int32)));","fileName":"../ClickHouse/tests/queries/0_stateless/01937_nested_chinese.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE test (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE users (user_id UUID) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01936_empty_function_support_uuid.sql","errors":[]},{"query":"CREATE TABLE orders (order_id UUID, user_id UUID) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01936_empty_function_support_uuid.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test (d Date);","fileName":"../ClickHouse/tests/queries/0_stateless/01933_invalid_date.sql","errors":[]},{"query":"CREATE TABLE alter_index_test ( a UInt32,\nb Date,\nc UInt32,\nd UInt32,\nINDEX index_a a TYPE set(0) GRANULARITY 1\n)\nENGINE = MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01932_alter_index_with_order.sql","errors":[]},{"query":"create table data (key Int) engine=MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01931_storage_merge_no_columns.sql","errors":[]},{"query":"create temporary table data (id UInt64) engine=Memory() as with [ 0,\n1,\n0x7f, 0x80, 0xff,\n0x7fff, 0x8000, 0xffff,\n0x7fffffff, 0x80000000, 0xffffffff,\n0x7fffffffffffffff, 0x8000000000000000, 0xffffffffffffffff\n] as values select arrayJoin(values) id;","fileName":"../ClickHouse/tests/queries/0_stateless/01930_optimize_skip_unused_shards_rewrite_in.sql","errors":[]},{"query":"CREATE TABLE table_a (a String, b Int64) ENGINE = MergeTree ORDER BY b;","fileName":"../ClickHouse/tests/queries/0_stateless/01927_query_views_log_current_database.sql","errors":[]},{"query":"CREATE TABLE table_b (a Float64,  b Int64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01927_query_views_log_current_database.sql","errors":[]},{"query":"CREATE TABLE table_c (a Float64) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01927_query_views_log_current_database.sql","errors":[]},{"query":"CREATE TABLE table_d (a Float64, count Int64) ENGINE MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01927_query_views_log_current_database.sql","errors":[]},{"query":"CREATE TABLE table_e (a Float64, count Int64) ENGINE MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01927_query_views_log_current_database.sql","errors":[]},{"query":"CREATE TABLE table_f (a Float64, count Int64) ENGINE MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01927_query_views_log_current_database.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW matview_a_to_b TO table_b AS SELECT toFloat64(a) AS a, b + sleepEachRow(0.000001) AS count FROM table_a;","fileName":"../ClickHouse/tests/queries/0_stateless/01927_query_views_log_current_database.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW matview_b_to_c TO table_c AS SELECT SUM(a + sleepEachRow(0.000002)) as a FROM table_b;","fileName":"../ClickHouse/tests/queries/0_stateless/01927_query_views_log_current_database.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW matview_join_d_e TO table_f AS SELECT table_d.a as a, table_e.count + sleepEachRow(0.000003) as count FROM table_d LEFT JOIN table_e ON table_d.a = table_e.a;","fileName":"../ClickHouse/tests/queries/0_stateless/01927_query_views_log_current_database.sql","errors":[]},{"query":"CREATE TABLE order_by_desc (u UInt32, s String) ENGINE MergeTree ORDER BY u PARTITION BY u % 100\nSETTINGS index_granularity = 1024, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01926_order_by_desc_limit.sql","errors":[]},{"query":"CREATE TABLE predicate_table (value UInt8) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01926_date_date_time_supertype.sql","errors":[]},{"query":"create table merge (\ndt Date,\ncolAlias0 Int32,\ncolAlias1 Int32,\ncol2 Int32,\ncolAlias2 UInt32,\ncol3 Int32,\ncolAlias3 UInt32\n)\nengine = Merge(currentDatabase(), '^alias_');","fileName":"../ClickHouse/tests/queries/0_stateless/01925_test_storage_merge_aliases_analyzer.sql","errors":[]},{"query":"create table alias_1 (\ndt Date,\ncol Int32,\ncolAlias0 UInt32 alias col,\ncolAlias1 UInt32 alias col3 + colAlias0,\ncol2 Int32,\ncolAlias2 Int32 alias colAlias1 + col2 + 10,\ncol3 Int32,\ncolAlias3 Int32 alias colAlias2 + colAlias1 + col3\n)\nengine = MergeTree()\norder by (dt);","fileName":"../ClickHouse/tests/queries/0_stateless/01925_test_storage_merge_aliases_analyzer.sql","errors":[]},{"query":"create table alias_2 (\ndt Date,\ncol Int32,\ncol2 Int32,\ncolAlias0 UInt32 alias col,\ncolAlias3 Int32 alias col3 + colAlias0,\ncolAlias1 UInt32 alias colAlias0 + col2,\ncolAlias2 Int32 alias colAlias0 + colAlias1,\ncol3 Int32\n)\nengine = MergeTree()\norder by (dt);","fileName":"../ClickHouse/tests/queries/0_stateless/01925_test_storage_merge_aliases_analyzer.sql","errors":[]},{"query":"create table merge (\ndt Date,\ncolAlias0 Int32,\ncolAlias1 Int32,\ncol2 Int32,\ncolAlias2 UInt32,\ncol3 Int32,\ncolAlias3 UInt32\n)\nengine = Merge(currentDatabase(), '^alias_');","fileName":"../ClickHouse/tests/queries/0_stateless/01925_test_storage_merge_aliases.sql","errors":[]},{"query":"create table alias_1 (\ndt Date,\ncol Int32,\ncolAlias0 UInt32 alias col,\ncolAlias1 UInt32 alias col3 + colAlias0,\ncol2 Int32,\ncolAlias2 Int32 alias colAlias1 + col2 + 10,\ncol3 Int32,\ncolAlias3 Int32 alias colAlias2 + colAlias1 + col3\n)\nengine = MergeTree()\norder by (dt);","fileName":"../ClickHouse/tests/queries/0_stateless/01925_test_storage_merge_aliases.sql","errors":[]},{"query":"create table alias_2 (\ndt Date,\ncol Int32,\ncol2 Int32,\ncolAlias0 UInt32 alias col,\ncolAlias3 Int32 alias col3 + colAlias0,\ncolAlias1 UInt32 alias colAlias0 + col2,\ncolAlias2 Int32 alias colAlias0 + colAlias1,\ncol3 Int32\n)\nengine = MergeTree()\norder by (dt);","fileName":"../ClickHouse/tests/queries/0_stateless/01925_test_storage_merge_aliases.sql","errors":[]},{"query":"create table x_1 engine=Log as select * from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/01925_merge_prewhere_table.sql","errors":[]},{"query":"create table x_2 engine=Log as select * from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/01925_merge_prewhere_table.sql","errors":[]},{"query":"create table x engine=Merge(currentDatabase(), '^x_(1|2)\\$') as x_1;","fileName":"../ClickHouse/tests/queries/0_stateless/01925_merge_prewhere_table.sql","errors":[{"message":"no viable alternative at input 'create table x engine=Merge(currentDatabase(), '^x_(1|2)\\$') as x_1'","startColumn":64,"startLine":1,"endColumn":67,"endLine":1}]},{"query":"create table map_test engine=TinyLog() as (select (number + 1) as n, map(1, 1, number,2) as m from numbers(1, 5));","fileName":"../ClickHouse/tests/queries/0_stateless/01925_map_populate_series_on_map.sql","errors":[]},{"query":"CREATE TABLE json_square_brackets (field String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01925_json_as_string_data_in_square_brackets.sql","errors":[]},{"query":"CREATE TABLE t1 ( time DateTime,\nfoo String,\ndimension_1 String,\ndt Date MATERIALIZED toDate(time),\ndt1 Date MATERIALIZED toDayOfYear(time),\naliascol1 ALIAS foo || dimension_1,\ntime_alias DateTime ALIAS time\n) ENGINE = MergeTree() PARTITION BY toYYYYMM(dt) ORDER BY (dt, foo);","fileName":"../ClickHouse/tests/queries/0_stateless/01925_join_materialized_columns.sql","errors":[]},{"query":"CREATE TABLE t2 ( time DateTime,\nbar String,\ndimension_2 String,\ndt Date MATERIALIZED toDate(time),\ndt2 Date MATERIALIZED toDayOfYear(time),\naliascol2 ALIAS bar || dimension_2,\ntime_alias DateTime ALIAS time\n) ENGINE = MergeTree() PARTITION BY toYYYYMM(dt) ORDER BY (dt, bar);","fileName":"../ClickHouse/tests/queries/0_stateless/01925_join_materialized_columns.sql","errors":[]},{"query":"CREATE TABLE test_table (\nid UInt64,\nvalue UInt8,\nvalue_nullable Nullable(UInt8)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01925_jit_aggregation_function_count_long.sql","errors":[]},{"query":"CREATE TABLE broken_partition (\ndate Date,\nkey UInt64\n)\nENGINE = ReplicatedMergeTree('/clickhouse/test_01925_{database}/rmt', 'r1')\nORDER BY tuple()\nPARTITION BY date;","fileName":"../ClickHouse/tests/queries/0_stateless/01925_broken_partition_id_zookeeper.sql","errors":[]},{"query":"CREATE TABLE old_partition_key (sd Date, dh UInt64, ak UInt32, ed Date) ENGINE=MergeTree(sd, dh, (ak, ed, dh), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01925_broken_partition_id_zookeeper.sql","errors":[]},{"query":"CREATE TABLE t_ttl_modify_column (\nInsertionDateTime DateTime,\nTTLDays Int32 DEFAULT CAST(365, 'Int32')\n)\nENGINE = MergeTree\nORDER BY tuple()\nTTL InsertionDateTime + toIntervalDay(TTLDays)\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01923_ttl_with_modify_column.sql","errors":[]},{"query":"CREATE TABLE t_ttl_modify_column (InsertionDateTime DateTime) ENGINE = MergeTree\nORDER BY tuple()\nTTL InsertionDateTime + INTERVAL 3 DAY\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01923_ttl_with_modify_column.sql","errors":[]},{"query":"CREATE TABLE merge_tree_table (\nDate Date,\nSomeType UInt8,\nAlternative1 UInt64,\nAlternative2 UInt64,\nUser UInt32,\nCharID UInt64 ALIAS multiIf(SomeType IN (3, 4, 11), 0, SomeType IN (7, 8), Alternative1, Alternative2)\n)\nENGINE = MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01923_different_expression_name_alias.sql","errors":[]},{"query":"CREATE TABLE distributed_tbl (\nDate Date,\nSomeType UInt8,\nAlternative1 UInt64,\nAlternative2 UInt64,\nCharID UInt64,\nUser UInt32\n)\nENGINE = Distributed(test_shard_localhost, currentDatabase(), merge_tree_table);","fileName":"../ClickHouse/tests/queries/0_stateless/01923_different_expression_name_alias.sql","errors":[]},{"query":"CREATE TABLE t_array_index (n Nested(key String, value String)) ENGINE = MergeTree ORDER BY n.key;","fileName":"../ClickHouse/tests/queries/0_stateless/01922_array_join_with_index.sql","errors":[]},{"query":"create table t1(x1 Date32) engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01921_datatype_date32.sql","errors":[]},{"query":"CREATE TABLE data_01917 (\nkey Int,\nd1 Int,\nd1_null Nullable(Int),\nINDEX d1_idx d1 TYPE minmax GRANULARITY 1,\nINDEX d1_null_idx assumeNotNull(d1_null) TYPE minmax GRANULARITY 1\n)\nEngine=MergeTree()\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01917_system_data_skipping_indices.sql","errors":[]},{"query":"CREATE TABLE data_01917_2 (\nname String,\nfrequency UInt64,\nINDEX memory (frequency * length(name)) TYPE set(1000) GRANULARITY 5,\nINDEX sample_index1 (length(name), name) TYPE minmax GRANULARITY 4,\nINDEX sample_index2 (lower(name), name) TYPE ngrambf_v1(3, 256, 2, 0) GRANULARITY 4\n)\nEngine=MergeTree()\nORDER BY name;","fileName":"../ClickHouse/tests/queries/0_stateless/01917_system_data_skipping_indices.sql","errors":[]},{"query":"CREATE TABLE t1 ( s String, f Float32, e UInt16 ) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = '100G';","fileName":"../ClickHouse/tests/queries/0_stateless/01917_prewhere_column_type.sql","errors":[]},{"query":"CREATE TABLE t1 (\\`a\\` UInt32, \\`b\\` UInt32, \\`c\\` UInt32 ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01917_distinct_on.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE a(\\`id\\` UInt32, \\`val\\` UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01916_multiple_join_view_optimize_predicate_chertus.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE a(\\'","startColumn":15,"startLine":1,"endColumn":16,"endLine":1}]},{"query":"CREATE TABLE j(\\`id\\` UInt32, \\`val\\` UInt8) ENGINE = Join(ANY, LEFT, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01916_multiple_join_view_optimize_predicate_chertus.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE j(\\'","startColumn":15,"startLine":1,"endColumn":16,"endLine":1}]},{"query":"CREATE TABLE j (id UInt8, val UInt8) Engine = Join(ALL, INNER, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01916_multiple_join_view_optimize_predicate_chertus.sql","errors":[]},{"query":"CREATE TABLE t1 (\\`x\\` UInt32, \\`lc\\` LowCardinality(String) ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01916_lowcard_dict_type.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t2 (\\`x\\` UInt32, \\`lc\\` LowCardinality(String) ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01916_lowcard_dict_type.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE abc (\n\\`f1\\` String,\n\\`f2\\` String\n)\nENGINE = MergeTree()\nORDER BY f1;","fileName":"../ClickHouse/tests/queries/0_stateless/01915_merge_prewhere_virtual_column_rand_chao_wang.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE abc (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE DATABASE test_01915_db ENGINE=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01915_create_or_replace_dictionary.sql","errors":[]},{"query":"CREATE TABLE test_01915_db.test_source_table_1 (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01915_create_or_replace_dictionary.sql","errors":[]},{"query":"CREATE OR REPLACE DICTIONARY test_01915_db.test_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nLAYOUT(DIRECT())\nSOURCE(CLICKHOUSE(DB 'test_01915_db' TABLE 'test_source_table_1'));","fileName":"../ClickHouse/tests/queries/0_stateless/01915_create_or_replace_dictionary.sql","errors":[]},{"query":"CREATE TABLE test_01915_db.test_source_table_2 (\nid UInt64,\nvalue_1 String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01915_create_or_replace_dictionary.sql","errors":[]},{"query":"CREATE OR REPLACE DICTIONARY test_01915_db.test_dictionary (\nid UInt64,\nvalue_1 String\n)\nPRIMARY KEY id\nLAYOUT(HASHED())\nSOURCE(CLICKHOUSE(DB 'test_01915_db' TABLE 'test_source_table_2'))\nLIFETIME(0);","fileName":"../ClickHouse/tests/queries/0_stateless/01915_create_or_replace_dictionary.sql","errors":[]},{"query":"create table test (id UInt64,insid UInt64,insidvalue Nullable(UInt64), index insid_idx (insid) type bloom_filter() granularity 1, index insidvalue_idx (insidvalue) type bloom_filter() granularity 1) ENGINE=MergeTree() ORDER BY (insid,id);","fileName":"../ClickHouse/tests/queries/0_stateless/01914_index_bgranvea.sql","errors":[]},{"query":"CREATE DATABASE 01914_db ENGINE=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01914_exchange_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01914'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01914_db.table_1 (id UInt64, value String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01914_exchange_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01914'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01914_db.table_2 (id UInt64, value String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01914_exchange_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01914'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01914_db.dictionary_1 (id UInt64, value String) PRIMARY KEY id\nLAYOUT(DIRECT())\nSOURCE(CLICKHOUSE(DB '01914_db' TABLE 'table_1'));","fileName":"../ClickHouse/tests/queries/0_stateless/01914_exchange_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01914'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 01914_db.dictionary_2 (id UInt64, value String) PRIMARY KEY id\nLAYOUT(DIRECT())\nSOURCE(CLICKHOUSE(DB '01914_db' TABLE 'table_2'));","fileName":"../ClickHouse/tests/queries/0_stateless/01914_exchange_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01914'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE smta (\n\\`k\\` Int64,\n\\`a\\` AggregateFunction(max, Int64),\n\\`city\\` SimpleAggregateFunction(max, LowCardinality(String))\n)\nENGINE = SummingMergeTree\nORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/01913_summing_mt_and_simple_agg_function_with_lc.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE smta (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE DATABASE 01913_db ENGINE=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01913_replace_dictionary.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01913'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01913_db.test_source_table_1 (\nid UInt64,\nvalue String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01913_replace_dictionary.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01913'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01913_db.test_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nLAYOUT(DIRECT())\nSOURCE(CLICKHOUSE(DB '01913_db' TABLE 'test_source_table_1'));","fileName":"../ClickHouse/tests/queries/0_stateless/01913_replace_dictionary.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01913'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01913_db.test_source_table_2 (\nid UInt64,\nvalue_1 String\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01913_replace_dictionary.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01913'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE test (\n\\`t\\` UInt8,\n\\`flag\\` UInt8,\n\\`id\\` UInt8\n)\nENGINE = MergeTree\nPARTITION BY t\nORDER BY (t, id)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01913_join_push_down_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table my_table(Id UInt32, Object Nested(Key UInt8, Value String)) engine MergeTree order by Id;","fileName":"../ClickHouse/tests/queries/0_stateless/01913_fix_column_transformer_replace_format.sql","errors":[]},{"query":"create view my_view as select * replace arrayMap(x -> x + 1,\\`Object.Key\\`) as \\`Object.Key\\` from my_table;","fileName":"../ClickHouse/tests/queries/0_stateless/01913_fix_column_transformer_replace_format.sql","errors":[{"message":"mismatched input 'replace' expecting <EOF>","startColumn":32,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"create table test (i int) engine MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01913_exact_rows_before_limit_full.sql","errors":[]},{"query":"create table test_rows_compact_part(f1 int,f2 int)  engine=MergeTree partition by f1 order by f2 settings min_bytes_for_wide_part=10485760;","fileName":"../ClickHouse/tests/queries/0_stateless/01913_exact_rows_before_limit.sql","errors":[]},{"query":"create table test_rows_wide_part(f1 int,f2 int)  engine=MergeTree partition by f1 order by f2 settings min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01913_exact_rows_before_limit.sql","errors":[]},{"query":"CREATE TABLE codecTest ( key      UInt64,\nname     String,\nref_valueF64 Float64,\nref_valueF32 Float32,\nvalueF64 Float64  CODEC(Gorilla),\nvalueF32 Float32  CODEC(Gorilla)\n) Engine = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01911_logical_error_minus.sql","errors":[]},{"query":"CREATE TABLE codecTest ( key      UInt64,\nref_valueU64 UInt64,\nref_valueU32 UInt32,\nref_valueU16 UInt16,\nref_valueU8  UInt8,\nref_valueI64 Int64,\nref_valueI32 Int32,\nref_valueI16 Int16,\nref_valueI8  Int8,\nref_valueDT  DateTime,\nref_valueD   Date,\nvalueU64 UInt64   CODEC(DoubleDelta),\nvalueU32 UInt32   CODEC(DoubleDelta),\nvalueU16 UInt16   CODEC(DoubleDelta),\nvalueU8  UInt8    CODEC(DoubleDelta),\nvalueI64 Int64    CODEC(DoubleDelta),\nvalueI32 Int32    CODEC(DoubleDelta),\nvalueI16 Int16    CODEC(DoubleDelta),\nvalueI8  Int8     CODEC(DoubleDelta),\nvalueDT  DateTime CODEC(DoubleDelta),\nvalueD   Date     CODEC(DoubleDelta)\n) Engine = MergeTree ORDER BY key SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01911_logical_error_minus.sql","errors":[]},{"query":"CREATE TABLE TestTbl (\n\\`id\\` UInt16,\n\\`dt\\` Date,\n\\`val\\` String\n)\nENGINE = MergeTree\nPARTITION BY dt\nORDER BY (id);","fileName":"../ClickHouse/tests/queries/0_stateless/01910_view_dictionary_check_refresh.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE TestTbl (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE VIEW TestTbl_view AS\nSELECT *\nFROM TestTbl\nWHERE dt = ( SELECT max(dt) FROM TestTbl );","fileName":"../ClickHouse/tests/queries/0_stateless/01910_view_dictionary_check_refresh.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS TestTblDict (\n\\`id\\` UInt16,\n\\`dt\\` Date,\n\\`val\\` String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE TestTbl_view DB currentDatabase()))\nLIFETIME(1)\nLAYOUT(COMPLEX_KEY_HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01910_view_dictionary_check_refresh.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY IF NOT EXISTS TestTblDict (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE dictionary_source_en (\nid UInt64,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01910_view_dictionary.sql","errors":[]},{"query":"CREATE TABLE dictionary_source_ru (\nid UInt64,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01910_view_dictionary.sql","errors":[]},{"query":"CREATE VIEW dictionary_source_view AS SELECT id, dictionary_source_en.value as value_en, dictionary_source_ru.value as value_ru\nFROM dictionary_source_en LEFT JOIN dictionary_source_ru USING (id);","fileName":"../ClickHouse/tests/queries/0_stateless/01910_view_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY flat_dictionary (\nid UInt64,\nvalue_en String,\nvalue_ru String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' PASSWORD '' TABLE 'dictionary_source_view'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01910_view_dictionary.sql","errors":[]},{"query":"CREATE TABLE DATE_INFO_DICT (\n\\`TV\\` Date,\n\\`SHAMSI\\` String,\n\\`HIJRI\\` String,\n\\`MILADI\\` String,\n\\`S_DAY\\` UInt8,\n\\`H_DAY\\` UInt8,\n\\`S_MONTH\\` UInt8,\n\\`H_MONTH\\` UInt8,\n\\`WEEK_DAY_NAME\\` String,\n\\`DAY_NUMBER\\` UInt8,\n\\`HOLIDAY\\` UInt8,\n\\`WEEK_NAME\\` String\n)\nENGINE = Join(ANY, LEFT, TV);","fileName":"../ClickHouse/tests/queries/0_stateless/01909_mbtolou.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE DATE_INFO_DICT (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t (d Date, z UInt32) ENGINE = MergeTree(d, (z), 1);","fileName":"../ClickHouse/tests/queries/0_stateless/01907_multiple_aliases.sql","errors":[]},{"query":"CREATE TABLE t_01906 (\n\\`id\\` UInt64,\n\\`update_ts\\` DateTime,\n\\`value\\` UInt32\n)\nENGINE = ReplacingMergeTree(update_ts)\nPARTITION BY 0 * id\nORDER BY (update_ts, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01906_partition_by_multiply_by_zero.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_01906 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table tab (x LowCardinality(String)) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01906_lc_in_bug.sql","errors":[]},{"query":"CREATE TABLE test(key Int32) ENGINE = MergeTree ORDER BY (key) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01906_lc_in_bug.sql","errors":[]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01906_h3_to_geo.sql","errors":[]},{"query":"CREATE TABLE h3_geo(lat Float64, lon Float64, res UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01906_h3_to_geo.sql","errors":[]},{"query":"create temporary table t engine Memory as select * from generateRandom( \\$\\$\na Array(Int8),\nb UInt32,\nc Nullable(String),\nd Decimal32(4),\ne Nullable(Enum16('h' = 1, 'w' = 5 , 'o' = -200)),\nf Float64,\ng Tuple(Date, DateTime('Asia/Istanbul'), DateTime64(3, 'Asia/Istanbul'), UUID),\nh FixedString(2),\ni Array(Nullable(UUID))\n\\$\\$, 10, 5, 3) limit 2;","fileName":"../ClickHouse/tests/queries/0_stateless/01905_to_json_string.sql","errors":[{"message":"no viable alternative at input 'create temporary table t engine Memory as select * from generateRandom( \\'","startColumn":72,"startLine":1,"endColumn":73,"endLine":1}]},{"query":"CREATE TABLE dictionary_nullable_source_table (\nid UInt64,\nvalue Nullable(Int64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE TABLE dictionary_nullable_default_source_table (\nid UInt64,\nvalue Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE DICTIONARY flat_dictionary (\nid UInt64,\nvalue Nullable(Int64) DEFAULT NULL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_nullable_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE DICTIONARY hashed_dictionary (\nid UInt64,\nvalue Nullable(Int64) DEFAULT NULL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_nullable_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE DICTIONARY cache_dictionary (\nid UInt64,\nvalue Nullable(Int64) DEFAULT NULL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_nullable_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(CACHE(SIZE_IN_CELLS 10));","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE DICTIONARY direct_dictionary (\nid UInt64,\nvalue Nullable(Int64) DEFAULT NULL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_nullable_source_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE DICTIONARY ip_trie_dictionary (\nprefix String,\nvalue Nullable(Int64) DEFAULT NULL\n)\nPRIMARY KEY prefix\nSOURCE(CLICKHOUSE(HOST 'localhost' port tcpPort() TABLE 'dictionary_nullable_source_table'))\nLIFETIME(MIN 10 MAX 1000)\nLAYOUT(IP_TRIE());","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE TABLE polygon_dictionary_nullable_source_table (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\nvalue Nullable(Int64)\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE TABLE polygon_dictionary_nullable_default_source_table (\nkey Tuple(Float64, Float64),\nvalue Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE DICTIONARY polygon_dictionary (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\nvalue Nullable(UInt64) DEFAULT NULL\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'polygon_dictionary_nullable_source_table'))\nLIFETIME(MIN 0 MAX 1000)\nLAYOUT(POLYGON());","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE TABLE range_dictionary_nullable_source_table (\nkey UInt64,\nstart_date Date,\nend_date Date,\nvalue Nullable(UInt64)\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE TABLE range_dictionary_nullable_default_source_table (\nkey UInt64,\nvalue Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE DICTIONARY range_dictionary (\nkey UInt64,\nstart_date Date,\nend_date Date,\nvalue Nullable(UInt64) DEFAULT NULL\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'range_dictionary_nullable_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(RANGE_HASHED())\nRANGE(MIN start_date MAX end_date);","fileName":"../ClickHouse/tests/queries/0_stateless/01904_dictionary_default_nullable_type.sql","errors":[]},{"query":"CREATE DATABASE 01902_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_repr.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01902'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE DATABASE 01902_db1;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_repr.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01902'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE DATABASE 01902_db2;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_repr.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01902'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE DATABASE 01902_db3;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_repr.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01902'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01902_db.t   (n Int8) ENGINE=MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_repr.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01902'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01902_db1.t1 (n Int8) ENGINE=MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_repr.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01902'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01902_db2.t2 (n Int8) ENGINE=MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_repr.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01902'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01902_db3.t3 (n Int8) ENGINE=MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_repr.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01902'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01902_db.t_merge as 01902_db.t ENGINE=Merge(REGEXP('^01902_db'), '^t');","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_repr.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01902'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01902_db.t_merge1 as 01902_db.t ENGINE=Merge('01902_db', '^t\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_repr.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01902'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01902_db.t_merge_1 as 01902_db.t ENGINE=Merge(currentDatabase(), '^t');","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_repr.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01902'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01902_db.t4 (n Date) ENGINE=MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_repr.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01902'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DATABASE 01902_db_params;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_params.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01902'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01902_db_params.t(n Int8) ENGINE=MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_table_function_merge_db_params.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01902'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE a (\n\\`number\\` UInt64,\n\\`x\\` MATERIALIZED x\n)\nENGINE = MergeTree\nORDER BY number; --{ serverError CYCLIC_ALIASES}\nCREATE TABLE foo\n(\ni Int32,\nj ALIAS j + 1\n)\nENGINE = MergeTree() ORDER BY i; --{ serverError CYCLIC_ALIASES}\n","fileName":"../ClickHouse/tests/queries/0_stateless/01902_self_aliases_in_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE a (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE dictionary_array_source_table (\nid UInt64,\narray_value Array(Int64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_dictionary_array_type.sql","errors":[]},{"query":"CREATE DICTIONARY flat_dictionary (\nid UInt64,\narray_value Array(Int64) DEFAULT [1,2,3]\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_array_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01902_dictionary_array_type.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY flat_dictionary (\\nid UInt64,\\narray_value Array(Int64) DEFAULT ['","startColumn":33,"startLine":3,"endColumn":34,"endLine":3}]},{"query":"CREATE DICTIONARY hashed_dictionary (\nid UInt64,\narray_value Array(Int64) DEFAULT [1,2,3]\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_array_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01902_dictionary_array_type.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY hashed_dictionary (\\nid UInt64,\\narray_value Array(Int64) DEFAULT ['","startColumn":33,"startLine":3,"endColumn":34,"endLine":3}]},{"query":"CREATE DICTIONARY cache_dictionary (\nid UInt64,\narray_value Array(Int64) DEFAULT [1,2,3]\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_array_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(CACHE(SIZE_IN_CELLS 10));","fileName":"../ClickHouse/tests/queries/0_stateless/01902_dictionary_array_type.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY cache_dictionary (\\nid UInt64,\\narray_value Array(Int64) DEFAULT ['","startColumn":33,"startLine":3,"endColumn":34,"endLine":3}]},{"query":"CREATE DICTIONARY direct_dictionary (\nid UInt64,\narray_value Array(Int64) DEFAULT [1,2,3]\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_array_source_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01902_dictionary_array_type.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY direct_dictionary (\\nid UInt64,\\narray_value Array(Int64) DEFAULT ['","startColumn":33,"startLine":3,"endColumn":34,"endLine":3}]},{"query":"CREATE TABLE ip_trie_dictionary_array_source_table (\nprefix String,\narray_value Array(Int64)\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_dictionary_array_type.sql","errors":[]},{"query":"CREATE DICTIONARY ip_trie_dictionary (\nprefix String,\narray_value Array(Int64) DEFAULT [1,2,3]\n)\nPRIMARY KEY prefix\nSOURCE(CLICKHOUSE(HOST 'localhost' port tcpPort() TABLE 'ip_trie_dictionary_array_source_table'))\nLIFETIME(MIN 10 MAX 1000)\nLAYOUT(IP_TRIE());","fileName":"../ClickHouse/tests/queries/0_stateless/01902_dictionary_array_type.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY ip_trie_dictionary (\\nprefix String,\\narray_value Array(Int64) DEFAULT ['","startColumn":33,"startLine":3,"endColumn":34,"endLine":3}]},{"query":"CREATE TABLE polygon_dictionary_array_source_table (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\narray_value Array(Int64)\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_dictionary_array_type.sql","errors":[]},{"query":"CREATE DICTIONARY polygon_dictionary (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\narray_value Array(Int64) DEFAULT [1,2,3]\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'polygon_dictionary_array_source_table'))\nLIFETIME(MIN 0 MAX 1000)\nLAYOUT(POLYGON());","fileName":"../ClickHouse/tests/queries/0_stateless/01902_dictionary_array_type.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY polygon_dictionary (\\nkey Array(Array(Array(Tuple(Float64, Float64)))),\\narray_value Array(Int64) DEFAULT ['","startColumn":33,"startLine":3,"endColumn":34,"endLine":3}]},{"query":"CREATE TABLE range_dictionary_array_source_table (\nkey UInt64,\nstart_date Date,\nend_date Date,\narray_value Array(Int64)\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01902_dictionary_array_type.sql","errors":[]},{"query":"CREATE DICTIONARY range_dictionary (\nkey UInt64,\nstart_date Date,\nend_date Date,\narray_value Array(Int64) DEFAULT [1,2,3]\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'range_dictionary_array_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(RANGE_HASHED())\nRANGE(MIN start_date MAX end_date);","fileName":"../ClickHouse/tests/queries/0_stateless/01902_dictionary_array_type.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY range_dictionary (\\nkey UInt64,\\nstart_date Date,\\nend_date Date,\\narray_value Array(Int64) DEFAULT ['","startColumn":33,"startLine":5,"endColumn":34,"endLine":5}]},{"query":"CREATE TABLE test_alter_attach_01901S (A Int64, D date) ENGINE = MergeTree PARTITION BY D ORDER BY A;","fileName":"../ClickHouse/tests/queries/0_stateless/01901_test_attach_partition_from.sql","errors":[]},{"query":"CREATE TABLE test_alter_attach_01901D (A Int64, D date)  Engine=ReplicatedMergeTree('/clickhouse/tables/{database}/test_alter_attach_01901D', 'r1')\nPARTITION BY D ORDER BY A;","fileName":"../ClickHouse/tests/queries/0_stateless/01901_test_attach_partition_from.sql","errors":[]},{"query":"create table d (i UInt8) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01901_in_literal_shard_prune.sql","errors":[]},{"query":"create table dp as d Engine=Distributed(test_cluster_two_shards, currentDatabase(), d, i);","fileName":"../ClickHouse/tests/queries/0_stateless/01901_in_literal_shard_prune.sql","errors":[]},{"query":"CREATE TABLE test_table_unsigned_values (\nid UInt64,\nvalue1 UInt8,\nvalue2 UInt16,\nvalue3 UInt32,\nvalue4 UInt64,\nweight UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01897_jit_aggregation_function_avg_weighted_long.sql","errors":[]},{"query":"CREATE TABLE test_table_signed_values (\nid UInt64,\nvalue1 Int8,\nvalue2 Int16,\nvalue3 Int32,\nvalue4 Int64,\nweight UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01897_jit_aggregation_function_avg_weighted_long.sql","errors":[]},{"query":"CREATE TABLE test_table_float_values (\nid UInt64,\nvalue1 Float32,\nvalue2 Float64,\nweight UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01897_jit_aggregation_function_avg_weighted_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_unsigned_values (\nid UInt64,\nvalue1 Nullable(UInt8),\nvalue2 Nullable(UInt16),\nvalue3 Nullable(UInt32),\nvalue4 Nullable(UInt64),\nweight UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01897_jit_aggregation_function_avg_weighted_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_signed_values (\nid UInt64,\nvalue1 Nullable(Int8),\nvalue2 Nullable(Int16),\nvalue3 Nullable(Int32),\nvalue4 Nullable(Int64),\nweight UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01897_jit_aggregation_function_avg_weighted_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_float_values (\nid UInt64,\nvalue1 Nullable(Float32),\nvalue2 Nullable(Float64),\nweight UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01897_jit_aggregation_function_avg_weighted_long.sql","errors":[]},{"query":"CREATE TABLE test_table_null_specifics (\nid UInt64,\nvalue1 Nullable(UInt64),\nvalue2 Nullable(UInt64),\nvalue3 Nullable(UInt64),\nweight UInt64,\nweight_nullable Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01897_jit_aggregation_function_avg_weighted_long.sql","errors":[]},{"query":"CREATE TABLE test_table_unsigned_values (\nid UInt64,\nvalue1 UInt8,\nvalue2 UInt16,\nvalue3 UInt32,\nvalue4 UInt64,\npredicate_value UInt8\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01896_jit_aggregation_function_if_long.sql","errors":[]},{"query":"CREATE TABLE test_table_signed_values (\nid UInt64,\nvalue1 Int8,\nvalue2 Int16,\nvalue3 Int32,\nvalue4 Int64,\npredicate_value UInt8\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01896_jit_aggregation_function_if_long.sql","errors":[]},{"query":"CREATE TABLE test_table_float_values (\nid UInt64,\nvalue1 Float32,\nvalue2 Float64,\npredicate_value UInt8\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01896_jit_aggregation_function_if_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_unsigned_values (\nid UInt64,\nvalue1 Nullable(UInt8),\nvalue2 Nullable(UInt16),\nvalue3 Nullable(UInt32),\nvalue4 Nullable(UInt64),\npredicate_value UInt8\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01896_jit_aggregation_function_if_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_signed_values (\nid UInt64,\nvalue1 Nullable(Int8),\nvalue2 Nullable(Int16),\nvalue3 Nullable(Int32),\nvalue4 Nullable(Int64),\npredicate_value UInt8\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01896_jit_aggregation_function_if_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_float_values (\nid UInt64,\nvalue1 Nullable(Float32),\nvalue2 Nullable(Float64),\npredicate_value UInt8\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01896_jit_aggregation_function_if_long.sql","errors":[]},{"query":"CREATE TABLE test_table_null_specifics (\nid UInt64,\nvalue1 Nullable(UInt64),\nvalue2 Nullable(UInt64),\nvalue3 Nullable(UInt64),\npredicate_value UInt8\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01896_jit_aggregation_function_if_long.sql","errors":[]},{"query":"CREATE TABLE test_table_null_specifics (\nid UInt64,\nvalue1 Nullable(UInt64),\nvalue2 Nullable(UInt64),\nvalue3 Nullable(UInt64),\npredicate_value UInt8,\nweight UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01896_jit_aggregation_function_if_long.sql","errors":[]},{"query":"CREATE TABLE test_table_unsigned_values (\nid UInt64,\nvalue1 UInt8,\nvalue2 UInt16,\nvalue3 UInt32,\nvalue4 UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01895_jit_aggregation_function_avg_long.sql","errors":[]},{"query":"CREATE TABLE test_table_signed_values (\nid UInt64,\nvalue1 Int8,\nvalue2 Int16,\nvalue3 Int32,\nvalue4 Int64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01895_jit_aggregation_function_avg_long.sql","errors":[]},{"query":"CREATE TABLE test_table_float_values (\nid UInt64,\nvalue1 Float32,\nvalue2 Float64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01895_jit_aggregation_function_avg_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_unsigned_values (\nid UInt64,\nvalue1 Nullable(UInt8),\nvalue2 Nullable(UInt16),\nvalue3 Nullable(UInt32),\nvalue4 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01895_jit_aggregation_function_avg_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_signed_values (\nid UInt64,\nvalue1 Nullable(Int8),\nvalue2 Nullable(Int16),\nvalue3 Nullable(Int32),\nvalue4 Nullable(Int64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01895_jit_aggregation_function_avg_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_float_values (\nid UInt64,\nvalue1 Nullable(Float32),\nvalue2 Nullable(Float64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01895_jit_aggregation_function_avg_long.sql","errors":[]},{"query":"CREATE TABLE test_table_null_specifics (\nid UInt64,\nvalue1 Nullable(UInt64),\nvalue2 Nullable(UInt64),\nvalue3 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01895_jit_aggregation_function_avg_long.sql","errors":[]},{"query":"CREATE TABLE test_table_unsigned_values (\nid UInt64,\nvalue1 UInt8,\nvalue2 UInt16,\nvalue3 UInt32,\nvalue4 UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01894_jit_aggregation_function_max_long.sql","errors":[]},{"query":"CREATE TABLE test_table_signed_values (\nid UInt64,\nvalue1 Int8,\nvalue2 Int16,\nvalue3 Int32,\nvalue4 Int64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01894_jit_aggregation_function_max_long.sql","errors":[]},{"query":"CREATE TABLE test_table_float_values (\nid UInt64,\nvalue1 Float32,\nvalue2 Float64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01894_jit_aggregation_function_max_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_unsigned_values (\nid UInt64,\nvalue1 Nullable(UInt8),\nvalue2 Nullable(UInt16),\nvalue3 Nullable(UInt32),\nvalue4 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01894_jit_aggregation_function_max_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_signed_values (\nid UInt64,\nvalue1 Nullable(Int8),\nvalue2 Nullable(Int16),\nvalue3 Nullable(Int32),\nvalue4 Nullable(Int64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01894_jit_aggregation_function_max_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_float_values (\nid UInt64,\nvalue1 Nullable(Float32),\nvalue2 Nullable(Float64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01894_jit_aggregation_function_max_long.sql","errors":[]},{"query":"CREATE TABLE test_table_null_specifics (\nid UInt64,\nvalue1 Nullable(UInt64),\nvalue2 Nullable(UInt64),\nvalue3 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01894_jit_aggregation_function_max_long.sql","errors":[]},{"query":"CREATE TABLE test_table_unsigned_values (\nid UInt64,\nvalue1 UInt8,\nvalue2 UInt16,\nvalue3 UInt32,\nvalue4 UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01893_jit_aggregation_function_min_long.sql","errors":[]},{"query":"CREATE TABLE test_table_signed_values (\nid UInt64,\nvalue1 Int8,\nvalue2 Int16,\nvalue3 Int32,\nvalue4 Int64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01893_jit_aggregation_function_min_long.sql","errors":[]},{"query":"CREATE TABLE test_table_float_values (\nid UInt64,\nvalue1 Float32,\nvalue2 Float64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01893_jit_aggregation_function_min_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_unsigned_values (\nid UInt64,\nvalue1 Nullable(UInt8),\nvalue2 Nullable(UInt16),\nvalue3 Nullable(UInt32),\nvalue4 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01893_jit_aggregation_function_min_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_signed_values (\nid UInt64,\nvalue1 Nullable(Int8),\nvalue2 Nullable(Int16),\nvalue3 Nullable(Int32),\nvalue4 Nullable(Int64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01893_jit_aggregation_function_min_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_float_values (\nid UInt64,\nvalue1 Nullable(Float32),\nvalue2 Nullable(Float64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01893_jit_aggregation_function_min_long.sql","errors":[]},{"query":"CREATE TABLE test_table_null_specifics (\nid UInt64,\nvalue1 Nullable(UInt64),\nvalue2 Nullable(UInt64),\nvalue3 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01893_jit_aggregation_function_min_long.sql","errors":[]},{"query":"CREATE TABLE test_table_unsigned_values (\nid UInt64,\nvalue1 UInt8,\nvalue2 UInt16,\nvalue3 UInt32,\nvalue4 UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01892_jit_aggregation_function_any_last_long.sql","errors":[]},{"query":"CREATE TABLE test_table_signed_values (\nid UInt64,\nvalue1 Int8,\nvalue2 Int16,\nvalue3 Int32,\nvalue4 Int64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01892_jit_aggregation_function_any_last_long.sql","errors":[]},{"query":"CREATE TABLE test_table_float_values (\nid UInt64,\nvalue1 Float32,\nvalue2 Float64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01892_jit_aggregation_function_any_last_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_unsigned_values (\nid UInt64,\nvalue1 Nullable(UInt8),\nvalue2 Nullable(UInt16),\nvalue3 Nullable(UInt32),\nvalue4 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01892_jit_aggregation_function_any_last_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_signed_values (\nid UInt64,\nvalue1 Nullable(Int8),\nvalue2 Nullable(Int16),\nvalue3 Nullable(Int32),\nvalue4 Nullable(Int64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01892_jit_aggregation_function_any_last_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_float_values (\nid UInt64,\nvalue1 Nullable(Float32),\nvalue2 Nullable(Float64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01892_jit_aggregation_function_any_last_long.sql","errors":[]},{"query":"CREATE TABLE test_table_null_specifics (\nid UInt64,\nvalue1 Nullable(UInt64),\nvalue2 Nullable(UInt64),\nvalue3 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01892_jit_aggregation_function_any_last_long.sql","errors":[]},{"query":"create table tab (i8 Int8, i16 Int16, i32 Int32, i64 Int64, u8 UInt8, u16 UInt16, u32 UInt32, u64 UInt64, id UUID, s String, fs FixedString(33), a Array(UInt8), t Tuple(UInt16, UInt32), d Date, dt DateTime('Asia/Istanbul'), dt64 DateTime64(3, 'Asia/Istanbul'), dec128 Decimal128(3), lc LowCardinality(String)) engine = MergeTree PARTITION BY (i8, i16, i32, i64, u8, u16, u32, u64, id, s, fs, a, t, d, dt, dt64, dec128, lc) order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01891_partition_hash_no_long_int.sql","errors":[]},{"query":"CREATE TABLE tab ( i8 Int8,\ni16 Int16,\ni32 Int32,\ni64 Int64,\ni128 Int128,\ni256 Int256,\nu8 UInt8,\nu16 UInt16,\nu32 UInt32,\nu64 UInt64,\nu128 UInt128,\nu256 UInt256,\nid UUID,\ns String,\nfs FixedString(33),\na Array(UInt8),\nt Tuple(UInt16, UInt32),\nd Date,\ndt DateTime('Asia/Istanbul'),\ndt64 DateTime64(3, 'Asia/Istanbul'),\ndec128 Decimal128(3),\ndec256 Decimal256(4),\nlc LowCardinality(String))\nengine = MergeTree PARTITION BY (i8, i16, i32, i64, i128, i256, u8, u16, u32, u64, u128, u256, id, s, fs, a, t, d, dt, dt64, dec128, dec256, lc) ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01891_partition_hash.sql","errors":[]},{"query":"create table tab (id UUID, value UInt32) engine = MergeTree PARTITION BY id order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01891_partition_by_uuid.sql","errors":[]},{"query":"create table test (a String)  Engine MergeTree order by a partition by a;","fileName":"../ClickHouse/tests/queries/0_stateless/01891_not_like_partition_prune.sql","errors":[]},{"query":"create table test1 (i int, j int) engine MergeTree partition by i order by tuple() settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01891_not_in_partition_prune.sql","errors":[]},{"query":"create table t1 (date Date, a Float64, b String) Engine=MergeTree ORDER BY date;","fileName":"../ClickHouse/tests/queries/0_stateless/01891_not_in_partition_prune.sql","errors":[]},{"query":"create table t2 (date Date, a Float64, b String) Engine=MergeTree ORDER BY date;","fileName":"../ClickHouse/tests/queries/0_stateless/01891_not_in_partition_prune.sql","errors":[]},{"query":"CREATE TABLE test_table_unsigned_values (\nid UInt64,\nvalue1 UInt8,\nvalue2 UInt16,\nvalue3 UInt32,\nvalue4 UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01891_jit_aggregation_function_any_long.sql","errors":[]},{"query":"CREATE TABLE test_table_signed_values (\nid UInt64,\nvalue1 Int8,\nvalue2 Int16,\nvalue3 Int32,\nvalue4 Int64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01891_jit_aggregation_function_any_long.sql","errors":[]},{"query":"CREATE TABLE test_table_float_values (\nid UInt64,\nvalue1 Float32,\nvalue2 Float64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01891_jit_aggregation_function_any_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_unsigned_values (\nid UInt64,\nvalue1 Nullable(UInt8),\nvalue2 Nullable(UInt16),\nvalue3 Nullable(UInt32),\nvalue4 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01891_jit_aggregation_function_any_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_signed_values (\nid UInt64,\nvalue1 Nullable(Int8),\nvalue2 Nullable(Int16),\nvalue3 Nullable(Int32),\nvalue4 Nullable(Int64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01891_jit_aggregation_function_any_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_float_values (\nid UInt64,\nvalue1 Nullable(Float32),\nvalue2 Nullable(Float64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01891_jit_aggregation_function_any_long.sql","errors":[]},{"query":"CREATE TABLE test_table_null_specifics (\nid UInt64,\nvalue1 Nullable(UInt64),\nvalue2 Nullable(UInt64),\nvalue3 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01891_jit_aggregation_function_any_long.sql","errors":[]},{"query":"CREATE TABLE test_table_unsigned_values (\nid UInt64,\nvalue1 UInt8,\nvalue2 UInt16,\nvalue3 UInt32,\nvalue4 UInt64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01890_jit_aggregation_function_sum_long.sql","errors":[]},{"query":"CREATE TABLE test_table_signed_values (\nid UInt64,\nvalue1 Int8,\nvalue2 Int16,\nvalue3 Int32,\nvalue4 Int64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01890_jit_aggregation_function_sum_long.sql","errors":[]},{"query":"CREATE TABLE test_table_float_values (\nid UInt64,\nvalue1 Float32,\nvalue2 Float64\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01890_jit_aggregation_function_sum_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_unsigned_values (\nid UInt64,\nvalue1 Nullable(UInt8),\nvalue2 Nullable(UInt16),\nvalue3 Nullable(UInt32),\nvalue4 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01890_jit_aggregation_function_sum_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_signed_values (\nid UInt64,\nvalue1 Nullable(Int8),\nvalue2 Nullable(Int16),\nvalue3 Nullable(Int32),\nvalue4 Nullable(Int64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01890_jit_aggregation_function_sum_long.sql","errors":[]},{"query":"CREATE TABLE test_table_nullable_float_values (\nid UInt64,\nvalue1 Nullable(Float32),\nvalue2 Nullable(Float64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01890_jit_aggregation_function_sum_long.sql","errors":[]},{"query":"CREATE TABLE test_table_null_specifics (\nid UInt64,\nvalue1 Nullable(UInt64),\nvalue2 Nullable(UInt64),\nvalue3 Nullable(UInt64)\n) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01890_jit_aggregation_function_sum_long.sql","errors":[]},{"query":"CREATE TABLE 01889_sql_json (id UInt8, json String) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01889_sql_json_functions.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01889'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table tab (t DateTime) engine = MergeTree order by toStartOfDay(t);","fileName":"../ClickHouse/tests/queries/0_stateless/01889_key_condition_function_chains.sql","errors":[]},{"query":"create table tab (t DateTime) engine = MergeTree order by toStartOfDay(t + 1);","fileName":"../ClickHouse/tests/queries/0_stateless/01889_key_condition_function_chains.sql","errors":[]},{"query":"create table tab (x Int32, y Int32) engine = MergeTree partition by x + y order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01889_key_condition_function_chains.sql","errors":[]},{"query":"create table tab (x Int32, y Int32) engine = MergeTree partition by ((x + y) + 1) * 2 order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01889_key_condition_function_chains.sql","errors":[]},{"query":"CREATE TABLE bftest ( k Int64,\ny Array(Int64) DEFAULT x,\nx Array(Int64),\nindex ix1(x) TYPE bloom_filter GRANULARITY 3\n)\nEngine=MergeTree\nORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/01888_bloom_filter_hasAny.sql","errors":[]},{"query":"CREATE TABLE grouping_sets(fact_1_id Int32, fact_2_id Int32, fact_3_id Int32, fact_4_id Int32, sales_value Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01883_with_grouping_sets.sql","errors":[]},{"query":"CREATE TABLE t_subcolumns_local (arr Array(UInt32), n Nullable(String), t Tuple(s1 String, s2 String)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01883_subcolumns_distributed.sql","errors":[]},{"query":"CREATE TABLE t_subcolumns_dist AS t_subcolumns_local ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), t_subcolumns_local);","fileName":"../ClickHouse/tests/queries/0_stateless/01883_subcolumns_distributed.sql","errors":[]},{"query":"CREATE TABLE t_subcolumns_local (arr Array(UInt32), n Nullable(String), t Tuple(s1 String, s2 String)) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01883_subcolumns_distributed.sql","errors":[]},{"query":"CREATE TABLE grouping_sets(fact_1_id Int32, fact_2_id Int32, fact_3_id Int32, fact_4_id Int32, sales_value Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01883_grouping_sets_crash.sql","errors":[]},{"query":"create table nums_in_mem(v UInt64) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01882_scalar_subquery_exception.sql","errors":[]},{"query":"create table nums_in_mem_dist as nums_in_mem engine=Distributed('test_shard_localhost', currentDatabase(), nums_in_mem);","fileName":"../ClickHouse/tests/queries/0_stateless/01882_scalar_subquery_exception.sql","errors":[]},{"query":"CREATE TABLE limited_merge_table (\nkey UInt64\n)\nENGINE = MergeTree()\nORDER BY key\nSETTINGS max_parts_to_merge_at_once = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/01882_check_max_parts_to_merge_at_once.sql","errors":[]},{"query":"CREATE TABLE test_buffer_table (\n\\`a\\` Int64\n)\nENGINE = Buffer('', '', 1, 1000000, 1000000, 1000000, 1000000, 1000000, 1000000);","fileName":"../ClickHouse/tests/queries/0_stateless/01881_total_bytes_storage_buffer.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_buffer_table (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table test_tbl (vend_nm String, ship_dt Date) engine MergeTree partition by toWeek(ship_dt) order by vend_nm;","fileName":"../ClickHouse/tests/queries/0_stateless/01881_to_week_monotonic_fix.sql","errors":[]},{"query":"CREATE TABLE t_create_as_tuple ENGINE = MergeTree() ORDER BY number AS\nSELECT number, [('string',number)] AS array FROM numbers(3);","fileName":"../ClickHouse/tests/queries/0_stateless/01881_create_as_tuple.sql","errors":[]},{"query":"CREATE TABLE test_table (\n\\`col1\\` DateTime,\n\\`col2\\` Int64,\n\\`col3\\` AggregateFunction(sumMap, Tuple(Array(UInt8), Array(UInt8)))\n)\nENGINE = AggregatingMergeTree() ORDER BY (col1, col2);","fileName":"../ClickHouse/tests/queries/0_stateless/01881_aggregate_functions_versioning.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test ENGINE = Null AS\nWITH (\nSELECT arrayReduce('sumMapState', [(['foo'], arrayMap(x -> -0., ['foo']))])\n) AS all_metrics\nSELECT\n(finalizeAggregation(arrayReduce('sumMapMergeState', [all_metrics])) AS metrics_tuple).1 AS metric_names,\nmetrics_tuple.2 AS metric_values\nFROM system.one;","fileName":"../ClickHouse/tests/queries/0_stateless/01881_aggregate_functions_versioning.sql","errors":[]},{"query":"CREATE TABLE test_input(id Int32) ENGINE=MergeTree() order by id; ","fileName":"../ClickHouse/tests/queries/0_stateless/01880_materialized_view_to_table_type_check.sql","errors":[]},{"query":"CREATE TABLE test(\\`id\\` Int32, \\`pv\\` AggregateFunction(sum, Int32)) ENGINE = AggregatingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01880_materialized_view_to_table_type_check.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test(\\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW test_mv to test(\\`id\\` Int32, \\`pv\\` AggregateFunction(sum, Int32)) as SELECT id, sumState(1) as pv from test_input group by id; -- { serverError CANNOT_CONVERT_TYPE }  INSERT INTO test_input SELECT toInt32(number % 1000) AS id FROM numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/01880_materialized_view_to_table_type_check.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW test_mv to test('","startColumn":40,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"create MATERIALIZED VIEW test_mv to test(\\`id\\` Int32, \\`pv\\` AggregateFunction(sum, Int32)) as SELECT id, sumState(toInt32(1)) as pv from test_input group by id; ","fileName":"../ClickHouse/tests/queries/0_stateless/01880_materialized_view_to_table_type_check.sql","errors":[{"message":"no viable alternative at input 'create MATERIALIZED VIEW test_mv to test('","startColumn":40,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"CREATE TABLE t_func_to_subcolumns (id UInt64, arr Array(UInt64), n Nullable(String), m Map(String, UInt64)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01872_functions_to_subcolumns_analyzer.sql","errors":[]},{"query":"CREATE TABLE t_tuple_null (t Tuple(null UInt32)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01872_functions_to_subcolumns_analyzer.sql","errors":[]},{"query":"CREATE TABLE data_01875_1 Engine=MergeTree ORDER BY number PARTITION BY bitShiftRight(number, 8) + 1 AS SELECT * FROM numbers(16384);","fileName":"../ClickHouse/tests/queries/0_stateless/01871_merge_tree_compile_expressions.sql","errors":[]},{"query":"CREATE TABLE data_01875_2 Engine=MergeTree ORDER BY number PARTITION BY bitShiftRight(number, 8) + 1 AS SELECT * FROM numbers(16384);","fileName":"../ClickHouse/tests/queries/0_stateless/01871_merge_tree_compile_expressions.sql","errors":[]},{"query":"CREATE TABLE data_01875_3 Engine=MergeTree ORDER BY number PARTITION BY bitShiftRight(number, 8) + 1 AS SELECT * FROM numbers(16384);","fileName":"../ClickHouse/tests/queries/0_stateless/01871_merge_tree_compile_expressions.sql","errors":[]},{"query":"CREATE TABLE table1 (id Int64, v UInt64) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/{database}/test_table12', '1', v)\nPARTITION BY id % 200 ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01870_modulo_partition_key.sql","errors":[]},{"query":"CREATE TABLE table2 (id Int64, v UInt64) ENGINE = MergeTree()\nPARTITION BY (toInt32(id / 2) % 3, id % 200) ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01870_modulo_partition_key.sql","errors":[]},{"query":"CREATE TABLE table3 (id Int64, v UInt64) ENGINE = MergeTree()\nPARTITION BY (id % 200, (id % 200) % 10, toInt32(round((id % 200) / 2, 0))) ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01870_modulo_partition_key.sql","errors":[]},{"query":"CREATE TABLE table4 (id Int64, v UInt64, s String, INDEX a (id * 2, s) TYPE minmax GRANULARITY 3\n) ENGINE = MergeTree() PARTITION BY id % 10 ORDER BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/01870_modulo_partition_key.sql","errors":[]},{"query":"create database db_01870;","fileName":"../ClickHouse/tests/queries/0_stateless/01870_buffer_flush.sql","errors":[{"message":"no viable alternative at input 'create database db_01870;'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"create table db_01870.a_data_01870 as system.numbers Engine=TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01870_buffer_flush.sql","errors":[]},{"query":"create table db_01870.z_buffer_01870 as system.numbers Engine=Buffer(db_01870, a_data_01870, 1, 100, 100, \n);","fileName":"../ClickHouse/tests/queries/0_stateless/01870_buffer_flush.sql","errors":[{"message":"no viable alternative at input 'create table db_01870.z_buffer_01870 as system.numbers Engine=Buffer(db_01870, a_data_01870, 1, 100, 100, \\n)'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table replacing(    \\`A\\` Int64,    \\`D\\` DateTime64(9, 'Asia/Istanbul'),    \\`S\\` String)    ENGINE = ReplacingMergeTree(D) ORDER BY A;","fileName":"../ClickHouse/tests/queries/0_stateless/01867_support_datetime64_version_column.sql","errors":[{"message":"no viable alternative at input 'create table replacing(    \\'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE TABLE mem_test (\n\\`a\\` Int64,\n\\`b\\` Int64\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01867_fix_storage_memory_mutation.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mem_test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE OR REPLACE VIEW view_no_nulls AS SELECT * FROM ( SELECT number + 1 AS a, number + 11 AS b FROM numbers(2) ) AS t1\nFULL JOIN ( SELECT number + 2 AS a, number + 22 AS c FROM numbers(2) ) AS t2\nUSING a ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01866_view_persist_settings.sql","errors":[]},{"query":"CREATE OR REPLACE VIEW view_nulls_set AS SELECT * FROM ( SELECT number + 1 AS a, number + 11 AS b FROM numbers(2) ) AS t1\nFULL JOIN ( SELECT number + 2 AS a, number + 22 AS c FROM numbers(2) ) AS t2\nUSING a ORDER BY a\nSETTINGS join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01866_view_persist_settings.sql","errors":[]},{"query":"CREATE OR REPLACE VIEW view_nulls AS SELECT * FROM ( SELECT number + 1 AS a, number + 11 AS b FROM numbers(2) ) AS t1\nFULL JOIN ( SELECT number + 2 AS a, number + 22 AS c FROM numbers(2) ) AS t2\nUSING a ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01866_view_persist_settings.sql","errors":[]},{"query":"CREATE OR REPLACE VIEW view_no_nulls_set AS SELECT * FROM ( SELECT number + 1 AS a, number + 11 AS b FROM numbers(2) ) AS t1\nFULL JOIN ( SELECT number + 2 AS a, number + 22 AS c FROM numbers(2) ) AS t2\nUSING a ORDER BY a\nSETTINGS join_use_nulls = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01866_view_persist_settings.sql","errors":[]},{"query":"CREATE TABLE dt64test (\n\\`dt64_column\\` DateTime64(3),\n\\`dt_column\\` DateTime DEFAULT toDateTime(dt64_column)\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMM(dt64_column)\nORDER BY dt64_column;","fileName":"../ClickHouse/tests/queries/0_stateless/01866_datetime64_cmp_with_constant.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dt64test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE interval ( \\`id\\` String, \\`start\\` Int64, \\`end\\` Int64 ) ENGINE = MergeTree ORDER BY start;","fileName":"../ClickHouse/tests/queries/0_stateless/01866_aggregate_function_interval_length_sum.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE interval ( \\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE fl_interval ( \\`id\\` String, \\`start\\` Float, \\`end\\` Float ) ENGINE = MergeTree ORDER BY start;","fileName":"../ClickHouse/tests/queries/0_stateless/01866_aggregate_function_interval_length_sum.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE fl_interval ( \\'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE TABLE dt_interval ( \\`id\\` String, \\`start\\` DateTime, \\`end\\` DateTime ) ENGINE = MergeTree ORDER BY start;","fileName":"../ClickHouse/tests/queries/0_stateless/01866_aggregate_function_interval_length_sum.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dt_interval ( \\'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE TABLE date_interval ( \\`id\\` String, \\`start\\` Date, \\`end\\` Date ) ENGINE = MergeTree ORDER BY start;","fileName":"../ClickHouse/tests/queries/0_stateless/01866_aggregate_function_interval_length_sum.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE date_interval ( \\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE test(a Int, b Int) Engine=ReplacingMergeTree order by a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01861_explain_pipeline.sql","errors":[]},{"query":"CREATE FUNCTION 01856_test_function_0 AS (a, b, c) -> a * b * c;","fileName":"../ClickHouse/tests/queries/0_stateless/01856_create_function.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 01856_test_function_1 AS (a, b) -> 01856_test_function_1(a, b) + 01856_test_function_1(a, b); --{serverError CANNOT_CREATE_RECURSIVE_FUNCTION} CREATE FUNCTION cast AS a -> a + 1; --{serverError FUNCTION_ALREADY_EXISTS}\nCREATE FUNCTION sum AS (a, b) -> a + b; --{serverError FUNCTION_ALREADY_EXISTS}\nCREATE FUNCTION 01856_test_function_2 AS (a, b) -> a + b;","fileName":"../ClickHouse/tests/queries/0_stateless/01856_create_function.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE FUNCTION 01856_test_function_2 AS (a) -> a || '!!!'; --{serverError FUNCTION_ALREADY_EXISTS} DROP FUNCTION 01856_test_function_2;","fileName":"../ClickHouse/tests/queries/0_stateless/01856_create_function.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE test_table (a UInt64) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01855_jit_comparison_constant_result.sql","errors":[]},{"query":"CREATE TABLE test_table (a UInt64, b ALIAS a, c ALIAS b) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01855_jit_comparison_constant_result.sql","errors":[]},{"query":"CREATE TABLE v1 ( id Int32 ) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01852_multiple_joins_with_union_join.sql","errors":[]},{"query":"CREATE TABLE v2 ( value Int32 ) ENGINE = MergeTree() ORDER BY value;","fileName":"../ClickHouse/tests/queries/0_stateless/01852_multiple_joins_with_union_join.sql","errors":[]},{"query":"CREATE TABLE map_comb(a int, statusMap Map(UInt16, UInt32)) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01852_map_combinator.sql","errors":[]},{"query":"CREATE TABLE sum_map_decimal(statusMap Map(UInt16,Decimal32(5))) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01852_map_combinator.sql","errors":[]},{"query":"CREATE TABLE test_jit_nonnull (value UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01852_jit_if.sql","errors":[]},{"query":"CREATE TABLE test_jit_nullable (value Nullable(UInt8)) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01852_jit_if.sql","errors":[]},{"query":"CREATE TABLE simple_key_source_table_01862 (\nid UInt64,\nvalue String\n) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE DICTIONARY simple_key_flat_dictionary_01862 (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'simple_key_source_table_01862'))\nLAYOUT(FLAT())\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE DICTIONARY simple_key_direct_dictionary_01862 (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'simple_key_source_table_01862'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE DICTIONARY simple_key_hashed_dictionary_01862 (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'simple_key_source_table_01862'))\nLAYOUT(HASHED())\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE DICTIONARY simple_key_sparse_hashed_dictionary_01862 (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'simple_key_source_table_01862'))\nLAYOUT(SPARSE_HASHED())\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE DICTIONARY simple_key_cache_dictionary_01862 (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'simple_key_source_table_01862'))\nLAYOUT(CACHE(SIZE_IN_CELLS 100000))\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE TABLE complex_key_source_table_01862 (\nid UInt64,\nid_key String,\nvalue String\n) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE DICTIONARY complex_key_hashed_dictionary_01862 (\nid UInt64,\nid_key String,\nvalue String\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(TABLE 'complex_key_source_table_01862'))\nLAYOUT(COMPLEX_KEY_HASHED())\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE DICTIONARY complex_key_direct_dictionary_01862 (\nid UInt64,\nid_key String,\nvalue String\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(TABLE 'complex_key_source_table_01862'))\nLAYOUT(COMPLEX_KEY_DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE DICTIONARY complex_key_cache_dictionary_01862 (\nid UInt64,\nid_key String,\nvalue String\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(TABLE 'complex_key_source_table_01862'))\nLAYOUT(COMPLEX_KEY_CACHE(SIZE_IN_CELLS 100000))\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE TABLE range_key_source_table_01862 (\nid UInt64,\nvalue String,\nfirst Date,\nlast Date\n) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE DICTIONARY simple_key_range_hashed_dictionary_01862 (\nid UInt64,\nvalue String,\nfirst Date,\nlast Date\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'range_key_source_table_01862'))\nLAYOUT(RANGE_HASHED())\nRANGE(MIN first MAX last)\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE TABLE ip_trie_source_table_01862 (\nprefix String,\nvalue String\n) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE DICTIONARY ip_trie_dictionary_01862 (\nprefix String,\nvalue String\n)\nPRIMARY KEY prefix\nSOURCE(CLICKHOUSE(TABLE 'ip_trie_source_table_01862'))\nLAYOUT(IP_TRIE())\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE TABLE polygons_01862 ( key Array(Array(Array(Tuple(Float64, Float64)))),\nname String\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE TABLE points_01862 (x Float64, y Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"CREATE DICTIONARY polygon_dictionary_01862 (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\nname String\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(USER 'default' TABLE 'polygons_01862'))\nLIFETIME(0)\nLAYOUT(POLYGON());","fileName":"../ClickHouse/tests/queries/0_stateless/01852_dictionary_found_rate_long.sql","errors":[]},{"query":"create table tbl (s String, i int) engine MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01851_fix_row_policy_empty_result.sql","errors":[]},{"query":"create row policy filter on tbl using (s = 'non_existing_domain') to all;","fileName":"../ClickHouse/tests/queries/0_stateless/01851_fix_row_policy_empty_result.sql","errors":[{"message":"no viable alternative at input 'create row'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE \\`01851_merge_tree\\` (\n\\`n1\\` Int8,\n\\`n2\\` Int8,\n\\`n3\\` Int8,\n\\`n4\\` Int8\n)\nENGINE = MergeTree\nORDER BY n1;","fileName":"../ClickHouse/tests/queries/0_stateless/01851_clear_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW \\`01851_merge_tree_mv\\` ENGINE = Memory AS\nSELECT\nn2,\nn3\nFROM \\`01851_merge_tree\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/01851_clear_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW \\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"create database if not exists shard_0;","fileName":"../ClickHouse/tests/queries/0_stateless/01850_dist_INSERT_preserve_error.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_0;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create database if not exists shard_1;","fileName":"../ClickHouse/tests/queries/0_stateless/01850_dist_INSERT_preserve_error.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_1;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table shard_0.data_01850 (key Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01850_dist_INSERT_preserve_error.sql","errors":[]},{"query":"create table dist_01850 (key Int) engine=Distributed('test_cluster_two_replicas_different_databases',  '', data_01850, key);","fileName":"../ClickHouse/tests/queries/0_stateless/01850_dist_INSERT_preserve_error.sql","errors":[]},{"query":"CREATE TABLE s2_indexes (s2_index UInt64, longitude Float64, latitude Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01849_geoToS2.sql","errors":[]},{"query":"create table tbl(dt DateTime, i int, j String, v Float64) engine MergeTree partition by (toDate(dt), i % 2, length(j)) order by i settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01848_partition_value_column.sql","errors":[]},{"query":"create table tbl2(i int) engine MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01848_partition_value_column.sql","errors":[]},{"query":"CREATE TABLE test_null_as_default (a String DEFAULT 'WORLD') ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01846_null_as_default_for_insert_select.sql","errors":[]},{"query":"CREATE TABLE test_null_as_default (a String DEFAULT 'WORLD', b String DEFAULT 'PEOPLE') ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01846_null_as_default_for_insert_select.sql","errors":[]},{"query":"CREATE TABLE test_null_as_default (a Int8, b Int64 DEFAULT a + 1000) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01846_null_as_default_for_insert_select.sql","errors":[]},{"query":"CREATE TABLE test_null_as_default (a Int8, b Int64 DEFAULT c - 500, c Int32 DEFAULT a + 1000) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01846_null_as_default_for_insert_select.sql","errors":[]},{"query":"CREATE TABLE alter_test (a Int32, b DateTime) ENGINE = ReplacingMergeTree(b) ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01846_alter_column_without_type_bugfix.sql","errors":[]},{"query":"CREATE TABLE test (\\`key\\` UInt32, \\`arr\\` ALIAS [1, 2], \\`xx\\` MATERIALIZED arr[1]) ENGINE = MergeTree PARTITION BY tuple() ORDER BY tuple(); ","fileName":"../ClickHouse/tests/queries/0_stateless/01845_add_testcase_for_arrayElement.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE test (\\`key\\` UInt32, \\`arr\\` Array(UInt32) ALIAS [1, 2], \\`xx\\` MATERIALIZED arr[1]) ENGINE = MergeTree PARTITION BY tuple() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01845_add_testcase_for_arrayElement.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE test (\\`key\\` UInt32, \\`arr\\` Array(UInt32) ALIAS [1, 2], \\`xx\\` UInt32 MATERIALIZED arr[1]) ENGINE = MergeTree PARTITION BY tuple() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01845_add_testcase_for_arrayElement.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE test (\\`key\\` UInt32, \\`arr\\` ALIAS [1, 2]) ENGINE = MergeTree PARTITION BY tuple() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01845_add_testcase_for_arrayElement.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE DICTIONARY example_simple_key_dictionary ( id UInt64,\nvalue UInt64\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE '' DATABASE currentDatabase()))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01838_system_dictionaries_virtual_key_column.sql","errors":[]},{"query":"CREATE DICTIONARY example_complex_key_dictionary ( id UInt64,\nid_key String,\nvalue UInt64\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE '' DATABASE currentDatabase()))\nLAYOUT(COMPLEX_KEY_DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01838_system_dictionaries_virtual_key_column.sql","errors":[]},{"query":"CREATE DATABASE 01837_db ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01837_database_memory_ddl_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01837'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01837_db.simple_key_dictionary_source (\nid UInt64,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01837_database_memory_ddl_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01837'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01837_db.simple_key_direct_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() DB '01837_db' TABLE 'simple_key_dictionary_source'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01837_database_memory_ddl_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01837'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"create table tt_null(p String) engine = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/01836_date_time_keep_default_timezone_on_operations_den_crane.sql","errors":[]},{"query":"create table tt(p String,tmin AggregateFunction(min, DateTime))  engine = AggregatingMergeTree  order by p;","fileName":"../ClickHouse/tests/queries/0_stateless/01836_date_time_keep_default_timezone_on_operations_den_crane.sql","errors":[]},{"query":"create materialized view tt_mv to tt as  select p, minState(now() - interval 30 minute) as tmin\nfrom tt_null group by p;","fileName":"../ClickHouse/tests/queries/0_stateless/01836_date_time_keep_default_timezone_on_operations_den_crane.sql","errors":[]},{"query":"CREATE TABLE tb (\ndate Date,\n\\`index\\` Int32,\nvalue Int32,\nidx Int32 ALIAS \\`index\\`\n)\nENGINE = MergeTree\nPARTITION BY date\nORDER BY (date, \\`index\\`);","fileName":"../ClickHouse/tests/queries/0_stateless/01835_alias_to_primary_key_cyfdecyf.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tb (\\ndate Date,\\n\\'","startColumn":0,"startLine":3,"endColumn":1,"endLine":3}]},{"query":"CREATE TABLE test_collation (\n\\`v\\` String,\n\\`v2\\` String\n)\nENGINE = MergeTree\nORDER BY v\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01833_test_collation_alvarotuso.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_collation (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table data_01832 (key Int) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01832_memory_write_suffix.sql","errors":[]},{"query":"CREATE TABLE t_json_wide_parts (data Object('json')) ENGINE MergeTree ORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_wide_parts_merge.sql","errors":[]},{"query":"CREATE TABLE t_json_sparse (data Object('json')) ENGINE = MergeTree ORDER BY tuple()\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.1,\nmin_bytes_for_wide_part = 0, index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_sparse.sql","errors":[]},{"query":"CREATE TABLE t_json_partitions (id UInt32, obj Object('json')) ENGINE MergeTree ORDER BY id PARTITION BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_partitions.sql","errors":[]},{"query":"CREATE TABLE t_json_parallel (data Object('json')) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_parallel_insert.sql","errors":[]},{"query":"CREATE TABLE t_json_null(id UInt64, data Object(Nullable('JSON'))) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_nullable.sql","errors":[]},{"query":"CREATE TABLE t_json_mutations(id UInt32, s String, obj Object('json')) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_mutations.sql","errors":[]},{"query":"CREATE TABLE t_json(id UInt64, obj Object('json')) ENGINE = MergeTree ORDER BY id\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_missed_values.sql","errors":[]},{"query":"CREATE TABLE type_json_src (id UInt32, data Object('json')) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_insert_select.sql","errors":[]},{"query":"CREATE TABLE type_json_dst AS type_json_src;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_insert_select.sql","errors":[]},{"query":"CREATE TABLE type_json_dst (data Object('json')) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_insert_select.sql","errors":[]},{"query":"CREATE TABLE type_json_src (data String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_insert_select.sql","errors":[]},{"query":"CREATE TABLE t_json_array (id UInt32, arr Array(Object('json'))) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_in_array.sql","errors":[]},{"query":"CREATE TABLE t_json(id UInt64, obj Object('json')) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_from_map.sql","errors":[]},{"query":"CREATE TABLE t_map(id UInt64, m Map(String, UInt64)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_from_map.sql","errors":[]},{"query":"CREATE TABLE t_json_field (id UInt32, data Object('json')) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_field.sql","errors":[]},{"query":"CREATE table t_github_json (\nevent_type LowCardinality(String) DEFAULT JSONExtractString(message_raw, 'type'),\nrepo_name LowCardinality(String) DEFAULT JSONExtractString(message_raw, 'repo', 'name'),\nmessage Object('json') DEFAULT message_raw,\nmessage_raw String EPHEMERAL\n) ENGINE = MergeTree ORDER BY (event_type, repo_name);","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_ephemeral.sql","errors":[{"message":"no viable alternative at input 'CREATE table t_github_json (\\nevent_type LowCardinality(String) DEFAULT JSONExtractString(message_raw, 'type'),\\nrepo_name LowCardinality(String) DEFAULT JSONExtractString(message_raw, 'repo', 'name'),\\nmessage Object('json') DEFAULT message_raw,\\nmessage_raw String EPHEMERAL'","startColumn":19,"startLine":5,"endColumn":28,"endLine":5}]},{"query":"CREATE TABLE t_json_empty_str(id UInt32, o Object('json')) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_empty_string.sql","errors":[]},{"query":"CREATE TABLE t_json_local(data Object('json')) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_distributed.sql","errors":[]},{"query":"CREATE TABLE t_json_dist AS t_json_local ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), t_json_local);","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_distributed.sql","errors":[]},{"query":"CREATE TABLE t_json_desc (data Object('json')) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_describe.sql","errors":[]},{"query":"CREATE TABLE t_json_bools (data Object('json')) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_bools.sql","errors":[]},{"query":"CREATE TABLE t_json(id UInt64, obj Object('json')) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_9.sql","errors":[]},{"query":"CREATE TABLE t_json_str_5 (data String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_5.sql","errors":[]},{"query":"CREATE TABLE t_json_5 (data Object('json')) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_5.sql","errors":[]},{"query":"CREATE TABLE t_json_2(id UInt64, data Object('JSON')) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01825_2/t_json_2', 'r1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_2.sql","errors":[]},{"query":"CREATE TABLE t_json_2(id UInt64, data Object('JSON')) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_18.sql","errors":[]},{"query":"CREATE TABLE t_json_17(obj Object('json')) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_17.sql","errors":[]},{"query":"CREATE FUNCTION hasValidSizes17 AS (arr1, arr2) -> length(arr1) = length(arr2) AND arrayAll((x, y) -> length(x) = length(y), arr1, arr2);","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_17.sql","errors":[{"message":"no viable alternative at input 'CREATE FUNCTION'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE t_json_14 (id UInt32, o Object('json')) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_14.sql","errors":[]},{"query":"CREATE TABLE t_json_10 (o Object('json')) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_10.sql","errors":[]},{"query":"CREATE TABLE t_json(id UInt64, data Object('JSON')) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_type_json_1.sql","errors":[]},{"query":"CREATE TABLE replacing_table (a UInt32, b UInt32, c UInt32) ENGINE = ReplacingMergeTree ORDER BY a\nSETTINGS vertical_merge_algorithm_min_rows_to_activate = 1,\nvertical_merge_algorithm_min_columns_to_activate = 1,\nindex_granularity = 16,\nmin_bytes_for_wide_part = 0,\nmerge_max_block_size = 16;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_replacing_vertical_merge.sql","errors":[]},{"query":"CREATE TABLE replacing_table (\nkey UInt64,\nvalue UInt64\n)\nENGINE = ReplacingMergeTree\nORDER BY key\nSETTINGS\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_replacing_vertical_merge.sql","errors":[]},{"query":"CREATE TABLE t_json_partitions (id UInt32, obj JSON) ENGINE MergeTree ORDER BY id PARTITION BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_partitions.sql","errors":[]},{"query":"CREATE TABLE t_json_parallel (data JSON) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_parallel_insert.sql","errors":[]},{"query":"CREATE TABLE t_json_mutations(id UInt32, s String, obj JSON) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_mutations.sql","errors":[]},{"query":"CREATE TABLE t_json(id UInt64, obj JSON) ENGINE = MergeTree ORDER BY id\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_missed_values.sql","errors":[]},{"query":"CREATE TABLE type_json_src (id UInt32, data JSON) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_insert_select.sql","errors":[]},{"query":"CREATE TABLE type_json_dst AS type_json_src;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_insert_select.sql","errors":[]},{"query":"CREATE TABLE type_json_dst (data JSON) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_insert_select.sql","errors":[]},{"query":"CREATE TABLE type_json_src (data String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_insert_select.sql","errors":[]},{"query":"CREATE TABLE t_json_array (id UInt32, arr Array(JSON)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_in_array.sql","errors":[]},{"query":"CREATE table t_github_json (\nevent_type LowCardinality(String) DEFAULT JSONExtractString(message_raw, 'type'),\nrepo_name LowCardinality(String) DEFAULT JSONExtractString(message_raw, 'repo', 'name'),\nmessage JSON DEFAULT empty(message_raw) ? '{}' : message_raw,\nmessage_raw String EPHEMERAL\n) ENGINE = MergeTree ORDER BY (event_type, repo_name);","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_ephemeral.sql","errors":[{"message":"no viable alternative at input 'CREATE table t_github_json (\\nevent_type LowCardinality(String) DEFAULT JSONExtractString(message_raw, 'type'),\\nrepo_name LowCardinality(String) DEFAULT JSONExtractString(message_raw, 'repo', 'name'),\\nmessage JSON DEFAULT empty(message_raw) ? '{}' : message_raw,\\nmessage_raw String EPHEMERAL'","startColumn":19,"startLine":5,"endColumn":28,"endLine":5}]},{"query":"CREATE TABLE t_json_local(data JSON) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_distributed.sql","errors":[]},{"query":"CREATE TABLE t_json_dist AS t_json_local ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), t_json_local);","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_distributed.sql","errors":[]},{"query":"CREATE TABLE t_json_bools (data JSON) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_bools.sql","errors":[]},{"query":"CREATE TABLE t_json(id UInt64, obj JSON) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_9.sql","errors":[]},{"query":"CREATE TABLE t_json_2(id UInt64, data JSON) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01825_2/t_json_2', 'r1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_2.sql","errors":[]},{"query":"CREATE TABLE t_json_2(id UInt64, data JSON) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_18.sql","errors":[]},{"query":"CREATE TABLE t_json_10 (o JSON) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01825_new_type_json_10.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS test_01824;","fileName":"../ClickHouse/tests/queries/0_stateless/01824_prefer_global_in_and_join.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_01824;'","startColumn":40,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"create table t1_shard (id Int32) engine MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/01824_prefer_global_in_and_join.sql","errors":[]},{"query":"create table t2_shard (id Int32) engine MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/01824_prefer_global_in_and_join.sql","errors":[]},{"query":"create table t1_distr as t1_shard engine Distributed(test_cluster_two_shards_localhost, test_01824, t1_shard, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01824_prefer_global_in_and_join.sql","errors":[]},{"query":"create table t2_distr as t2_shard engine Distributed(test_cluster_two_shards_localhost, test_01824, t2_shard, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01824_prefer_global_in_and_join.sql","errors":[]},{"query":"CREATE TABLE t_move_to_prewhere (id UInt32, a UInt8, b UInt8, c UInt8, fat_string String) ENGINE = MergeTree ORDER BY id PARTITION BY id\nSETTINGS min_rows_for_wide_part = 100, min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01824_move_to_prewhere_many_columns.sql","errors":[]},{"query":"CREATE TABLE t_move_to_prewhere (id UInt32, a UInt8, b UInt8, c UInt8, fat_string String) ENGINE = MergeTree ORDER BY id PARTITION BY id\nSETTINGS min_rows_for_wide_part = 10000, min_bytes_for_wide_part = 100000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01824_move_to_prewhere_many_columns.sql","errors":[]},{"query":"create temporary table test ( arr Array(Array(LowCardinality(String)))\n);","fileName":"../ClickHouse/tests/queries/0_stateless/01823_array_low_cardinality_KuliginStepan.sql","errors":[]},{"query":"CREATE TABLE t0 (c0 String) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/01822_union_and_constans_error.sql","errors":[]},{"query":"CREATE TABLE t1 (\n\\`n\\` Int8\n)\nENGINE = Memory\nCOMMENT 'this is a temporary table';","fileName":"../ClickHouse/tests/queries/0_stateless/01821_table_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t2 (\n\\`n\\` Int8\n)\nENGINE = MergeTree\nORDER BY n\nCOMMENT 'this is a MergeTree table';","fileName":"../ClickHouse/tests/queries/0_stateless/01821_table_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t3 (\n\\`n\\` Int8\n)\nENGINE = Log\nCOMMENT 'this is a Log table';","fileName":"../ClickHouse/tests/queries/0_stateless/01821_table_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t3 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t4 (\n\\`n\\` Int8\n)\nENGINE = Kafka\nSETTINGS\nkafka_broker_list = 'localhost:10000',\nkafka_topic_list = 'test',\nkafka_group_name = 'test',\nkafka_format = 'JSONEachRow'\nCOMMENT 'this is a Kafka table';","fileName":"../ClickHouse/tests/queries/0_stateless/01821_table_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t4 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t5 (\n\\`n\\` Int8\n)\nENGINE = EmbeddedRocksDB\nPRIMARY KEY n\nCOMMENT 'this is a EmbeddedRocksDB table';","fileName":"../ClickHouse/tests/queries/0_stateless/01821_table_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t5 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t6 (\n\\`n\\` Int8\n)\nENGINE = Executable('script.py', TabSeparated)\nCOMMENT 'this is a Executable table';","fileName":"../ClickHouse/tests/queries/0_stateless/01821_table_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t6 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE WINDOW VIEW t7 (\n\\`n\\` Int8\n)\nENGINE MergeTree\nORDER BY n\nAS SELECT 1\nGROUP BY tumble(now(), toIntervalDay('1'))\nCOMMENT 'this is a WindowView table';","fileName":"../ClickHouse/tests/queries/0_stateless/01821_table_comment.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE TABLE join_table_mutation(id Int32, name String) ENGINE = Join(ANY, LEFT, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01821_join_table_mutation.sql","errors":[]},{"query":"CREATE TABLE dictionary_primary_key_source_table (\nidentifier UInt64,\nv UInt64\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01821_dictionary_primary_key_wrong_order.sql","errors":[]},{"query":"CREATE DICTIONARY flat_dictionary (\nidentifier UInt64,\nv UInt64\n)\nPRIMARY KEY v\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_primary_key_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01821_dictionary_primary_key_wrong_order.sql","errors":[]},{"query":"CREATE TABLE main_table_01818 (\n\\`id\\` UInt32,\n\\`advertiser_id\\` String,\n\\`campaign_id\\` String,\n\\`name\\` String,\n\\`budget\\` Float64,\n\\`budget_mode\\` String,\n\\`landing_type\\` String,\n\\`status\\` String,\n\\`modify_time\\` String,\n\\`campaign_type\\` String,\n\\`campaign_create_time\\` DateTime,\n\\`campaign_modify_time\\` DateTime,\n\\`create_time\\` DateTime,\n\\`update_time\\` DateTime\n)\nENGINE = MergeTree\nPARTITION BY advertiser_id\nORDER BY campaign_id\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01818_move_partition_simple.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE main_table_01818 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE tmp_table_01818 (\n\\`id\\` UInt32,\n\\`advertiser_id\\` String,\n\\`campaign_id\\` String,\n\\`name\\` String,\n\\`budget\\` Float64,\n\\`budget_mode\\` String,\n\\`landing_type\\` String,\n\\`status\\` String,\n\\`modify_time\\` String,\n\\`campaign_type\\` String,\n\\`campaign_create_time\\` DateTime,\n\\`campaign_modify_time\\` DateTime,\n\\`create_time\\` DateTime,\n\\`update_time\\` DateTime\n)\nENGINE = MergeTree\nPARTITION BY advertiser_id\nORDER BY campaign_id\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01818_move_partition_simple.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tmp_table_01818 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table data_01817 (key Int) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01817_storage_buffer_parameters.sql","errors":[]},{"query":"create table buffer_01817 (key Int) Engine=Buffer(currentDatabase(), data_01817, 0,\n0\n); -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }\ndrop table data_01817;","fileName":"../ClickHouse/tests/queries/0_stateless/01817_storage_buffer_parameters.sql","errors":[]},{"query":"CREATE TABLE data (a Int64, b Int64) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01813_distributed_scalar_subqueries_alias.sql","errors":[]},{"query":"CREATE TABLE data_distributed (a Int64, b Int64) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 'data');","fileName":"../ClickHouse/tests/queries/0_stateless/01813_distributed_scalar_subqueries_alias.sql","errors":[]},{"query":"CREATE TABLE test_01344 (x String, INDEX idx (x) TYPE set(10) GRANULARITY 1) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01811_filter_by_null.sql","errors":[]},{"query":"create table data_01809 (i int) engine MergeTree order by i settings old_parts_lifetime = 10000000000, min_bytes_for_wide_part = 0, inactive_parts_to_throw_insert = 0, inactive_parts_to_delay_insert = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01809_inactive_parts_to_delay_throw_insert.sql","errors":[]},{"query":"CREATE TABLE dictionary_decimal_source_table (\nid UInt64,\ndecimal_value Decimal256(5)\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01804_dictionary_decimal256_type.sql","errors":[]},{"query":"CREATE DICTIONARY flat_dictionary (\nid UInt64,\ndecimal_value Decimal256(5)\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01804_dictionary_decimal256_type.sql","errors":[]},{"query":"CREATE DICTIONARY hashed_dictionary (\nid UInt64,\ndecimal_value Decimal256(5)\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01804_dictionary_decimal256_type.sql","errors":[]},{"query":"CREATE DICTIONARY cache_dictionary (\nid UInt64,\ndecimal_value Decimal256(5)\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(CACHE(SIZE_IN_CELLS 10));","fileName":"../ClickHouse/tests/queries/0_stateless/01804_dictionary_decimal256_type.sql","errors":[]},{"query":"CREATE DICTIONARY direct_dictionary (\nid UInt64,\ndecimal_value Decimal256(5)\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_source_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01804_dictionary_decimal256_type.sql","errors":[]},{"query":"CREATE TABLE ip_trie_dictionary_decimal_source_table (\nprefix String,\ndecimal_value Decimal256(5)\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01804_dictionary_decimal256_type.sql","errors":[]},{"query":"CREATE DICTIONARY ip_trie_dictionary (\nprefix String,\ndecimal_value Decimal256(5)\n)\nPRIMARY KEY prefix\nSOURCE(CLICKHOUSE(HOST 'localhost' port tcpPort() TABLE 'ip_trie_dictionary_decimal_source_table'))\nLIFETIME(MIN 10 MAX 1000)\nLAYOUT(IP_TRIE());","fileName":"../ClickHouse/tests/queries/0_stateless/01804_dictionary_decimal256_type.sql","errors":[]},{"query":"CREATE TABLE dictionary_decimal_polygons_source_table (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\ndecimal_value Decimal256(5)\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01804_dictionary_decimal256_type.sql","errors":[]},{"query":"CREATE DICTIONARY polygon_dictionary (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\ndecimal_value Decimal256(5)\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dictionary_decimal_polygons_source_table'))\nLIFETIME(MIN 0 MAX 1000)\nLAYOUT(POLYGON());","fileName":"../ClickHouse/tests/queries/0_stateless/01804_dictionary_decimal256_type.sql","errors":[]},{"query":"CREATE TABLE t_map_null (a Map(String, String), b String) engine = MergeTree() ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01803_const_nullable_map.sql","errors":[]},{"query":"CREATE TABLE 01802_empsalary (\n\\`depname\\` LowCardinality(String),\n\\`empno\\` UInt64,\n\\`salary\\` Int32,\n\\`enroll_date\\` Date\n)\nENGINE = MergeTree\nORDER BY enroll_date\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01802_rank_corr_mann_whitney_over_window.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01802'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create table data_01801 (key Int) engine=MergeTree() order by key settings index_granularity=10 as select number/10 from numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01801_approx_total_rows_mergetree_reverse.sql","errors":[]},{"query":"CREATE TABLE nested_01800_tiny_log (\\`column\\` Nested(name String, names Array(String), types Array(Enum8('PU' = 1, 'US' = 2, 'OTHER' = 3)))) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01800_log_nested.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE nested_01800_tiny_log (\\'","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE nested_01800_stripe_log (\\`column\\` Nested(name String, names Array(String), types Array(Enum8('PU' = 1, 'US' = 2, 'OTHER' = 3)))) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01800_log_nested.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE nested_01800_stripe_log (\\'","startColumn":38,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"CREATE TABLE nested_01800_log (\\`column\\` Nested(name String, names Array(String), types Array(Enum8('PU' = 1, 'US' = 2, 'OTHER' = 3)))) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01800_log_nested.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE nested_01800_log (\\'","startColumn":31,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE test1 (\n\\`year\\` String ,\n\\`uv\\` AggregateFunction(uniqTheta, Int64)\n)\nENGINE = AggregatingMergeTree()\nORDER BY (year);","fileName":"../ClickHouse/tests/queries/0_stateless/01798_uniq_theta_union_intersect_not.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test2 (\n\\`year\\` String ,\n\\`uv\\`  Int64\n)\nENGINE = MergeTree()\nORDER BY (year);","fileName":"../ClickHouse/tests/queries/0_stateless/01798_uniq_theta_union_intersect_not.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test2 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE decimal (\na Decimal32(4),\nb Decimal64(8),\nc Decimal128(8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01798_uniq_theta_sketch.sql","errors":[]},{"query":"CREATE TABLE stored_aggregates (\nd Date,\nUniq AggregateFunction(uniq, UInt64),\nUniqThetaSketch AggregateFunction(uniqTheta, UInt64)\n)\nENGINE = AggregatingMergeTree(d, d, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01798_uniq_theta_sketch.sql","errors":[]},{"query":"CREATE TABLE stored_aggregates (\n\td\tDate,\n\tk1 \tUInt64,\n\tk2 \tString,\n\tUniq \t\t\tAggregateFunction(uniq, UInt64),\nUniqThetaSketch\tAggregateFunction(uniqTheta, UInt64)\n)\nENGINE = AggregatingMergeTree(d, (d, k1, k2), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01798_uniq_theta_sketch.sql","errors":[]},{"query":"create table summing_merge_tree_null ( d materialized today(),\nk UInt64,\nc UInt64,\nu UInt64\n) engine=Null;","fileName":"../ClickHouse/tests/queries/0_stateless/01798_uniq_theta_sketch.sql","errors":[]},{"query":"create materialized view summing_merge_tree_aggregate_function ( d Date,\nk UInt64,\nc UInt64,\nun AggregateFunction(uniq, UInt64),\nut AggregateFunction(uniqTheta, UInt64)\n) engine=SummingMergeTree(d, k, 8192)\nas select d, k, sum(c) as c, uniqState(u) as un, uniqThetaState(u) as ut\nfrom summing_merge_tree_null\ngroup by d, k;","fileName":"../ClickHouse/tests/queries/0_stateless/01798_uniq_theta_sketch.sql","errors":[]},{"query":"CREATE TABLE t_having (c0 Int32, c1 UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01798_having_push_down.sql","errors":[]},{"query":"CREATE TABLE underlying_01797 (key UInt64) Engine=StripeLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01797_StripeLog_rwlock_ub.sql","errors":[]},{"query":"CREATE TABLE underlying_01796 (key UInt64) Engine=Log();","fileName":"../ClickHouse/tests/queries/0_stateless/01796_Log_rwlock_ub.sql","errors":[]},{"query":"CREATE TABLE underlying_01795 (key UInt64) Engine=TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01795_TinyLog_rwlock_ub.sql","errors":[]},{"query":"CREATE TABLE tmp_01781 (n LowCardinality(String)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01790_dist_INSERT_block_structure_mismatch_types_and_names.sql","errors":[]},{"query":"CREATE TABLE dist_01781 (n LowCardinality(String)) Engine=Distributed(test_cluster_two_shards, currentDatabase(), tmp_01781, cityHash64(n));","fileName":"../ClickHouse/tests/queries/0_stateless/01790_dist_INSERT_block_structure_mismatch_types_and_names.sql","errors":[]},{"query":"CREATE TABLE test_wide_nested (\n\\`id\\` Int,\n\\`info.id\\` Array(Int),\n\\`info.name\\` Array(String),\n\\`info.age\\` Array(Int)\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01788_update_nested_type_subcolumn_check.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_wide_nested (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_wide_nested (\n\\`id\\` Int,\n\\`info.id\\` Array(Int),\n\\`info.name\\` Array(String),\n\\`info.age\\` Array(Int)\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01788_update_nested_type_subcolumn_check.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_wide_nested (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_wide_not_nested (\n\\`id\\` Int,\n\\`info.id\\` Int,\n\\`info.name\\` String,\n\\`info.age\\` Int\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01788_update_nested_type_subcolumn_check.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_wide_not_nested (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE bug_repro_local (\\`attributes\\` Map(LowCardinality(String), String)) ENGINE = Log as select map('','');","fileName":"../ClickHouse/tests/queries/0_stateless/01787_map_remote.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE bug_repro_local (\\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE group_by_pk (k UInt64, v UInt64) ENGINE = MergeTree ORDER BY k PARTITION BY v % 50;","fileName":"../ClickHouse/tests/queries/0_stateless/01786_group_by_pk_many_streams.sql","errors":[]},{"query":"CREATE TABLE foo_lc (n LowCardinality(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01785_pmj_lc_bug.sql","errors":[]},{"query":"CREATE TABLE foo (n String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01785_pmj_lc_bug.sql","errors":[]},{"query":"CREATE DATABASE 01785_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01785_dictionary_element_count.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01785'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01785_db.simple_key_source_table (\nid UInt64,\nvalue String\n) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01785_dictionary_element_count.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01785'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01785_db.simple_key_flat_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() DB '01785_db' TABLE 'simple_key_source_table'))\nLAYOUT(FLAT())\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01785_dictionary_element_count.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01785'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 01785_db.simple_key_hashed_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() DB '01785_db' TABLE 'simple_key_source_table'))\nLAYOUT(HASHED())\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01785_dictionary_element_count.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01785'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 01785_db.simple_key_cache_dictionary (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() DB '01785_db' TABLE 'simple_key_source_table'))\nLAYOUT(CACHE(SIZE_IN_CELLS 100000))\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01785_dictionary_element_count.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01785'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01785_db.complex_key_source_table (\nid UInt64,\nid_key String,\nvalue String\n) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01785_dictionary_element_count.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01785'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01785_db.complex_key_hashed_dictionary (\nid UInt64,\nid_key String,\nvalue String\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() DB '01785_db' TABLE 'complex_key_source_table'))\nLAYOUT(COMPLEX_KEY_HASHED())\nLIFETIME(MIN 0 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01785_dictionary_element_count.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01785'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE foo(Id Int32, Val Int32) Engine=MergeTree PARTITION BY Val ORDER BY Id;","fileName":"../ClickHouse/tests/queries/0_stateless/01783_merge_engine_join_key_condition.sql","errors":[]},{"query":"CREATE TABLE foo_merge as foo ENGINE=Merge(currentDatabase(), '^foo');","fileName":"../ClickHouse/tests/queries/0_stateless/01783_merge_engine_join_key_condition.sql","errors":[]},{"query":"CREATE TABLE t2 (Id Int32, Val Int32, X Int32) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01783_merge_engine_join_key_condition.sql","errors":[]},{"query":"CREATE TABLE bloom_filter (\\`id\\` UInt64, \\`s\\` String, INDEX tok_bf (s, lower(s)) TYPE tokenbf_v1(512, 3, 0) GRANULARITY 1) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 8, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01781_token_extractor_buffer_overflow.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE bloom_filter (\\'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE TABLE merge_tree_deduplication (\nkey UInt64,\nvalue String,\npart UInt8 DEFAULT 77\n)\nENGINE=MergeTree()\nORDER BY key\nPARTITION BY part\nSETTINGS non_replicated_deduplication_window=3;","fileName":"../ClickHouse/tests/queries/0_stateless/01781_merge_tree_deduplication.sql","errors":[]},{"query":"CREATE TABLE merge_tree_no_deduplication (\nkey UInt64,\nvalue String\n)\nENGINE=MergeTree()\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01781_merge_tree_deduplication.sql","errors":[]},{"query":"CREATE TABLE simple_key_dictionary_source_table (\nid UInt64,\nvalue String,\nvalue_nullable Nullable(String)\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_dict_get_or_null.sql","errors":[]},{"query":"CREATE DICTIONARY simple_key_dictionary (\nid UInt64,\nvalue String,\nvalue_nullable Nullable(String)\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'simple_key_dictionary_source_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01780_dict_get_or_null.sql","errors":[]},{"query":"CREATE TABLE complex_key_dictionary_source_table (\nid UInt64,\nid_key String,\nvalue String,\nvalue_nullable Nullable(String)\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_dict_get_or_null.sql","errors":[]},{"query":"CREATE DICTIONARY complex_key_dictionary (\nid UInt64,\nid_key String,\nvalue String,\nvalue_nullable Nullable(String)\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'complex_key_dictionary_source_table'))\nLAYOUT(COMPLEX_KEY_DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01780_dict_get_or_null.sql","errors":[]},{"query":"CREATE TABLE range_key_dictionary_source_table (\nkey UInt64,\nstart_date Date,\nend_date Date,\nvalue String,\nvalue_nullable Nullable(String)\n)\nENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01780_dict_get_or_null.sql","errors":[]},{"query":"CREATE DICTIONARY range_key_dictionary (\nkey UInt64,\nstart_date Date,\nend_date Date,\nvalue String,\nvalue_nullable Nullable(String)\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'range_key_dictionary_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(RANGE_HASHED())\nRANGE(MIN start_date MAX end_date);","fileName":"../ClickHouse/tests/queries/0_stateless/01780_dict_get_or_null.sql","errors":[]},{"query":"CREATE TABLE sparse_tuple (id UInt64, t Tuple(a UInt64, s String)) ENGINE = MergeTree ORDER BY tuple()\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.5;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_column_sparse_tuple.sql","errors":[]},{"query":"CREATE TABLE sparse_tuple (id UInt64, t Tuple(a UInt64, b Tuple(u UInt32, s String))) ENGINE = MergeTree ORDER BY tuple()\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.5;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_column_sparse_tuple.sql","errors":[]},{"query":"CREATE TABLE t_sparse_pk (k UInt64, s String) ENGINE = MergeTree ORDER BY k\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.0, index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_column_sparse_pk.sql","errors":[]},{"query":"CREATE TABLE t_sparse_pk (k UInt64, v UInt64 CODEC(NONE)) ENGINE = MergeTree ORDER BY k\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.0, index_granularity = 30;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_column_sparse_pk.sql","errors":[]},{"query":"CREATE TABLE t_full_pk (k UInt64, v UInt64) ENGINE = MergeTree ORDER BY k\nSETTINGS ratio_of_defaults_for_sparse_serialization = 1.1, index_granularity = 30;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_column_sparse_pk.sql","errors":[]},{"query":"CREATE TABLE sparse_t ( id UInt64,\nu UInt64,\ns String,\narr1 Array(String),\narr2 Array(UInt64),\nt Tuple(a UInt64, s String))\nENGINE = MergeTree ORDER BY tuple()\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.1;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_column_sparse_materialize.sql","errors":[]},{"query":"CREATE TABLE t_sparse_full (id UInt64, u UInt64, s String) ENGINE = MergeTree ORDER BY id\nSETTINGS index_granularity = 32, index_granularity_bytes = '10Mi',\nratio_of_defaults_for_sparse_serialization = 0.1;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_column_sparse_full.sql","errors":[]},{"query":"CREATE TABLE t_sparse (id UInt64, u UInt64, s String) ENGINE = MergeTree ORDER BY id\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9, index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01780_column_sparse_filter.sql","errors":[]},{"query":"CREATE TABLE t_sparse_distinct (id UInt32, v UInt64) ENGINE = MergeTree\nORDER BY id\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.9;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_column_sparse_distinct.sql","errors":[]},{"query":"CREATE TABLE t_sparse_alter (id UInt64, u UInt64, s String) ENGINE = MergeTree ORDER BY id\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.5;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_column_sparse_alter.sql","errors":[]},{"query":"CREATE TABLE t_sparse (id UInt64, u UInt64, s String, arr1 Array(String), arr2 Array(UInt64)) ENGINE = MergeTree ORDER BY tuple()\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0.1;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_column_sparse.sql","errors":[]},{"query":"CREATE TABLE t_sparse_1 (id UInt64, v Int64) ENGINE = MergeTree ORDER BY tuple()\nSETTINGS ratio_of_defaults_for_sparse_serialization = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_column_sparse.sql","errors":[]},{"query":"CREATE DATABASE 01780_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_clickhouse_dictionary_source_loop.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01780'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE DICTIONARY dict1 (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dict1'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01780_clickhouse_dictionary_source_loop.sql","errors":[]},{"query":"CREATE DICTIONARY 01780_db.dict2 (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() DATABASE '01780_db' TABLE 'dict2'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01780_clickhouse_dictionary_source_loop.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01780'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01780_db.dict3_source (\nid UInt64,\nvalue String\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01780_clickhouse_dictionary_source_loop.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01780'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01780_db.dict3 (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'dict3_source' DATABASE '01780_db'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01780_clickhouse_dictionary_source_loop.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01780'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE ttt01778 (\\`1\\` String, \\`2\\` INT) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01778_where_with_column_name.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ttt01778 (\\'","startColumn":23,"startLine":1,"endColumn":24,"endLine":1}]},{"query":"CREATE TABLE test_01778 (\n\\`key\\` LowCardinality(FixedString(3)),\n\\`d\\` date\n)\nENGINE = MergeTree(d, key, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01778_test_LowCardinality_FixedString_pk.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_01778 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE DATABASE 01778_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01778_hierarchical_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01778'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01778_db.hierarchy_source_table (id UInt64, parent_id UInt64) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01778_hierarchical_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01778'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01778_db.hierarchy_flat_dictionary (\nid UInt64,\nparent_id UInt64 HIERARCHICAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'hierarchy_source_table' DB '01778_db'))\nLAYOUT(FLAT())\nLIFETIME(MIN 1 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01778_hierarchical_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01778'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 01778_db.hierarchy_hashed_dictionary (\nid UInt64,\nparent_id UInt64 HIERARCHICAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'hierarchy_source_table' DB '01778_db'))\nLAYOUT(HASHED())\nLIFETIME(MIN 1 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01778_hierarchical_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01778'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 01778_db.hierarchy_cache_dictionary (\nid UInt64,\nparent_id UInt64 HIERARCHICAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'hierarchy_source_table' DB '01778_db'))\nLAYOUT(CACHE(SIZE_IN_CELLS 10))\nLIFETIME(MIN 1 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01778_hierarchical_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01778'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 01778_db.hierarchy_direct_dictionary (\nid UInt64,\nparent_id UInt64 HIERARCHICAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'hierarchy_source_table' DB '01778_db'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01778_hierarchical_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01778'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE test_data (cidr String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01774_ip_address_in_range.sql","errors":[]},{"query":"CREATE TABLE test (time DateTime64(3)) ENGINE = MergeTree ORDER BY tuple() PARTITION BY toStartOfInterval(time, INTERVAL 2 YEAR);","fileName":"../ClickHouse/tests/queries/0_stateless/01773_min_max_time_system_parts_datetime64.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_null_array (v Array(Int32), INDEX idx v TYPE bloom_filter GRANULARITY 3) ENGINE = MergeTree() ORDER BY v SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01771_bloom_filter_not_has.sql","errors":[]},{"query":"CREATE TABLE test_aggregation (x Array(Int)) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01768_array_product.sql","errors":[]},{"query":"CREATE TABLE test_aggregation (x Array(Decimal64(8))) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01768_array_product.sql","errors":[]},{"query":"CREATE DATABASE 01766_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01766_hashed_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01766'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01766_db.complex_key_simple_attributes_source_table (\nid UInt64,\nid_key String,\nvalue_first String,\nvalue_second String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01766_hashed_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01766'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01766_db.hashed_dictionary_complex_key_simple_attributes (\nid UInt64,\nid_key String,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second String DEFAULT 'value_second_default'\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'complex_key_simple_attributes_source_table' DB '01766_db'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(COMPLEX_KEY_HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01766_hashed_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01766'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01766_db.complex_key_complex_attributes_source_table (\nid UInt64,\nid_key String,\nvalue_first String,\nvalue_second Nullable(String)\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01766_hashed_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01766'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01766_db.hashed_dictionary_complex_key_complex_attributes (\nid UInt64,\nid_key String,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second Nullable(String) DEFAULT 'value_second_default'\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'complex_key_complex_attributes_source_table' DB '01766_db'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(COMPLEX_KEY_HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01766_hashed_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01766'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE t_src (id UInt32, v UInt32) ENGINE = MergeTree ORDER BY id PARTITION BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01765_move_to_table_overlapping_block_number.sql","errors":[]},{"query":"CREATE TABLE t_dst (id UInt32, v UInt32) ENGINE = MergeTree ORDER BY id PARTITION BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01765_move_to_table_overlapping_block_number.sql","errors":[]},{"query":"CREATE DATABASE 01765_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01765_hashed_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01765'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01765_db.simple_key_simple_attributes_source_table (\nid UInt64,\nvalue_first String,\nvalue_second String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01765_hashed_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01765'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01765_db.hashed_dictionary_simple_key_simple_attributes (\nid UInt64,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second String DEFAULT 'value_second_default'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_simple_attributes_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(HASHED())\nSETTINGS(dictionary_use_async_executor=1, max_threads=8);","fileName":"../ClickHouse/tests/queries/0_stateless/01765_hashed_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01765'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 01765_db.sparse_hashed_dictionary_simple_key_simple_attributes (\nid UInt64,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second String DEFAULT 'value_second_default'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_simple_attributes_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(SPARSE_HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01765_hashed_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01765'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01765_db.simple_key_complex_attributes_source_table (\nid UInt64,\nvalue_first String,\nvalue_second Nullable(String)\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01765_hashed_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01765'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01765_db.hashed_dictionary_simple_key_complex_attributes (\nid UInt64,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second Nullable(String) DEFAULT 'value_second_default'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_complex_attributes_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01765_hashed_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01765'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 01765_db.sparse_hashed_dictionary_simple_key_complex_attributes (\nid UInt64,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second Nullable(String) DEFAULT 'value_second_default'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_complex_attributes_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01765_hashed_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01765'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01765_db.simple_key_hierarchy_table (\nid UInt64,\nparent_id UInt64\n) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01765_hashed_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01765'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01765_db.hashed_dictionary_simple_key_hierarchy (\nid UInt64,\nparent_id UInt64 HIERARCHICAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_hierarchy_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01765_hashed_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01765'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DICTIONARY 01765_db.sparse_hashed_dictionary_simple_key_hierarchy (\nid UInt64,\nparent_id UInt64 HIERARCHICAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_hierarchy_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01765_hashed_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01765'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE table_function_dictionary_source_table (\nid UInt64,\nvalue UInt64\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01764_table_function_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY table_function_dictionary_test_dictionary (\nid UInt64,\nvalue UInt64 DEFAULT 0\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' DATABASE currentDatabase() TABLE 'table_function_dictionary_source_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01764_table_function_dictionary.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS mytable (start_ts UInt32, end_ts UInt32, uuid String) ENGINE = MergeTree() ORDER BY start_ts;","fileName":"../ClickHouse/tests/queries/0_stateless/01764_prefer_column_name_to_alias.sql","errors":[]},{"query":"CREATE TABLE collapsing_table (\nkey UInt64,\nvalue UInt64,\nSign Int8\n)\nENGINE = CollapsingMergeTree(Sign)\nORDER BY key\nSETTINGS\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01764_collapsing_merge_adaptive_granularity.sql","errors":[]},{"query":"CREATE TABLE collapsing_suspicious_granularity (\nkey UInt64,\nvalue UInt64,\nSign Int8\n)\nENGINE = CollapsingMergeTree(Sign)\nORDER BY key\nSETTINGS\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nindex_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01764_collapsing_merge_adaptive_granularity.sql","errors":[]},{"query":"CREATE TABLE map_lc (\n\\`kv\\` Map(LowCardinality(String), LowCardinality(String))\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01763_support_map_lowcardinality_type.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE map_lc (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE tt6 (\n\t\\`id\\` UInt32,\n\t\\`first_column\\` UInt32,\n\t\\`second_column\\` UInt32,\n\t\\`third_column\\` UInt32,\n\t\\`status\\` String\n)\nENGINE = Distributed('test_shard_localhost', '', 'tt7', rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01763_max_distributed_depth.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tt6 (\\n\\t\\'","startColumn":1,"startLine":2,"endColumn":2,"endLine":2}]},{"query":"CREATE TABLE tt7 as tt6 ENGINE = Distributed('test_shard_localhost', '', 'tt6', rand()); -- {serverError INFINITE_LOOP} DROP TABLE tt6;","fileName":"../ClickHouse/tests/queries/0_stateless/01763_max_distributed_depth.sql","errors":[]},{"query":"CREATE TABLE test_ttl_group_by01763 (key UInt32, ts DateTime, value UInt32, min_value UInt32 default value, max_value UInt32 default value)\nENGINE = MergeTree() PARTITION BY toYYYYMM(ts)\nORDER BY (key, toStartOfInterval(ts, toIntervalMinute(3)), ts) \nTTL ts + INTERVAL 5 MINUTE GROUP BY key, toStartOfInterval(ts, toIntervalMinute(3)) \nSET value = sum(value), min_value = min(min_value), max_value = max(max_value),  ts=min(toStartOfInterval(ts, toIntervalMinute(3)));","fileName":"../ClickHouse/tests/queries/0_stateless/01763_long_ttl_group_by.sql","errors":[{"message":"mismatched input 'GROUP' expecting <EOF>","startColumn":27,"startLine":4,"endColumn":32,"endLine":4}]},{"query":"CREATE TABLE Test ENGINE = MergeTree()\nPRIMARY KEY (String1,String2)\nORDER BY (String1,String2)\nSETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi'\nAS\nSELECT\n'String1_' || toString(number) as String1,\n'String2_' || toString(number) as String2,\n'String3_' || toString(number) as String3,\n'String4_' || toString(number%4) as String4\nFROM numbers(1);","fileName":"../ClickHouse/tests/queries/0_stateless/01763_filter_push_down_bugs.sql","errors":[]},{"query":"create table t(a UInt8) engine=MergeTree order by a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01763_filter_push_down_bugs.sql","errors":[]},{"query":"CREATE TABLE t1 (id Int64, create_time DateTime) ENGINE = MergeTree ORDER BY id SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01763_filter_push_down_bugs.sql","errors":[]},{"query":"CREATE TABLE t2 (delete_time DateTime) ENGINE = MergeTree ORDER BY delete_time SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01763_filter_push_down_bugs.sql","errors":[]},{"query":"CREATE TABLE test_alter_decimal (n UInt64, d Decimal(15, 8))\nENGINE = ReplicatedMergeTree('/clickhouse/{database}/01761_alter_decimal_zookeeper', 'r1')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01761_alter_decimal_zookeeper_long.sql","errors":[]},{"query":"CREATE DATABASE 01760_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01760_system_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01760'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01760_db.example_simple_key_source (id UInt64, value UInt64) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01760_system_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01760'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01760_db.example_simple_key_dictionary ( id UInt64,\nvalue UInt64\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'example_simple_key_source' DATABASE '01760_db'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01760_system_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01760'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01760_db.example_complex_key_source (id UInt64, id_key String, value UInt64) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01760_system_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01760'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01760_db.example_complex_key_dictionary ( id UInt64,\nid_key String,\nvalue UInt64\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'example_complex_key_source' DATABASE '01760_db'))\nLAYOUT(COMPLEX_KEY_DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01760_system_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01760'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DATABASE 01760_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01760_polygon_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01760'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01760_db.polygons (key Array(Array(Array(Tuple(Float64, Float64)))), name String, value UInt64, value_nullable Nullable(UInt64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01760_polygon_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01760'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01760_db.points (x Float64, y Float64, def_i UInt64, def_s String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01760_polygon_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01760'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01760_db.dict_array (\nkey Array(Array(Array(Tuple(Float64, Float64)))),\nname String DEFAULT 'qqq',\nvalue UInt64 DEFAULT 10,\nvalue_nullable Nullable(UInt64) DEFAULT 20\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'polygons' DB '01760_db'))\nLIFETIME(0)\nLAYOUT(POLYGON())\nSETTINGS(dictionary_use_async_executor=1, max_threads=8)\n;","fileName":"../ClickHouse/tests/queries/0_stateless/01760_polygon_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01760'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE ddl_dictonary_test_source (\nid UInt64,\nvalue UInt64\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01760_ddl_dictionary_use_current_database_name.sql","errors":[]},{"query":"CREATE DICTIONARY ddl_dictionary_test (\nid UInt64,\nvalue UInt64 DEFAULT 0\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'ddl_dictonary_test_source'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01760_ddl_dictionary_use_current_database_name.sql","errors":[]},{"query":"CREATE DATABASE 01759_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01759_dictionary_unique_attribute_names.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01759'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01759_db.dictionary_source_table (\nkey UInt64,\nvalue1 UInt64,\nvalue2 UInt64\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01759_dictionary_unique_attribute_names.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01759'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01759_db.test_dictionary(key UInt64, value1 UInt64, value1 UInt64) PRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dictionary_source_table' DB '01759_db'))\nLAYOUT(COMPLEX_KEY_DIRECT()); -- {serverError BAD_ARGUMENTS}\nCREATE DICTIONARY 01759_db.test_dictionary(key UInt64, value1 UInt64, value2 UInt64)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dictionary_source_table' DB '01759_db'))\nLAYOUT(COMPLEX_KEY_DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01759_dictionary_unique_attribute_names.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01759'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"create table dist_01757 as system.one engine=Distributed(test_cluster_two_shards, system, one, dummy);","fileName":"../ClickHouse/tests/queries/0_stateless/01757_optimize_skip_unused_shards_limit.sql","errors":[]},{"query":"create table dist_01756 as system.one engine=Distributed(test_cluster_two_shards, system, one, intHash64(dummy));","fileName":"../ClickHouse/tests/queries/0_stateless/01756_optimize_skip_unused_shards_rewrite_in.sql","errors":[]},{"query":"create table data_01756_signed (key Int) engine=Null;","fileName":"../ClickHouse/tests/queries/0_stateless/01756_optimize_skip_unused_shards_rewrite_in.sql","errors":[]},{"query":"create table data_01756_str (key String) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01756_optimize_skip_unused_shards_rewrite_in.sql","errors":[]},{"query":"create table dist_01756_str as data_01756_str engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01756_str, cityHash64(key));","fileName":"../ClickHouse/tests/queries/0_stateless/01756_optimize_skip_unused_shards_rewrite_in.sql","errors":[]},{"query":"create table dist_01756_column as system.one engine=Distributed(test_cluster_two_shards, system, one, dummy);","fileName":"../ClickHouse/tests/queries/0_stateless/01756_optimize_skip_unused_shards_rewrite_in.sql","errors":[]},{"query":"create table data_01755 (i Int) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01755_shard_pruning_with_literal.sql","errors":[]},{"query":"create table dist_01755 as data_01755 Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01755, i);","fileName":"../ClickHouse/tests/queries/0_stateless/01755_shard_pruning_with_literal.sql","errors":[]},{"query":"CREATE DATABASE 01754_dictionary_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01754_direct_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01754'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01754_dictionary_db.complex_key_simple_attributes_source_table (\nid UInt64,\nid_key String,\nvalue_first String,\nvalue_second String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01754_direct_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01754'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01754_dictionary_db.direct_dictionary_complex_key_simple_attributes (\nid UInt64,\nid_key String DEFAULT 'test_default_id_key',\nvalue_first String DEFAULT 'value_first_default',\nvalue_second String DEFAULT 'value_second_default'\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'complex_key_simple_attributes_source_table'))\nLAYOUT(COMPLEX_KEY_DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01754_direct_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01754'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01754_dictionary_db.complex_key_complex_attributes_source_table (\nid UInt64,\nid_key String,\nvalue_first String,\nvalue_second Nullable(String)\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01754_direct_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01754'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01754_dictionary_db.direct_dictionary_complex_key_complex_attributes (\nid UInt64,\nid_key String,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second Nullable(String) DEFAULT 'value_second_default'\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'complex_key_complex_attributes_source_table'))\nLAYOUT(COMPLEX_KEY_DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01754_direct_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01754'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE mmm ENGINE=MergeTree ORDER BY number AS SELECT number, rand() % 10 AS a FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01753_mutate_table_predicated_with_table.sql","errors":[]},{"query":"CREATE DATABASE 01753_dictionary_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01753_direct_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01753'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01753_dictionary_db.simple_key_simple_attributes_source_table (\nid UInt64,\nvalue_first String,\nvalue_second String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01753_direct_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01753'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01753_dictionary_db.direct_dictionary_simple_key_simple_attributes (\nid UInt64,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second String DEFAULT 'value_second_default'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_simple_attributes_source_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01753_direct_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01753'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01753_dictionary_db.simple_key_complex_attributes_source_table (\nid UInt64,\nvalue_first String,\nvalue_second Nullable(String)\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01753_direct_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01753'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01753_dictionary_db.direct_dictionary_simple_key_complex_attributes (\nid UInt64,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second Nullable(String) DEFAULT 'value_second_default'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_complex_attributes_source_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01753_direct_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01753'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01753_dictionary_db.simple_key_hierarchy_table (\nid UInt64,\nparent_id UInt64\n) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01753_direct_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01753'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01753_dictionary_db.direct_dictionary_simple_key_hierarchy (\nid UInt64,\nparent_id UInt64 HIERARCHICAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_hierarchy_table'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01753_direct_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01753'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"create table x (i int, j int) engine MergeTree partition by i order by j settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01748_partition_id_pruning.sql","errors":[]},{"query":"create table mt (n UInt64) engine=MergeTree order by n partition by n % 10;","fileName":"../ClickHouse/tests/queries/0_stateless/01748_partition_id_pruning.sql","errors":[]},{"query":"CREATE DATABASE test_01748;","fileName":"../ClickHouse/tests/queries/0_stateless/01748_dictionary_table_dot.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE test_01748;'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE \\`test.txt\\` (\n\\`key1\\` UInt32,\n\\`key2\\` UInt32,\n\\`value\\` String\n)\nENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01748_dictionary_table_dot.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY test_dict (\n\\`key1\\` UInt32,\n\\`key2\\` UInt32,\n\\`value\\` String\n)\nPRIMARY KEY key1, key2\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE \\`test.txt\\` PASSWORD '' DB currentDatabase()))\nLIFETIME(MIN 1 MAX 3600)\nLAYOUT(COMPLEX_KEY_HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01748_dictionary_table_dot.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY test_dict (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE summing_table01747 (\nsome_name               String,\nuser_id                 UInt64,\namount                  Int64,\ncurrency                String\n)\nENGINE = SummingMergeTree()\nORDER BY (some_name);","fileName":"../ClickHouse/tests/queries/0_stateless/01747_join_view_filter_dictionary.sql","errors":[]},{"query":"CREATE VIEW rates01747 AS SELECT 'USD' as from_currency, 'EUR' as to_currency, 1.2 as rates01747;","fileName":"../ClickHouse/tests/queries/0_stateless/01747_join_view_filter_dictionary.sql","errors":[]},{"query":"create table dictst01747(some_name String, field1 String, field2 UInt8) Engine = Memory as select 'name', 'test', 33;","fileName":"../ClickHouse/tests/queries/0_stateless/01747_join_view_filter_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY default.dict01747 (some_name String, field1 String, field2 UInt8) PRIMARY KEY some_name SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort()\nTABLE dictst01747 DB currentDatabase() USER 'default'))\nLIFETIME(MIN 0 MAX 0) LAYOUT(COMPLEX_KEY_HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01747_join_view_filter_dictionary.sql","errors":[]},{"query":"CREATE VIEW agg_view01747 AS SELECT\nsumming_table01747.some_name as some_name,\ndictGet('default.dict01747', 'field1', tuple(some_name)) as field1,\ndictGet('default.dict01747', 'field2', tuple(some_name)) as field2,\nrates01747.rates01747 as rates01747\nFROM summing_table01747\nANY LEFT JOIN rates01747\nON rates01747.from_currency = summing_table01747.currency;","fileName":"../ClickHouse/tests/queries/0_stateless/01747_join_view_filter_dictionary.sql","errors":[]},{"query":"CREATE TABLE report (\n\\`product\\` Enum8('IU' = 1, 'WS' = 2),\n\\`machine\\` String,\n\\`branch\\` String,\n\\`generated_time\\` DateTime\n)\nENGINE = MergeTree\nPARTITION BY (product, toYYYYMM(generated_time))\nORDER BY (product, machine, branch, generated_time);","fileName":"../ClickHouse/tests/queries/0_stateless/01747_alter_partition_key_enum_zookeeper_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE report (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE replicated_report (\n\\`product\\` Enum8('IU' = 1, 'WS' = 2),\n\\`machine\\` String,\n\\`branch\\` String,\n\\`generated_time\\` DateTime\n)\nENGINE = ReplicatedMergeTree('/clickhouse/{database}/01747_alter_partition_key/t', '1')\nPARTITION BY (product, toYYYYMM(generated_time))\nORDER BY (product, machine, branch, generated_time);","fileName":"../ClickHouse/tests/queries/0_stateless/01747_alter_partition_key_enum_zookeeper_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE replicated_report (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE ttt01746 (d Date, n UInt64) ENGINE = MergeTree() PARTITION BY toMonday(d) ORDER BY n SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01746_test_for_tupleElement_must_be_constant_issue.sql","errors":[]},{"query":"CREATE TABLE lc_test (\n\\`id\\` LowCardinality(String)\n)\nENGINE = MergeTree\nPARTITION BY tuple()\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01746_lc_values_format_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE lc_test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE \\`01746_merge_tree\\` (\n\\`n1\\` Int8,\n\\`n2\\` Int8,\n\\`n3\\` Int8,\n\\`n4\\` Int8\n)\nENGINE = MergeTree\nORDER BY n1;","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW \\`01746_merge_tree_mv\\` ENGINE = Memory AS\nSELECT\nn2,\nn3\nFROM \\`01746_merge_tree\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW \\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE \\`01746_null\\` (\n\\`n1\\` Int8,\n\\`n2\\` Int8,\n\\`n3\\` Int8\n)\nENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW \\`01746_null_mv\\` ENGINE = Memory AS\nSELECT\nn1,\nn2\nFROM \\`01746_null\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW \\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE \\`01746_local\\` (\n\\`n1\\` Int8,\n\\`n2\\` Int8,\n\\`n3\\` Int8\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE \\`01746_dist\\` AS \\`01746_local\\` ENGINE = Distributed('test_shard_localhost', currentDatabase(), \\`01746_local\\`, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW \\`01746_dist_mv\\` ENGINE = Memory AS\nSELECT\nn1,\nn2\nFROM \\`01746_dist\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW \\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE \\`01746_merge_t\\` (\n\\`n1\\` Int8,\n\\`n2\\` Int8,\n\\`n3\\` Int8\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE \\`01746_merge\\` AS \\`01746_merge_t\\` ENGINE = Merge(currentDatabase(), '01746_merge_t');","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW \\`01746_merge_mv\\` ENGINE = Memory AS\nSELECT\nn1,\nn2\nFROM \\`01746_merge\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW \\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE \\`01746_buffer_t\\` (\n\\`n1\\` Int8,\n\\`n2\\` Int8,\n\\`n3\\` Int8\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE \\`01746_buffer\\` AS \\`01746_buffer_t\\` ENGINE = Buffer(currentDatabase(), \\`01746_buffer_t\\`, 16, 10, 100, 10000, 1000000, 10000000, 100000000);","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW \\`01746_buffer_mv\\` ENGINE = Memory AS\nSELECT\nn1,\nn2\nFROM \\`01746_buffer\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/01746_forbid_drop_column_referenced_by_mv.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW \\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE test_table (\nf1 Int32,\nf2 Int32,\npk Int32\n)\nENGINE = MergeTree()\nORDER BY f1\nPARTITION BY pk;","fileName":"../ClickHouse/tests/queries/0_stateless/01745_alter_delete_view.sql","errors":[]},{"query":"CREATE VIEW test_view AS SELECT f1, f2\nFROM test_table\nWHERE pk = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/01745_alter_delete_view.sql","errors":[]},{"query":"create table tbl (p Int64, t Int64, f Float64) Engine=MergeTree partition by p order by t settings index_granularity=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01739_index_hint.sql","errors":[]},{"query":"create table XXXX (t Int64, f Float64) Engine=MergeTree order by t settings index_granularity=128, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01739_index_hint.sql","errors":[]},{"query":"create table XXXX (t Int64, f Float64) Engine=MergeTree order by t settings index_granularity=8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01739_index_hint.sql","errors":[]},{"query":"CREATE TABLE XXXX (p Nullable(Int64), k Decimal(76, 39)) ENGINE = MergeTree PARTITION BY toDate(p) ORDER BY k SETTINGS index_granularity = 1, allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01739_index_hint.sql","errors":[]},{"query":"CREATE TABLE prewhere_move_select_final (x Int, y Int, z Int) ENGINE = ReplacingMergeTree() ORDER BY (x, y);","fileName":"../ClickHouse/tests/queries/0_stateless/01737_move_order_key_to_prewhere_select_final.sql","errors":[]},{"query":"create table test_enum (c Nullable(Enum16('A' = 1, 'B' = 2))) engine Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01736_null_as_default.sql","errors":[]},{"query":"CREATE TABLE join_tbl (\\`id\\` String, \\`name\\` String, lcname LowCardinality(String)) ENGINE = Join(any, left, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01735_join_get_low_card_fix.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE join_tbl (\\'","startColumn":23,"startLine":1,"endColumn":24,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE t (i UInt8, x DateTime64(3, 'UTC'));","fileName":"../ClickHouse/tests/queries/0_stateless/01732_more_consistent_datetime64_parsing.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE decimal (\nf dec(38, 38)\n);","fileName":"../ClickHouse/tests/queries/0_stateless/01732_bigint_ubsan.sql","errors":[]},{"query":"CREATE TABLE bad_conversions (a UInt32) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01732_alters_bad_conversions.sql","errors":[]},{"query":"CREATE TABLE bad_conversions_2 (e Enum('foo' = 1, 'bar' = 2)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01732_alters_bad_conversions.sql","errors":[]},{"query":"create database db_01721;","fileName":"../ClickHouse/tests/queries/0_stateless/01721_dictionary_decimal_p_s.sql","errors":[{"message":"no viable alternative at input 'create database db_01721;'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE db_01721.table_decimal_dict( KeyField UInt64,\nDecimal32_ Decimal(5,4),\nDecimal64_ Decimal(18,8),\nDecimal128_ Decimal(25,8),\nDecimal256_ Decimal(76,37)\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01721_dictionary_decimal_p_s.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS db_01721.decimal_dict ( \tKeyField UInt64 DEFAULT 9999999,\n\tDecimal32_ Decimal(5,4) DEFAULT 0.11,\n\tDecimal64_ Decimal(18,8) DEFAULT 0.11,\n\tDecimal128_ Decimal(25,8) DEFAULT 0.11\n)\nPRIMARY KEY KeyField\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_decimal_dict' DB 'db_01721'))\nLIFETIME(0) LAYOUT(SPARSE_HASHED);","fileName":"../ClickHouse/tests/queries/0_stateless/01721_dictionary_decimal_p_s.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY IF NOT EXISTS db_01721.decimal_dict ( \\tKeyField UInt64 DEFAULT 9999999,\\n\\tDecimal32_ Decimal(5,4) DEFAULT 0.11,\\n\\tDecimal64_ Decimal(18,8) DEFAULT 0.11,\\n\\tDecimal128_ Decimal(25,8) DEFAULT 0.11\\n)\\nPRIMARY KEY KeyField\\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_decimal_dict' DB 'db_01721'))\\nLIFETIME(0) LAYOUT(SPARSE_HASHED)'","startColumn":32,"startLine":8,"endColumn":33,"endLine":8}]},{"query":"CREATE TABLE constraint_constant_number_expression (\nid UInt64,\nCONSTRAINT \\`c0\\` CHECK 1,\nCONSTRAINT \\`c1\\` CHECK 1 < 2,\nCONSTRAINT \\`c2\\` CHECK isNull(cast(NULL, 'Nullable(UInt8)'))\n) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01721_constraints_constant_expressions.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_constant_number_expression (\\nid UInt64,\\nCONSTRAINT \\'","startColumn":11,"startLine":3,"endColumn":12,"endLine":3}]},{"query":"CREATE TABLE constraint_constant_number_expression_non_uint8 (\nid UInt64,\nCONSTRAINT \\`c0\\` CHECK toUInt64(1)\n) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01721_constraints_constant_expressions.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_constant_number_expression_non_uint8 (\\nid UInt64,\\nCONSTRAINT \\'","startColumn":11,"startLine":3,"endColumn":12,"endLine":3}]},{"query":"CREATE TABLE constraint_constant_nullable_expression_that_contains_null (\nid UInt64,\nCONSTRAINT \\`c0\\` CHECK nullIf(1 % 2, 1)\n) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01721_constraints_constant_expressions.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_constant_nullable_expression_that_contains_null (\\nid UInt64,\\nCONSTRAINT \\'","startColumn":11,"startLine":3,"endColumn":12,"endLine":3}]},{"query":"CREATE TABLE table_map_with_key_integer (d DATE, m Map(Int8, Int8)) ENGINE = MergeTree() ORDER BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/01720_type_map_and_casts.sql","errors":[]},{"query":"CREATE TABLE table_map_with_key_integer (d DATE, m Map(Int32, UInt16)) ENGINE = MergeTree() ORDER BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/01720_type_map_and_casts.sql","errors":[]},{"query":"CREATE TABLE table_map_with_key_integer (d DATE, m Map(Date, Int32)) ENGINE = MergeTree() ORDER BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/01720_type_map_and_casts.sql","errors":[]},{"query":"CREATE TABLE table_map_with_key_integer (d DATE, m Map(UUID, UInt16)) ENGINE = MergeTree() ORDER BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/01720_type_map_and_casts.sql","errors":[]},{"query":"CREATE TABLE table_map_with_key_integer (d DATE, m Map(Int128, String)) ENGINE = MergeTree() ORDER BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/01720_type_map_and_casts.sql","errors":[]},{"query":"CREATE TABLE table_map_with_key_integer (m Map(Float32, String)) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01720_type_map_and_casts.sql","errors":[]},{"query":"CREATE TABLE table_map_with_key_integer (m Map(Array(UInt32), String)) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01720_type_map_and_casts.sql","errors":[]},{"query":"CREATE TABLE file_engine_table (id UInt32) ENGINE=File(TSV);","fileName":"../ClickHouse/tests/queries/0_stateless/01720_engine_file_empty_if_not_exists.sql","errors":[]},{"query":"CREATE DATABASE 01720_dictionary_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01720_dictionary_create_source_with_functions.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01720'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01720_dictionary_db.dictionary_source_table (\n\tkey UInt8,\nvalue String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01720_dictionary_create_source_with_functions.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01720'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01720_dictionary_db.dictionary (\nkey UInt64,\nvalue String\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(DB '01720_dictionary_db' TABLE 'dictionary_source_table' HOST hostName() PORT tcpPort()))\nLIFETIME(0)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01720_dictionary_create_source_with_functions.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01720'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE constraint_on_nullable_type (\n\\`id\\` Nullable(UInt64),\nCONSTRAINT \\`c0\\` CHECK \\`id\\` = 1\n)\nENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01720_constraints_complex_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_on_nullable_type (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE constraint_on_low_cardinality_type (\n\\`id\\` LowCardinality(UInt64),\nCONSTRAINT \\`c0\\` CHECK \\`id\\` = 2\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01720_constraints_complex_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_on_low_cardinality_type (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE constraint_on_low_cardinality_nullable_type (\n\\`id\\` LowCardinality(Nullable(UInt64)),\nCONSTRAINT \\`c0\\` CHECK \\`id\\` = 3\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01720_constraints_complex_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_on_low_cardinality_nullable_type (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test (timestamp DateTime('UTC'), i UInt8) Engine=MergeTree() PARTITION BY toYYYYMM(timestamp) ORDER BY (i);","fileName":"../ClickHouse/tests/queries/0_stateless/01719_join_timezone.sql","errors":[]},{"query":"CREATE TABLE signed_table ( k UInt32,\nv String,\ns Int8\n) ENGINE CollapsingMergeTree(s) ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/01716_drop_rename_sign_column.sql","errors":[]},{"query":"CREATE TABLE test_tuple (value Tuple(UInt8, UInt8)) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01715_tuple_insert_null_as_default.sql","errors":[]},{"query":"CREATE TABLE test_tuple_nested_in_array (value Array(Tuple(UInt8, UInt8))) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01715_tuple_insert_null_as_default.sql","errors":[]},{"query":"CREATE TABLE test_tuple_nested_in_array_nested_in_tuple (value Tuple(UInt8, Array(Tuple(UInt8, UInt8)))) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01715_tuple_insert_null_as_default.sql","errors":[]},{"query":"CREATE TABLE test_tuple_nested_in_map (value Map(String, Tuple(UInt8, UInt8))) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01715_tuple_insert_null_as_default.sql","errors":[]},{"query":"CREATE TABLE test_tuple_nested_in_map_nested_in_tuple (value Tuple(UInt8, Map(String, Tuple(UInt8, UInt8)))) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01715_tuple_insert_null_as_default.sql","errors":[]},{"query":"CREATE TABLE i20203_1 (a Int8) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/01715_background_checker_i20203', 'r1')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01715_background_checker_blather_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE i20203_2 (a Int8) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/01715_background_checker_i20203', 'r2')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01715_background_checker_blather_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE alter_drop_version (\n\\`key\\` UInt64,\n\\`value\\` String,\n\\`ver\\` Int8\n)\nENGINE = ReplacingMergeTree(ver)\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01714_alter_drop_version.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE alter_drop_version (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE ttl_table (\ndate Date,\nvalue UInt64\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01713_table_ttl', '1', date, date, 8192)\nTTL date + INTERVAL 2 MONTH; --{ serverError BAD_ARGUMENTS }\nCREATE TABLE ttl_table\n(\ndate Date,\nvalue UInt64\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01713_table_ttl', '1', date, date, 8192)\nPARTITION BY date; --{ serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }\nCREATE TABLE ttl_table\n(\ndate Date,\nvalue UInt64\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01713_table_ttl', '1', date, date, 8192)\nORDER BY value; --{ serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }\nSELECT 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01713_table_ttl_old_syntax_zookeeper.sql","errors":[]},{"query":"CREATE TABLE old_school_table (\nkey UInt64,\nvalue String\n)\nENGINE = MergeTree()\nORDER BY key\nSETTINGS index_granularity_bytes = 0, enable_mixed_granularity_parts = 0, min_bytes_for_wide_part = 0,\nvertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01712_no_adaptive_granularity_vertical_merge.sql","errors":[]},{"query":"create table t engine = Memory as with cte as (select * from numbers(10)) select * from cte;","fileName":"../ClickHouse/tests/queries/0_stateless/01711_cte_subquery_fix.sql","errors":[{"message":"no viable alternative at input 'create table t engine = Memory as with cte as ('","startColumn":46,"startLine":1,"endColumn":47,"endLine":1}]},{"query":"create view view1 as with t as (select number n from numbers(3)) select n from t;","fileName":"../ClickHouse/tests/queries/0_stateless/01711_cte_subquery_fix.sql","errors":[{"message":"no viable alternative at input 'create view view1 as with t as ('","startColumn":31,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE t (\n\\`id\\` UInt64,\n\\`id2\\` UInt64,\n\\`id3\\` UInt64,\nPROJECTION t_normal\n(\nSELECT\nid,\nid2,\nid3\nORDER BY\nid2,\nid,\nid3\n),\nPROJECTION t_agg\n(\nSELECT\nsum(id3)\nGROUP BY id2\n)\n)\nENGINE = MergeTree\nORDER BY id\nSETTINGS index_granularity = 8;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_query_log_with_projection_info.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table data_proj_order_by_incomp (t UInt64) ENGINE MergeTree() order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projections_order_by_incomplete.sql","errors":[]},{"query":"create table data_proj_order_by_comp (t UInt64, projection tSort (select * order by t)) ENGINE MergeTree() order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projections_order_by_complete.sql","errors":[]},{"query":"create table projection_test (dt DateTime, cost Int64, projection p (select toStartOfMinute(dt) dt_m, sum(cost) group by dt_m)) engine MergeTree partition by toDate(dt) order by dt;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projections_in_distributed_query.sql","errors":[]},{"query":"create table projection_test_d (dt DateTime, cost Int64) engine Distributed(test_cluster_two_shards, currentDatabase(), projection_test);","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projections_in_distributed_query.sql","errors":[]},{"query":"create table projection_without_key (key UInt32, PROJECTION x (SELECT sum(key) group by key % 3)) engine MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projections_group_by_no_key.sql","errors":[]},{"query":"CREATE TABLE projection_test__fuzz_0 (\\`sum(block_count)\\` UInt64, \\`domain_alias\\` UInt64 ALIAS length(domain), \\`datetime\\` DateTime, \\`domain\\` LowCardinality(String), \\`x_id\\` String, \\`y_id\\` String, \\`block_count\\` Int64, \\`retry_count\\` Int64, \\`duration\\` Decimal(76, 13), \\`kbytes\\` LowCardinality(Int64), \\`buffer_time\\` Int64, \\`first_time\\` UInt256, \\`total_bytes\\` LowCardinality(Nullable(UInt64)), \\`valid_bytes\\` Nullable(UInt64), \\`completed_bytes\\` Nullable(UInt64), \\`fixed_bytes\\` LowCardinality(Nullable(UInt64)), \\`force_bytes\\` Int256, PROJECTION p (SELECT toStartOfMinute(datetime) AS dt_m, countIf(first_time = 0) / count(), avg((kbytes * 8) / duration), count(), sum(block_count) / sum(duration), avg(block_count / duration), sum(buffer_time) / sum(duration), avg(buffer_time / duration), sum(valid_bytes) / sum(total_bytes), sum(completed_bytes) / sum(total_bytes), sum(fixed_bytes) / sum(total_bytes), sum(force_bytes) / sum(total_bytes), sum(valid_bytes) / sum(total_bytes), sum(retry_count) / sum(duration), avg(retry_count / duration), countIf(block_count > 0) / count(), countIf(first_time = 0) / count(), uniqHLL12(x_id), uniqHLL12(y_id) GROUP BY dt_m, domain)) ENGINE = MergeTree PARTITION BY toDate(datetime) ORDER BY (toStartOfTenMinutes(datetime), domain) SETTINGS index_granularity_bytes = 10000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projections_and_duplicate_columms.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE projection_test__fuzz_0 (\\'","startColumn":38,"startLine":1,"endColumn":39,"endLine":1}]},{"query":"create table projection_test (\\`sum(block_count)\\` UInt64, domain_alias UInt64 alias length(domain), datetime DateTime, domain LowCardinality(String), x_id String, y_id String, block_count Int64, retry_count Int64, duration Int64, kbytes Int64, buffer_time Int64, first_time Int64, total_bytes Nullable(UInt64), valid_bytes Nullable(UInt64), completed_bytes Nullable(UInt64), fixed_bytes Nullable(UInt64), force_bytes Nullable(UInt64), projection p (select toStartOfMinute(datetime) dt_m, countIf(first_time = 0) / count(), avg((kbytes * 8) / duration), count(), sum(block_count) / sum(duration), avg(block_count / duration), sum(buffer_time) / sum(duration), avg(buffer_time / duration), sum(valid_bytes) / sum(total_bytes), sum(completed_bytes) / sum(total_bytes), sum(fixed_bytes) / sum(total_bytes), sum(force_bytes) / sum(total_bytes), sum(valid_bytes) / sum(total_bytes), sum(retry_count) / sum(duration), avg(retry_count / duration), countIf(block_count > 0) / count(), countIf(first_time = 0) / count(), uniqHLL12(x_id), uniqHLL12(y_id) group by dt_m, domain)) engine MergeTree partition by toDate(datetime) order by toStartOfTenMinutes(datetime) settings index_granularity_bytes = 10000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projections.sql","errors":[{"message":"no viable alternative at input 'create table projection_test (\\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"create row policy filter on projection_test using (domain = 'non_existing_domain') to all;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projections.sql","errors":[{"message":"no viable alternative at input 'create row'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"create table projection_without_key (key UInt32, PROJECTION x (SELECT max(key))) engine MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projections.sql","errors":[]},{"query":"CREATE TABLE sales (DATE_SOLD DateTime64(3, 'UTC'), PRODUCT_ID Nullable(String)) Engine MergeTree() PARTITION BY toYYYYMM(DATE_SOLD) ORDER BY DATE_SOLD;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_with_nullable_keys.sql","errors":[]},{"query":"create table t (x UInt32) engine = MergeTree order by tuple() settings index_granularity = 8;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_with_mixed_pipeline.sql","errors":[]},{"query":"create table t (s UInt16, l UInt16, projection p (select s, l order by l)) engine MergeTree order by s;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_with_joins.sql","errors":[]},{"query":"create table mt (id1 Int8, id2 Int8) Engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_with_joins.sql","errors":[]},{"query":"create table j (id1 Int8, id2 Int8, projection p (select id1, id2 order by id2)) Engine=MergeTree order by id1 settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_with_joins.sql","errors":[]},{"query":"create table foo(bar String, projection p (select * apply groupUniqArray(100))) engine MergeTree order by bar;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_with_column_transformers.sql","errors":[{"message":"no viable alternative at input 'create table foo(bar String, projection p (select * apply groupUniqArray('","startColumn":72,"startLine":1,"endColumn":73,"endLine":1}]},{"query":"CREATE TABLE aggregate_functions_null_for_empty (\\`x\\` UInt32, \\`y\\` UInt64, PROJECTION p (SELECT sum(y))) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_with_ast_rewrite_settings.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE aggregate_functions_null_for_empty (\\'","startColumn":49,"startLine":1,"endColumn":50,"endLine":1}]},{"query":"CREATE TABLE transform_null_in (\\`x\\` UInt32, \\`y\\` UInt64, PROJECTION p (SELECT sum(y in (1,2,3)))) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_with_ast_rewrite_settings.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE transform_null_in (\\'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE legacy_column_name_of_tuple_literal (\\`x\\` UInt32, \\`y\\` UInt64, PROJECTION p (SELECT sum(y in (1,2,3)))) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_with_ast_rewrite_settings.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE legacy_column_name_of_tuple_literal (\\'","startColumn":50,"startLine":1,"endColumn":51,"endLine":1}]},{"query":"create table t (i int, j int, projection p (select i order by i)) engine MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_with_alter_conversions.sql","errors":[]},{"query":"create table t (c1 Int64, c2 String, c3 DateTime, c4 Int8, c5 String, c6 String, c7 String, c8 String, c9 String, c10 String, c11 String, c12 String, c13 Int8, c14 Int64, c15 String, c16 String, c17 String, c18 Int64, c19 Int64, c20 Int64) engine MergeTree order by c18 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_vertical_merges.sql","errors":[]},{"query":"CREATE TABLE t(a UInt32, b UInt32) ENGINE = MergeTree PARTITION BY a ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_row_policy.sql","errors":[]},{"query":"CREATE ROW POLICY OR REPLACE rp ON t FOR SELECT USING 0 TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"create table t (x Int32, codectest Int32) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_query_plan_optimization_misc.sql","errors":[]},{"query":"create table x (i int) engine MergeTree order by i settings index_granularity = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_pk_trivial_count.sql","errors":[]},{"query":"create table tp (x Int32, y Int32, projection p (select x, y order by x)) engine = MergeTree order by y settings min_rows_for_wide_part = 4, min_bytes_for_wide_part = 32;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_part_check.sql","errors":[]},{"query":"create table tp (p Date, k UInt64, v1 UInt64, v2 Int64, projection p1 ( select p, sum(k), sum(v1), sum(v2) group by p) ) engine = MergeTree partition by toYYYYMM(p) order by k settings min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_part_check.sql","errors":[]},{"query":"create table tp (x int, projection p (select sum(x))) engine = MergeTree order by x settings min_rows_for_wide_part = 2, min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_part_check.sql","errors":[]},{"query":"create table z (pk Int64, d Date, id UInt64, c UInt64) Engine MergeTree partition by d order by pk settings ratio_of_defaults_for_sparse_serialization = 1.0;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_optimize_materialize.sql","errors":[]},{"query":"create table proj ( bool_value UInt8,\nzero_integer_value Int32,\ninteger_value Int32,\nfloat_value Float32,\ndatetime_value DateTime,\nstring_value String,\nprojection test_projection (\nselect\ntoStartOfDay (toDateTime (datetime_value)) as Day,\ndatetime_value,\nfloat_value,\ncount(\ndistinct if(zero_integer_value = 1, string_value, NULL)\n)\ngroup by\nDay,\ndatetime_value,\nfloat_value\n)\n) engine MergeTree\npartition by\ntoDate (datetime_value)\norder by\nbool_value;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_optimize_group_by_function_keys.sql","errors":[]},{"query":"CREATE TABLE proj(date Date, PROJECTION maxdate( SELECT max(date) GROUP BY date )) ENGINE = MergeTree ORDER BY tuple() as select toDate('2012-10-24')-number%100 from numbers(1e2);","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_optimize_aggregators_of_group_by_keys.sql","errors":[]},{"query":"CREATE TABLE t (\\`key\\` UInt32, \\`created_at\\` Date, \\`value\\` UInt32, PROJECTION xxx (SELECT key, created_at, sum(value) GROUP BY key, created_at)) ENGINE = MergeTree PARTITION BY toYYYYMM(created_at) ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_mutation.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"create table x (i int) engine MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_materialize_with_missing_columns.sql","errors":[]},{"query":"create table x (i UInt64, j UInt64, k UInt64, projection agg (select sum(j), avg(k) group by i), projection norm (select j, k order by i)) engine MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_in_set.sql","errors":[]},{"query":"create table if not exists flows (SrcAS UInt32, Bytes UInt64) engine MergeTree() order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_in_set.sql","errors":[]},{"query":"create table t (i int, j int, k int, projection p (select * order by j)) engine MergeTree order by i settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_in_index.sql","errors":[]},{"query":"create table test (name String, time Int64) engine MergeTree order by time;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_in_index.sql","errors":[]},{"query":"create table tp (type Int32, eventcnt UInt64, projection p (select sum(eventcnt), type group by type order by sum(eventcnt))) engine = MergeTree order by type; -- { serverError ILLEGAL_PROJECTION } drop table if exists tp;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_group_by_order_by.sql","errors":[]},{"query":"create table tp_1 (x Int32, y Int32, projection p (select x, y order by x)) engine = ReplicatedMergeTree('/clickhouse/tables/{shard}/01710_projection_fetch_' || currentDatabase(), '1_{replica}') order by y settings min_rows_for_wide_part = 4, min_bytes_for_wide_part = 32;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_fetch_long.sql","errors":[]},{"query":"create table tp_2 (x Int32, y Int32, projection p (select x, y order by x)) engine = ReplicatedMergeTree('/clickhouse/tables/{shard}/01710_projection_fetch_' || currentDatabase(), '2_{replica}') order by y settings min_rows_for_wide_part = 4, min_bytes_for_wide_part = 32;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_fetch_long.sql","errors":[]},{"query":"CREATE TABLE agg (\n\\`key\\` UInt32,\n\\`ts\\` DateTime,\n\\`value\\` UInt32,\nPROJECTION aaaa\n(\nSELECT\nts,\nkey,\nsum(value)\nGROUP BY ts, key\n)\n)\nENGINE = MergeTree\nORDER BY (key, ts);","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_external_aggregate.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE agg (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table tp (x Int32, y Int32, projection p (select x, y order by x)) engine = MergeTree order by y;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_drop_if_exists.sql","errors":[]},{"query":"create table t (i int, j int, projection x (select * order by j)) engine MergeTree partition by i order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_detach_part.sql","errors":[]},{"query":"create table x (pk int, arr Array(int), projection p (select arr order by pk)) engine MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_array_join.sql","errors":[]},{"query":"CREATE TABLE normal (\n\\`key\\` UInt32,\n\\`ts\\` DateTime,\n\\`value\\` UInt32,\nPROJECTION aaaa\n(\nSELECT\nts,\nkey,\nvalue\nORDER BY ts, key\n)\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_aggregation_in_order.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE normal (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE agg (\n\\`key\\` UInt32,\n\\`ts\\` DateTime,\n\\`value\\` UInt32,\nPROJECTION aaaa\n(\nSELECT\nts,\nkey,\nsum(value)\nGROUP BY ts, key\n)\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_aggregation_in_order.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE agg (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t1 (c0 Int32, PRIMARY KEY (c0)) ENGINE=MergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_aggregate_functions_null_for_empty.sql","errors":[]},{"query":"CREATE TABLE t(a UInt32, b UInt32) ENGINE = MergeTree PARTITION BY a ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_additional_filters.sql","errors":[]},{"query":"create table atf_p (x UInt64) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_projection_additional_filters.sql","errors":[]},{"query":"create table data_order_by_proj_incomp (t UInt64) ENGINE MergeTree() order by t;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_order_by_projections_incomplete.sql","errors":[]},{"query":"create table data_order_by_proj_comp (t UInt64, projection tSort (select * order by t)) ENGINE MergeTree() order by t;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_order_by_projections_complete.sql","errors":[]},{"query":"CREATE TABLE t (id UInt64, id2 UInt64, id3 UInt64, PROJECTION t_reverse (SELECT id, id2, id3 ORDER BY id2, id, id3)) ENGINE = MergeTree ORDER BY (id) settings index_granularity = 4;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_normal_projection_with_query_plan_optimization.sql","errors":[]},{"query":"CREATE TABLE t1 (id UInt32, s String) Engine = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_normal_projection_join_plan_fix.sql","errors":[]},{"query":"CREATE TABLE t2 (id1 UInt32, id2 UInt32) Engine = MergeTree ORDER BY id1 SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_normal_projection_join_plan_fix.sql","errors":[]},{"query":"CREATE TABLE test (\nuuid FixedString(16),\nid int,\nns FixedString(16),\ndt DateTime64(6),\n)\nENGINE = MergeTree\nORDER BY (id, dt, uuid);","fileName":"../ClickHouse/tests/queries/0_stateless/01710_normal_projection_format.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\nuuid FixedString(16),\\nid int,\\nns FixedString(16),\\ndt DateTime64(6),\\n)'","startColumn":0,"startLine":6,"endColumn":1,"endLine":6}]},{"query":"create table t (i int, j int) engine MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_normal_projection_fix1.sql","errors":[]},{"query":"CREATE TABLE test (type Enum('x'), s String) ENGINE = MergeTree ORDER BY s PARTITION BY type;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_minmax_count_projection_modify_partition_key.sql","errors":[]},{"query":"create table t (n int, s String) engine MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_minmax_count_projection_distributed_query.sql","errors":[]},{"query":"CREATE TABLE test (\\`val\\` LowCardinality(Nullable(String))) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_minmax_count_projection_count_nullable.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"create table t (n int) engine MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_minmax_count_projection_constant_query.sql","errors":[]},{"query":"create table d (i int, j int) engine MergeTree partition by i % 2 order by tuple() settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_minmax_count_projection.sql","errors":[]},{"query":"create table has_final_mark (i int, j int) engine MergeTree partition by i % 2 order by j settings index_granularity = 10, write_final_mark = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_minmax_count_projection.sql","errors":[]},{"query":"create table mixed_final_mark (i int, j int) engine MergeTree partition by i % 2 order by j settings index_granularity = 10;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_minmax_count_projection.sql","errors":[]},{"query":"create table t (server_date Date, something String) engine MergeTree partition by (toYYYYMM(server_date), server_date) order by (server_date, something);","fileName":"../ClickHouse/tests/queries/0_stateless/01710_minmax_count_projection.sql","errors":[]},{"query":"create table d (dt DateTime, j int) engine MergeTree partition by (toDate(dt), ceiling(j), toDate(dt), CEILING(j)) order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_minmax_count_projection.sql","errors":[]},{"query":"create table test (id Int64, d Int64, projection dummy(select * order by id)) engine MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_minmax_count_projection.sql","errors":[]},{"query":"create table tp (d1 Int32, d2 Int32, eventcnt Int64, projection p (select sum(eventcnt) group by d1)) engine = MergeTree order by (d1, d2);","fileName":"../ClickHouse/tests/queries/0_stateless/01710_force_use_projection.sql","errors":[]},{"query":"CREATE TABLE r ( x String,\na LowCardinality(String),\nq AggregateFunction(quantilesTiming(0.5, 0.95, 0.99), Int64),\ns Int64,\nPROJECTION p\n(SELECT a, quantilesTimingMerge(0.5, 0.95, 0.99)(q), sum(s) GROUP BY a)\n) Engine=SummingMergeTree order by (x, a)\nSETTINGS deduplicate_merge_projection_mode = 'drop';  -- should set it to rebuild once projection is supported with SummingMergeTree\ninsert into r\nselect number%100 x,\n'x' a,\nquantilesTimingState(0.5, 0.95, 0.99)(number::Int64) q,\nsum(1) s\nfrom numbers(1000)\ngroup by x,a;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_aggregate_projection_with_normalized_states.sql","errors":[{"message":"no viable alternative at input 'insert into r\\nselect number%100 x,\\n'x' a,\\nquantilesTimingState(0.5, 0.95, 0.99)(number:'","startColumn":44,"startLine":12,"endColumn":45,"endLine":12}]},{"query":"CREATE TABLE t0 (c0 Int16, projection h (SELECT min(c0), max(c0), count() GROUP BY -c0)) ENGINE = MergeTree ORDER BY ();","fileName":"../ClickHouse/tests/queries/0_stateless/01710_aggregate_projection_with_monotonic_key_expr.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t0 (c0 Int16, projection h (SELECT min(c0), max(c0), count() GROUP BY -c0)) ENGINE = MergeTree ORDER BY ()'","startColumn":118,"startLine":1,"endColumn":119,"endLine":1}]},{"query":"create table t1 (c0 Int32) engine = MergeTree order by sin(c0);","fileName":"../ClickHouse/tests/queries/0_stateless/01710_aggregate_projection_with_monotonic_key_expr.sql","errors":[]},{"query":"create table tp (type Int32, device UUID, cnt UInt64) engine = MergeTree order by (type, device);","fileName":"../ClickHouse/tests/queries/0_stateless/01710_aggregate_projection_with_hashing.sql","errors":[]},{"query":"create table test(dim1 String, dim2 String, projection p1 (select dim1, dim2, count() group by dim1, dim2)) engine MergeTree order by dim1;","fileName":"../ClickHouse/tests/queries/0_stateless/01710_aggregate_projection_with_grouping_set.sql","errors":[]},{"query":"create table data_01709 (i int) engine MergeTree order by i settings old_parts_lifetime = 10000000000, min_bytes_for_wide_part = 0, inactive_parts_to_throw_insert = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01709_inactive_parts_to_throw_insert.sql","errors":[]},{"query":"CREATE TABLE X (id Int) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01707_join_use_nulls.sql","errors":[]},{"query":"CREATE TABLE Y (id Int) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01707_join_use_nulls.sql","errors":[]},{"query":"create table x(i int, index mm LOG2(i) type minmax granularity 1, projection p (select MAX(i))) engine ReplicatedMergeTree('/clickhouse/tables/{database}/x', 'r') order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01705_normalize_create_alter_function_names.sql","errors":[]},{"query":"CREATE DATABASE sqllt;","fileName":"../ClickHouse/tests/queries/0_stateless/01702_system_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE sqllt;'","startColumn":21,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"CREATE TABLE sqllt.table (\ni UInt8, s String\n)\nENGINE = MergeTree PARTITION BY tuple() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01702_system_query_log.sql","errors":[]},{"query":"CREATE VIEW sqllt.view AS SELECT i, s FROM sqllt.table;","fileName":"../ClickHouse/tests/queries/0_stateless/01702_system_query_log.sql","errors":[]},{"query":"CREATE DICTIONARY sqllt.dictionary (key UInt64, value UInt64) PRIMARY KEY key SOURCE(CLICKHOUSE(DB 'sqllt' TABLE 'table' HOST 'localhost' PORT 9001)) LIFETIME(0) LAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01702_system_query_log.sql","errors":[]},{"query":"CREATE USER sqllt_user IDENTIFIED WITH PLAINTEXT_PASSWORD BY 'password';","fileName":"../ClickHouse/tests/queries/0_stateless/01702_system_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE sqllt_role;","fileName":"../ClickHouse/tests/queries/0_stateless/01702_system_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE POLICY sqllt_policy ON sqllt.table, sqllt.view, sqllt.dictionary AS PERMISSIVE TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/01702_system_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE POLICY'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE POLICY sqllt_row_policy ON sqllt.table, sqllt.view, sqllt.dictionary AS PERMISSIVE TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/01702_system_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE POLICY'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE QUOTA sqllt_quota KEYED BY user_name TO sqllt_role;","fileName":"../ClickHouse/tests/queries/0_stateless/01702_system_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE SETTINGS PROFILE sqllt_settings_profile SETTINGS interactive_delay = 200000;","fileName":"../ClickHouse/tests/queries/0_stateless/01702_system_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE SETTINGS'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"create table t(i8 Int8, i16 Int16, i32 Int32, i64 Int64) engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01702_bitmap_native_integers.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS agg_table (\ntime DateTime CODEC(DoubleDelta, LZ4),\nxxx String,\ntwo_values Tuple(Array(UInt16), UInt32),\nagg_simple SimpleAggregateFunction(sum, UInt64),\nagg SimpleAggregateFunction(sumMap, Tuple(Array(Int16), Array(UInt64)))\n)\nENGINE = AggregatingMergeTree()\nORDER BY (xxx, time);","fileName":"../ClickHouse/tests/queries/0_stateless/01701_if_tuple_segfault.sql","errors":[]},{"query":"create table tp_1 (x Int32, y Int32, projection p (select x, y order by x)) engine = MergeTree order by y partition by intDiv(y, 100) settings old_parts_lifetime=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01701_clear_projection_and_part_remove.sql","errors":[]},{"query":"CREATE TABLE sample_table ( key UInt64\n)\nENGINE ReplicatedMergeTree('/clickhouse/{database}/01700_system_zookeeper_path_in/{shard}', '{replica}')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01700_system_zookeeper_path_in.sql","errors":[]},{"query":"CREATE TABLE 01686_test (key UInt64, value String) Engine=EmbeddedRocksDB PRIMARY KEY(key) SETTINGS optimize_for_bulk_insert = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01686_rocksdb.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01686'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE x AS system.numbers ENGINE = MergeTree ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01684_insert_specify_shard_id.sql","errors":[]},{"query":"CREATE TABLE y AS system.numbers ENGINE = MergeTree ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01684_insert_specify_shard_id.sql","errors":[]},{"query":"CREATE TABLE x_dist as x ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), x);","fileName":"../ClickHouse/tests/queries/0_stateless/01684_insert_specify_shard_id.sql","errors":[]},{"query":"CREATE TABLE y_dist as y ENGINE = Distributed('test_cluster_two_shards_localhost', currentDatabase(), y);","fileName":"../ClickHouse/tests/queries/0_stateless/01684_insert_specify_shard_id.sql","errors":[]},{"query":"CREATE DATABASE 01681_database_for_flat_dictionary;","fileName":"../ClickHouse/tests/queries/0_stateless/01683_flat_dictionary.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01681'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01681_database_for_flat_dictionary.simple_key_simple_attributes_source_table (\nid UInt64,\nvalue_first String,\nvalue_second String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01683_flat_dictionary.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01681_database_for_flat_dictionary.flat_dictionary_simple_key_simple_attributes (\nid UInt64,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second String DEFAULT 'value_second_default'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_simple_attributes_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01683_flat_dictionary.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01681'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01681_database_for_flat_dictionary.simple_key_complex_attributes_source_table (\nid UInt64,\nvalue_first String,\nvalue_second Nullable(String)\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01683_flat_dictionary.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01681_database_for_flat_dictionary.flat_dictionary_simple_key_complex_attributes (\nid UInt64,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second Nullable(String) DEFAULT 'value_second_default'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_complex_attributes_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01683_flat_dictionary.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01681'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01681_database_for_flat_dictionary.simple_key_hierarchy_table (\nid UInt64,\nparent_id UInt64\n) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01683_flat_dictionary.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01681_database_for_flat_dictionary.flat_dictionary_simple_key_hierarchy (\nid UInt64,\nparent_id UInt64 HIERARCHICAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_hierarchy_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01683_flat_dictionary.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01681'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE tmp_01683 (n Int8) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01683_dist_INSERT_block_structure_mismatch.sql","errors":[]},{"query":"CREATE TABLE dist_01683 (n UInt64) Engine=Distributed(test_cluster_two_shards, currentDatabase(), tmp_01683, n);","fileName":"../ClickHouse/tests/queries/0_stateless/01683_dist_INSERT_block_structure_mismatch.sql","errors":[]},{"query":"CREATE TABLE encryption_test (i Int, s String Codec(AES_128_GCM_SIV)) ENGINE = MergeTree ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/01683_codec_encrypted.sql","errors":[]},{"query":"CREATE TABLE encryption_test (i Int, s String Codec(AES_256_GCM_SIV)) ENGINE = MergeTree ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/01683_codec_encrypted.sql","errors":[]},{"query":"CREATE DATABASE 01682_database_for_cache_dictionary;","fileName":"../ClickHouse/tests/queries/0_stateless/01682_cache_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01682'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01682_database_for_cache_dictionary.complex_key_simple_attributes_source_table (\nid UInt64,\nid_key String,\nvalue_first String,\nvalue_second String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01682_cache_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01682'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01682_database_for_cache_dictionary.cache_dictionary_complex_key_simple_attributes (\nid UInt64,\nid_key String,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second String DEFAULT 'value_second_default'\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'complex_key_simple_attributes_source_table' DB '01682_database_for_cache_dictionary'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(COMPLEX_KEY_CACHE(SIZE_IN_CELLS 10));","fileName":"../ClickHouse/tests/queries/0_stateless/01682_cache_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01682'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01682_database_for_cache_dictionary.complex_key_complex_attributes_source_table (\nid UInt64,\nid_key String,\nvalue_first String,\nvalue_second Nullable(String)\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01682_cache_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01682'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01682_database_for_cache_dictionary.cache_dictionary_complex_key_complex_attributes (\nid UInt64,\nid_key String,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second Nullable(String) DEFAULT 'value_second_default'\n)\nPRIMARY KEY id, id_key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'complex_key_complex_attributes_source_table' DB '01682_database_for_cache_dictionary'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(COMPLEX_KEY_CACHE(SIZE_IN_CELLS 10));","fileName":"../ClickHouse/tests/queries/0_stateless/01682_cache_dictionary_complex_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01682'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE DATABASE 01681_database_for_cache_dictionary;","fileName":"../ClickHouse/tests/queries/0_stateless/01681_cache_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE 01681'","startColumn":16,"startLine":1,"endColumn":21,"endLine":1}]},{"query":"CREATE TABLE 01681_database_for_cache_dictionary.simple_key_simple_attributes_source_table (\nid UInt64,\nvalue_first String,\nvalue_second String\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01681_cache_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01681_database_for_cache_dictionary.cache_dictionary_simple_key_simple_attributes (\nid UInt64,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second String DEFAULT 'value_second_default'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_simple_attributes_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(CACHE(SIZE_IN_CELLS 10))\nSETTINGS(dictionary_use_async_executor=1, max_threads=8)\n;","fileName":"../ClickHouse/tests/queries/0_stateless/01681_cache_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01681'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01681_database_for_cache_dictionary.simple_key_complex_attributes_source_table (\nid UInt64,\nvalue_first String,\nvalue_second Nullable(String)\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01681_cache_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01681_database_for_cache_dictionary.cache_dictionary_simple_key_complex_attributes (\nid UInt64,\nvalue_first String DEFAULT 'value_first_default',\nvalue_second Nullable(String) DEFAULT 'value_second_default'\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_complex_attributes_source_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(CACHE(SIZE_IN_CELLS 10));","fileName":"../ClickHouse/tests/queries/0_stateless/01681_cache_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01681'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE 01681_database_for_cache_dictionary.simple_key_hierarchy_table (\nid UInt64,\nparent_id UInt64\n) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01681_cache_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01681'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE DICTIONARY 01681_database_for_cache_dictionary.cache_dictionary_simple_key_hierarchy (\nid UInt64,\nparent_id UInt64 HIERARCHICAL\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'simple_key_hierarchy_table'))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(CACHE(SIZE_IN_CELLS 10));","fileName":"../ClickHouse/tests/queries/0_stateless/01681_cache_dictionary_simple_key.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY 01681'","startColumn":18,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE bloom_filter_nullable_index (\norder_key UInt64,\nstr Nullable(String),\nINDEX idx (str) TYPE bloom_filter GRANULARITY 1\n)\nENGINE = MergeTree() \nORDER BY order_key SETTINGS index_granularity = 6, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01681_bloom_filter_nullable_column.sql","errors":[]},{"query":"CREATE TABLE nullable_string_value (value Nullable(String)) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01681_bloom_filter_nullable_column.sql","errors":[]},{"query":"CREATE TABLE date_table (\nCountryID UInt64,\nStartDate Date,\nEndDate Date,\nTax Float64\n)\nENGINE = MergeTree()\nORDER BY CountryID;","fileName":"../ClickHouse/tests/queries/0_stateless/01676_range_hashed_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY range_dictionary (\nCountryID UInt64,\nStartDate Date,\nEndDate Date,\nTax Float64 DEFAULT 0.2\n)\nPRIMARY KEY CountryID\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'date_table' DB currentDatabase()))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(RANGE_HASHED())\nRANGE(MIN StartDate MAX EndDate)\nSETTINGS(dictionary_use_async_executor=1, max_threads=8)\n;","fileName":"../ClickHouse/tests/queries/0_stateless/01676_range_hashed_dictionary.sql","errors":[]},{"query":"CREATE TABLE date_table (\nCountryID UInt64,\nStartDate Date,\nEndDate Date,\nTax Nullable(Float64)\n)\nENGINE = MergeTree()\nORDER BY CountryID;","fileName":"../ClickHouse/tests/queries/0_stateless/01676_range_hashed_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY range_dictionary_nullable (\nCountryID UInt64,\nStartDate Date,\nEndDate Date,\nTax Nullable(Float64) DEFAULT 0.2\n)\nPRIMARY KEY CountryID\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'date_table' DB currentDatabase()))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(RANGE_HASHED())\nRANGE(MIN StartDate MAX EndDate);","fileName":"../ClickHouse/tests/queries/0_stateless/01676_range_hashed_dictionary.sql","errors":[]},{"query":"CREATE DATABASE test_01676;","fileName":"../ClickHouse/tests/queries/0_stateless/01676_dictget_in_default_expression.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE test_01676;'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE test_01676.dict_data (key UInt64, value UInt64) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01676_dictget_in_default_expression.sql","errors":[]},{"query":"CREATE DICTIONARY test_01676.dict (key UInt64, value UInt64) PRIMARY KEY key SOURCE(CLICKHOUSE(DB 'test_01676' TABLE 'dict_data' HOST '127.0.0.1' PORT tcpPort())) LIFETIME(0) LAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01676_dictget_in_default_expression.sql","errors":[]},{"query":"CREATE TABLE test_01676.table (x UInt64, y UInt64 DEFAULT dictGet('test_01676.dict', 'value', x)) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01676_dictget_in_default_expression.sql","errors":[]},{"query":"create table tab  (x UInt64, \\`arr.a\\` Array(UInt64), \\`arr.b\\` Array(UInt64)) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/01674_where_prewhere_array_crash.sql","errors":[{"message":"no viable alternative at input 'create table tab  (x UInt64, \\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE defaults (\nstringColumn String\n) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01674_htm_xml_coarse_parse.sql","errors":[]},{"query":"CREATE TABLE t_filter(s String, a Array(FixedString(3)), u UInt64, f UInt8) ENGINE = MergeTree ORDER BY u;","fileName":"../ClickHouse/tests/queries/0_stateless/01674_filter_by_uint8.sql","errors":[]},{"query":"CREATE TABLE table1(a String, b Date) ENGINE MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/01671_merge_join_and_constants.sql","errors":[]},{"query":"CREATE TABLE table2(c String, a String, d Date) ENGINE MergeTree order by c;","fileName":"../ClickHouse/tests/queries/0_stateless/01671_merge_join_and_constants.sql","errors":[]},{"query":"CREATE TABLE group_bitmap_data_test (\n\\`pickup_date\\` Date,\n\\`city_id\\` UInt32,\n\\`uid\\` UInt32\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01671_aggregate_function_group_bitmap_data.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE group_bitmap_data_test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test( \tn1 Int32,\n\tn2 UInt32,\n\tn3 Float32,\n\tn4 Float64,\n\tn5 Decimal32(5)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01670_sign_function.sql","errors":[]},{"query":"CREATE TABLE neighbor_test (\n\\`rowNr\\` UInt8,\n\\`val_string\\` String,\n\\`val_low\\` LowCardinality(String)\n)\nENGINE = MergeTree\nPARTITION BY tuple()\nORDER BY rowNr;","fileName":"../ClickHouse/tests/queries/0_stateless/01670_neighbor_lc_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE neighbor_test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table data_01670 (key Int) engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01670_distributed_bytes_to_throw_insert.sql","errors":[]},{"query":"create table dist_01670 (key Int) engine=Distributed(test_shard_localhost, currentDatabase(), data_01670) settings bytes_to_throw_insert=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01670_distributed_bytes_to_throw_insert.sql","errors":[]},{"query":"CREATE DATABASE database_dictionary_test_key_expression;","fileName":"../ClickHouse/tests/queries/0_stateless/01670_dictionary_create_key_expression.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE database_dictionary_test_key_expression;'","startColumn":55,"startLine":1,"endColumn":56,"endLine":1}]},{"query":"CREATE TABLE database_dictionary_test_key_expression.test_for_dictionary (value String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01670_dictionary_create_key_expression.sql","errors":[]},{"query":"CREATE DICTIONARY database_dictionary_test_key_expression.test_query_log_dictionary_simple (\n\\`value_id\\` UInt64 EXPRESSION cityHash64(value),\n\\`value\\` String\n)\nPRIMARY KEY value_id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'test_for_dictionary' DB 'database_dictionary_test_key_expression'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01670_dictionary_create_key_expression.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY database_dictionary_test_key_expression.test_query_log_dictionary_simple (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE DICTIONARY database_dictionary_test_key_expression.test_query_log_dictionary_complex (\n\\`value_id\\` UInt64 EXPRESSION cityHash64(value),\n\\`value_length\\` UInt64 EXPRESSION length(value),\n\\`value\\` String\n)\nPRIMARY KEY value_id, value_length\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'test_for_dictionary' DB 'database_dictionary_test_key_expression'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(COMPLEX_KEY_HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01670_dictionary_create_key_expression.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY database_dictionary_test_key_expression.test_query_log_dictionary_complex (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TEMPORARY TABLE test (\"\\\\\\\\\" String DEFAULT '\\\\r\\\\n\\\\t\\\\\\\\' || ' ');","fileName":"../ClickHouse/tests/queries/0_stateless/01669_columns_declaration_serde_long.sql","errors":[]},{"query":"CREATE TABLE test (x UInt64, \"\\\\\\\\\" String DEFAULT '\\\\r\\\\n\\\\t\\\\\\\\' || ' ') ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01669_columns_declaration_serde_long.sql","errors":[]},{"query":"CREATE TABLE test_r1 (x UInt64, \"\\\\\\\\\" String DEFAULT '\\\\r\\\\n\\\\t\\\\\\\\' || ' ') ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_01669', 'r1') ORDER BY \"\\\\\\\\\";","fileName":"../ClickHouse/tests/queries/0_stateless/01669_columns_declaration_serde_long.sql","errors":[]},{"query":"CREATE TABLE test_r2 (x UInt64, \"\\\\\\\\\" String DEFAULT '\\\\r\\\\n\\\\t\\\\\\\\' || ' ') ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_01669', 'r2') ORDER BY \"\\\\\\\\\";","fileName":"../ClickHouse/tests/queries/0_stateless/01669_columns_declaration_serde_long.sql","errors":[]},{"query":"CREATE TABLE test_r1 AS test ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_01666', 'r1') ORDER BY \"\\\\\\\\\" SETTINGS min_bytes_for_wide_part = '100G';","fileName":"../ClickHouse/tests/queries/0_stateless/01666_blns_long.sql","errors":[]},{"query":"CREATE TABLE test_r2 AS test ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_01666', 'r2') ORDER BY \"\\\\\\\\\" SETTINGS min_bytes_for_wide_part = '100G';","fileName":"../ClickHouse/tests/queries/0_stateless/01666_blns_long.sql","errors":[]},{"query":"CREATE TABLE data_01655 (key Int) Engine=MergeTree() ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01665_merge_tree_min_for_concurrent_read.sql","errors":[]},{"query":"CREATE TABLE tab (\nd        Date,\ndt       DateTime('UTC'),\ndt64     DateTime64(6, 'UTC'),\nstr_d    String,\nstr_dt   String,\nstr_dt64 String,\ninvalid  String\n) ENGINE MergeTree ORDER BY dt;","fileName":"../ClickHouse/tests/queries/0_stateless/01661_week_functions_string_args.sql","errors":[]},{"query":"create table tab2 (a2 Int32, b2 Int32) engine = MergeTree order by a2;","fileName":"../ClickHouse/tests/queries/0_stateless/01661_join_complex.sql","errors":[]},{"query":"create table tab3 (a3 Int32, b3 Int32) engine = MergeTree order by a3;","fileName":"../ClickHouse/tests/queries/0_stateless/01661_join_complex.sql","errors":[]},{"query":"CREATE TABLE data_01660 (key Int) Engine=MergeTree() ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01660_system_parts_smoke.sql","errors":[]},{"query":"CREATE TABLE t ( a String ) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01660_second_extremes_bug.sql","errors":[]},{"query":"CREATE VIEW t_v AS SELECT * FROM t;","fileName":"../ClickHouse/tests/queries/0_stateless/01660_second_extremes_bug.sql","errors":[]},{"query":"create table tab1 (a1 Int32, b1 Int32) engine = MergeTree order by a1;","fileName":"../ClickHouse/tests/queries/0_stateless/01660_join_or_subqueries.sql","errors":[]},{"query":"create table tab2 (a2 Int32, b2 Int32) engine = MergeTree order by a2;","fileName":"../ClickHouse/tests/queries/0_stateless/01660_join_or_subqueries.sql","errors":[]},{"query":"create table tab2 (a2 Int32, b2 Int32) engine = MergeTree order by a2;","fileName":"../ClickHouse/tests/queries/0_stateless/01660_join_or_inner.sql","errors":[]},{"query":"create table tab3 (a3 Int32, b3 Int32) engine = MergeTree order by a3;","fileName":"../ClickHouse/tests/queries/0_stateless/01660_join_or_inner.sql","errors":[]},{"query":"create table tab1 (a1 Int32, b1 Int32) engine = MergeTree order by a1;","fileName":"../ClickHouse/tests/queries/0_stateless/01660_join_or_any.sql","errors":[]},{"query":"create table tab2 (a2 Int32, b2 Int32) engine = MergeTree order by a2;","fileName":"../ClickHouse/tests/queries/0_stateless/01660_join_or_any.sql","errors":[]},{"query":"create table tab3 (a3 Int32, b3 Int32) engine = MergeTree order by a3;","fileName":"../ClickHouse/tests/queries/0_stateless/01660_join_or_any.sql","errors":[]},{"query":"create table tab1 (a1 Int32, b1 Int32) engine = MergeTree order by a1;","fileName":"../ClickHouse/tests/queries/0_stateless/01660_join_or_all.sql","errors":[]},{"query":"create table tab2 (a2 Int32, b2 Int32) engine = MergeTree order by a2;","fileName":"../ClickHouse/tests/queries/0_stateless/01660_join_or_all.sql","errors":[]},{"query":"create table tab3 (a3 Int32, b3 Int32) engine = MergeTree order by a3;","fileName":"../ClickHouse/tests/queries/0_stateless/01660_join_or_all.sql","errors":[]},{"query":"CREATE database test_query_log_factories_info1 ENGINE=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01656_test_query_log_factories_info.sql","errors":[]},{"query":"CREATE OR REPLACE TABLE test_query_log_factories_info1.memory_table (id BIGINT, date DATETIME) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01656_test_query_log_factories_info.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_sequenceNextNode_Nullable (dt DateTime, id int, action Nullable(String)) ENGINE = MergeTree() PARTITION BY dt ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01656_sequence_next_node_long.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_sequenceNextNode (dt DateTime, id int, action String) ENGINE = MergeTree() PARTITION BY dt ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01656_sequence_next_node_long.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_base_condition (dt DateTime, id int, action String, referrer String) ENGINE = MergeTree() PARTITION BY dt ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01656_sequence_next_node_long.sql","errors":[]},{"query":"CREATE TABLE table_key (keycol UInt16) ENGINE = MergeTree() ORDER BY (keycol) PARTITION BY tuple() as SELECT * FROM VALUES ( (1), (2), (3) );","fileName":"../ClickHouse/tests/queries/0_stateless/01656_join_defaul_enum.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE table_key (keycol UInt16) ENGINE = MergeTree() ORDER BY (keycol) PARTITION BY tuple() as SELECT * FROM VALUES ( ('","startColumn":125,"startLine":1,"endColumn":126,"endLine":1}]},{"query":"CREATE TABLE table_with_enum (keycol UInt16, enum_col Enum8('First' = 1,'Second' = 2)) ENGINE = MergeTree() ORDER BY (keycol) PARTITION BY tuple() \nas SELECT * FROM VALUES ( (2, 'Second'), (4, 'Second') );","fileName":"../ClickHouse/tests/queries/0_stateless/01656_join_defaul_enum.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE table_with_enum (keycol UInt16, enum_col Enum8('First' = 1,'Second' = 2)) ENGINE = MergeTree() ORDER BY (keycol) PARTITION BY tuple() \\nas SELECT * FROM VALUES ( ('","startColumn":26,"startLine":2,"endColumn":27,"endLine":2}]},{"query":"CREATE TABLE ttl_old_syntax (d Date, i Int) ENGINE = MergeTree(d, i, 8291);","fileName":"../ClickHouse/tests/queries/0_stateless/01652_ttl_old_syntax.sql","errors":[]},{"query":"CREATE TABLE lc_null_int8_defnull (val LowCardinality(Nullable(Int8)) DEFAULT NULL) ENGINE = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01652_ignore_and_low_cardinality.sql","errors":[]},{"query":"create table table_map (a Map(String, String), b String, c Array(String), d Array(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01651_map_functions.sql","errors":[]},{"query":"create table table_map (a Map(UInt8, Int), b UInt8, c UInt32, d Array(String), e Array(String)) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01651_map_functions.sql","errors":[]},{"query":"CREATE TABLE perf_lc_num(        num UInt8,        arr Array(LowCardinality(Int64)) default [num]        ) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01651_lc_insert_tiny_log_3.sql","errors":[]},{"query":"CREATE TABLE perf_lc_num(        num UInt8,        arr Array(LowCardinality(Int64)) default [num]        ) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01651_lc_insert_tiny_log_2.sql","errors":[]},{"query":"CREATE TABLE perf_lc_num(        num UInt8,        arr Array(LowCardinality(Int64)) default [num]        ) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01651_lc_insert_tiny_log_1.sql","errors":[]},{"query":"CREATE TABLE xp (\\`A\\` Date, \\`B\\` Int64, \\`S\\` String) ENGINE = MergeTree PARTITION BY toYYYYMM(A) ORDER BY B;","fileName":"../ClickHouse/tests/queries/0_stateless/01651_bugs_from_15889.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE xp (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE xp_d AS xp ENGINE = Distributed(test_shard_localhost, currentDatabase(), xp);","fileName":"../ClickHouse/tests/queries/0_stateless/01651_bugs_from_15889.sql","errors":[]},{"query":"CREATE TABLE trace_log (\n\\`event_date\\` Date,\n\\`event_time\\` DateTime,\n\\`event_time_microseconds\\` DateTime64(6),\n\\`timestamp_ns\\` UInt64,\n\\`revision\\` UInt32,\n\\`trace_type\\` Enum8('Real' = 0, 'CPU' = 1, 'Memory' = 2, 'MemorySample' = 3),\n\\`thread_id\\` UInt64,\n\\`query_id\\` String,\n\\`trace\\` Array(UInt64),\n\\`size\\` Int64\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMM(event_date)\nORDER BY (event_date, event_time)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01651_bugs_from_15889.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE trace_log (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_01640(i Int64, d Date, s String) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/{shard}/tables/test_01640','{replica}')\nPARTITION BY toYYYYMM(d) ORDER BY i\nSETTINGS allow_remote_fs_zero_copy_replication=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01650_fetch_patition_with_macro_in_zk_path_long.sql","errors":[]},{"query":"CREATE TABLE restore_01640(i Int64, d Date, s String) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/{shard}/tables/restore_01640','{replica}')\nPARTITION BY toYYYYMM(d) ORDER BY i\nSETTINGS allow_remote_fs_zero_copy_replication=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01650_fetch_patition_with_macro_in_zk_path_long.sql","errors":[]},{"query":"CREATE TABLE partitioned_table ( key UInt64,\npartitioner UInt8,\nvalue String\n)\nENGINE ReplicatedMergeTree('/clickhouse/{database}/01650_drop_part_and_deduplication_partitioned_table', '1')\nORDER BY key\nPARTITION BY partitioner;","fileName":"../ClickHouse/tests/queries/0_stateless/01650_drop_part_and_deduplication_zookeeper_long.sql","errors":[]},{"query":"create table alias_key_condition ( i int, j int ) engine MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01649_with_alias_key_condition.sql","errors":[]},{"query":"CREATE TABLE mutations_and_escaping_1648 (d Date, e Enum8('foo'=1, 'bar'=2)) Engine = MergeTree(d, (d), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01648_mutations_and_escaping.sql","errors":[]},{"query":"CREATE TABLE data_01646 (x Date, s String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01646/data_01646', 'r') ORDER BY s PARTITION BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01646_system_restart_replicas_smoke.sql","errors":[]},{"query":"create table t( s String ) Engine=Memory as select arrayJoin (['a','b','c']);","fileName":"../ClickHouse/tests/queries/0_stateless/01646_rewrite_sum_if_bug.sql","errors":[]},{"query":"CREATE TABLE test_alias(\\`a\\` Int64, \\`b\\` Int64, \\`c\\` Int64, \\`day\\` Date, \\`rtime\\` DateTime) ENGINE = Memory as select 0, 0, 0, '2022-01-01', 0 from zeros(10);","fileName":"../ClickHouse/tests/queries/0_stateless/01646_rewrite_sum_if_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_alias(\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE trend (\n\\`event_date\\` Date,\n\\`user_id\\` Int32,\n\\`timestamp\\` DateTime,\n\\`eventID\\` Int32,\n\\`product\\` String\n)\nENGINE = MergeTree()\nPARTITION BY toYYYYMM(event_date)\nORDER BY user_id;","fileName":"../ClickHouse/tests/queries/0_stateless/01646_fix_window_funnel_inconistency.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE trend (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table data_01643 (key Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01644_distributed_async_insert_fsync_smoke.sql","errors":[]},{"query":"create table dist_01643 as data_01643 engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01643, key);","fileName":"../ClickHouse/tests/queries/0_stateless/01644_distributed_async_insert_fsync_smoke.sql","errors":[]},{"query":"create table dist_01643 as data_01643 engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01643, key) settings fsync_after_insert=1, fsync_directories=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01644_distributed_async_insert_fsync_smoke.sql","errors":[]},{"query":"create table rep_fsync_r1 (key Int) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r1') order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_replicated_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table rep_fsync_r2 (key Int) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r2') order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_replicated_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table rep_fsync_r1 (key Int) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r1') order by key settings min_rows_for_wide_part=2, fsync_after_insert=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_replicated_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table rep_fsync_r2 (key Int) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r2') order by key settings min_rows_for_wide_part=2, fsync_after_insert=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_replicated_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table rep_fsync_r1 (key Int) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r1') order by key settings min_rows_for_wide_part=2, fsync_after_insert=1, fsync_part_directory=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_replicated_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table rep_fsync_r2 (key Int) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r2') order by key settings min_rows_for_wide_part=2, fsync_after_insert=1, fsync_part_directory=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_replicated_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table rep_fsync_r1 (key Int) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r1') order by key settings min_bytes_for_wide_part=0, fsync_after_insert=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_replicated_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table rep_fsync_r2 (key Int) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r2') order by key settings min_bytes_for_wide_part=0, fsync_after_insert=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_replicated_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table rep_fsync_r1 (key Int) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r1') order by key settings min_bytes_for_wide_part=0, fsync_after_insert=1, fsync_part_directory=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_replicated_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table rep_fsync_r2 (key Int) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r2') order by key settings min_bytes_for_wide_part=0, fsync_after_insert=1, fsync_part_directory=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_replicated_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table rep_fsync_r1 (key Int) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r1') order by key settings min_bytes_for_wide_part=0, fsync_part_directory=1, enable_vertical_merge_algorithm=1, vertical_merge_algorithm_min_rows_to_activate=0, vertical_merge_algorithm_min_columns_to_activate=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_replicated_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table rep_fsync_r2 (key Int) engine=ReplicatedMergeTree('/clickhouse/tables/{database}/rep_fsync', 'r2') order by key settings min_bytes_for_wide_part=0, fsync_part_directory=1, enable_vertical_merge_algorithm=1, vertical_merge_algorithm_min_rows_to_activate=0, vertical_merge_algorithm_min_columns_to_activate=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_replicated_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table data_01643 (key Int) engine=MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table data_01643 (key Int) engine=MergeTree() order by key settings min_rows_for_wide_part=2, fsync_after_insert=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table data_01643 (key Int) engine=MergeTree() order by key settings min_rows_for_wide_part=2, fsync_after_insert=1, fsync_part_directory=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table data_01643 (key Int) engine=MergeTree() order by key settings min_bytes_for_wide_part=0, fsync_after_insert=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table data_01643 (key Int) engine=MergeTree() order by key settings min_bytes_for_wide_part=0, fsync_after_insert=1, fsync_part_directory=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table data_01643 (key Int) engine=MergeTree() order by key settings min_bytes_for_wide_part=0, fsync_part_directory=1, enable_vertical_merge_algorithm=1, vertical_merge_algorithm_min_rows_to_activate=0, vertical_merge_algorithm_min_columns_to_activate=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01643_merge_tree_fsync_smoke.sql","errors":[]},{"query":"create table data_01641 (key Int, value String) engine=MergeTree order by (key, repeat(value, 40)) settings old_parts_lifetime=0, min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01641_memory_tracking_insert_optimize.sql","errors":[]},{"query":"CREATE TABLE adaptive_table( key UInt64,\nvalue String\n) ENGINE MergeTree()\nORDER BY key\nSETTINGS\nindex_granularity_bytes=1048576,\nmin_bytes_for_wide_part=0,\nold_parts_lifetime=0,\nindex_granularity=8192\n;","fileName":"../ClickHouse/tests/queries/0_stateless/01640_marks_corruption_regression.sql","errors":[]},{"query":"CREATE TABLE local (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01640_distributed_async_insert_compression.sql","errors":[]},{"query":"CREATE TABLE distributed AS local ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), local, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01640_distributed_async_insert_compression.sql","errors":[]},{"query":"CREATE TABLE local (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01639_distributed_sync_insert_zero_rows.sql","errors":[]},{"query":"CREATE TABLE distributed AS local ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), local, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01639_distributed_sync_insert_zero_rows.sql","errors":[]},{"query":"CREATE TABLE t (\\`item_id\\` UInt64, \\`price_sold\\` Float32, \\`date\\` Date) ENGINE = MergeTree ORDER BY item_id;","fileName":"../ClickHouse/tests/queries/0_stateless/01637_nullable_fuzz3.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE open_events_tmp (\\`APIKey\\` UInt32, \\`EventDate\\` Date) ENGINE = MergeTree PARTITION BY toMonday(EventDate) ORDER BY (APIKey, EventDate);","fileName":"../ClickHouse/tests/queries/0_stateless/01636_nullable_fuzz2.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE open_events_tmp (\\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE tracking_events_tmp (\\`APIKey\\` UInt32, \\`EventDate\\` Date) ENGINE = MergeTree PARTITION BY toYYYYMM(EventDate) ORDER BY (APIKey, EventDate);","fileName":"../ClickHouse/tests/queries/0_stateless/01636_nullable_fuzz2.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tracking_events_tmp (\\'","startColumn":34,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"CREATE TABLE sum_map_overflow(events Array(UInt8), counts Array(UInt8)) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01635_sum_map_fuzz.sql","errors":[]},{"query":"create table p(d Date, i int, j int) engine MergeTree partition by d order by i settings max_partitions_to_read = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01632_max_partitions_to_read.sql","errors":[]},{"query":"create table dt_overflow(d Date, i int) engine MergeTree partition by d order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01631_date_overflow_as_partition_key.sql","errors":[]},{"query":"create table test_smt (id UInt32, sMap SimpleAggregateFunction(sumMap, Tuple(Array(UInt8), Array(Int64))), aMap AggregateFunction(sumMap, Tuple(Array(UInt8), Array(Int64)))) engine SummingMergeTree partition by tuple() order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/01630_simple_aggregate_function_in_summing_merge_tree.sql","errors":[]},{"query":"create table simple_agf_summing_mt (a Int64, grp_aggreg AggregateFunction(groupUniqArrayArray, Array(UInt64)), grp_simple SimpleAggregateFunction(groupUniqArrayArray, Array(UInt64))) engine = SummingMergeTree() order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/01630_simple_aggregate_function_in_summing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE simple_agf_aggregating_mt (\na Int64,\nmin_aggreg AggregateFunction(min, UInt64),\nmin_simple SimpleAggregateFunction(min, UInt64),\nmax_aggreg AggregateFunction(max, UInt64),\nmax_simple SimpleAggregateFunction(max, UInt64),\nsum_aggreg AggregateFunction(sum, UInt64),\nsum_simple SimpleAggregateFunction(sum, UInt64),\nsumov_aggreg AggregateFunction(sumWithOverflow, UInt64),\nsumov_simple SimpleAggregateFunction(sumWithOverflow, UInt64),\ngbitand_aggreg AggregateFunction(groupBitAnd, UInt64),\ngbitand_simple SimpleAggregateFunction(groupBitAnd, UInt64),\ngbitor_aggreg AggregateFunction(groupBitOr, UInt64),\ngbitor_simple SimpleAggregateFunction(groupBitOr, UInt64),\ngbitxor_aggreg AggregateFunction(groupBitXor, UInt64),\ngbitxor_simple SimpleAggregateFunction(groupBitXor, UInt64),\ngra_aggreg AggregateFunction(groupArrayArray, Array(UInt64)),\ngra_simple SimpleAggregateFunction(groupArrayArray, Array(UInt64)),\ngrp_aggreg AggregateFunction(groupUniqArrayArray, Array(UInt64)),\ngrp_simple SimpleAggregateFunction(groupUniqArrayArray, Array(UInt64)),\naggreg_map AggregateFunction(sumMap, Tuple(Array(String), Array(UInt64))),\nsimple_map SimpleAggregateFunction(sumMap, Tuple(Array(String), Array(UInt64))),\naggreg_map_min AggregateFunction(minMap, Tuple(Array(String), Array(UInt64))),\nsimple_map_min SimpleAggregateFunction(minMap, Tuple(Array(String), Array(UInt64))),\naggreg_map_max AggregateFunction(maxMap, Tuple(Array(String), Array(UInt64))),\nsimple_map_max SimpleAggregateFunction(maxMap, Tuple(Array(String), Array(UInt64)))\n)\nENGINE = AggregatingMergeTree\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01630_simple_aggregate_all_functions_in_summing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE simple_agf_summing_mt (\na Int64,\nmin_aggreg AggregateFunction(min, UInt64),\nmin_simple SimpleAggregateFunction(min, UInt64),\nmax_aggreg AggregateFunction(max, UInt64),\nmax_simple SimpleAggregateFunction(max, UInt64),\nsum_aggreg AggregateFunction(sum, UInt64),\nsum_simple SimpleAggregateFunction(sum, UInt64),\nsumov_aggreg AggregateFunction(sumWithOverflow, UInt64),\nsumov_simple SimpleAggregateFunction(sumWithOverflow, UInt64),\ngbitand_aggreg AggregateFunction(groupBitAnd, UInt64),\ngbitand_simple SimpleAggregateFunction(groupBitAnd, UInt64),\ngbitor_aggreg AggregateFunction(groupBitOr, UInt64),\ngbitor_simple SimpleAggregateFunction(groupBitOr, UInt64),\ngbitxor_aggreg AggregateFunction(groupBitXor, UInt64),\ngbitxor_simple SimpleAggregateFunction(groupBitXor, UInt64),\ngra_aggreg AggregateFunction(groupArrayArray, Array(UInt64)),\ngra_simple SimpleAggregateFunction(groupArrayArray, Array(UInt64)),\ngrp_aggreg AggregateFunction(groupUniqArrayArray, Array(UInt64)),\ngrp_simple SimpleAggregateFunction(groupUniqArrayArray, Array(UInt64)),\naggreg_map AggregateFunction(sumMap, Tuple(Array(String), Array(UInt64))),\nsimple_map SimpleAggregateFunction(sumMap, Tuple(Array(String), Array(UInt64))),\naggreg_map_min AggregateFunction(minMap, Tuple(Array(String), Array(UInt64))),\nsimple_map_min SimpleAggregateFunction(minMap, Tuple(Array(String), Array(UInt64))),\naggreg_map_max AggregateFunction(maxMap, Tuple(Array(String), Array(UInt64))),\nsimple_map_max SimpleAggregateFunction(maxMap, Tuple(Array(String), Array(UInt64)))\n)\nENGINE = SummingMergeTree\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01630_simple_aggregate_all_functions_in_aggregating_merge_tree.sql","errors":[]},{"query":"CREATE TABLE test (a Float32, b int) Engine = MergeTree() ORDER BY tuple() PARTITION BY a; -- { serverError BAD_ARGUMENTS } CREATE TABLE test (a Float32, b int) Engine = MergeTree() ORDER BY tuple() PARTITION BY a settings allow_floating_point_partition_key=true;","fileName":"../ClickHouse/tests/queries/0_stateless/01630_disallow_floating_point_as_partition_key.sql","errors":[]},{"query":"CREATE TABLE test (a Float32, b int, c String, d Float64) Engine = MergeTree() ORDER BY tuple() PARTITION BY (b, c, d) settings allow_floating_point_partition_key=false; -- { serverError BAD_ARGUMENTS } CREATE TABLE test (a Float32, b int, c String, d Float64) Engine = MergeTree() ORDER BY tuple() PARTITION BY (b, c, d) settings allow_floating_point_partition_key=true;","fileName":"../ClickHouse/tests/queries/0_stateless/01630_disallow_floating_point_as_partition_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (a Float32, b int, c String, d Float64) Engine = MergeTree() ORDER BY tuple() PARTITION BY (b, c, d) settings allow_floating_point_partition_key=false'","startColumn":163,"startLine":1,"endColumn":168,"endLine":1}]},{"query":"CREATE TABLE cnf_test (i Int64) ENGINE = MergeTree() ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/01626_cnf_test.sql","errors":[]},{"query":"CREATE DATABASE db_memory_01625 ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01625_constraints_index_append.sql","errors":[]},{"query":"CREATE TABLE index_append_test_test (i Int64, a UInt32, b UInt64, CONSTRAINT c1 ASSUME i <= 2 * b AND i + 40 > a) ENGINE = MergeTree() ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/01625_constraints_index_append.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE index_append_test_test (i Int64, a UInt32, b UInt64, CONSTRAINT c1 ASSUME'","startColumn":80,"startLine":1,"endColumn":86,"endLine":1}]},{"query":"CREATE TABLE column_swap_test_test (i Int64, a String, b UInt64, CONSTRAINT c1 ASSUME b = cityHash64(a)) ENGINE = MergeTree() ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/01623_constraints_column_swap.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE column_swap_test_test (i Int64, a String, b UInt64, CONSTRAINT c1 ASSUME'","startColumn":79,"startLine":1,"endColumn":85,"endLine":1}]},{"query":"CREATE TABLE column_swap_test_test (i Int64, a String, b String, CONSTRAINT c1 ASSUME a = substring(reverse(b), 1, 1)) ENGINE = MergeTree() ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/01623_constraints_column_swap.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE column_swap_test_test (i Int64, a String, b String, CONSTRAINT c1 ASSUME'","startColumn":79,"startLine":1,"endColumn":85,"endLine":1}]},{"query":"CREATE TABLE t_bad_constraint(a UInt32, s String, CONSTRAINT c1 ASSUME a = toUInt32(s)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01623_constraints_column_swap.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_bad_constraint(a UInt32, s String, CONSTRAINT c1 ASSUME'","startColumn":64,"startLine":1,"endColumn":70,"endLine":1}]},{"query":"CREATE TABLE ttl_where (\n\\`d\\` Date,\n\\`i\\` UInt32\n)\nENGINE = MergeTree\nORDER BY tuple()\nTTL d + toIntervalYear(10) DELETE WHERE i % 3 = 0,\nd + toIntervalYear(40) DELETE WHERE i % 3 = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_multiple_ttls.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ttl_where (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE ttl_group_by (\n\\`d\\` Date,\n\\`i\\` UInt32,\n\\`v\\` UInt64\n)\nENGINE = MergeTree\nORDER BY (toStartOfMonth(d), i % 10)\nTTL d + toIntervalYear(10) GROUP BY toStartOfMonth(d), i % 10 SET d = any(toStartOfMonth(d)), i = any(i % 10), v = sum(v),\nd + toIntervalYear(40) GROUP BY toStartOfMonth(d) SET d = any(toStartOfMonth(d)), v = sum(v);","fileName":"../ClickHouse/tests/queries/0_stateless/01622_multiple_ttls.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE ttl_group_by (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table json(a int, b int default 7, c default a + b) engine File(JSONEachRow, 'data1622.json');","fileName":"../ClickHouse/tests/queries/0_stateless/01622_defaults_for_file_engine.sql","errors":[]},{"query":"CREATE TABLE t_constraints_where(a UInt32, b UInt32, CONSTRAINT c1 ASSUME b >= 5, CONSTRAINT c2 ASSUME b <= 10) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_constraints_where_optimization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_constraints_where(a UInt32, b UInt32, CONSTRAINT c1 ASSUME'","startColumn":67,"startLine":1,"endColumn":73,"endLine":1}]},{"query":"CREATE TABLE t_constraints_where(a UInt32, b UInt32, CONSTRAINT c1 ASSUME b < 10) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_constraints_where_optimization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t_constraints_where(a UInt32, b UInt32, CONSTRAINT c1 ASSUME'","startColumn":67,"startLine":1,"endColumn":73,"endLine":1}]},{"query":"CREATE TABLE constraint_test_assumption (URL String, a Int32, CONSTRAINT c1 ASSUME domainWithoutWWW(URL) = 'bigmir.net', CONSTRAINT c2 ASSUME URL > 'zzz' AND startsWith(URL, 'test') = True) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_constraints_simple_optimization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_test_assumption (URL String, a Int32, CONSTRAINT c1 ASSUME'","startColumn":76,"startLine":1,"endColumn":82,"endLine":1}]},{"query":"CREATE TABLE constraint_test_transitivity (a Int64, b Int64, c Int64, d Int32, CONSTRAINT c1 ASSUME a = b AND c = d, CONSTRAINT c2 ASSUME b = c) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_constraints_simple_optimization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_test_transitivity (a Int64, b Int64, c Int64, d Int32, CONSTRAINT c1 ASSUME'","startColumn":93,"startLine":1,"endColumn":99,"endLine":1}]},{"query":"CREATE TABLE constraint_test_strong_connectivity (a String, b String, c String, d String, CONSTRAINT c1 ASSUME a <= b AND b <= c AND c <= d AND d <= a) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_constraints_simple_optimization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_test_strong_connectivity (a String, b String, c String, d String, CONSTRAINT c1 ASSUME'","startColumn":104,"startLine":1,"endColumn":110,"endLine":1}]},{"query":"CREATE TABLE constraint_test_transitivity2 (a String, b String, c String, d String, CONSTRAINT c1 ASSUME a > b AND b >= c AND c > d AND a >= d) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_constraints_simple_optimization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_test_transitivity2 (a String, b String, c String, d String, CONSTRAINT c1 ASSUME'","startColumn":98,"startLine":1,"endColumn":104,"endLine":1}]},{"query":"CREATE TABLE constraint_test_transitivity3 (a Int64, b Int64, c Int64, CONSTRAINT c1 ASSUME b > 10 AND 1 > a) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_constraints_simple_optimization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_test_transitivity3 (a Int64, b Int64, c Int64, CONSTRAINT c1 ASSUME'","startColumn":85,"startLine":1,"endColumn":91,"endLine":1}]},{"query":"CREATE TABLE constraint_test_constants_repl (a Int64, b Int64, c Int64, d Int64, CONSTRAINT c1 ASSUME a - b = 10 AND c + d = 20) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_constraints_simple_optimization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_test_constants_repl (a Int64, b Int64, c Int64, d Int64, CONSTRAINT c1 ASSUME'","startColumn":95,"startLine":1,"endColumn":101,"endLine":1}]},{"query":"CREATE TABLE constraint_test_constants (a Int64, b Int64, c Int64, CONSTRAINT c1 ASSUME b > 10 AND a >= 10) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_constraints_simple_optimization.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE constraint_test_constants (a Int64, b Int64, c Int64, CONSTRAINT c1 ASSUME'","startColumn":81,"startLine":1,"endColumn":87,"endLine":1}]},{"query":"CREATE TABLE words(i Int, word String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_codec_zstd_long.sql","errors":[]},{"query":"CREATE TABLE zstd_1_00(n Int, b String CODEC(ZSTD(1))) ENGINE = MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_codec_zstd_long.sql","errors":[]},{"query":"CREATE TABLE zstd_1_24(n Int, b String CODEC(ZSTD(1,24))) ENGINE = MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_codec_zstd_long.sql","errors":[]},{"query":"CREATE TABLE zstd_9_00(n Int, b String CODEC(ZSTD(9))) ENGINE = MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_codec_zstd_long.sql","errors":[]},{"query":"CREATE TABLE zstd_9_24(n Int, b String CODEC(ZSTD(9,24))) ENGINE = MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_codec_zstd_long.sql","errors":[]},{"query":"create table test_byte_size_number0 (\nkey Int32,\nu8 UInt8,\nu16 UInt16,\nu32 UInt32,\nu64 UInt64,\nu256 UInt256,\ni8 Int8,\ni16 Int16,\ni32 Int32,\ni64 Int64,\ni128 Int128,\ni256 Int256,\nf32 Float32,\nf64 Float64\n) engine MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_byte_size.sql","errors":[]},{"query":"create table test_byte_size_number1 (\nkey Int32,\ndate Date,\ndt DateTime,\ndt64 DateTime64(3),\nen8 Enum8('a'=1, 'b'=2, 'c'=3, 'd'=4),\nen16 Enum16('c'=100, 'l'=101, 'i'=102, 'ck'=103, 'h'=104, 'o'=105, 'u'=106, 's'=107, 'e'=108),\ndec32 Decimal32(4),\ndec64 Decimal64(8),\ndec128 Decimal128(16),\ndec256 Decimal256(16),\nuuid UUID\n) engine MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_byte_size.sql","errors":[]},{"query":"create table test_byte_size_string (\nkey Int32,\nstr1 String,\nstr2 String,\nfstr1 FixedString(8),\nfstr2 FixedString(8)\n) engine MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_byte_size.sql","errors":[]},{"query":"create table test_byte_size_array (\nkey Int32,\nuints8 Array(UInt8),\nints8 Array(Int8),\nints32 Array(Int32),\nfloats32 Array(Float32),\ndecs32 Array(Decimal32(4)),\ndates Array(Date),\nuuids Array(UUID)\n) engine MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_byte_size.sql","errors":[]},{"query":"create table test_byte_size_complex_array (\nkey Int32,\nints Array(Int32),\nint_ints Array(Array(Int32)),\nstrs Array(String),\nstr_strs Array(Array(String))\n) engine MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_byte_size.sql","errors":[]},{"query":"create table test_byte_size_other (\nkey Int32,\nopt_int32 Nullable(Int32),\nopt_str Nullable(String),\ntuple Tuple(Int32, Nullable(String)),\nstrings LowCardinality(String)\n) engine MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_byte_size.sql","errors":[]},{"query":"create table test_byte_size_more_complex (\nkey Int32,\ncomplex1 Array(Tuple(Nullable(FixedString(4)), Array(Tuple(Nullable(String), String))))\n) engine MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01622_byte_size.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE sum_map_overflow (events Array(UInt8), counts Array(UInt8));","fileName":"../ClickHouse/tests/queries/0_stateless/01621_summap_check_types.sql","errors":[]},{"query":"create table ay engine AggregatingMergeTree order by i as select 1 i, sumSimpleState(10) group by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01620_fix_simple_state_arg_type.sql","errors":[]},{"query":"create table bad_date_time (time Datetime('Asia/Istanbul'), count UInt16) Engine = MergeTree() ORDER BY (time);","fileName":"../ClickHouse/tests/queries/0_stateless/01615_two_args_function_index_fix.sql","errors":[]},{"query":"create database if not exists shard_0;","fileName":"../ClickHouse/tests/queries/0_stateless/01615_random_one_shard_insertion.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_0;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create database if not exists shard_1;","fileName":"../ClickHouse/tests/queries/0_stateless/01615_random_one_shard_insertion.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_1;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table shard_0.tbl (number UInt64) engine = MergeTree order by number;","fileName":"../ClickHouse/tests/queries/0_stateless/01615_random_one_shard_insertion.sql","errors":[]},{"query":"create table shard_1.tbl (number UInt64) engine = MergeTree order by number;","fileName":"../ClickHouse/tests/queries/0_stateless/01615_random_one_shard_insertion.sql","errors":[]},{"query":"create table distr (number UInt64) engine = Distributed(test_cluster_two_shards_different_databases, '', tbl);","fileName":"../ClickHouse/tests/queries/0_stateless/01615_random_one_shard_insertion.sql","errors":[]},{"query":"CREATE TABLE table_with_lc_key (\nenum_key Enum8('x' = 2, 'y' = 1),\nlc_key LowCardinality(String),\nvalue String\n)\nENGINE MergeTree()\nORDER BY (enum_key, lc_key);","fileName":"../ClickHouse/tests/queries/0_stateless/01611_string_to_low_cardinality_key_alter.sql","errors":[]},{"query":"CREATE TABLE table_with_string_key (\nint_key Int8,\nstr_key String,\nvalue String\n)\nENGINE MergeTree()\nORDER BY (int_key, str_key);","fileName":"../ClickHouse/tests/queries/0_stateless/01611_string_to_low_cardinality_key_alter.sql","errors":[]},{"query":"CREATE TABLE wide_to_comp (a Int, b Int, c Int) ENGINE = MergeTree ORDER BY a\nsettings vertical_merge_algorithm_min_rows_to_activate = 1,\nvertical_merge_algorithm_min_columns_to_activate = 1,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0,\nindex_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01606_merge_from_wide_to_compact.sql","errors":[]},{"query":"CREATE TABLE skip_idx_comp_parts (a Int, b Int, index b_idx b TYPE minmax GRANULARITY 4) ENGINE = MergeTree ORDER BY a\nSETTINGS index_granularity=256, index_granularity_bytes = '10Mi', merge_max_block_size=100;","fileName":"../ClickHouse/tests/queries/0_stateless/01605_skip_idx_compact_parts.sql","errors":[]},{"query":"create table enum engine MergeTree order by enum as select cast(1, 'Enum8(\\\\'zero\\\\'=0, \\\\'one\\\\'=1)') AS enum;","fileName":"../ClickHouse/tests/queries/0_stateless/01605_key_condition_enum_int.sql","errors":[{"message":"no viable alternative at input 'create table enum engine MergeTree order by enum as select cast(1, 'Enum8(\\\\'zero\\'","startColumn":81,"startLine":1,"endColumn":82,"endLine":1}]},{"query":"CREATE USER OR REPLACE 'test_01605';","fileName":"../ClickHouse/tests/queries/0_stateless/01605_drop_settings_profile_while_assigned.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE SETTINGS PROFILE OR REPLACE 'test_01605';","fileName":"../ClickHouse/tests/queries/0_stateless/01605_drop_settings_profile_while_assigned.sql","errors":[{"message":"no viable alternative at input 'CREATE SETTINGS'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE distinct_two_level ( time DateTime64(3),\ndomain String,\nsubdomain String\n) ENGINE = MergeTree ORDER BY time;","fileName":"../ClickHouse/tests/queries/0_stateless/01605_dictinct_two_level.sql","errors":[]},{"query":"CREATE TABLE adaptive_table( key UInt64,\nvalue String\n) ENGINE MergeTree()\nORDER BY key\nSETTINGS index_granularity_bytes = 1048576,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0,\nenable_vertical_merge_algorithm = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01605_adaptive_granularity_block_borders.sql","errors":[]},{"query":"create database test_1603_rename_bug_ordinary engine=Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/01603_rename_overwrite_bug.sql","errors":[]},{"query":"create table test_1603_rename_bug_ordinary.foo engine=Memory as select * from numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01603_rename_overwrite_bug.sql","errors":[]},{"query":"create table test_1603_rename_bug_ordinary.bar engine=Log as select * from numbers(200);","fileName":"../ClickHouse/tests/queries/0_stateless/01603_rename_overwrite_bug.sql","errors":[]},{"query":"create database test_1603_rename_bug_atomic engine=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01603_rename_overwrite_bug.sql","errors":[]},{"query":"create table test_1603_rename_bug_atomic.foo engine=Memory as select * from numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01603_rename_overwrite_bug.sql","errors":[]},{"query":"create table test_1603_rename_bug_atomic.bar engine=Log as select * from numbers(200);","fileName":"../ClickHouse/tests/queries/0_stateless/01603_rename_overwrite_bug.sql","errors":[]},{"query":"CREATE TABLE table_with_column_ttl (\nEventTime DateTime,\nUserID UInt64,\nAge UInt8 TTL EventTime + INTERVAL 3 MONTH\n)\nENGINE MergeTree()\nORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0; -- column TTL doesn't work for compact parts\nINSERT INTO table_with_column_ttl VALUES (now(), 1, 32);","fileName":"../ClickHouse/tests/queries/0_stateless/01603_remove_column_ttl.sql","errors":[{"message":"no viable alternative at input 'INSERT INTO table_with_column_ttl VALUES (now'","startColumn":42,"startLine":9,"endColumn":45,"endLine":9}]},{"query":"create table t (x UInt64, s String) engine = MergeTree order by x SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01603_read_with_backoff_bug.sql","errors":[]},{"query":"CREATE TABLE too_many_parts (x UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS parts_to_delay_insert = 5, parts_to_throw_insert = 5;","fileName":"../ClickHouse/tests/queries/0_stateless/01603_insert_select_too_many_parts.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test01603 ( f64 Float64,\nd Decimal64(3) DEFAULT toDecimal32(f64, 3),\nf32 Float32 DEFAULT f64\n) ENGINE=MergeTree() ORDER BY f32;","fileName":"../ClickHouse/tests/queries/0_stateless/01603_decimal_mult_float.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test_01602a(x UInt32);","fileName":"../ClickHouse/tests/queries/0_stateless/01602_temporary_table_in_system_tables.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test_01602b(y Float64, z String);","fileName":"../ClickHouse/tests/queries/0_stateless/01602_temporary_table_in_system_tables.sql","errors":[]},{"query":"CREATE DATABASE test_1602;","fileName":"../ClickHouse/tests/queries/0_stateless/01602_show_create_view.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE test_1602;'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE test_1602.tbl (\\`EventDate\\` DateTime, \\`CounterID\\` UInt32, \\`UserID\\` UInt32) ENGINE = MergeTree() PARTITION BY toYYYYMM(EventDate) ORDER BY (CounterID, EventDate, intHash32(UserID)) SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01602_show_create_view.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_1602.tbl (\\'","startColumn":28,"startLine":1,"endColumn":29,"endLine":1}]},{"query":"CREATE VIEW test_1602.v AS SELECT * FROM test_1602.tbl; ","fileName":"../ClickHouse/tests/queries/0_stateless/01602_show_create_view.sql","errors":[]},{"query":"CREATE VIEW test_1602.DATABASE AS SELECT * FROM test_1602.tbl; ","fileName":"../ClickHouse/tests/queries/0_stateless/01602_show_create_view.sql","errors":[]},{"query":"CREATE VIEW test_1602.DICTIONARY AS SELECT * FROM test_1602.tbl; ","fileName":"../ClickHouse/tests/queries/0_stateless/01602_show_create_view.sql","errors":[]},{"query":"CREATE VIEW test_1602.TABLE AS SELECT * FROM test_1602.tbl; ","fileName":"../ClickHouse/tests/queries/0_stateless/01602_show_create_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_1602.vv (\\`EventDate\\` DateTime, \\`CounterID\\` UInt32, \\`UserID\\` UInt32) ENGINE = MergeTree() PARTITION BY toYYYYMM(EventDate) ORDER BY (CounterID, EventDate, intHash32(UserID)) SETTINGS index_granularity = 8192 AS SELECT * FROM test_1602.tbl;","fileName":"../ClickHouse/tests/queries/0_stateless/01602_show_create_view.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW test_1602.vv (\\'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE VIEW test_1602.VIEW AS SELECT * FROM test_1602.tbl; ","fileName":"../ClickHouse/tests/queries/0_stateless/01602_show_create_view.sql","errors":[]},{"query":"CREATE TABLE runningConcurrency_test(begin Date, end Date) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01602_runningConcurrency.sql","errors":[]},{"query":"CREATE TABLE runningConcurrency_test(begin DateTime, end DateTime) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01602_runningConcurrency.sql","errors":[]},{"query":"CREATE TABLE runningConcurrency_test(begin DateTime64(3), end DateTime64(3)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01602_runningConcurrency.sql","errors":[]},{"query":"CREATE TABLE x AS system.numbers ENGINE = MergeTree ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01602_insert_into_table_function_cluster.sql","errors":[]},{"query":"CREATE TABLE y AS system.numbers ENGINE = MergeTree ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01602_insert_into_table_function_cluster.sql","errors":[]},{"query":"CREATE TABLE test_aggregation (x Array(Int)) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01602_array_aggregation.sql","errors":[]},{"query":"CREATE TABLE test_aggregation (x Array(Decimal64(8))) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01602_array_aggregation.sql","errors":[]},{"query":"CREATE DATABASE test1601_detach_permanently_atomic Engine=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01601_detach_permanently.sql","errors":[]},{"query":"create table test1601_detach_permanently_atomic.test_name_reuse (number UInt64) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01601_detach_permanently.sql","errors":[]},{"query":"create table test1601_detach_permanently_atomic.test_name_reuse (number UInt64) engine=MergeTree order by tuple(); -- { serverError TABLE_ALREADY_EXISTS } SELECT 'can not detach twice';","fileName":"../ClickHouse/tests/queries/0_stateless/01601_detach_permanently.sql","errors":[]},{"query":"CREATE DATABASE test1601_detach_permanently_ordinary Engine=Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/01601_detach_permanently.sql","errors":[]},{"query":"create table test1601_detach_permanently_ordinary.test_name_reuse (number UInt64) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01601_detach_permanently.sql","errors":[]},{"query":"create table test1601_detach_permanently_ordinary.test_name_reuse (number UInt64) engine=MergeTree order by tuple(); -- { serverError TABLE_ALREADY_EXISTS } SELECT 'can not detach twice';","fileName":"../ClickHouse/tests/queries/0_stateless/01601_detach_permanently.sql","errors":[]},{"query":"CREATE DATABASE test1601_detach_permanently_lazy Engine=Lazy(10);","fileName":"../ClickHouse/tests/queries/0_stateless/01601_detach_permanently.sql","errors":[]},{"query":"create table test1601_detach_permanently_lazy.test_name_reuse (number UInt64) engine=Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01601_detach_permanently.sql","errors":[]},{"query":"create table test1601_detach_permanently_lazy.test_name_reuse (number UInt64) engine=Log; -- { serverError TABLE_ALREADY_EXISTS } SELECT 'can not detach twice';","fileName":"../ClickHouse/tests/queries/0_stateless/01601_detach_permanently.sql","errors":[]},{"query":"CREATE TABLE select_in_test(value UInt8) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01600_select_in_different_types.sql","errors":[]},{"query":"CREATE TABLE select_in_test(value Int8) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01600_select_in_different_types.sql","errors":[]},{"query":"CREATE TABLE base (\n\\`id\\` UInt64,\n\\`id2\\` UInt64,\n\\`d\\` UInt64,\n\\`value\\` UInt64\n)\nENGINE=MergeTree()\nPARTITION BY d\nORDER BY (id,id2,d);","fileName":"../ClickHouse/tests/queries/0_stateless/01600_multiple_left_join_with_aliases.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE base (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE derived1 (\n\\`id1\\` UInt64,\n\\`d1\\` UInt64,\n\\`value1\\` UInt64\n)\nENGINE = MergeTree()\nPARTITION BY d1\nORDER BY (id1, d1)\n;","fileName":"../ClickHouse/tests/queries/0_stateless/01600_multiple_left_join_with_aliases.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE derived1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE derived2 (\n\\`id2\\` UInt64,\n\\`d2\\` UInt64,\n\\`value2\\` UInt64\n)\nENGINE = MergeTree()\nPARTITION BY d2\nORDER BY (id2, d2)\n;","fileName":"../ClickHouse/tests/queries/0_stateless/01600_multiple_left_join_with_aliases.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE derived2 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE ms (n Int32) ENGINE = MergeTree() ORDER BY n SETTINGS min_compress_block_size = 1024, max_compress_block_size = 10240;","fileName":"../ClickHouse/tests/queries/0_stateless/01600_min_max_compress_block_size.sql","errors":[]},{"query":"CREATE TABLE test (i UInt64) Engine = MergeTree() order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01596_setting_limit_offset.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t (x Nullable(String) DEFAULT 'Hello', y String DEFAULT 'World');","fileName":"../ClickHouse/tests/queries/0_stateless/01596_null_as_default_nullable.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS joint (\nid    UUID,\nvalue LowCardinality(String)\n)\nENGINE = Join (ANY, LEFT, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01594_storage_join_uuid.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS t (\nid    UUID,\nd     DateTime\n)\nENGINE = MergeTree\nPARTITION BY toDate(d)\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01594_storage_join_uuid.sql","errors":[]},{"query":"create table data_01593 (key Int) engine=MergeTree() order by key partition by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01593_insert_settings.sql","errors":[]},{"query":"CREATE TABLE product_groups ( \tgroup_id Int64,\n\tgroup_name String\n) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01592_window_functions.sql","errors":[]},{"query":"CREATE TABLE products ( \tproduct_id Int64,\n\tproduct_name String,\n\tprice DECIMAL(11, 2),\n\tgroup_id Int64\n) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01592_window_functions.sql","errors":[]},{"query":"create table stack(item_id Int64, brand_id Int64, rack_id Int64, dt DateTime, expiration_dt DateTime, quantity UInt64) Engine = MergeTree\npartition by toYYYYMM(dt)\norder by (brand_id, toStartOfHour(dt)) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01592_long_window_functions1.sql","errors":[]},{"query":"create table window_mt engine MergeTree order by number as select number, mod(number, 3) p from numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01591_window_functions.sql","errors":[]},{"query":"CREATE TABLE low_card (\n\\`lc\\` LowCardinality(String)\n)\nENGINE = Join(ANY, LEFT, lc);","fileName":"../ClickHouse/tests/queries/0_stateless/01586_storage_join_low_cardinality_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE low_card (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE replicated_mutations_empty_partitions (\nkey UInt64,\nvalue String\n)\nENGINE = ReplicatedMergeTree('/clickhouse/test/'||currentDatabase()||'/01586_replicated_mutations_empty_partitions/{shard}', '{replica}')\nORDER BY key\nPARTITION by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01586_replicated_mutations_empty_partition.sql","errors":[]},{"query":"create table xp(i Nullable(UInt64), j UInt64) engine MergeTree order by i settings index_granularity = 1, allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01585_use_index_for_global_in_with_null.sql","errors":[]},{"query":"create table xp_d as xp engine Distributed(test_shard_localhost, currentDatabase(), xp);","fileName":"../ClickHouse/tests/queries/0_stateless/01585_use_index_for_global_in_with_null.sql","errors":[]},{"query":"create table xp(i UInt64, j UInt64) engine MergeTree order by i settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01585_use_index_for_global_in.sql","errors":[]},{"query":"create table xp_d as xp engine Distributed(test_shard_localhost, currentDatabase(), xp);","fileName":"../ClickHouse/tests/queries/0_stateless/01585_use_index_for_global_in.sql","errors":[]},{"query":"CREATE TABLE realtimedrep(amount Int64,transID String,userID String,appID String,appName String,transType String,orderSource String,nau String,fau String,transactionType String,supplier String,fMerchant String,bankConnCode String,reqDate DateTime) ENGINE = MergeTree PARTITION BY toDate(reqDate) ORDER BY transID SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01584_distributed_buffer_cannot_find_column.sql","errors":[]},{"query":"CREATE TABLE realtimedistributed(amount Int64,transID String,userID String,appID String,appName String,transType String,orderSource String,nau String,fau String,transactionType String,supplier String,fMerchant String,bankConnCode String,reqDate DateTime) ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), realtimedrep, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01584_distributed_buffer_cannot_find_column.sql","errors":[]},{"query":"CREATE TABLE realtimebuff(amount Int64,transID String,userID String,appID String,appName String,transType String,orderSource String,nau String,fau String,transactionType String,supplier String,fMerchant String,bankConnCode String,reqDate DateTime) ENGINE = Buffer(currentDatabase(), 'realtimedistributed', 16, 3600, 36000, 10000, 1000000, 10000000, 100000000);","fileName":"../ClickHouse/tests/queries/0_stateless/01584_distributed_buffer_cannot_find_column.sql","errors":[]},{"query":"create table insub (i int, j int) engine MergeTree order by i settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01583_const_column_in_set_index.sql","errors":[]},{"query":"CREATE TABLE prewhere_move (x Int, y String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01582_move_to_prewhere_compact_parts.sql","errors":[]},{"query":"CREATE TABLE prewhere_move (x1 Int, x2 Int, x3 Int, x4 String CODEC(NONE)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01582_move_to_prewhere_compact_parts.sql","errors":[]},{"query":"CREATE TABLE t (a String, b Int) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01582_distinct_subquery_groupby.sql","errors":[]},{"query":"CREATE TABLE d (a String, b Int) ENGINE = Distributed(test_shard_localhost, currentDatabase(), t);","fileName":"../ClickHouse/tests/queries/0_stateless/01582_distinct_subquery_groupby.sql","errors":[]},{"query":"CREATE TABLE d (a String, b Int) ENGINE = Distributed(test_cluster_two_shards_localhost, currentDatabase(), t);","fileName":"../ClickHouse/tests/queries/0_stateless/01582_distinct_subquery_groupby.sql","errors":[]},{"query":"CREATE TABLE foo (server_date Date, server_time Datetime('Asia/Istanbul'), dimension_1 String) ENGINE = MergeTree() PARTITION BY toYYYYMM(server_date) ORDER BY (server_date);","fileName":"../ClickHouse/tests/queries/0_stateless/01582_any_join_supertype.sql","errors":[]},{"query":"CREATE TABLE bar (server_date Date, dimension_1 String) ENGINE = MergeTree() PARTITION BY toYYYYMM(server_date) ORDER BY (server_date);","fileName":"../ClickHouse/tests/queries/0_stateless/01582_any_join_supertype.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS replicated_deduplicate_by_columns_r1 ( id Int32, val UInt32, unique_value UInt64 MATERIALIZED rowNumberInBlock()\n) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/test_01581/replicated_deduplicate', 'r1') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01581_deduplicate_by_columns_replicated_long.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS replicated_deduplicate_by_columns_r2 ( id Int32, val UInt32, unique_value UInt64 MATERIALIZED rowNumberInBlock()\n) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/test_01581/replicated_deduplicate', 'r2') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01581_deduplicate_by_columns_replicated_long.sql","errors":[]},{"query":"CREATE TABLE source_data ( pk Int32, sk Int32, val UInt32, partition_key UInt32 DEFAULT 1,\nPRIMARY KEY (pk)\n) ENGINE=MergeTree\nORDER BY (pk, sk);","fileName":"../ClickHouse/tests/queries/0_stateless/01581_deduplicate_by_columns_local.sql","errors":[]},{"query":"CREATE TABLE full_duplicates  ( pk Int32, sk Int32, val UInt32, partition_key UInt32, mat UInt32 MATERIALIZED 12345, alias UInt32 ALIAS 2,\nPRIMARY KEY (pk)\n) ENGINE=MergeTree\nPARTITION BY (partition_key + 1) -- ensure that column in expression is properly handled when deduplicating. See [1] below.\nORDER BY (pk, toString(sk * 10)); -- silly order key to ensure that key column is checked even when it is a part of expression. See [1] below.\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY pk, sk, val, mat, alias; -- { serverError NO_SUCH_COLUMN_IN_TABLE } -- alias column is present\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY sk, val; -- { serverError THERE_IS_NO_COLUMN } -- primary key column is missing\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY * EXCEPT(pk, sk, val, mat, alias, partition_key); -- { serverError EMPTY_LIST_OF_COLUMNS_QUERIED } -- list is empty\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY * EXCEPT(pk); -- { serverError THERE_IS_NO_COLUMN } -- primary key column is missing [1]\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY * EXCEPT(sk); -- { serverError THERE_IS_NO_COLUMN } -- sorting key column is missing [1]\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY * EXCEPT(partition_key); -- { serverError THERE_IS_NO_COLUMN } -- partitioning column is missing [1]\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY; -- { clientError SYNTAX_ERROR } -- empty list is a syntax error\nOPTIMIZE TABLE partial_duplicates DEDUPLICATE BY pk,sk,val,mat EXCEPT mat; -- { clientError SYNTAX_ERROR } -- invalid syntax\nOPTIMIZE TABLE partial_duplicates DEDUPLICATE BY pk APPLY(pk + 1); -- { clientError SYNTAX_ERROR } -- APPLY column transformer is not supported\nOPTIMIZE TABLE partial_duplicates DEDUPLICATE BY pk REPLACE(pk + 1); -- { clientError SYNTAX_ERROR } -- REPLACE column transformer is not supported\nSELECT 'OLD DEDUPLICATE';","fileName":"../ClickHouse/tests/queries/0_stateless/01581_deduplicate_by_columns_local.sql","errors":[{"message":"mismatched input 'BY' expecting <EOF>","startColumn":43,"startLine":6,"endColumn":45,"endLine":6}]},{"query":"CREATE TABLE partial_duplicates  ( pk Int32, sk Int32, val UInt32, partition_key UInt32 DEFAULT 1, mat UInt32 MATERIALIZED rand(), alias UInt32 ALIAS 2,\nPRIMARY KEY (pk)\n) ENGINE=MergeTree\nORDER BY (pk, sk);","fileName":"../ClickHouse/tests/queries/0_stateless/01581_deduplicate_by_columns_local.sql","errors":[]},{"query":"create table test_index(date Date) engine MergeTree partition by toYYYYMM(date) order by date;","fileName":"../ClickHouse/tests/queries/0_stateless/01579_date_datetime_index_comparison.sql","errors":[]},{"query":"CREATE TABLE test_table (\n\\`timestamp\\` DateTime,\n\\`value\\` UInt64,\n\\`day\\` Date ALIAS toDate(timestamp),\n\\`day1\\` Date ALIAS day + 1,\n\\`day2\\` Date ALIAS day1 + 1,\n\\`time\\` DateTime ALIAS timestamp\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMMDD(timestamp)\nORDER BY timestamp SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01576_alias_column_rewrite.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_table (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_index (\n\\`key_string\\` String,\n\\`key_uint32\\` ALIAS toUInt32(key_string),\nINDEX idx toUInt32(key_string) TYPE set(0) GRANULARITY 1\n)\nENGINE = MergeTree\nPARTITION BY tuple()\nPRIMARY KEY tuple()\nORDER BY key_string SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01576_alias_column_rewrite.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_index (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table pd (dt DateTime, i int, dt_m DateTime alias toStartOfMinute(dt)) engine Distributed(test_shard_localhost, currentDatabase(), 'pl');","fileName":"../ClickHouse/tests/queries/0_stateless/01576_alias_column_rewrite.sql","errors":[]},{"query":"create table pl (dt DateTime, i int, projection p (select sum(i) group by toStartOfMinute(dt))) engine MergeTree order by dt;","fileName":"../ClickHouse/tests/queries/0_stateless/01576_alias_column_rewrite.sql","errors":[]},{"query":"create temporary table t (x UInt64, y alias x);","fileName":"../ClickHouse/tests/queries/0_stateless/01576_alias_column_rewrite.sql","errors":[]},{"query":"CREATE DATABASE database_for_dict;","fileName":"../ClickHouse/tests/queries/0_stateless/01575_disable_detach_table_of_dictionary.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE database_for_dict;'","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"CREATE TABLE database_for_dict.table_for_dict (k UInt64, v UInt8) ENGINE = MergeTree ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/01575_disable_detach_table_of_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY database_for_dict.dict1 (k UInt64 DEFAULT 0, v UInt8 DEFAULT 1) PRIMARY KEY k SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' PASSWORD '' DB 'database_for_dict'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01575_disable_detach_table_of_dictionary.sql","errors":[]},{"query":"CREATE TABLE order_by_const (\n\\`a\\` UInt64,\n\\`b\\` UInt64,\n\\`c\\` UInt64,\n\\`d\\` UInt64\n)\nENGINE = MergeTree\nORDER BY (a, b)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01571_window_functions.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE order_by_const (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table t_01568 engine Memory as select intDiv(number, 3) p, modulo(number, 3) o, number\nfrom numbers(9);","fileName":"../ClickHouse/tests/queries/0_stateless/01568_window_functions_distributed.sql","errors":[]},{"query":"create table values_01564( a int,\nconstraint c1 check a < 10) engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01564_test_hint_woes.sql","errors":[]},{"query":"CREATE TABLE empty1 (key UInt32, val UInt32, date Datetime) ENGINE=ReplicatedSummingMergeTree('/clickhouse/tables/{database}/test_01560_optimize_on_insert', '1', val)\nPARTITION BY date ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01560_optimize_on_insert_zookeeper.sql","errors":[]},{"query":"CREATE TABLE empty2 (key UInt32, val UInt32, date Datetime) ENGINE=ReplicatedSummingMergeTree('/clickhouse/tables/{database}/test_01560_optimize_on_insert', '2', val)\nPARTITION BY date ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01560_optimize_on_insert_zookeeper.sql","errors":[]},{"query":"CREATE TABLE replacing_merge_tree (key UInt32, date Datetime) ENGINE=ReplacingMergeTree() PARTITION BY date ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01560_optimize_on_insert_long.sql","errors":[]},{"query":"CREATE TABLE collapsing_merge_tree (key UInt32, sign Int8, date Datetime) ENGINE=CollapsingMergeTree(sign) PARTITION BY date ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01560_optimize_on_insert_long.sql","errors":[]},{"query":"CREATE TABLE versioned_collapsing_merge_tree (key UInt32, sign Int8, version Int32, date Datetime) ENGINE=VersionedCollapsingMergeTree(sign, version) PARTITION BY date ORDER BY (key, version);","fileName":"../ClickHouse/tests/queries/0_stateless/01560_optimize_on_insert_long.sql","errors":[]},{"query":"CREATE TABLE summing_merge_tree (key UInt32, val UInt32, date Datetime) ENGINE=SummingMergeTree(val) PARTITION BY date ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01560_optimize_on_insert_long.sql","errors":[]},{"query":"CREATE TABLE aggregating_merge_tree (key UInt32, val SimpleAggregateFunction(max, UInt32), date Datetime) ENGINE=AggregatingMergeTree() PARTITION BY date ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01560_optimize_on_insert_long.sql","errors":[]},{"query":"CREATE TABLE empty (key UInt32, val UInt32, date Datetime) ENGINE=SummingMergeTree(val) PARTITION BY date ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01560_optimize_on_insert_long.sql","errors":[]},{"query":"CREATE TABLE cat_hist (categoryId UUID, categoryName String) ENGINE Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01560_merge_distributed_join.sql","errors":[]},{"query":"CREATE TABLE prod_hist (categoryId UUID, productId UUID) ENGINE = MergeTree ORDER BY productId;","fileName":"../ClickHouse/tests/queries/0_stateless/01560_merge_distributed_join.sql","errors":[]},{"query":"CREATE TABLE products_l AS prod_hist ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), prod_hist);","fileName":"../ClickHouse/tests/queries/0_stateless/01560_merge_distributed_join.sql","errors":[]},{"query":"CREATE TABLE products as prod_hist ENGINE = Merge(currentDatabase(), '^products_');","fileName":"../ClickHouse/tests/queries/0_stateless/01560_merge_distributed_join.sql","errors":[]},{"query":"CREATE TABLE mann_whitney_test (left Float64, right UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01560_mann_whitney.sql","errors":[]},{"query":"CREATE TABLE t (c CODEC(NONE)) ENGINE = Memory -- { clientError SYNTAX_ERROR }","fileName":"../ClickHouse/tests/queries/0_stateless/01559_misplaced_codec_diagnostics.sql","errors":[]},{"query":"CREATE TABLE welch_ttest (left Float64, right UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01558_ttest.sql","errors":[]},{"query":"CREATE TABLE welch_ttest (left Float64, right Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01558_ttest.sql","errors":[]},{"query":"CREATE TABLE welch_ttest (left Float64, right Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01558_ttest.sql","errors":[]},{"query":"CREATE TABLE welch_ttest (left Float64, right Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01558_ttest.sql","errors":[]},{"query":"CREATE TABLE welch_ttest (left Float64, right Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01558_ttest.sql","errors":[]},{"query":"CREATE TABLE student_ttest (left Float64, right Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01558_ttest.sql","errors":[]},{"query":"CREATE TABLE null_in_1 (u UInt32, n Nullable(UInt32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01558_transform_null_in.sql","errors":[]},{"query":"CREATE TABLE null_in_1 (a Nullable(UInt32), b Nullable(UInt32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01558_transform_null_in.sql","errors":[]},{"query":"CREATE TABLE enum_as_num ( Id Int32,\nValue Enum('a' = 1, '3' = 2, 'b' = 3)\n) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01558_enum_as_num_in_tsv_csv_input.sql","errors":[]},{"query":"CREATE TABLE t (x String) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01557_max_parallel_replicas_no_sample.sql","errors":[]},{"query":"CREATE TABLE t (x String) ENGINE = MergeTree ORDER BY cityHash64(x) SAMPLE BY cityHash64(x);","fileName":"../ClickHouse/tests/queries/0_stateless/01557_max_parallel_replicas_no_sample.sql","errors":[]},{"query":"create table data_01555 (key Int) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01555_system_distribution_queue_mask.sql","errors":[]},{"query":"create table dist_01555 (key Int) Engine=Distributed(test_cluster_with_incorrect_pw, currentDatabase(), data_01555, key);","fileName":"../ClickHouse/tests/queries/0_stateless/01555_system_distribution_queue_mask.sql","errors":[]},{"query":"create table dist_01555 (key Int) Engine=Distributed(test_cluster_with_incorrect_pw, currentDatabase(), data_01555, key);","fileName":"../ClickHouse/tests/queries/0_stateless/01555_system_distribution_queue_mask.sql","errors":[]},{"query":"create table dist_01555 (key Int) Engine=Distributed(test_shard_localhost, currentDatabase(), data_01555, key);","fileName":"../ClickHouse/tests/queries/0_stateless/01555_system_distribution_queue_mask.sql","errors":[]},{"query":"CREATE TABLE 01154_test (x Int128, INDEX ix_x x TYPE bloom_filter(0.01) GRANULARITY 1) ENGINE = MergeTree() ORDER BY x SETTINGS index_granularity=8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01554_bloom_filter_index_big_integer_uuid.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01154'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01154_test (x Int256, INDEX ix_x x TYPE bloom_filter(0.01) GRANULARITY 1) ENGINE = MergeTree() ORDER BY x SETTINGS index_granularity=8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01554_bloom_filter_index_big_integer_uuid.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01154'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01154_test (x UInt256, INDEX ix_x x TYPE bloom_filter(0.01) GRANULARITY 1) ENGINE = MergeTree() ORDER BY x SETTINGS index_granularity=8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01554_bloom_filter_index_big_integer_uuid.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01154'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01154_test (x UUID, INDEX ix_x x TYPE bloom_filter(0.01) GRANULARITY 1) ENGINE = MergeTree() ORDER BY x SETTINGS index_granularity=8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01554_bloom_filter_index_big_integer_uuid.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01154'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE datetime64_cmp (\n\tdt6 DateTime64(6, 'UTC'),\n\tdt3 DateTime64(3, 'UTC')\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01553_datetime64_comparison.sql","errors":[]},{"query":"create table test_bm( \tdim UInt64,\n\tid UInt64 ) \nENGINE = MergeTree()\nORDER BY( dim, id )\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01552_impl_aggfunc_cloneresize.sql","errors":[]},{"query":"create table test_bm_join(  dim UInt64,\nid UInt64 )\nENGINE = MergeTree()\nORDER BY(dim,id)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01552_impl_aggfunc_cloneresize.sql","errors":[]},{"query":"CREATE TABLE src (k UInt64, s FixedString(11)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01552_dict_fixedstring.sql","errors":[]},{"query":"CREATE DICTIONARY dict (\nk UInt64,\ns String\n)\nPRIMARY KEY k\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER default TABLE 'src'))\nLAYOUT(FLAT)\nLIFETIME(MIN 10 MAX 10);","fileName":"../ClickHouse/tests/queries/0_stateless/01552_dict_fixedstring.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY dict (\\nk UInt64,\\ns String\\n)\\nPRIMARY KEY k\\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER default TABLE 'src'))\\nLAYOUT(FLAT)'","startColumn":11,"startLine":7,"endColumn":12,"endLine":7}]},{"query":"CREATE TABLE test(test String DEFAULT 'test', test_tmp Int DEFAULT 1)ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01552_alter_name_collision.sql","errors":[]},{"query":"CREATE TABLE data_01551 (\nkey        UInt32\n) engine=AggregatingMergeTree()\nPARTITION BY key%2\nORDER BY (key, key/2)\nSETTINGS index_granularity=10, index_granularity_bytes='10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01551_mergetree_read_in_order_spread.sql","errors":[]},{"query":"create table f(s String) engine File(TSV, '/dev/null');","fileName":"../ClickHouse/tests/queries/0_stateless/01551_context_uaf.sql","errors":[]},{"query":"create view v as (select * from f);","fileName":"../ClickHouse/tests/queries/0_stateless/01551_context_uaf.sql","errors":[]},{"query":"CREATE TABLE map_formats (m Map(String, UInt32), m1 Map(String, Date), m2 Map(String, Array(UInt32))) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01550_type_map_formats.sql","errors":[]},{"query":"CREATE TABLE t(\\`id\\` String, \\`dealer_id\\` String) ENGINE = MergeTree() ORDER BY id SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01550_mutation_subquery.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t(\\'","startColumn":15,"startLine":1,"endColumn":16,"endLine":1}]},{"query":"create table table_map (a Map(String, String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01550_create_map_type.sql","errors":[]},{"query":"create table table_map (a Map(String, UInt64)) engine = MergeTree() order by a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01550_create_map_type.sql","errors":[]},{"query":"create table table_map (a Map(String, String), b String) engine = MergeTree() order by a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01550_create_map_type.sql","errors":[]},{"query":"create table table_map (d DATE, m Map(Int8, UInt256)) ENGINE = MergeTree() order by d SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01550_create_map_type.sql","errors":[]},{"query":"create table table_map (d DATE, m Map(Int8, Int8)) ENGINE = MergeTree() order by d SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01550_create_map_type.sql","errors":[]},{"query":"create table table_map(a Map(UInt8, UInt64), b UInt8) Engine = MergeTree() order by b SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01550_create_map_type.sql","errors":[]},{"query":"create table table_map(a Map(String, Array(UInt8))) Engine = MergeTree() order by a SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01550_create_map_type.sql","errors":[]},{"query":"CREATE TABLE table_map (n UInt32, m Map(String, Int)) ENGINE = MergeTree ORDER BY n SETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01550_create_map_type.sql","errors":[]},{"query":"CREATE TABLE table_map (n UInt32, m Map(String, Int)) ENGINE = MergeTree ORDER BY n SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01550_create_map_type.sql","errors":[]},{"query":"CREATE TABLE HASH_TEST_INSERT (\\`STR_VAL\\` String) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/01549_low_cardinality_mv_fuzz.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE HASH_TEST_INSERT (\\'","startColumn":31,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW HASH_MV (\\`HASH_VAL\\` UInt64, \\`STR_VAL\\` LowCardinality(String)) ENGINE = ReplacingMergeTree ORDER BY HASH_VAL AS SELECT xxHash64(STR_VAL) AS HASH_VAL, toLowCardinality(STR_VAL) AS STR_VAL FROM HASH_TEST_INSERT;","fileName":"../ClickHouse/tests/queries/0_stateless/01549_low_cardinality_mv_fuzz.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW HASH_MV (\\'","startColumn":34,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"CREATE TABLE HASH_TEST_INSERT (STR_VAL String) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/01549_low_cardinality_materialized_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW HASH_MV (HASH_VAL UInt64, STR_VAL LowCardinality(String)) ENGINE = ReplacingMergeTree ORDER BY HASH_VAL AS SELECT xxHash64(STR_VAL) AS HASH_VAL, toLowCardinality(STR_VAL) AS STR_VAL FROM HASH_TEST_INSERT;","fileName":"../ClickHouse/tests/queries/0_stateless/01549_low_cardinality_materialized_view.sql","errors":[]},{"query":"CREATE TABLE foo (id UInt64, key AggregateFunction(max, UInt64)) ENGINE MergeTree ORDER BY key; --{serverError DATA_TYPE_CANNOT_BE_USED_IN_KEY} CREATE TABLE foo (id UInt64, key AggregateFunction(max, UInt64)) ENGINE MergeTree PARTITION BY key; --{serverError DATA_TYPE_CANNOT_BE_USED_IN_KEY}\nCREATE TABLE foo (id UInt64, key AggregateFunction(max, UInt64)) ENGINE MergeTree ORDER BY (key) SAMPLE BY key; --{serverError DATA_TYPE_CANNOT_BE_USED_IN_KEY}\nDROP TABLE IF EXISTS uncomparable_keys;","fileName":"../ClickHouse/tests/queries/0_stateless/01548_uncomparable_columns_in_keys.sql","errors":[]},{"query":"create table fct_rt_dc_shop_sku_vender_day (\nstat_year UInt16,\nstat_month UInt32,\nstat_day Date,\nout_buid UInt8,\nout_shop_id String,\nin_shop_id LowCardinality(String),\ndatasource UInt8,\nvenderid String,\ncategorytreeid UInt8,\ncategoryid String,\ngoodsid LowCardinality(String),\nlogistics UInt8,\nbuntype UInt8,\ndctype UInt8,\nshopformid UInt8,\nrt_qty Decimal(18,4),\nrt_cost Decimal(18,4),\nrt_taxcost Decimal(18,4),\nrt_boxes Decimal(18,4),\nrt_shops Nullable(String),\nrt_drygood_qty Decimal(18,4),\nrt_drygood_cost Decimal(18,4),\nrt_drygood_boxes Decimal(18,4),\nrt_drygood_shops LowCardinality(Nullable(String)),\nrt_fresh_qty Decimal(18,4),\nrt_fresh_cost Decimal(18,4),\nrt_fresh_shops LowCardinality(Nullable(String)),\nrt_supshop_cost Decimal(18,4),\nrt_supshop_qty Decimal(18,4),\nrt_supshop_boxes Decimal(18,4),\nrt_supshop_shops LowCardinality(Nullable(String)),\nrt_smallshop_cost Decimal(18,4),\nrt_smallshop_qty Decimal(18,4),\nrt_smallshop_boxes Decimal(18,4),\nrt_smallshop_shops LowCardinality(Nullable(String)),\nrt_dc_cost Decimal(18,4),\nrt_dc_qty Decimal(18,4),\nrt_dc_boxes Decimal(18,4),\nrt_dc_shops LowCardinality(Nullable(String)),\nrt_drygood_supshop_cost Decimal(18,4),\nrt_drygood_supshop_qty Decimal(18,4),\nrt_drygood_supshop_boxes Decimal(18,4),\nrt_drygood_supshop_shops LowCardinality(Nullable(String)),\nrt_drygood_smallshop_cost Decimal(18,4),\nrt_drygood_smallshop_qty Decimal(18,4),\nrt_drygood_smallshop_boxes Decimal(18,4),\nrt_drygood_smallshop_shops LowCardinality(Nullable(String)),\nrt_drygood_dc_cost Decimal(18,4),\nrt_drygood_dc_qty Decimal(18,4),\nrt_drygood_dc_boxes Decimal(18,4),\nrt_drygood_dc_shops LowCardinality(Nullable(String)),\nrt_fresh_supshop_cost Decimal(18,4),\nrt_fresh_supshop_qty Decimal(18,4),\nrt_fresh_supshop_shops LowCardinality(Nullable(String)),\nrt_fresh_smallshop_cost Decimal(18,4),\nrt_fresh_smallshop_qty Decimal(18,4),\nrt_fresh_smallshop_shops LowCardinality(Nullable(String)),\nrt_fresh_dc_cost Decimal(18,4),\nrt_fresh_dc_qty Decimal(18,4),\nrt_fresh_dc_shops LowCardinality(Nullable(String)),\nstat_day_num String default formatDateTime(stat_day, '%F')\n)\nengine = MergeTree PARTITION BY toYYYYMM(stat_day) ORDER BY (stat_day, out_shop_id) SETTINGS index_granularity = 8192\n;","fileName":"../ClickHouse/tests/queries/0_stateless/01548_lzy305.sql","errors":[]},{"query":"create table file_delim(a int, b int) engine File(CSV, '01545_url_file_format_settings.csv') settings format_csv_delimiter = '|';","fileName":"../ClickHouse/tests/queries/0_stateless/01545_url_file_format_settings.sql","errors":[]},{"query":"create table url_delim(a int, b int) engine URL('http://127.0.0.1:8123/?query=select%201%2C%202%20format%20CSV%20settings%20format_csv_delimiter%3D%27/%27%3B%0A', CSV) settings format_csv_delimiter = '/';","fileName":"../ClickHouse/tests/queries/0_stateless/01545_url_file_format_settings.sql","errors":[]},{"query":"CREATE TABLE fromModifiedJulianDay_test (d Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01544_fromModifiedJulianDay.sql","errors":[]},{"query":"CREATE TABLE toModifiedJulianDay_test (d String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01543_toModifiedJulianDay.sql","errors":[]},{"query":"CREATE TABLE toModifiedJulianDay_test (d FixedString(10)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01543_toModifiedJulianDay.sql","errors":[]},{"query":"CREATE TABLE collate_test1 (x UInt32, s Tuple(UInt32, String)) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01543_collate_in_tuple.sql","errors":[]},{"query":"CREATE TABLE collate_test2 (x UInt32, s Tuple(UInt32, LowCardinality(Nullable(String)))) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01543_collate_in_tuple.sql","errors":[]},{"query":"CREATE TABLE collate_test3 (x UInt32, s Tuple(UInt32, Tuple(UInt32, Array(String)))) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01543_collate_in_tuple.sql","errors":[]},{"query":"CREATE TABLE collate_test1 (x UInt32, s Array(String)) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01542_collate_in_array.sql","errors":[]},{"query":"CREATE TABLE collate_test2 (x UInt32, s Array(LowCardinality(Nullable(String)))) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01542_collate_in_array.sql","errors":[]},{"query":"CREATE TABLE collate_test3 (x UInt32, s Array(Array(String))) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01542_collate_in_array.sql","errors":[]},{"query":"create table xy(x int, y int) engine MergeTree partition by intHash64(x) % 2 order by y settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01540_verbatim_partition_pruning.sql","errors":[]},{"query":"create table xyz(x int, y int, z int) engine MergeTree partition by if(toUInt8(x), y, z) order by x settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01540_verbatim_partition_pruning.sql","errors":[]},{"query":"create table test(d Date, k Int64, s String) Engine=MergeTree partition by (toYYYYMM(d),k) order by (d, k);","fileName":"../ClickHouse/tests/queries/0_stateless/01540_verbatim_partition_pruning.sql","errors":[]},{"query":"CREATE TABLE myTable (myDay Date, myOrder Int32, someData String) ENGINE = ReplacingMergeTree PARTITION BY floor(toYYYYMMDD(myDay), -1) ORDER BY (myOrder);","fileName":"../ClickHouse/tests/queries/0_stateless/01540_verbatim_partition_pruning.sql","errors":[]},{"query":"create table T(a Nullable(Int64)) engine = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01533_sum_if_nullable_bug.sql","errors":[]},{"query":"CREATE TABLE optimize_final(t DateTime, x Int32) ENGINE = MergeTree() PARTITION BY toYYYYMM(t) ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01533_optimize_skip_merged_partitions.sql","errors":[]},{"query":"CREATE TABLE nested (\ncol1 Nested(a UInt32, s String),\ncol2 Nested(a UInt32, n Nested(s String, b UInt32)),\ncol3 Nested(n1 Nested(a UInt32, b UInt32), n2 Nested(s String, t String))\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01533_multiple_nested.sql","errors":[]},{"query":"CREATE TABLE nested (\nid UInt32,\ncol1 Nested(a UInt32, n Nested(s String, b UInt32))\n)\nENGINE = MergeTree\nORDER BY id\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01533_multiple_nested.sql","errors":[]},{"query":"CREATE TABLE bug_14144 ( meta_source_req_uuid Nullable(UUID),\na Int64,\nmeta_source_type String\n)\nENGINE = MergeTree\nORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01533_distinct_nullable_uuid.sql","errors":[]},{"query":"CREATE TABLE bug_13492 (\\`d\\` DateTime) ENGINE = MergeTree PARTITION BY toYYYYMMDD(d) ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01533_distinct_depends_on_max_threads.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE bug_13492 (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE test_collate (x UInt32, s Nullable(String)) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01533_collate_in_nullable.sql","errors":[]},{"query":"CREATE TABLE test_01532_1 (a Tuple(key String, value String)) ENGINE Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01532_tuple_with_name_type.sql","errors":[]},{"query":"CREATE TABLE test_01532_2 (a Tuple(Tuple(key String, value String))) ENGINE Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01532_tuple_with_name_type.sql","errors":[]},{"query":"CREATE TABLE test_01532_3 (a Array(Tuple(key String, value String))) ENGINE Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01532_tuple_with_name_type.sql","errors":[]},{"query":"CREATE TABLE test_01532_4 (a Tuple(UInt8, Tuple(key String, value String))) ENGINE Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01532_tuple_with_name_type.sql","errors":[]},{"query":"CREATE TABLE merge_tree_pk (\nkey UInt64,\nvalue String\n)\nENGINE = ReplacingMergeTree()\nPRIMARY KEY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01532_primary_key_without_order_by_zookeeper.sql","errors":[]},{"query":"CREATE TABLE merge_tree_pk_sql (\nkey UInt64,\nvalue String,\nPRIMARY KEY (key)\n)\nENGINE = ReplacingMergeTree();","fileName":"../ClickHouse/tests/queries/0_stateless/01532_primary_key_without_order_by_zookeeper.sql","errors":[]},{"query":"CREATE TABLE replicated_merge_tree_pk_sql (\nkey UInt64,\nvalue String,\nPRIMARY KEY (key)\n)\nENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/{database}/01532_primary_key_without', 'r1');","fileName":"../ClickHouse/tests/queries/0_stateless/01532_primary_key_without_order_by_zookeeper.sql","errors":[]},{"query":"create table local_t engine Log as select 1 a;","fileName":"../ClickHouse/tests/queries/0_stateless/01532_having_with_totals.sql","errors":[]},{"query":"CREATE TABLE test_collate (x UInt32, s LowCardinality(String)) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01532_collate_in_low_cardinality.sql","errors":[]},{"query":"CREATE TABLE test_collate_null (x UInt32, s LowCardinality(Nullable(String))) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01532_collate_in_low_cardinality.sql","errors":[]},{"query":"create database db_01530_atomic Engine=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01530_drop_database_atomic_sync.sql","errors":[]},{"query":"create table db_01530_atomic.data (key Int) Engine=ReplicatedMergeTree('/clickhouse/tables/{database}/db_01530_atomic/data', 'test') order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01530_drop_database_atomic_sync.sql","errors":[]},{"query":"create database db_01530_atomic Engine=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01530_drop_database_atomic_sync.sql","errors":[]},{"query":"create table db_01530_atomic.data (key Int) Engine=ReplicatedMergeTree('/clickhouse/tables/{database}/db_01530_atomic/data', 'test') order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01530_drop_database_atomic_sync.sql","errors":[]},{"query":"create database db_01530_atomic Engine=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01530_drop_database_atomic_sync.sql","errors":[]},{"query":"create table db_01530_atomic.data (key Int) Engine=ReplicatedMergeTree('/clickhouse/tables/{database}/db_01530_atomic/data', 'test') order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01530_drop_database_atomic_sync.sql","errors":[]},{"query":"create database db_01530_atomic Engine=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01530_drop_database_atomic_sync.sql","errors":[]},{"query":"create table db_01530_atomic.data (key Int) Engine=ReplicatedMergeTree('/clickhouse/tables/{database}/db_01530_atomic/data', 'test') order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01530_drop_database_atomic_sync.sql","errors":[]},{"query":"create database db_01530_atomic Engine=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01530_drop_database_atomic_sync.sql","errors":[]},{"query":"create table db_01530_atomic.data (key Int) Engine=ReplicatedMergeTree('/clickhouse/tables/{database}/db_01530_atomic/data', 'test') order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01530_drop_database_atomic_sync.sql","errors":[]},{"query":"create database db_01530_atomic Engine=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01530_drop_database_atomic_sync.sql","errors":[]},{"query":"create table db_01530_atomic.data (key Int) Engine=ReplicatedMergeTree('/clickhouse/tables/{database}/db_01530_atomic/data', 'test') order by key; -- { serverError REPLICA_ALREADY_EXISTS } set database_atomic_wait_for_drop_and_detach_synchronously=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01530_drop_database_atomic_sync.sql","errors":[]},{"query":"CREATE TABLE to_uuid_test (value String) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01528_to_uuid_or_null_or_zero.sql","errors":[]},{"query":"CREATE TABLE defaults (\n\tn Int8\n)ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01528_setting_aggregate_functions_null_for_empty.sql","errors":[]},{"query":"create table dist_01528 as system.one engine=Distributed('test_cluster_two_shards', system, one, rand()+dummy);","fileName":"../ClickHouse/tests/queries/0_stateless/01528_allow_nondeterministic_optimize_skip_unused_shards.sql","errors":[]},{"query":"CREATE TABLE t (c String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01527_materialized_view_stack_overflow.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW v to v AS SELECT c FROM t; -- { serverError BAD_ARGUMENTS } CREATE MATERIALIZED VIEW v to t AS SELECT * FROM v; -- { serverError UNKNOWN_TABLE }\nDROP TABLE IF EXISTS t1;","fileName":"../ClickHouse/tests/queries/0_stateless/01527_materialized_view_stack_overflow.sql","errors":[]},{"query":"CREATE TABLE t1 (c String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01527_materialized_view_stack_overflow.sql","errors":[]},{"query":"CREATE TABLE t2 (c String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01527_materialized_view_stack_overflow.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW v1 to t1 AS SELECT * FROM t2;","fileName":"../ClickHouse/tests/queries/0_stateless/01527_materialized_view_stack_overflow.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW v2 to t2 AS SELECT * FROM t1;","fileName":"../ClickHouse/tests/queries/0_stateless/01527_materialized_view_stack_overflow.sql","errors":[]},{"query":"create database db_01527_ranges;","fileName":"../ClickHouse/tests/queries/0_stateless/01527_dist_sharding_key_dictGet_reload.sql","errors":[{"message":"no viable alternative at input 'create database db_01527_ranges;'","startColumn":31,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"create table data_01527 engine=Memory() as select toUInt64(number) key from numbers(2);","fileName":"../ClickHouse/tests/queries/0_stateless/01527_dist_sharding_key_dictGet_reload.sql","errors":[]},{"query":"create table dist_01527 as data_01527 engine=Distributed('test_cluster_two_shards', currentDatabase(), data_01527, dictGetUInt64('db_01527_ranges.dict', 'shard', key));","fileName":"../ClickHouse/tests/queries/0_stateless/01527_dist_sharding_key_dictGet_reload.sql","errors":[]},{"query":"create table db_01527_ranges.data engine=Memory() as select number key, number shard from numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01527_dist_sharding_key_dictGet_reload.sql","errors":[]},{"query":"create dictionary db_01527_ranges.dict (key UInt64, shard UInt64) primary key key source(clickhouse(host '127.0.0.1' port tcpPort() table 'data' db 'db_01527_ranges' user 'default' password '')) lifetime(0) layout(hashed());","fileName":"../ClickHouse/tests/queries/0_stateless/01527_dist_sharding_key_dictGet_reload.sql","errors":[]},{"query":"create table db_01527_ranges.data engine=Memory() as select number key, number+1 shard from numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01527_dist_sharding_key_dictGet_reload.sql","errors":[]},{"query":"CREATE DATABASE db_01526;","fileName":"../ClickHouse/tests/queries/0_stateless/01526_complex_key_dict_direct_layout.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE db_01526;'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE db_01526.table_for_dict1 (\nkey_column UInt64,\nsecond_column UInt64,\nthird_column String\n)\nENGINE = MergeTree()\nORDER BY (key_column, second_column);","fileName":"../ClickHouse/tests/queries/0_stateless/01526_complex_key_dict_direct_layout.sql","errors":[]},{"query":"CREATE DICTIONARY db_01526.dict1 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt64 DEFAULT 0,\nthird_column String DEFAULT 'qqq'\n)\nPRIMARY KEY key_column, second_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict1' PASSWORD '' DB 'db_01526'))\nLAYOUT(COMPLEX_KEY_DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01526_complex_key_dict_direct_layout.sql","errors":[]},{"query":"CREATE TABLE table_for_alter (\n\\`d\\` Date,\n\\`a\\` String,\n\\`b\\` UInt8,\n\\`x\\` String,\n\\`y\\` Int8,\n\\`version\\` UInt64,\n\\`sign\\` Int8 DEFAULT 1\n)\nENGINE = ReplicatedVersionedCollapsingMergeTree('/clickhouse/tables/{database}/01526_alter_add/t1', '1', sign, version)\nPARTITION BY y\nORDER BY d\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01526_alter_add_and_modify_order_zookeeper.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE table_for_alter (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_fetch(a Int32, b Int32) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01525_select_with_offset_fetch_clause.sql","errors":[]},{"query":"CREATE TABLE select_final (t DateTime, x Int32, string String) ENGINE = ReplacingMergeTree() PARTITION BY toYYYYMM(t) ORDER BY (x, t) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01524_do_not_merge_across_partitions_select_final.sql","errors":[]},{"query":"CREATE TABLE test(timestamp DateTime) ENGINE = MergeTree ORDER BY timestamp;","fileName":"../ClickHouse/tests/queries/0_stateless/01523_date_time_compare_with_date_literal.sql","errors":[]},{"query":"CREATE TABLE test(timestamp DateTime64) ENGINE = MergeTree ORDER BY timestamp;","fileName":"../ClickHouse/tests/queries/0_stateless/01523_date_time_compare_with_date_literal.sql","errors":[]},{"query":"CREATE TABLE table2 (\nEventDate Date,\nId Int32,\nValue Int32\n)\nEngine = MergeTree()\nPARTITION BY toYYYYMM(EventDate)\nORDER BY Id;","fileName":"../ClickHouse/tests/queries/0_stateless/01522_validate_alter_default.sql","errors":[]},{"query":"CREATE TABLE max_length_alias_14053 (\\`a\\` Date,\\`b\\` UInt16,\\`c.d\\` Array(Date),\\`dcount\\` UInt16 ALIAS length(c.d))\nENGINE = MergeTree PARTITION BY toMonday(a) ORDER BY (a, b)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01521_max_length_alias.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE max_length_alias_14053 (\\'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table xp(A Date, B Int64, S String) Engine=MergeTree partition by toYYYYMM(A) order by B;","fileName":"../ClickHouse/tests/queries/0_stateless/01521_global_in_prewhere_15792.sql","errors":[]},{"query":"create table xp_d as xp Engine=Distributed(test_shard_localhost, currentDatabase(), xp);","fileName":"../ClickHouse/tests/queries/0_stateless/01521_global_in_prewhere_15792.sql","errors":[]},{"query":"CREATE TABLE enum_test(timestamp DateTime, host String, e Enum8('IU' = 1, 'WS' = 2)) Engine = MergeTree PARTITION BY toDate(timestamp) ORDER BY (timestamp, host);","fileName":"../ClickHouse/tests/queries/0_stateless/01521_alter_enum_and_reverse_read.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS topXtest(A Int64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01519_topK_distributed_parametrized.sql","errors":[]},{"query":"CREATE TABLE t1 (\\`cA\\` String, \\`c1\\` String) ENGINE = MergeTree ORDER BY (cA, c1);","fileName":"../ClickHouse/tests/queries/0_stateless/01518_select_in_null.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE testNullableStates ( ts DateTime,\nid String,\nstring Nullable(String),\nfloat64 Nullable(Float64),\nfloat32 Nullable(Float32),\ndecimal325 Nullable(Decimal32(5)),\ndate Nullable(Date),\ndatetime Nullable(DateTime),\ndatetime64 Nullable(DateTime64),\nint64 Nullable(Int64),\nint32 Nullable(Int32),\nint16 Nullable(Int16),\nint8 Nullable(Int8))\nENGINE=MergeTree PARTITION BY toStartOfDay(ts) ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01518_nullable_aggregate_states2.sql","errors":[]},{"query":"CREATE TABLE testNullableStatesAgg (\n\\`ts\\` DateTime,\n\\`id\\` String,\n\\`stringMin\\` AggregateFunction(min, Nullable(String)),\n\\`stringMax\\` AggregateFunction(max, Nullable(String)),\n\\`float64Min\\` AggregateFunction(min, Nullable(Float64)),\n\\`float64Max\\` AggregateFunction(max, Nullable(Float64)),\n\\`float64Avg\\` AggregateFunction(avg, Nullable(Float64)),\n\\`float64Sum\\` AggregateFunction(sum, Nullable(Float64)),\n\\`float32Min\\` AggregateFunction(min, Nullable(Float32)),\n\\`float32Max\\` AggregateFunction(max, Nullable(Float32)),\n\\`float32Avg\\` AggregateFunction(avg, Nullable(Float32)),\n\\`float32Sum\\` AggregateFunction(sum, Nullable(Float32)),\n\\`decimal325Min\\` AggregateFunction(min, Nullable(Decimal32(5))),\n\\`decimal325Max\\` AggregateFunction(max, Nullable(Decimal32(5))),\n\\`decimal325Avg\\` AggregateFunction(avg, Nullable(Decimal32(5))),\n\\`decimal325Sum\\` AggregateFunction(sum, Nullable(Decimal32(5))),\n\\`dateMin\\` AggregateFunction(min, Nullable(Date)),\n\\`dateMax\\` AggregateFunction(max, Nullable(Date)),\n\\`datetimeMin\\` AggregateFunction(min, Nullable(DateTime)),\n\\`datetimeMax\\` AggregateFunction(max, Nullable(DateTime)),\n\\`datetime64Min\\` AggregateFunction(min, Nullable(datetime64)),\n\\`datetime64Max\\` AggregateFunction(max, Nullable(datetime64)),\n\\`int64Min\\` AggregateFunction(min, Nullable(Int64)),\n\\`int64Max\\` AggregateFunction(max, Nullable(Int64)),\n\\`int64Avg\\` AggregateFunction(avg, Nullable(Int64)),\n\\`int64Sum\\` AggregateFunction(sum, Nullable(Int64)),\n\\`int32Min\\` AggregateFunction(min, Nullable(Int32)),\n\\`int32Max\\` AggregateFunction(max, Nullable(Int32)),\n\\`int32Avg\\` AggregateFunction(avg, Nullable(Int32)),\n\\`int32Sum\\` AggregateFunction(sum, Nullable(Int32)),\n\\`int16Min\\` AggregateFunction(min, Nullable(Int16)),\n\\`int16Max\\` AggregateFunction(max, Nullable(Int16)),\n\\`int16Avg\\` AggregateFunction(avg, Nullable(Int16)),\n\\`int16Sum\\` AggregateFunction(sum, Nullable(Int16)),\n\\`int8Min\\` AggregateFunction(min, Nullable(Int8)),\n\\`int8Max\\` AggregateFunction(max, Nullable(Int8)),\n\\`int8Avg\\` AggregateFunction(avg, Nullable(Int8)),\n\\`int8Sum\\` AggregateFunction(sum, Nullable(Int8))\n)\nENGINE = AggregatingMergeTree()\nPARTITION BY toStartOfDay(ts)\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01518_nullable_aggregate_states2.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE testNullableStatesAgg (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE logs(  date_visited DateTime, \ndate Date MATERIALIZED toDate(date_visited)\n) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01518_filtering_aliased_materialized_column.sql","errors":[]},{"query":"CREATE TABLE test5346 (\\`Id\\` String, \\`Timestamp\\` DateTime, \\`updated\\` DateTime)  ENGINE = ReplacingMergeTree(updated) PARTITION BY tuple() ORDER BY (Timestamp, Id);","fileName":"../ClickHouse/tests/queries/0_stateless/01517_select_final_distributed.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test5346 (\\'","startColumn":23,"startLine":1,"endColumn":24,"endLine":1}]},{"query":"create database db_01517_atomic Engine=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01517_drop_mv_with_inner_table.sql","errors":[]},{"query":"create table db_01517_atomic.source (key Int) engine=Null;","fileName":"../ClickHouse/tests/queries/0_stateless/01517_drop_mv_with_inner_table.sql","errors":[]},{"query":"create materialized view db_01517_atomic.mv engine=Null as select * from db_01517_atomic.source;","fileName":"../ClickHouse/tests/queries/0_stateless/01517_drop_mv_with_inner_table.sql","errors":[]},{"query":"create database db_01517_atomic_sync Engine=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01517_drop_mv_with_inner_table.sql","errors":[]},{"query":"create table db_01517_atomic_sync.source (key Int) engine=Null;","fileName":"../ClickHouse/tests/queries/0_stateless/01517_drop_mv_with_inner_table.sql","errors":[]},{"query":"create materialized view db_01517_atomic_sync.mv engine=Null as select * from db_01517_atomic_sync.source;","fileName":"../ClickHouse/tests/queries/0_stateless/01517_drop_mv_with_inner_table.sql","errors":[]},{"query":"create database db_01517_ordinary Engine=Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/01517_drop_mv_with_inner_table.sql","errors":[]},{"query":"create table db_01517_ordinary.source (key Int) engine=Null;","fileName":"../ClickHouse/tests/queries/0_stateless/01517_drop_mv_with_inner_table.sql","errors":[]},{"query":"create materialized view db_01517_ordinary.mv engine=Null as select * from db_01517_ordinary.source;","fileName":"../ClickHouse/tests/queries/0_stateless/01517_drop_mv_with_inner_table.sql","errors":[]},{"query":"CREATE TABLE test_datetime(timestamp DateTime('Asia/Istanbul')) ENGINE=Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01516_date_time_output_format.sql","errors":[]},{"query":"CREATE TABLE test_datetime(timestamp DateTime64(3, 'Asia/Istanbul')) Engine=Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01516_date_time_output_format.sql","errors":[]},{"query":"CREATE DATABASE test_01516 ENGINE=Ordinary;     -- Full ATTACH requires UUID with Atomic USE test_01516;","fileName":"../ClickHouse/tests/queries/0_stateless/01516_create_table_primary_key.sql","errors":[]},{"query":"CREATE TABLE primary_key_test(v Int32, PRIMARY KEY(v)) ENGINE=ReplacingMergeTree ORDER BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/01516_create_table_primary_key.sql","errors":[]},{"query":"CREATE TABLE primary_key_test(v Int32) ENGINE=ReplacingMergeTree ORDER BY v PRIMARY KEY(v);","fileName":"../ClickHouse/tests/queries/0_stateless/01516_create_table_primary_key.sql","errors":[]},{"query":"CREATE TABLE primary_key_test(v1 Int32, v2 Int32, PRIMARY KEY(v1, v2)) ENGINE=ReplacingMergeTree ORDER BY (v1, v2);","fileName":"../ClickHouse/tests/queries/0_stateless/01516_create_table_primary_key.sql","errors":[]},{"query":"CREATE TABLE primary_key_test(v1 Int32, v2 Int32) ENGINE=ReplacingMergeTree ORDER BY (v1, v2) PRIMARY KEY(v1, v2);","fileName":"../ClickHouse/tests/queries/0_stateless/01516_create_table_primary_key.sql","errors":[]},{"query":"CREATE TABLE primary_key_test(v1 Int64, v2 Int32, v3 String, PRIMARY KEY(v1, gcd(v1, v2))) ENGINE=ReplacingMergeTree ORDER BY v1; -- { serverError BAD_ARGUMENTS } CREATE TABLE primary_key_test(v1 Int64, v2 Int32, v3 String, PRIMARY KEY(v1, gcd(v1, v2))) ENGINE=ReplacingMergeTree ORDER BY (v1, gcd(v1, v2));","fileName":"../ClickHouse/tests/queries/0_stateless/01516_create_table_primary_key.sql","errors":[]},{"query":"CREATE TABLE visits (\n\\`CounterID\\` UInt32,\n\\`StartDate\\` Date,\n\\`StartTime\\` DateTime,\n\\`GoalsID\\` Array(UInt32),\n\\`Sign\\` Int8\n)\nENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/01515_mv_and_array_join_optimisation_bag.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE visits (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE MATERIALIZED VIEW goal_view TO goal (\n\\`CounterID\\` UInt32,\n\\`StartDate\\` Date,\n\\`GoalID\\` UInt32,\n\\`Visits\\` AggregateFunction(sumIf, Int8, UInt8),\n\\`GoalReaches\\` AggregateFunction(sum, Int8)\n) AS\nSELECT\nCounterID,\nStartDate,\nGoalID,\nsumIfState(Sign, _uniq = 1) AS Visits,\nsumState(Sign) AS GoalReaches\nFROM visits\nARRAY JOIN\nGoalsID AS GoalID,\narrayEnumerateUniq(GoalsID) AS _uniq\nGROUP BY\nCounterID,\nStartDate,\nGoalID\nORDER BY\nCounterID ASC,\nStartDate ASC,\nGoalID ASC;","fileName":"../ClickHouse/tests/queries/0_stateless/01515_mv_and_array_join_optimisation_bag.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW goal_view TO goal ('","startColumn":43,"startLine":1,"endColumn":44,"endLine":1}]},{"query":"CREATE TABLE goal (\n\\`CounterID\\` UInt32,\n\\`StartDate\\` Date,\n\\`GoalID\\` UInt32,\n\\`Visits\\` AggregateFunction(sumIf, Int8, UInt8),\n\\`GoalReaches\\` AggregateFunction(sum, Int8)\n) ENGINE = AggregatingMergeTree PARTITION BY toStartOfMonth(StartDate) ORDER BY (CounterID, StartDate, GoalID) SETTINGS index_granularity = 256, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01515_mv_and_array_join_optimisation_bag.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE goal (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE data_01515 (\nkey Int,\nd1 Int,\nd1_null Nullable(Int),\nINDEX d1_idx d1 TYPE minmax GRANULARITY 1,\nINDEX d1_null_idx assumeNotNull(d1_null) TYPE minmax GRANULARITY 1\n)\nEngine=MergeTree()\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01515_force_data_skipping_indices.sql","errors":[]},{"query":"create table tsv(a int, b int default 7) engine File(TSV);","fileName":"../ClickHouse/tests/queries/0_stateless/01514_parallel_formatting.sql","errors":[]},{"query":"CREATE TABLE table_with_enum_column_for_tsv_insert ( Id Int32,\nValue Enum('ef' = 1, 'es' = 2)\n) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01514_input_format_tsv_enum_as_number_setting.sql","errors":[]},{"query":"CREATE TABLE table_with_enum_column_for_json_insert ( Id Int32,\nValue Enum('ef' = 1, 'es' = 2)\n) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01514_input_format_json_enum_as_number.sql","errors":[]},{"query":"CREATE TABLE table_with_enum_column_for_csv_insert ( Id Int32,\nValue Enum('ef' = 1, 'es' = 2)\n) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01514_input_format_csv_enum_as_number_setting.sql","errors":[]},{"query":"CREATE TABLE merge_tree_table1 (\\`s\\` LowCardinality(String), x UInt32) ENGINE = MergeTree ORDER BY x settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01514_empty_buffer_different_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE merge_tree_table1 (\\'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE buffer_table1 ( \\`s\\` String , x UInt32) ENGINE = Buffer(currentDatabase(), 'merge_tree_table1', 16, 10, 60, 10, 1000, 1048576, 2097152);","fileName":"../ClickHouse/tests/queries/0_stateless/01514_empty_buffer_different_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE buffer_table1 ( \\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"create table data_01513 (key String) engine=MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01513_optimize_aggregation_in_order_memory_long.sql","errors":[]},{"query":"CREATE TABLE defaults_on_defaults ( key UInt64\n)\nENGINE = MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01513_defaults_on_defaults_no_column.sql","errors":[]},{"query":"CREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_01513/sequence_consistency', '1') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/01513_count_without_select_sequence_consistency_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_01513/sequence_consistency', '2') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/01513_count_without_select_sequence_consistency_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum3(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_01513/sequence_consistency', '3') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/01513_count_without_select_sequence_consistency_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE mt (v UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01497/mt') ORDER BY tuple() -- { serverError BAD_ARGUMENTS }\n","fileName":"../ClickHouse/tests/queries/0_stateless/01512_create_replicate_merge_tree_one_arg.sql","errors":[]},{"query":"CREATE TABLE test_not_found_column_nothing (\ncol001 UInt8,\ncol002 UInt8\n) Engine=MergeTree ORDER BY tuple() PARTITION BY col001 % 3;","fileName":"../ClickHouse/tests/queries/0_stateless/01511_prewhere_with_virtuals.sql","errors":[]},{"query":"CREATE TABLE repro_hits ( date Date, metric Float64) ENGINE = MergeTree() ORDER BY date;","fileName":"../ClickHouse/tests/queries/0_stateless/01511_different_expression_with_same_alias.sql","errors":[]},{"query":"CREATE TABLE table_with_version_replicated_1 (\nkey UInt64,\nvalue String,\nversion UInt8,\nsign Int8\n)\nENGINE ReplicatedVersionedCollapsingMergeTree('/clickhouse/' || currentDatabase() || '/test_01511/{shard}/t', '1_{replica}', sign, version)\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01511_alter_version_versioned_collapsing_merge_tree_zookeeper.sql","errors":[]},{"query":"CREATE TABLE table_with_version_replicated_2 (\nkey UInt64,\nvalue String,\nversion UInt8,\nsign Int8\n)\nENGINE ReplicatedVersionedCollapsingMergeTree('/clickhouse/' || currentDatabase() || '/test_01511/{shard}/t', '2_{replica}', sign, version)\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01511_alter_version_versioned_collapsing_merge_tree_zookeeper.sql","errors":[]},{"query":"CREATE TABLE table_with_version (\nkey UInt64,\nvalue String,\nversion UInt8,\nsign Int8\n)\nENGINE VersionedCollapsingMergeTree(sign, version)\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01511_alter_version_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE r1 ( key UInt64, value String\n)\nENGINE = ReplicatedMergeTree('/clickhouse/{database}/01509_parallel_quorum_insert_no_replicas', '1')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01509_parallel_quorum_insert_no_replicas_long.sql","errors":[]},{"query":"CREATE TABLE r2 ( key UInt64, value String\n)\nENGINE = ReplicatedMergeTree('/clickhouse/{database}/01509_parallel_quorum_insert_no_replicas', '2')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01509_parallel_quorum_insert_no_replicas_long.sql","errors":[]},{"query":"CREATE TABLE defaults (\n\tn Int32\n)ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01507_multiversion_storage_for_storagememory.sql","errors":[]},{"query":"CREATE TABLE derived_metrics_local (\ntimestamp DateTime,\nbytes UInt64\n)\nENGINE=SummingMergeTree()\nPARTITION BY toYYYYMMDD(timestamp)\nORDER BY (toStartOfHour(timestamp), timestamp)\nTTL toStartOfHour(timestamp) + INTERVAL 1 HOUR GROUP BY toStartOfHour(timestamp)\nSET bytes=max(bytes);","fileName":"../ClickHouse/tests/queries/0_stateless/01506_ttl_same_with_order_by.sql","errors":[{"message":"mismatched input 'GROUP' expecting <EOF>","startColumn":47,"startLine":8,"endColumn":52,"endLine":8}]},{"query":"CREATE TABLE derived_metrics_local  (\ntimestamp DateTime,\ntimestamp_h DateTime materialized toStartOfHour(timestamp),\nbytes UInt64\n)\nENGINE=SummingMergeTree()\nPARTITION BY toYYYYMMDD(timestamp)\nORDER BY (timestamp_h, timestamp)\nTTL toStartOfHour(timestamp) + INTERVAL 1 HOUR GROUP BY timestamp_h\nSET bytes=max(bytes), timestamp = toStartOfHour(any(timestamp));","fileName":"../ClickHouse/tests/queries/0_stateless/01506_ttl_same_with_order_by.sql","errors":[{"message":"mismatched input 'GROUP' expecting <EOF>","startColumn":47,"startLine":9,"endColumn":52,"endLine":9}]},{"query":"CREATE TABLE derived_metrics_local (\ntimestamp DateTime,\nbytes UInt64 TTL toStartOfHour(timestamp) + INTERVAL 1 HOUR\n)\nENGINE=MergeTree()\nORDER BY (toStartOfHour(timestamp), timestamp)\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01506_ttl_same_with_order_by.sql","errors":[]},{"query":"CREATE TABLE derived_metrics_local (\ntimestamp DateTime,\nbytes UInt64\n)\nENGINE=MergeTree()\nPARTITION BY toYYYYMMDD(timestamp)\nORDER BY (toStartOfHour(timestamp), timestamp)\nTTL toStartOfHour(timestamp) + INTERVAL 1 HOUR\nSETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01506_ttl_same_with_order_by.sql","errors":[]},{"query":"CREATE TABLE buf_dest (timestamp DateTime) ENGINE = MergeTree PARTITION BY toYYYYMMDD(timestamp)\nORDER BY (timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/01506_buffer_table_alter_block_structure_2.sql","errors":[]},{"query":"CREATE TABLE buf (timestamp DateTime) Engine = Buffer(currentDatabase(), buf_dest, 16, 86400, 86400, 2000000, 20000000, 100000000, 300000000);;","fileName":"../ClickHouse/tests/queries/0_stateless/01506_buffer_table_alter_block_structure_2.sql","errors":[]},{"query":"CREATE TABLE buf_dest (timestamp DateTime) ENGINE = MergeTree PARTITION BY toYYYYMMDD(timestamp)\nORDER BY (timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/01506_buffer_table_alter_block_structure.sql","errors":[]},{"query":"CREATE TABLE buf (timestamp DateTime) Engine = Buffer(currentDatabase(), buf_dest, 16, 3, 20, 2000000, 20000000, 100000000, 300000000);;","fileName":"../ClickHouse/tests/queries/0_stateless/01506_buffer_table_alter_block_structure.sql","errors":[]},{"query":"create table test1(p DateTime, k int) engine MergeTree partition by toDate(p) order by k settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01505_trivial_count_with_partition_predicate.sql","errors":[]},{"query":"create table test_tuple(p DateTime, i int, j int) engine MergeTree partition by (toDate(p), i) order by j settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01505_trivial_count_with_partition_predicate.sql","errors":[]},{"query":"create table test_two_args(i int, j int, k int) engine MergeTree partition by i + j order by k settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01505_trivial_count_with_partition_predicate.sql","errors":[]},{"query":"create table t_local(a int) engine Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01505_log_distributed_deadlock.sql","errors":[]},{"query":"create table t_dist (a int) engine Distributed(test_shard_localhost, currentDatabase(), 't_local', cityHash64(a));","fileName":"../ClickHouse/tests/queries/0_stateless/01505_log_distributed_deadlock.sql","errors":[]},{"query":"CREATE TABLE t (x Enum8('abc' = 0, 'def' = 1, 'ghi' = 2)) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01505_distributed_local_type_conversion_enum.sql","errors":[]},{"query":"CREATE TABLE d (x Enum8('abc' = 0, 'def' = 1, 'xyz' = 2)) ENGINE = Distributed(test_shard_localhost, currentDatabase(), t);","fileName":"../ClickHouse/tests/queries/0_stateless/01505_distributed_local_type_conversion_enum.sql","errors":[]},{"query":"CREATE TABLE d (x Enum8('abc' = 0, 'def' = 1, 'xyz' = 2)) ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), t);","fileName":"../ClickHouse/tests/queries/0_stateless/01505_distributed_local_type_conversion_enum.sql","errors":[]},{"query":"CREATE TABLE d (x Enum8('abc' = 0, 'def' = 1, 'xyz' = 2)) ENGINE = Distributed(test_cluster_two_shards_localhost, currentDatabase(), t);","fileName":"../ClickHouse/tests/queries/0_stateless/01505_distributed_local_type_conversion_enum.sql","errors":[]},{"query":"create view testv(a UInt32) as select number a from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/01504_view_type_conversion.sql","errors":[]},{"query":"create view testv(a String) as select number a from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/01504_view_type_conversion.sql","errors":[]},{"query":"CREATE TABLE 01504_test (key String, value UInt32) Engine=EmbeddedRocksDB; -- { serverError BAD_ARGUMENTS } CREATE TABLE 01504_test (key String, value UInt32) Engine=EmbeddedRocksDB PRIMARY KEY(key2); -- { serverError UNKNOWN_IDENTIFIER }\nCREATE TABLE 01504_test (key String, value UInt32) Engine=EmbeddedRocksDB PRIMARY KEY(key, value); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE 01504_test (key Tuple(String, UInt32), value UInt64) Engine=EmbeddedRocksDB PRIMARY KEY(key);","fileName":"../ClickHouse/tests/queries/0_stateless/01504_rocksdb.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01504'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01504_test (key String, value UInt32) Engine=EmbeddedRocksDB PRIMARY KEY(key);","fileName":"../ClickHouse/tests/queries/0_stateless/01504_rocksdb.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01504'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01504_test (k UInt32, value UInt64, dummy Tuple(UInt32, Float64), bm AggregateFunction(groupBitmap, UInt64)) Engine=EmbeddedRocksDB PRIMARY KEY(k);","fileName":"../ClickHouse/tests/queries/0_stateless/01504_rocksdb.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01504'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 01504_test_memory AS 01504_test Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01504_rocksdb.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 01504'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE keys AS SELECT * FROM system.numbers LIMIT 1 OFFSET 4;","fileName":"../ClickHouse/tests/queries/0_stateless/01504_rocksdb.sql","errors":[]},{"query":"CREATE TABLE columns_with_multiple_streams ( field0 Nullable(Int64) CODEC(Delta(2), LZ4),\nfield1 Nullable(Int64) CODEC(Delta, LZ4),\nfield2 Array(Array(Int64)) CODEC(Delta, LZ4),\nfield3 Tuple(UInt32, Array(UInt64)) CODEC(T64, Default)\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01504_compression_multiple_streams.sql","errors":[]},{"query":"CREATE TABLE columns_with_multiple_streams_compact ( field0 Nullable(Int64) CODEC(Delta(2), LZ4),\nfield1 Nullable(Int64) CODEC(Delta, LZ4),\nfield2 Array(Array(Int64)) CODEC(Delta, LZ4),\nfield3 Tuple(UInt32, Array(UInt64)) CODEC(Delta, Default)\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS min_rows_for_wide_part = 100000, min_bytes_for_wide_part = 100000;","fileName":"../ClickHouse/tests/queries/0_stateless/01504_compression_multiple_streams.sql","errors":[]},{"query":"CREATE TABLE columns_with_multiple_streams_bad_case ( field0 Nullable(String) CODEC(Delta, LZ4)\n)\nENGINE = MergeTree\nORDER BY tuple(); --{serverError BAD_ARGUMENTS}\nCREATE TABLE columns_with_multiple_streams_bad_case (\nfield0 Tuple(Array(UInt64), String) CODEC(T64, LZ4)\n)\nENGINE = MergeTree\nORDER BY tuple(); --{serverError ILLEGAL_SYNTAX_FOR_CODEC_TYPE}\nSET allow_suspicious_codecs = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01504_compression_multiple_streams.sql","errors":[]},{"query":"CREATE TABLE columns_with_multiple_streams_bad_case ( field0 Nullable(UInt64) CODEC(Delta)\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01504_compression_multiple_streams.sql","errors":[]},{"query":"CREATE TABLE test(key FixedString(10)) ENGINE=MergeTree() PARTITION BY tuple() ORDER BY (key);","fileName":"../ClickHouse/tests/queries/0_stateless/01503_fixed_string_primary_key.sql","errors":[]},{"query":"create database db_01501;","fileName":"../ClickHouse/tests/queries/0_stateless/01501_cache_dictionary_all_fields.sql","errors":[{"message":"no viable alternative at input 'create database db_01501;'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE db_01501.table_cache_dict( KeyField UInt64,\nUInt8_ UInt8,\nUInt16_ UInt16,\nUInt32_ UInt32,\nUInt64_ UInt64,\nInt8_ Int8,\nInt16_ Int16,\nInt32_ Int32,\nInt64_ Int64,\nUUID_ UUID,\nDate_ Date,\nDateTime_ DateTime,\nString_ String,\nFloat32_ Float32,\nFloat64_ Float64,\nDecimal32_ Decimal32(5),\nDecimal64_ Decimal64(15),\nDecimal128_ Decimal128(35),\nParentKeyField UInt64)\nENGINE = MergeTree() ORDER BY KeyField;","fileName":"../ClickHouse/tests/queries/0_stateless/01501_cache_dictionary_all_fields.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS db_01501.cache_dict ( \tKeyField UInt64 DEFAULT 9999999,\n\tUInt8_ UInt8 DEFAULT 55,\n\tUInt16_ UInt16 DEFAULT 65535,\n\tUInt32_ UInt32 DEFAULT 4294967295,\n\tUInt64_ UInt64 DEFAULT 18446744073709551615,\n\tInt8_ Int8 DEFAULT -128,\n\tInt16_ Int16 DEFAULT -32768,\n\tInt32_ Int32 DEFAULT -2147483648,\n\tInt64_ Int64 DEFAULT -9223372036854775808,\n\tUUID_ UUID DEFAULT '550e8400-0000-0000-0000-000000000000',\n\tDate_ Date DEFAULT '2018-12-30',\n\tDateTime_ DateTime DEFAULT '2018-12-30 00:00:00',\n\tString_ String DEFAULT 'hi',\n\tFloat32_ Float32 DEFAULT 111.11,\n\tFloat64_ Float64 DEFAULT 222.11,\n\tDecimal32_ Decimal32(5) DEFAULT 333.11,\n\tDecimal64_ Decimal64(15) DEFAULT 444.11,\n\tDecimal128_ Decimal128(35) DEFAULT 555.11,\n\tParentKeyField UInt64 DEFAULT 444)\nPRIMARY KEY KeyField\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_cache_dict' DB 'db_01501'))\nLIFETIME(5) LAYOUT(CACHE(SIZE_IN_CELLS 20));","fileName":"../ClickHouse/tests/queries/0_stateless/01501_cache_dictionary_all_fields.sql","errors":[]},{"query":"CREATE TABLE t (x UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01499_log_deadlock.sql","errors":[]},{"query":"CREATE TABLE t (x UInt8) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01499_log_deadlock.sql","errors":[]},{"query":"CREATE TABLE t (x UInt8) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01499_log_deadlock.sql","errors":[]},{"query":"create table named_tuples engine File(JSONEachRow) settings output_format_json_named_tuples_as_objects = 1\nas select cast(tuple(number, number * 2), 'Tuple(a int, b int)') c\nfrom numbers(3);","fileName":"../ClickHouse/tests/queries/0_stateless/01499_json_named_tuples.sql","errors":[]},{"query":"CREATE TABLE defaults (\n\tn Int32,\n\ts String\n)ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01498_alter_column_storage_memory.sql","errors":[]},{"query":"CREATE TABLE defaults (\n\tn Int32,\n\ts String\n)ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01497_mutation_support_for_storage_memory.sql","errors":[]},{"query":"CREATE TABLE test_new_col (\n\\`_csv\\` String,\n\\`csv_as_array\\` Array(String) ALIAS splitByChar(';',_csv),\n\\`csv_col1\\` String DEFAULT csv_as_array[1],\n\\`csv_col2\\` String DEFAULT csv_as_array[2]\n)\nENGINE = MergeTree\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01497_alias_on_default_array.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_new_col (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table test1 (i Int64) engine MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01496_signedness_conversion_monotonicity.sql","errors":[]},{"query":"CREATE TABLE cte1(a Int64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01495_subqueries_in_with_statement_3.sql","errors":[]},{"query":"CREATE TABLE cte2(a Int64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01495_subqueries_in_with_statement_3.sql","errors":[]},{"query":"CREATE TABLE test1(i int, j int) ENGINE Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01495_subqueries_in_with_statement.sql","errors":[]},{"query":"create table with_test engine=Memory as select cast(number-1 as Nullable(Int64))  n from numbers(10000);","fileName":"../ClickHouse/tests/queries/0_stateless/01495_subqueries_in_with_statement.sql","errors":[]},{"query":"CREATE TABLE join (k UInt64, s String) ENGINE = Join(ANY, LEFT, k);","fileName":"../ClickHouse/tests/queries/0_stateless/01494_storage_join_persistency.sql","errors":[]},{"query":"CREATE TABLE join (k UInt64, s String) ENGINE = Join(ANY, LEFT, k) SETTINGS persistent=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01494_storage_join_persistency.sql","errors":[]},{"query":"CREATE TABLE join (k UInt64, s String) ENGINE = Join(ANY, LEFT, k) SETTINGS persistent=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01494_storage_join_persistency.sql","errors":[]},{"query":"CREATE TABLE number (number UInt64) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01493_storage_set_persistency.sql","errors":[]},{"query":"CREATE TABLE set (val UInt64) ENGINE = Set();","fileName":"../ClickHouse/tests/queries/0_stateless/01493_storage_set_persistency.sql","errors":[]},{"query":"CREATE TABLE set (val UInt64) ENGINE = Set() SETTINGS persistent=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01493_storage_set_persistency.sql","errors":[]},{"query":"CREATE TABLE set (val UInt64) ENGINE = Set() SETTINGS persistent=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01493_storage_set_persistency.sql","errors":[]},{"query":"CREATE TABLE default_table ( key UInt64 DEFAULT 42,\nvalue1 UInt64 MATERIALIZED key * key,\nvalue2 ALIAS value1 * key\n)\nENGINE = MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01493_alter_remove_wrong_default.sql","errors":[]},{"query":"CREATE TABLE r_prop_table1 (\ncolumn_default UInt64 DEFAULT 42,\ncolumn_codec String CODEC(ZSTD(10)),\ncolumn_comment Date COMMENT 'Some comment',\ncolumn_ttl UInt64 TTL column_comment + INTERVAL 1 MONTH\n)\nENGINE ReplicatedMergeTree('/clickhouse/{database}/test_01493/r_prop_table', '1')\nORDER BY tuple()\nTTL column_comment + INTERVAL 2 MONTH;","fileName":"../ClickHouse/tests/queries/0_stateless/01493_alter_remove_properties_zookeeper.sql","errors":[]},{"query":"CREATE TABLE r_prop_table2 (\ncolumn_default UInt64 DEFAULT 42,\ncolumn_codec String CODEC(ZSTD(10)),\ncolumn_comment Date COMMENT 'Some comment',\ncolumn_ttl UInt64 TTL column_comment + INTERVAL 1 MONTH\n)\nENGINE ReplicatedMergeTree('/clickhouse/{database}/test_01493/r_prop_table', '2')\nORDER BY tuple()\nTTL column_comment + INTERVAL 2 MONTH;","fileName":"../ClickHouse/tests/queries/0_stateless/01493_alter_remove_properties_zookeeper.sql","errors":[]},{"query":"CREATE TABLE prop_table (\ncolumn_default UInt64 DEFAULT 42,\ncolumn_materialized UInt64 MATERIALIZED column_default * 42,\ncolumn_alias UInt64 ALIAS column_default + 1,\ncolumn_codec String CODEC(ZSTD(10)),\ncolumn_comment Date COMMENT 'Some comment',\ncolumn_ttl UInt64 TTL column_comment + INTERVAL 1 MONTH\n)\nENGINE MergeTree()\nORDER BY tuple()\nTTL column_comment + INTERVAL 2 MONTH;","fileName":"../ClickHouse/tests/queries/0_stateless/01493_alter_remove_properties.sql","errors":[]},{"query":"CREATE TABLE no_prop_table (\nsome_column UInt64\n)\nENGINE MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01493_alter_remove_no_property_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE r_no_prop_table (\nsome_column UInt64\n)\nENGINE ReplicatedMergeTree('/clickhouse/{database}/test/01493_r_no_prop_table', '1')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01493_alter_remove_no_property_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE t_enum(x Enum8('hello' = 1, 'world' = 2)) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01490_nullable_string_to_enum.sql","errors":[]},{"query":"CREATE TABLE t_source(x Nullable(String)) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01490_nullable_string_to_enum.sql","errors":[]},{"query":"CREATE TABLE a (key UInt32) ENGINE = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01483_merge_table_join_and_group_by.sql","errors":[]},{"query":"CREATE TABLE b (key UInt32, ID UInt32) ENGINE = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01483_merge_table_join_and_group_by.sql","errors":[]},{"query":"CREATE TABLE m (key UInt32) ENGINE = Merge(currentDatabase(), 'a');","fileName":"../ClickHouse/tests/queries/0_stateless/01483_merge_table_join_and_group_by.sql","errors":[]},{"query":"CREATE TABLE APPLICATION ( \\`Name\\` LowCardinality(String),\n\\`Base\\` LowCardinality(String)\n) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01482_move_to_prewhere_and_cast.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE APPLICATION ( \\'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE TABLE DATABASE_IO ( \\`Application\\` LowCardinality(String),\n\\`Base\\` LowCardinality(String),\n\\`Date\\` DateTime,\n\\`Ios\\` UInt32  ) \nENGINE = MergeTree()\nORDER BY Date;","fileName":"../ClickHouse/tests/queries/0_stateless/01482_move_to_prewhere_and_cast.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE DATABASE_IO ( \\'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"create table t1 (\ncol UInt64,\nx UInt64 MATERIALIZED col + 1\n) Engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01481_join_with_materialized.sql","errors":[]},{"query":"create table t2 (\nx UInt64\n) Engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01481_join_with_materialized.sql","errors":[]},{"query":"CREATE TABLE binary_op_mono1(i int, j int) ENGINE MergeTree PARTITION BY toDate(i / 1000) ORDER BY j;","fileName":"../ClickHouse/tests/queries/0_stateless/01480_binary_operator_monotonicity.sql","errors":[]},{"query":"CREATE TABLE binary_op_mono2(i int, j int) ENGINE MergeTree PARTITION BY 1000 / i ORDER BY j settings allow_floating_point_partition_key=true;;","fileName":"../ClickHouse/tests/queries/0_stateless/01480_binary_operator_monotonicity.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE binary_op_mono2(i int, j int) ENGINE MergeTree PARTITION BY 1000 / i ORDER BY j settings allow_floating_point_partition_key=true'","startColumn":137,"startLine":1,"endColumn":141,"endLine":1}]},{"query":"CREATE TABLE binary_op_mono3(i int, j int) ENGINE MergeTree PARTITION BY i + 1000 ORDER BY j;","fileName":"../ClickHouse/tests/queries/0_stateless/01480_binary_operator_monotonicity.sql","errors":[]},{"query":"CREATE TABLE binary_op_mono4(i int, j int) ENGINE MergeTree PARTITION BY 1000 + i ORDER BY j;","fileName":"../ClickHouse/tests/queries/0_stateless/01480_binary_operator_monotonicity.sql","errors":[]},{"query":"CREATE TABLE binary_op_mono5(i int, j int) ENGINE MergeTree PARTITION BY i - 1000 ORDER BY j;","fileName":"../ClickHouse/tests/queries/0_stateless/01480_binary_operator_monotonicity.sql","errors":[]},{"query":"CREATE TABLE binary_op_mono6(i int, j int) ENGINE MergeTree PARTITION BY 1000 - i ORDER BY j;","fileName":"../ClickHouse/tests/queries/0_stateless/01480_binary_operator_monotonicity.sql","errors":[]},{"query":"CREATE TABLE binary_op_mono7(i int, j int) ENGINE MergeTree PARTITION BY i / 1000.0 ORDER BY j settings allow_floating_point_partition_key=true;;","fileName":"../ClickHouse/tests/queries/0_stateless/01480_binary_operator_monotonicity.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE binary_op_mono7(i int, j int) ENGINE MergeTree PARTITION BY i / 1000.0 ORDER BY j settings allow_floating_point_partition_key=true'","startColumn":139,"startLine":1,"endColumn":143,"endLine":1}]},{"query":"CREATE TABLE binary_op_mono8(i int, j int) ENGINE MergeTree PARTITION BY 1000.0 / i ORDER BY j settings allow_floating_point_partition_key=true;;","fileName":"../ClickHouse/tests/queries/0_stateless/01480_binary_operator_monotonicity.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE binary_op_mono8(i int, j int) ENGINE MergeTree PARTITION BY 1000.0 / i ORDER BY j settings allow_floating_point_partition_key=true'","startColumn":139,"startLine":1,"endColumn":143,"endLine":1}]},{"query":"create table x (i int, j int) engine MergeTree order by i / 10 settings index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01480_binary_operator_monotonicity.sql","errors":[]},{"query":"CREATE TABLE t (\\`x\\` UInt32, \\`s\\` LowCardinality(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01476_right_full_join_switch.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE nr (\\`x\\` Nullable(UInt32), \\`s\\` Nullable(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01476_right_full_join_switch.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE nr (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE null_subcolumns (id UInt32, n Nullable(String)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01475_read_subcolumns_3.sql","errors":[]},{"query":"CREATE TABLE map_subcolumns (id UInt32, m Map(String, UInt32)) ENGINE = MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01475_read_subcolumns_3.sql","errors":[]},{"query":"CREATE TABLE subcolumns (\nt Tuple\n(\na Array(Nullable(UInt32)),\nu UInt32,\ns Nullable(String)\n),\narr Array(Nullable(String)),\narr2 Array(Array(Nullable(String))),\nlc LowCardinality(String),\nnested Nested(col1 String, col2 Nullable(UInt32))\n)\nENGINE = MergeTree order by tuple() SETTINGS min_bytes_for_wide_part = '10M';","fileName":"../ClickHouse/tests/queries/0_stateless/01475_read_subcolumns_2.sql","errors":[]},{"query":"CREATE TABLE subcolumns (\nt Tuple\n(\na Array(Nullable(UInt32)),\nu UInt32,\ns Nullable(String)\n),\narr Array(Nullable(String)),\narr2 Array(Array(Nullable(String))),\nlc LowCardinality(String),\nnested Nested(col1 String, col2 Nullable(UInt32))\n)\nENGINE = MergeTree order by tuple() SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01475_read_subcolumns_2.sql","errors":[]},{"query":"CREATE TABLE t_arr (a Array(UInt32)) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01475_read_subcolumns.sql","errors":[]},{"query":"CREATE TABLE t_tup (t Tuple(s String, u UInt32)) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01475_read_subcolumns.sql","errors":[]},{"query":"CREATE TABLE t_nul (n Nullable(UInt32)) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01475_read_subcolumns.sql","errors":[]},{"query":"CREATE TABLE t_map (m Map(String, UInt32)) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01475_read_subcolumns.sql","errors":[]},{"query":"CREATE TABLE mutation_table ( id int,\nprice Nullable(Int32)\n)\nENGINE = MergeTree()\nPARTITION BY id\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01475_mutation_with_if.sql","errors":[]},{"query":"create table mutation_table (  dt Nullable(Date), name Nullable(String)) engine MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01475_mutation_with_if.sql","errors":[]},{"query":"CREATE TABLE local_table (id UInt64, val String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01474_bad_global_join.sql","errors":[]},{"query":"CREATE TABLE dist_table AS local_table ENGINE = Distributed('test_cluster_two_shards_localhost', currentDatabase(), local_table);","fileName":"../ClickHouse/tests/queries/0_stateless/01474_bad_global_join.sql","errors":[]},{"query":"CREATE TABLE table_for_ttl( d DateTime,\nkey UInt64,\nvalue String)\nENGINE = MergeTree()\nORDER BY tuple()\nPARTITION BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01471_calculate_ttl_during_merge.sql","errors":[]},{"query":"CREATE TABLE insert_select_dst (i int, middle_a int, middle_b int, j int) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01470_test_insert_select_asterisk.sql","errors":[]},{"query":"CREATE TABLE insert_select_src (i int, j int) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01470_test_insert_select_asterisk.sql","errors":[]},{"query":"create database if not exists test_01470;","fileName":"../ClickHouse/tests/queries/0_stateless/01470_show_databases_like.sql","errors":[{"message":"no viable alternative at input 'create database if not exists test_01470;'","startColumn":40,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"CREATE TABLE columns_transformers (i int, j int, k int, a_bytes int, b_bytes int, c_bytes int) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01470_columns_transformers2.sql","errors":[]},{"query":"CREATE TABLE columns_transformers (i Int64, j Int16, k Int64) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01470_columns_transformers.sql","errors":[]},{"query":"CREATE TABLE recompression_table (\ndt DateTime,\nkey UInt64,\nvalue String\n) ENGINE MergeTree()\nORDER BY tuple()\nPARTITION BY key\nTTL dt + INTERVAL 1 MONTH RECOMPRESS CODEC(ZSTD(17)), dt + INTERVAL 1 YEAR RECOMPRESS CODEC(LZ4HC(10))\nSETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01465_ttl_recompression.sql","errors":[{"message":"mismatched input 'CODEC' expecting <EOF>","startColumn":37,"startLine":8,"endColumn":42,"endLine":8}]},{"query":"CREATE TABLE recompression_table_compact (\ndt DateTime,\nkey UInt64,\nvalue String\n) ENGINE MergeTree()\nORDER BY tuple()\nPARTITION BY key\nTTL dt + INTERVAL 1 MONTH RECOMPRESS CODEC(ZSTD(17)), dt + INTERVAL 1 YEAR RECOMPRESS CODEC(LZ4HC(10))\nSETTINGS min_rows_for_wide_part = 10000;","fileName":"../ClickHouse/tests/queries/0_stateless/01465_ttl_recompression.sql","errors":[{"message":"mismatched input 'CODEC' expecting <EOF>","startColumn":37,"startLine":8,"endColumn":42,"endLine":8}]},{"query":"CREATE TABLE compression_codec_on_alias ( \\`c0\\` ALIAS c1 CODEC(ZSTD),\nc1 UInt64\n) ENGINE = MergeTree() PARTITION BY c0 ORDER BY c1; -- { serverError BAD_ARGUMENTS }\nselect 'create table compression_codec_on_alias with proper CODEC';","fileName":"../ClickHouse/tests/queries/0_stateless/01462_test_codec_on_alias.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE compression_codec_on_alias ( \\'","startColumn":42,"startLine":1,"endColumn":43,"endLine":1}]},{"query":"CREATE TABLE compression_codec_on_alias ( c0 UInt64 CODEC(ZSTD),\nc1 UInt64\n) ENGINE = MergeTree() PARTITION BY c0 ORDER BY c1; -- success\nselect 'alter table compression_codec_on_alias add column (ALIAS type) with CODEC';","fileName":"../ClickHouse/tests/queries/0_stateless/01462_test_codec_on_alias.sql","errors":[]},{"query":"CREATE TABLE table_from_remote AS remote('localhost', 'system', 'numbers');","fileName":"../ClickHouse/tests/queries/0_stateless/01461_alter_table_function.sql","errors":[]},{"query":"CREATE TABLE table_from_numbers AS numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01461_alter_table_function.sql","errors":[]},{"query":"CREATE TABLE table_from_select ENGINE = MergeTree() ORDER BY tuple() AS SELECT number from system.numbers LIMIT 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01461_alter_table_function.sql","errors":[]},{"query":"CREATE TABLE pk (d Date DEFAULT '2000-01-01', x DateTime, y UInt64, z UInt64) ENGINE = MergeTree() PARTITION BY d ORDER BY (toStartOfMinute(x), y, z) SETTINGS index_granularity_bytes=19, min_index_granularity_bytes=1, write_final_mark = 0; -- one row granule INSERT INTO pk (x, y, z) VALUES (1, 11, 1235), (2, 11, 4395), (3, 22, 3545), (4, 22, 6984), (5, 33, 4596), (61, 11, 4563), (62, 11, 4578), (63, 11, 3572), (64, 22, 5786), (65, 22, 5786), (66, 22, 2791), (67, 22, 2791), (121, 33, 2791), (122, 33, 2791), (123, 33, 1235), (124, 44, 4935), (125, 44, 4578), (126, 55, 5786), (127, 55, 2791), (128, 55, 1235);","fileName":"../ClickHouse/tests/queries/0_stateless/01460_mark_inclusion_search_crash.sql","errors":[]},{"query":"CREATE TABLE tuple (\n\\`j\\` Tuple(a Int8, b String)\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01458_named_tuple_millin.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tuple (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE tuple ENGINE = Memory AS SELECT CAST((1, 'Test'), 'Tuple(a Int8,  b String)') AS j;","fileName":"../ClickHouse/tests/queries/0_stateless/01458_named_tuple_millin.sql","errors":[]},{"query":"CREATE TABLE  order_by_nulls_first (diff Nullable(Int16), traf UInt64)\nENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01457_order_by_nulls_first.sql","errors":[]},{"query":"create table order_by_another (a Nullable(UInt64), b UInt64) Engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01457_order_by_limit.sql","errors":[]},{"query":"CREATE TABLE invalid_min_index_granularity_bytes_setting (\nid UInt64,\nvalue String\n) ENGINE MergeTree()\nORDER BY id SETTINGS index_granularity_bytes = 1, min_index_granularity_bytes = 1024; -- { serverError BAD_ARGUMENTS }\nDROP TABLE IF EXISTS valid_min_index_granularity_bytes_setting;","fileName":"../ClickHouse/tests/queries/0_stateless/01457_min_index_granularity_bytes_setting.sql","errors":[]},{"query":"CREATE TABLE valid_min_index_granularity_bytes_setting (\nid UInt64,\nvalue String\n) ENGINE MergeTree()\nORDER BY id SETTINGS index_granularity_bytes = 2024, min_index_granularity_bytes = 1024;","fileName":"../ClickHouse/tests/queries/0_stateless/01457_min_index_granularity_bytes_setting.sql","errors":[]},{"query":"CREATE DATABASE test_01457;","fileName":"../ClickHouse/tests/queries/0_stateless/01457_create_as_table_function_structure.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE test_01457;'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE tmp (n Int8) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01457_create_as_table_function_structure.sql","errors":[]},{"query":"CREATE TABLE test_01457.tf_remote AS remote('localhost', currentDatabase(), 'tmp');","fileName":"../ClickHouse/tests/queries/0_stateless/01457_create_as_table_function_structure.sql","errors":[]},{"query":"CREATE TABLE test_01457.tf_remote_explicit_structure (n UInt64) AS remote('localhost', currentDatabase(), 'tmp');","fileName":"../ClickHouse/tests/queries/0_stateless/01457_create_as_table_function_structure.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_01457.tf_remote_explicit_structure (n UInt64) AS remote'","startColumn":67,"startLine":1,"endColumn":73,"endLine":1}]},{"query":"CREATE TABLE test_01457.tf_numbers (number String) AS numbers(1);","fileName":"../ClickHouse/tests/queries/0_stateless/01457_create_as_table_function_structure.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_01457.tf_numbers (number String) AS numbers'","startColumn":54,"startLine":1,"endColumn":61,"endLine":1}]},{"query":"CREATE TABLE test_01457.tf_merge AS merge(currentDatabase(), 'tmp');","fileName":"../ClickHouse/tests/queries/0_stateless/01457_create_as_table_function_structure.sql","errors":[]},{"query":"CREATE TABLE tmp (n Int8) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01457_create_as_table_function_structure.sql","errors":[]},{"query":"CREATE TABLE tbl(a String, b UInt32, c Float64, d Int64, e UInt8) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01456_modify_column_type_via_add_drop_update.sql","errors":[]},{"query":"CREATE TABLE tbl(a String, b UInt32, c Float64, d Int64, e UInt8) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01456_modify_column_type_via_add_drop_update.sql","errors":[]},{"query":"create table order_test1 (\ntimestamp DateTime64(3),\ncolor     LowCardinality(String)\n) engine = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01456_low_cardinality_sorting_bugfix.sql","errors":[]},{"query":"CREATE TABLE local_table (number UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01456_ast_optimizations_over_distributed.sql","errors":[]},{"query":"CREATE TABLE dist AS local_table ENGINE = Distributed(test_cluster_two_shards_localhost, currentDatabase(), local_table);","fileName":"../ClickHouse/tests/queries/0_stateless/01456_ast_optimizations_over_distributed.sql","errors":[]},{"query":"CREATE TABLE test_local (date Date, value UInt32) ENGINE = MergeTree(date, date, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01455_shard_leaf_max_rows_bytes_to_read.sql","errors":[]},{"query":"CREATE TABLE test_distributed AS test_local ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), test_local, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01455_shard_leaf_max_rows_bytes_to_read.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS db_01455_rank_correlation;","fileName":"../ClickHouse/tests/queries/0_stateless/01455_rank_correlation_spearman.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS db_01455_rank_correlation;'","startColumn":55,"startLine":1,"endColumn":56,"endLine":1}]},{"query":"CREATE TABLE moons(a Float64, b Float64) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01455_rank_correlation_spearman.sql","errors":[]},{"query":"CREATE TABLE circles(a Float64, b Float64) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01455_rank_correlation_spearman.sql","errors":[]},{"query":"CREATE TABLE t (x UInt64) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01455_optimize_trivial_insert_select.sql","errors":[]},{"query":"CREATE TABLE compress_table (\nkey UInt64,\nvalue1 String CODEC(Default),\nvalue2 UInt64 CODEC(Delta, Default),\nvalue3 String CODEC(ZSTD(10))\n)\nENGINE = MergeTree()\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01455_default_compression.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS badFixedStringSort (uuid5_old FixedString(16), subitem String) engine=MergeTree order by  tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01453_fixsed_string_sort.sql","errors":[]},{"query":"CREATE TABLE replica1 (v UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/'||currentDatabase()||'test/01451/attach', 'r1') order by tuple() settings max_replicated_merges_in_queue = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01451_replicated_detach_drop_part_long.sql","errors":[]},{"query":"CREATE TABLE replica2 (v UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/'||currentDatabase()||'test/01451/attach', 'r2') order by tuple() settings max_replicated_merges_in_queue = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01451_replicated_detach_drop_part_long.sql","errors":[]},{"query":"CREATE TABLE replica1 (v UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/01451/quorum', 'r1') order by tuple() settings max_replicated_merges_in_queue = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01451_replicated_detach_drop_and_quorum_long.sql","errors":[]},{"query":"CREATE TABLE replica2 (v UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/01451/quorum', 'r2') order by tuple() settings max_replicated_merges_in_queue = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01451_replicated_detach_drop_and_quorum_long.sql","errors":[]},{"query":"CREATE TABLE mt_01451 (v UInt8) ENGINE = MergeTree() order by tuple() SETTINGS old_parts_lifetime=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01451_detach_drop_part.sql","errors":[]},{"query":"CREATE TABLE test_mtree (\\`x\\` String, INDEX idx x TYPE set(10) GRANULARITY 1) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01450_set_null_const.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_mtree (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE test (a DateTime, b DateTime(), c DateTime(2), d DateTime('Asia/Istanbul'), e DateTime(3, 'Asia/Istanbul'), f DateTime32, g DateTime32('Asia/Istanbul'), h DateTime(0)) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01442_date_time_with_params.sql","errors":[]},{"query":"CREATE TABLE t_01411( str LowCardinality(String),\narr Array(LowCardinality(String)) default [str]\n) ENGINE = MergeTree()\nORDER BY tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01441_low_cardinality_array_index.sql","errors":[]},{"query":"CREATE TABLE t_01411_num( num UInt8,\narr Array(LowCardinality(Int64)) default [num]\n) ENGINE = MergeTree()\nORDER BY tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01441_low_cardinality_array_index.sql","errors":[]},{"query":"CREATE TABLE tdm (x DateTime('Asia/Istanbul')) ENGINE = MergeTree ORDER BY x SETTINGS write_final_mark = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01440_to_date_monotonicity.sql","errors":[]},{"query":"CREATE TABLE tdm2 (timestamp UInt32) ENGINE = MergeTree ORDER BY timestamp SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01440_to_date_monotonicity.sql","errors":[]},{"query":"CREATE TABLE t (x UInt64, i256 Int256, u256 UInt256, d256 Decimal256(2)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01440_big_int_exotic_casts.sql","errors":[]},{"query":"CREATE TABLE test1 (id Int64, name String) ENGINE MergeTree PARTITION BY (id) ORDER BY (id);","fileName":"../ClickHouse/tests/queries/0_stateless/01436_storage_merge_with_join_push_down.sql","errors":[]},{"query":"CREATE TABLE test1_distributed AS test1 ENGINE = Distributed(test_cluster_two_shards_localhost, default, test1);","fileName":"../ClickHouse/tests/queries/0_stateless/01436_storage_merge_with_join_push_down.sql","errors":[]},{"query":"CREATE TABLE test_merge AS test1 ENGINE = Merge('default', 'test1_distributed');","fileName":"../ClickHouse/tests/queries/0_stateless/01436_storage_merge_with_join_push_down.sql","errors":[]},{"query":"CREATE TABLE test1 (id Int64, name String) ENGINE MergeTree PARTITION BY (id) ORDER BY (id);","fileName":"../ClickHouse/tests/queries/0_stateless/01436_storage_merge_with_join_push_down.sql","errors":[]},{"query":"CREATE TABLE test_merge AS test1 ENGINE = Merge('default', 'test1');","fileName":"../ClickHouse/tests/queries/0_stateless/01436_storage_merge_with_join_push_down.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t (x Float64);","fileName":"../ClickHouse/tests/queries/0_stateless/01433_hex_float.sql","errors":[]},{"query":"CREATE TABLE pk_func (\\`d\\` DateTime, \\`ui\\` UInt32 ) ENGINE = MergeTree ORDER BY toDate(d);","fileName":"../ClickHouse/tests/queries/0_stateless/01431_finish_sorting_with_consts.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE pk_func (\\'","startColumn":22,"startLine":1,"endColumn":23,"endLine":1}]},{"query":"CREATE TABLE modify_sample (d Date DEFAULT '2000-01-01', x UInt8) ENGINE = MergeTree PARTITION BY d ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01430_modify_sample_by_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE modify_sample_replicated (d Date DEFAULT '2000-01-01', x UInt8, y UInt64) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01430', 'modify_sample') PARTITION BY d ORDER BY (x, y);","fileName":"../ClickHouse/tests/queries/0_stateless/01430_modify_sample_by_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE modify_sample_old (d Date DEFAULT '2000-01-01', x UInt8, y UInt64) ENGINE = MergeTree(d, (x, y), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01430_modify_sample_by_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE pk (x DateTime) ENGINE = MergeTree ORDER BY toStartOfMinute(x) SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01427_pk_and_expression_with_different_type.sql","errors":[]},{"query":"CREATE TABLE index_compact(a UInt32, b UInt32, index i1 b type minmax granularity 1) ENGINE = MergeTree ORDER BY a\nSETTINGS min_rows_for_wide_part = 1000, index_granularity = 128, merge_max_block_size = 100;","fileName":"../ClickHouse/tests/queries/0_stateless/01419_skip_index_compact_parts.sql","errors":[]},{"query":"CREATE TABLE mytable_local (\ncreated          DateTime,\neventday         Date,\nuser_id          UInt32\n)\nENGINE = MergeTree()\nPARTITION BY toYYYYMM(eventday)\nORDER BY (eventday, user_id)\nSETTINGS number_of_free_entries_in_pool_to_execute_mutation = 100; -- { serverError BAD_ARGUMENTS }\nCREATE TABLE mytable_local\n(\ncreated          DateTime,\neventday         Date,\nuser_id          UInt32\n)\nENGINE = MergeTree()\nPARTITION BY toYYYYMM(eventday)\nORDER BY (eventday, user_id)\nSETTINGS number_of_free_entries_in_pool_to_lower_max_size_of_merge = 100; -- { serverError BAD_ARGUMENTS }\nCREATE TABLE mytable_local\n(\ncreated          DateTime,\neventday         Date,\nuser_id          UInt32\n)\nENGINE = MergeTree()\nPARTITION BY toYYYYMM(eventday)\nORDER BY (eventday, user_id)\nSETTINGS number_of_free_entries_in_pool_to_execute_optimize_entire_partition = 100; -- { serverError BAD_ARGUMENTS }\nCREATE TABLE mytable_local\n(\ncreated          DateTime,\neventday         Date,\nuser_id          UInt32\n)\nENGINE = MergeTree()\nPARTITION BY toYYYYMM(eventday)\nORDER BY (eventday, user_id);","fileName":"../ClickHouse/tests/queries/0_stateless/01419_merge_tree_settings_sanity_check.sql","errors":[]},{"query":"CREATE TABLE mytable_local ( created          DateTime,\neventday         Date,\nuser_id          UInt32\n)\nENGINE = MergeTree()\nPARTITION BY toYYYYMM(eventday)\nORDER BY (eventday, user_id);","fileName":"../ClickHouse/tests/queries/0_stateless/01418_index_analysis_bug.sql","errors":[]},{"query":"CREATE TABLE table_float (\nf Float64,\nu UInt32\n)\nENGINE = MergeTree\nORDER BY (f, u);","fileName":"../ClickHouse/tests/queries/0_stateless/01418_index_analysis_bug.sql","errors":[]},{"query":"CREATE SETTINGS PROFILE s1_01418 SETTINGS custom_compound.identifier.v2 = 100;","fileName":"../ClickHouse/tests/queries/0_stateless/01418_custom_settings.sql","errors":[{"message":"no viable alternative at input 'CREATE SETTINGS'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE SETTINGS PROFILE s2_01418 SETTINGS custom_null = NULL;","fileName":"../ClickHouse/tests/queries/0_stateless/01418_custom_settings.sql","errors":[{"message":"no viable alternative at input 'CREATE SETTINGS'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE TABLE tableCommon (\\`key\\` FixedString(15), \\`value\\` Nullable(Int8)) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/01416_join_totals_header_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tableCommon (\\'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE tableTrees (\\`key\\` FixedString(15), \\`name\\` Nullable(Int8), \\`name2\\` Nullable(Int8)) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/01416_join_totals_header_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tableTrees (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE tableFlowers (\\`key\\` FixedString(15), \\`name\\` Nullable(Int8)) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/01416_join_totals_header_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tableFlowers (\\'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE TABLE table_with_pk_clear( key1 UInt64,\nkey2 String,\nvalue1 String,\nvalue2 String\n)\nENGINE = MergeTree()\nORDER by (key1, key2);","fileName":"../ClickHouse/tests/queries/0_stateless/01416_clear_column_pk.sql","errors":[]},{"query":"CREATE TABLE t (x UInt8, s String) ENGINE = MergeTree ORDER BY x SETTINGS number_of_free_entries_in_pool_to_execute_mutation = 15;","fileName":"../ClickHouse/tests/queries/0_stateless/01415_inconsistent_merge_tree_settings.sql","errors":[]},{"query":"CREATE TABLE numbers_indexed Engine=MergeTree ORDER BY number PARTITION BY bitShiftRight(number,8) SETTINGS index_granularity=8 AS SELECT * FROM numbers(16384);","fileName":"../ClickHouse/tests/queries/0_stateless/01414_push_predicate_when_contains_with_clause.sql","errors":[]},{"query":"CREATE VIEW squares AS WITH number*2 AS square_number SELECT number, square_number FROM numbers_indexed;","fileName":"../ClickHouse/tests/queries/0_stateless/01414_push_predicate_when_contains_with_clause.sql","errors":[]},{"query":"CREATE TABLE mutation_table (\ndate Date,\nkey UInt64,\nvalue String\n)\nENGINE = MergeTree()\nPARTITION BY date\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01414_mutations_and_errors.sql","errors":[]},{"query":"CREATE TABLE lc_nullable ( order_key   Array(LowCardinality(Nullable(UInt64))),\ni8  Array(LowCardinality(Nullable(Int8))),\ni16 Array(LowCardinality(Nullable(Int16))),\ni32 Array(LowCardinality(Nullable(Int32))),\ni64 Array(LowCardinality(Nullable(Int64))),\nu8  Array(LowCardinality(Nullable(UInt8))),\nu16 Array(LowCardinality(Nullable(UInt16))),\nu32 Array(LowCardinality(Nullable(UInt32))),\nu64 Array(LowCardinality(Nullable(UInt64))),\nf32 Array(LowCardinality(Nullable(Float32))),\nf64 Array(LowCardinality(Nullable(Float64))),\ndate Array(LowCardinality(Nullable(Date))),\ndate_time Array(LowCardinality(Nullable(DateTime('Asia/Istanbul')))),\nstr Array(LowCardinality(Nullable(String))),\nfixed_string Array(LowCardinality(Nullable(FixedString(5))))\n) ENGINE = MergeTree() ORDER BY order_key SETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01414_low_cardinality_nullable.sql","errors":[]},{"query":"CREATE TABLE t (k UInt64, s String) ENGINE = MergeTree ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/01414_freeze_does_not_prevent_alters.sql","errors":[]},{"query":"CREATE TABLE test_bloom_filter_index(\\`WatchID\\` UInt64, \\`JavaEnable\\` UInt8, \\`Title\\` String, \\`GoodEvent\\` Int16, \\`EventTime\\` DateTime, \\`EventDate\\` Date, \\`CounterID\\` UInt32, \\`ClientIP\\` UInt32, \\`ClientIP6\\` FixedString(16), \\`RegionID\\` UInt32, \\`UserID\\` UInt64, \\`CounterClass\\` Int8, \\`OS\\` UInt8, \\`UserAgent\\` UInt8, \\`URL\\` String, \\`Referer\\` String, \\`URLDomain\\` String, \\`RefererDomain\\` String, \\`Refresh\\` UInt8, \\`IsRobot\\` UInt8, \\`RefererCategories\\` Array(UInt16), \\`URLCategories\\` Array(UInt16), \\`URLRegions\\` Array(UInt32), \\`RefererRegions\\` Array(UInt32), \\`ResolutionWidth\\` UInt16, \\`ResolutionHeight\\` UInt16, \\`ResolutionDepth\\` UInt8, \\`FlashMajor\\` UInt8, \\`FlashMinor\\` UInt8, \\`FlashMinor2\\` String, \\`NetMajor\\` UInt8, \\`NetMinor\\` UInt8, \\`UserAgentMajor\\` UInt16, \\`UserAgentMinor\\` FixedString(2), \\`CookieEnable\\` UInt8, \\`JavascriptEnable\\` UInt8, \\`IsMobile\\` UInt8, \\`MobilePhone\\` UInt8, \\`MobilePhoneModel\\` String, \\`Params\\` String, \\`IPNetworkID\\` UInt32, \\`TraficSourceID\\` Int8, \\`SearchEngineID\\` UInt16, \\`SearchPhrase\\` String, \\`AdvEngineID\\` UInt8, \\`IsArtifical\\` UInt8, \\`WindowClientWidth\\` UInt16, \\`WindowClientHeight\\` UInt16, \\`ClientTimeZone\\` Int16, \\`ClientEventTime\\` DateTime, \\`SilverlightVersion1\\` UInt8, \\`SilverlightVersion2\\` UInt8, \\`SilverlightVersion3\\` UInt32, \\`SilverlightVersion4\\` UInt16, \\`PageCharset\\` String, \\`CodeVersion\\` UInt32, \\`IsLink\\` UInt8, \\`IsDownload\\` UInt8, \\`IsNotBounce\\` UInt8, \\`FUniqID\\` UInt64, \\`HID\\` UInt32, \\`IsOldCounter\\` UInt8, \\`IsEvent\\` UInt8, \\`IsParameter\\` UInt8, \\`DontCountHits\\` UInt8, \\`WithHash\\` UInt8, \\`HitColor\\` FixedString(1), \\`UTCEventTime\\` DateTime, \\`Age\\` UInt8, \\`Sex\\` UInt8, \\`Income\\` UInt8, \\`Interests\\` UInt16, \\`Robotness\\` UInt8, \\`GeneralInterests\\` Array(UInt16), \\`RemoteIP\\` UInt32, \\`RemoteIP6\\` FixedString(16), \\`WindowName\\` Int32, \\`OpenerName\\` Int32, \\`HistoryLength\\` Int16, \\`BrowserLanguage\\` FixedString(2), \\`BrowserCountry\\` FixedString(2), \\`SocialNetwork\\` String, \\`SocialAction\\` String, \\`HTTPError\\` UInt16, \\`SendTiming\\` Int32, \\`DNSTiming\\` Int32, \\`ConnectTiming\\` Int32, \\`ResponseStartTiming\\` Int32, \\`ResponseEndTiming\\` Int32, \\`FetchTiming\\` Int32, \\`RedirectTiming\\` Int32, \\`DOMInteractiveTiming\\` Int32, \\`DOMContentLoadedTiming\\` Int32, \\`DOMCompleteTiming\\` Int32, \\`LoadEventStartTiming\\` Int32, \\`LoadEventEndTiming\\` Int32, \\`NSToDOMContentLoadedTiming\\` Int32, \\`FirstPaintTiming\\` Int32, \\`RedirectCount\\` Int8, \\`SocialSourceNetworkID\\` UInt8, \\`SocialSourcePage\\` String, \\`ParamPrice\\` Int64, \\`ParamOrderID\\` String, \\`ParamCurrency\\` FixedString(3), \\`ParamCurrencyID\\` UInt16, \\`GoalsReached\\` Array(UInt32), \\`OpenstatServiceName\\` String, \\`OpenstatCampaignID\\` String, \\`OpenstatAdID\\` String, \\`OpenstatSourceID\\` String, \\`UTMSource\\` String, \\`UTMMedium\\` String, \\`UTMCampaign\\` String, \\`UTMContent\\` String, \\`UTMTerm\\` String, \\`FromTag\\` String, \\`HasGCLID\\` UInt8, \\`RefererHash\\` UInt64, \\`URLHash\\` UInt64, \\`CLID\\` UInt32, \\`YCLID\\` UInt64, \\`ShareService\\` String, \\`ShareURL\\` String, \\`ShareTitle\\` String, \\`ParsedParams.Key1\\` Array(String), \\`ParsedParams.Key2\\` Array(String), \\`ParsedParams.Key3\\` Array(String), \\`ParsedParams.Key4\\` Array(String), \\`ParsedParams.Key5\\` Array(String), \\`ParsedParams.ValueDouble\\` Array(Float64), \\`IslandID\\` FixedString(16), \\`RequestNum\\` UInt32, \\`RequestTry\\` UInt8, INDEX test1 RegionID TYPE bloom_filter GRANULARITY 8129) ENGINE = MergeTree() PARTITION BY toYYYYMM(EventDate) ORDER BY (CounterID, EventDate, intHash32(UserID)) SAMPLE BY intHash32(UserID) SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01414_bloom_filter_index_with_const_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_bloom_filter_index(\\'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE TABLE test_bloom_filter_index(\\`uint8\\` UInt8, \\`uint16\\` UInt16, \\`index_column\\` UInt64,  INDEX test1 \\`index_column\\` TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree() PARTITION BY tuple() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01414_bloom_filter_index_with_const_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_bloom_filter_index(\\'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE TABLE truncate_test(uint8 UInt8) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01413_truncate_without_table_keyword.sql","errors":[]},{"query":"CREATE TABLE rows_events_test (k UInt32, v UInt32) ENGINE = MergeTree ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/01413_rows_events.sql","errors":[]},{"query":"CREATE TABLE t (x UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01413_alter_update_supertype.sql","errors":[]},{"query":"CREATE TABLE non_metadata_alters ( key UInt64,\nvalue1 String,\nvalue2 Enum8('Hello' = 1, 'World' = 2),\nvalue3 UInt16,\nvalue4 DateTime,\nvalue5 Date\n)\nENGINE = MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01413_allow_non_metadata_alters.sql","errors":[]},{"query":"CREATE TABLE tracking_events_tmp (\\`APIKey\\` UInt32, \\`EventDate\\` Date) ENGINE = MergeTree PARTITION BY toYYYYMM(EventDate) ORDER BY (APIKey, EventDate);","fileName":"../ClickHouse/tests/queries/0_stateless/01412_row_from_totals.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tracking_events_tmp (\\'","startColumn":34,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"CREATE TABLE open_events_tmp (\\`APIKey\\` UInt32, \\`EventDate\\` Date) ENGINE = MergeTree PARTITION BY toMonday(EventDate) ORDER BY (APIKey, EventDate);","fileName":"../ClickHouse/tests/queries/0_stateless/01412_row_from_totals.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE open_events_tmp (\\'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"create table tesd_dedupl (x UInt32, y UInt32) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/01412_optimize_deduplicate_bug.sql","errors":[]},{"query":"CREATE TABLE test_23634 (id Nullable(String), s Nullable(String), s1 Nullable(String)) ENGINE = MergeTree() ORDER BY (id,s) SETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01410_nullable_key_and_index_negate_cond.sql","errors":[]},{"query":"CREATE TABLE nullable_key (k Nullable(int), v int) ENGINE MergeTree ORDER BY k SETTINGS allow_nullable_key = 1, index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01410_nullable_key_and_index.sql","errors":[]},{"query":"CREATE TABLE nullable_key_without_final_mark (s Nullable(String)) ENGINE MergeTree ORDER BY s SETTINGS allow_nullable_key = 1, write_final_mark = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01410_nullable_key_and_index.sql","errors":[]},{"query":"CREATE TABLE nullable_minmax_index (k int, v Nullable(int), INDEX v_minmax v TYPE minmax GRANULARITY 4) ENGINE MergeTree ORDER BY k SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01410_nullable_key_and_index.sql","errors":[]},{"query":"CREATE TABLE xxxx_null (\\`ts\\` Nullable(DateTime)) ENGINE = MergeTree ORDER BY toStartOfHour(ts) SETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01410_nullable_key_and_index.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE xxxx_null (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE l (luid Nullable(Int16), name String) ENGINE=MergeTree order by luid settings allow_nullable_key=1 as\nselect * from VALUES ((1231, 'John'),(6666, 'Ksenia'),(Null, '---'));","fileName":"../ClickHouse/tests/queries/0_stateless/01410_full_join_and_null_predicates.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE l (luid Nullable(Int16), name String) ENGINE=MergeTree order by luid settings allow_nullable_key=1 as\\nselect * from VALUES (('","startColumn":22,"startLine":2,"endColumn":23,"endLine":2}]},{"query":"CREATE TABLE r (ruid Nullable(Int16), name String) ENGINE=MergeTree order by ruid  settings allow_nullable_key=1 as\nselect * from VALUES ((1231, 'John'),(1232, 'Johny'));","fileName":"../ClickHouse/tests/queries/0_stateless/01410_full_join_and_null_predicates.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE r (ruid Nullable(Int16), name String) ENGINE=MergeTree order by ruid  settings allow_nullable_key=1 as\\nselect * from VALUES (('","startColumn":22,"startLine":2,"endColumn":23,"endLine":2}]},{"query":"CREATE TABLE l (luid Nullable(Int16), name String) ENGINE=MergeTree order by tuple() as select * from VALUES ((1231, 'John'),(6666, 'Ksenia'),(Null, '---'));","fileName":"../ClickHouse/tests/queries/0_stateless/01410_full_join_and_null_predicates.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE l (luid Nullable(Int16), name String) ENGINE=MergeTree order by tuple() as select * from VALUES (('","startColumn":110,"startLine":1,"endColumn":111,"endLine":1}]},{"query":"CREATE TABLE r (ruid Nullable(Int16), name String) ENGINE=MergeTree order by tuple()  as select * from VALUES ((1231, 'John'),(1232, 'Johny'));","fileName":"../ClickHouse/tests/queries/0_stateless/01410_full_join_and_null_predicates.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE r (ruid Nullable(Int16), name String) ENGINE=MergeTree order by tuple()  as select * from VALUES (('","startColumn":111,"startLine":1,"endColumn":112,"endLine":1}]},{"query":"create table data_01409 engine=Memory as select * from numbers(20);","fileName":"../ClickHouse/tests/queries/0_stateless/01409_topK_merge.sql","errors":[]},{"query":"CREATE TABLE test_joinGet(a String, b String, c Float64) ENGINE = Join(any, left, a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/01400_join_get_with_multi_keys.sql","errors":[]},{"query":"CREATE TABLE test_lc(a LowCardinality(String), b LowCardinality(String), c Float64) ENGINE = Join(any, left, a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/01400_join_get_with_multi_keys.sql","errors":[]},{"query":"CREATE TABLE test (\nid   UInt32,\ncode LowCardinality(FixedString(2)) DEFAULT '--'\n) ENGINE = MergeTree() PARTITION BY id ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01396_low_cardinality_fixed_string_default.sql","errors":[]},{"query":"CREATE TABLE tableConversion (conversionId String, value Nullable(Double)) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/01392_column_resolve.sql","errors":[]},{"query":"CREATE TABLE tableClick (clickId String, conversionId String, value Nullable(Double)) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/01392_column_resolve.sql","errors":[]},{"query":"CREATE TABLE leftjoin (id String) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/01392_column_resolve.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE a (a UInt64);","fileName":"../ClickHouse/tests/queries/0_stateless/01391_limit_overflow.sql","errors":[]},{"query":"CREATE TABLE t (click_city_id UInt32, click_country_id UInt32) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01391_join_on_dict_crash.sql","errors":[]},{"query":"CREATE TABLE d_src (id UInt64, country_id UInt8, name String) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01391_join_on_dict_crash.sql","errors":[]},{"query":"CREATE DICTIONARY d (id UInt32, country_id UInt8, name String) PRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' DB currentDatabase() table 'd_src'))\nLIFETIME(MIN 1 MAX 1)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01391_join_on_dict_crash.sql","errors":[]},{"query":"CREATE TABLE check_codec(a Int, b Int CODEC(Delta, ZSTD)) ENGINE = MergeTree ORDER BY a SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01390_check_table_codec.sql","errors":[]},{"query":"CREATE TABLE check_codec(a Int, b Int CODEC(Delta, ZSTD)) ENGINE = MergeTree ORDER BY a SETTINGS min_bytes_for_wide_part = '10M';","fileName":"../ClickHouse/tests/queries/0_stateless/01390_check_table_codec.sql","errors":[]},{"query":"CREATE TABLE test (x UInt8) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01388_clear_all_columns.sql","errors":[]},{"query":"CREATE TABLE test (x UInt8, y UInt8) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01388_clear_all_columns.sql","errors":[]},{"query":"CREATE TABLE test (x UInt8, y UInt8 DEFAULT x + 1) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01387_clear_column_default_depends.sql","errors":[]},{"query":"CREATE TABLE test (x UInt8, y UInt8 MATERIALIZED x + 1) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01387_clear_column_default_depends.sql","errors":[]},{"query":"CREATE TABLE test (x UInt8, y UInt8 ALIAS x + 1, z String DEFAULT 'Hello') ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01387_clear_column_default_depends.sql","errors":[]},{"query":"create table Test (impression_id String,impression_id_compressed FixedString(16) DEFAULT UUIDStringToNum(substring(impression_id, 1, 36)), impression_id_hashed UInt16 DEFAULT reinterpretAsUInt16(impression_id_compressed), event_date Date ) ENGINE = MergeTree(event_date, impression_id_hashed, (event_date, impression_id_hashed), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01387_clear_column_default_depends.sql","errors":[]},{"query":"CREATE TABLE t0 (\n\\`c0\\` Int32,\n\\`c1\\` Int32 CODEC(NONE)\n)\nENGINE = MergeTree()\nORDER BY tuple()\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01386_negative_float_constant_key_condition.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t0 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE DATABASE test_01383;","fileName":"../ClickHouse/tests/queries/0_stateless/01383_remote_ambiguous_column_shard.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE test_01383;'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"create table test_01383.fact (id1 Int64, id2 Int64, value Int64) ENGINE = MergeTree() ORDER BY id1;","fileName":"../ClickHouse/tests/queries/0_stateless/01383_remote_ambiguous_column_shard.sql","errors":[]},{"query":"create table test_01383.dimension (id1 Int64, name String) ENGINE = MergeTree() ORDER BY id1;","fileName":"../ClickHouse/tests/queries/0_stateless/01383_remote_ambiguous_column_shard.sql","errors":[]},{"query":"CREATE TABLE delta_codec_synthetic (\\`id\\` Decimal(38, 10) CODEC(Delta, ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError BAD_ARGUMENTS } CREATE TABLE delta_codec_synthetic (\\`id\\` Decimal(38, 10) CODEC(DoubleDelta, ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE delta_codec_synthetic (\\`id\\` Decimal(38, 10) CODEC(Gorilla, ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE delta_codec_synthetic (\\`id\\` UInt64 CODEC(DoubleDelta(3), ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_CODEC_PARAMETER }\nCREATE TABLE delta_codec_synthetic (\\`id\\` UInt64 CODEC(Gorilla('hello, world'), ZSTD(22))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_CODEC_PARAMETER }\n","fileName":"../ClickHouse/tests/queries/0_stateless/01380_coded_delta_exception_code.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE delta_codec_synthetic (\\'","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE table_rename_with_ttl (\ndate1 Date,\nvalue1 String\n)\nENGINE = ReplicatedMergeTree('/clickhouse/{database}/test/table_rename_with_ttl_01378', '1')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01378_alter_rename_with_ttl_zookeeper.sql","errors":[]},{"query":"create temporary table t1(a String);","fileName":"../ClickHouse/tests/queries/0_stateless/01377_supertype_low_cardinality.sql","errors":[]},{"query":"create temporary table t2(a LowCardinality(String));","fileName":"../ClickHouse/tests/queries/0_stateless/01377_supertype_low_cardinality.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE a (x String);","fileName":"../ClickHouse/tests/queries/0_stateless/01377_supertype_low_cardinality.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE b (x LowCardinality(String));","fileName":"../ClickHouse/tests/queries/0_stateless/01377_supertype_low_cardinality.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE c (x Nullable(String));","fileName":"../ClickHouse/tests/queries/0_stateless/01377_supertype_low_cardinality.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE d (x LowCardinality(Nullable(String)));","fileName":"../ClickHouse/tests/queries/0_stateless/01377_supertype_low_cardinality.sql","errors":[]},{"query":"CREATE DATABASE dictdb_01376;","fileName":"../ClickHouse/tests/queries/0_stateless/01376_GROUP_BY_injective_elimination_dictGet.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE dictdb_01376;'","startColumn":28,"startLine":1,"endColumn":29,"endLine":1}]},{"query":"CREATE TABLE dictdb_01376.table_for_dict (\nkey_column UInt64,\nvalue Float64\n)\nENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01376_GROUP_BY_injective_elimination_dictGet.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS dictdb_01376.dict_exists (\nkey_column UInt64,\nvalue Float64 DEFAULT 77.77 INJECTIVE\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' DB 'dictdb_01376'))\nLIFETIME(1)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01376_GROUP_BY_injective_elimination_dictGet.sql","errors":[]},{"query":"CREATE TABLE tmp_01375 (n UInt32, s String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01375_storage_file_write_prefix_tsv_with_names.sql","errors":[]},{"query":"CREATE TABLE table_tsv_01375 AS tmp_01375 ENGINE = File(TSVWithNames);","fileName":"../ClickHouse/tests/queries/0_stateless/01375_storage_file_write_prefix_tsv_with_names.sql","errors":[]},{"query":"CREATE TABLE tmp_01375 (n UInt32, s String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01375_storage_file_write_prefix_csv_with_names.sql","errors":[]},{"query":"CREATE TABLE table_csv_01375 AS tmp_01375 ENGINE = File(CSVWithNames);","fileName":"../ClickHouse/tests/queries/0_stateless/01375_storage_file_write_prefix_csv_with_names.sql","errors":[]},{"query":"CREATE TABLE null_issue_3767 (value Nullable(String)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01375_null_issue_3767.sql","errors":[]},{"query":"CREATE TABLE codecs (id UInt32, val UInt32, s String) ENGINE = MergeTree ORDER BY id\nSETTINGS min_rows_for_wide_part = 10000, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01375_compact_parts_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs (id UInt32 CODEC(NONE), val UInt32 CODEC(NONE), s String CODEC(NONE)) ENGINE = MergeTree ORDER BY id\nSETTINGS min_rows_for_wide_part = 10000, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01375_compact_parts_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs (id UInt32, val UInt32 CODEC(Delta, ZSTD), s String CODEC(ZSTD)) ENGINE = MergeTree ORDER BY id\nSETTINGS min_rows_for_wide_part = 10000, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01375_compact_parts_codecs.sql","errors":[]},{"query":"CREATE TABLE tt_error_1373 ( a   Int64, d   Int64, val Int64 ) \nENGINE = SummingMergeTree((a, val)) PARTITION BY (a) ORDER BY (d); -- { serverError BAD_ARGUMENTS }\nDROP TABLE IF EXISTS tt_error_1373;","fileName":"../ClickHouse/tests/queries/0_stateless/01373_summing_merge_tree_explicit_columns_definition.sql","errors":[]},{"query":"CREATE TABLE tt_01373 (a Int64, d Int64, val Int64) \nENGINE = SummingMergeTree PARTITION BY (a) ORDER BY (d) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01373_summing_merge_tree_exclude_partition_key.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test (x String NULL);","fileName":"../ClickHouse/tests/queries/0_stateless/01373_is_zero_or_null.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE test (x String NULL'","startColumn":38,"startLine":1,"endColumn":42,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE moving_sum_num (\n\\`k\\` String,\n\\`dt\\` DateTime,\n\\`v\\` UInt64\n);","fileName":"../ClickHouse/tests/queries/0_stateless/01372_wrong_order_by_removal.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE moving_sum_num (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t1_01361 ( i UInt32,\ntime DateTime\n) ENGINE = MergeTree()\nPARTITION BY time\nORDER BY time;","fileName":"../ClickHouse/tests/queries/0_stateless/01361_buffer_table_flush_with_materialized_view.sql","errors":[]},{"query":"CREATE TABLE t2_01361 ( i UInt32,\ntime DateTime\n) ENGINE = MergeTree()\nPARTITION BY time\nORDER BY time;","fileName":"../ClickHouse/tests/queries/0_stateless/01361_buffer_table_flush_with_materialized_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv1_01361 TO t2_01361\nAS SELECT * FROM (SELECT * FROM t1_01361);","fileName":"../ClickHouse/tests/queries/0_stateless/01361_buffer_table_flush_with_materialized_view.sql","errors":[]},{"query":"CREATE TABLE b1_01361 AS t1_01361 ENGINE = Buffer(currentDatabase(), t1_01361, 1, 0, 0, 1, 1, 1, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/01361_buffer_table_flush_with_materialized_view.sql","errors":[]},{"query":"CREATE TABLE expected_times (QUERY_GROUP_ID String, max_query_duration_ms UInt64) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01360_materialized_view_with_join_on_query_log.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW slow_log Engine=Memory AS (\nSELECT * FROM\n(\nSELECT\nextract(query,'/\\\\\\\\*\\\\\\\\s*QUERY_GROUP_ID:(.*?)\\\\\\\\s*\\\\\\\\*/') as QUERY_GROUP_ID,\n*\nFROM system.query_log\nWHERE type<>1 and event_date >= yesterday()\n) as ql\nINNER JOIN expected_times USING (QUERY_GROUP_ID)\nWHERE query_duration_ms > max_query_duration_ms\n);","fileName":"../ClickHouse/tests/queries/0_stateless/01360_materialized_view_with_join_on_query_log.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW slow_log Engine=Memory AS (\\nSELECT * FROM\\n(\\nSELECT\\nextract(query'","startColumn":8,"startLine":5,"endColumn":13,"endLine":5}]},{"query":"CREATE TABLE mutation_delete_null_rows (\n\\`EventDate\\` Date,\n\\`CounterID\\` Nullable(String),\n\\`UserID\\` Nullable(UInt32)\n)\nENGINE = MergeTree()\nORDER BY EventDate;","fileName":"../ClickHouse/tests/queries/0_stateless/01358_mutation_delete_null_rows.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mutation_delete_null_rows (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TEMPORARY TABLE constrained (\n\\`URL\\` String,\nCONSTRAINT identity CHECK domainWithoutWWW(URL) = domainWithoutWWW(URL),\nCONSTRAINT is_utf8 CHECK isValidUTF8(URL)\n);","fileName":"../ClickHouse/tests/queries/0_stateless/01358_constexpr_constraint.sql","errors":[{"message":"no viable alternative at input 'CREATE TEMPORARY TABLE constrained (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TEMPORARY TABLE constrained (x UInt8, CONSTRAINT bogus CHECK 0);","fileName":"../ClickHouse/tests/queries/0_stateless/01358_constexpr_constraint.sql","errors":[]},{"query":"CREATE TABLE versioned_collapsing_table( d Date,\nkey1 UInt64,\nkey2 UInt32,\nvalue String,\nsign Int8,\nversion UInt16\n)\nENGINE = ReplicatedVersionedCollapsingMergeTree('/clickhouse/{database}/versioned_collapsing_table/{shard}', '{replica}', sign, version)\nPARTITION BY d\nORDER BY (key1, key2);","fileName":"../ClickHouse/tests/queries/0_stateless/01357_version_collapsing_attach_detach_zookeeper.sql","errors":[]},{"query":"CREATE TABLE t0 (\\`c0\\` String, \\`c1\\` Int32 CODEC(NONE), \\`c2\\` Int32) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01356_wrong_filter-type_bug.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t0 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create view table_01356_view_threads as select number % 10 as g, sum(number) as s from numbers_mt(1000000) group by g;","fileName":"../ClickHouse/tests/queries/0_stateless/01356_view_threads.sql","errors":[]},{"query":"CREATE TABLE test1 (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01355_ilike.sql","errors":[]},{"query":"CREATE TABLE test2 (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01355_ilike.sql","errors":[]},{"query":"CREATE TABLE alter_01355 (CounterID UInt32, StartDate Date, UserID UInt32, VisitID UInt32, NestedColumn Nested(A UInt8, S String), ToDrop UInt32) ENGINE = MergeTree(StartDate, intHash32(UserID), (CounterID, StartDate, intHash32(UserID), VisitID), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01355_alter_column_with_order.sql","errors":[]},{"query":"CREATE TABLE table (id Int32, values Array(Tuple(LowCardinality(String), Int32)), date Date) ENGINE MergeTree() PARTITION BY toYYYYMM(date) ORDER BY (id, date);","fileName":"../ClickHouse/tests/queries/0_stateless/01354_tuple_low_cardinality_array_mapped_bug.sql","errors":[]},{"query":"CREATE TABLE cdp_orders (\n\\`order_id\\` String,\n\\`order_status\\` String,\n\\`order_time\\` DateTime\n)\nENGINE = ReplacingMergeTree()\nPARTITION BY toYYYYMMDD(order_time)\nORDER BY (order_time, order_id)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01349_mutation_datetime_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE cdp_orders (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_datetime (time DateTime) ENGINE=MergeTree PARTITION BY time ORDER BY time;","fileName":"../ClickHouse/tests/queries/0_stateless/01347_partition_date_vs_datetime.sql","errors":[]},{"query":"CREATE TABLE test ( a Date,\nb UInt32,\nc UInt64,\np Nested (\nat1 String,\nat2 String\n)\n) ENGINE = MergeTree()\nPARTITION BY a\nORDER BY b\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01346_array_join_mrxotey.sql","errors":[]},{"query":"CREATE TABLE test (x Enum('hello' = 1, 'world' = 2), y String) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_01346/table', 'r1') PARTITION BY x ORDER BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/01346_alter_enum_partition_key_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE test2 (x Enum('hello' = 1, 'world' = 2), y String) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_01346/table', 'r2') PARTITION BY x ORDER BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/01346_alter_enum_partition_key_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE index (d Date) ENGINE = MergeTree ORDER BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/01345_index_date_vs_datetime.sql","errors":[]},{"query":"CREATE TABLE test (\n\\`id\\` Nullable(String),\n\\`status\\` Nullable(Enum8('NEW' = 0, 'CANCEL' = 1)),\n\\`nested.nestedType\\` Array(Nullable(String)),\n\\`partition\\` Date\n) ENGINE = MergeTree() PARTITION BY partition\nORDER BY\npartition SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01345_array_join_LittleMaverick.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test_01344 (x String, INDEX idx (x) TYPE set(10) GRANULARITY 1) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01344_min_bytes_to_use_mmap_io_index.sql","errors":[]},{"query":"CREATE TABLE test (x Enum('hello' = 1, 'world' = 2), y String) ENGINE = MergeTree PARTITION BY x ORDER BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/01344_alter_enum_partition_key.sql","errors":[]},{"query":"CREATE TABLE test_01343 (x String) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01343_min_bytes_to_use_mmap_io.sql","errors":[]},{"query":"CREATE TABLE t_uuid (x UInt8, y UUID, z String) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01338_uuid_without_separator.sql","errors":[]},{"query":"CREATE TABLE defaults (\ns FixedString(20)\n)ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01338_sha256_fixedstring.sql","errors":[]},{"query":"CREATE TABLE mt (x String, y UInt64, INDEX idx (y) TYPE minmax GRANULARITY 1) ENGINE = MergeTree ORDER BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/01325_freeze_mutation_stuck.sql","errors":[]},{"query":"create table tsv_raw (strval String, intval Int64, b1 String, b2 String, b3 String, b4 String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01324_insert_tsv_raw.sql","errors":[]},{"query":"create table table_01323_many_parts (x UInt64) engine = MergeTree order by x partition by x % 100;","fileName":"../ClickHouse/tests/queries/0_stateless/01323_too_many_threads_bug.sql","errors":[]},{"query":"CREATE TABLE test (key UInt64, a UInt8, b String, c Float64) ENGINE = MergeTree() ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01323_redundant_functions_in_order_by.sql","errors":[]},{"query":"CREATE TABLE t1 (id UInt64) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01323_redundant_functions_in_order_by.sql","errors":[]},{"query":"CREATE TABLE t2 (id UInt64) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01323_redundant_functions_in_order_by.sql","errors":[]},{"query":"CREATE TABLE test_nullable_float_issue7347 (ne UInt64,test Nullable(Float64)) ENGINE = MergeTree() PRIMARY KEY (ne) ORDER BY (ne);","fileName":"../ClickHouse/tests/queries/0_stateless/01323_if_with_nulls.sql","errors":[]},{"query":"CREATE TABLE tags ( id String,\nseqs Array(UInt8),\ncreate_time DateTime DEFAULT now()\n) engine=ReplacingMergeTree()\nORDER BY (id);","fileName":"../ClickHouse/tests/queries/0_stateless/01323_add_scalars_in_time.sql","errors":[]},{"query":"create table TestTable (column String, start DateTime, end DateTime) engine MergeTree order by start;","fileName":"../ClickHouse/tests/queries/0_stateless/01323_add_scalars_in_time.sql","errors":[]},{"query":"CREATE TABLE aaa ( id UInt16,\ndata String\n)\nENGINE = MergeTree()\nPARTITION BY tuple()\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01323_add_scalars_in_time.sql","errors":[]},{"query":"CREATE TABLE bbb ( id UInt16,\ndata String\n)\nENGINE = MergeTree()\nPARTITION BY tuple()\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01323_add_scalars_in_time.sql","errors":[]},{"query":"create table data_01320 (key Int) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01320_optimize_skip_unused_shards_no_non_deterministic.sql","errors":[]},{"query":"create table dist_01320 as data_01320 Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01320, key + rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01320_optimize_skip_unused_shards_no_non_deterministic.sql","errors":[]},{"query":"create table data_01319 (key Int, sub_key Int) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01319_optimize_skip_unused_shards_nesting.sql","errors":[]},{"query":"create table dist_layer_01319 as data_01319 Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01319, sub_key);","fileName":"../ClickHouse/tests/queries/0_stateless/01319_optimize_skip_unused_shards_nesting.sql","errors":[]},{"query":"create table dist_01319 as data_01319 Engine=Distributed(test_unavailable_shard, currentDatabase(), dist_layer_01319, key+1);","fileName":"../ClickHouse/tests/queries/0_stateless/01319_optimize_skip_unused_shards_nesting.sql","errors":[]},{"query":"CREATE TABLE local_table_1 (id String) ENGINE = MergeTree ORDER BY (id);","fileName":"../ClickHouse/tests/queries/0_stateless/01319_mv_constants_bug.sql","errors":[]},{"query":"CREATE TABLE local_table_2(id String) ENGINE = MergeTree ORDER BY (id);","fileName":"../ClickHouse/tests/queries/0_stateless/01319_mv_constants_bug.sql","errors":[]},{"query":"CREATE TABLE local_table_merged (id String) ENGINE = Merge('default', 'local_table_1|local_table_2');","fileName":"../ClickHouse/tests/queries/0_stateless/01319_mv_constants_bug.sql","errors":[]},{"query":"CREATE TABLE distributed_table_1 (id String) ENGINE = Distributed(test_shard_localhost, default, local_table_1);","fileName":"../ClickHouse/tests/queries/0_stateless/01319_mv_constants_bug.sql","errors":[]},{"query":"CREATE TABLE distributed_table_2 (id String) ENGINE = Distributed(test_shard_localhost, default, local_table_2);","fileName":"../ClickHouse/tests/queries/0_stateless/01319_mv_constants_bug.sql","errors":[]},{"query":"CREATE TABLE distributed_table_merged (id String) ENGINE = Merge('default', 'distributed_table_1|distributed_table_2');","fileName":"../ClickHouse/tests/queries/0_stateless/01319_mv_constants_bug.sql","errors":[]},{"query":"CREATE TABLE r1 (x String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/r', 'r1') ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01319_manual_write_to_replicas_long.sql","errors":[]},{"query":"CREATE TABLE r2 (x String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/r', 'r2') ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01319_manual_write_to_replicas_long.sql","errors":[]},{"query":"create table final_bug (x UInt64, y UInt8) engine = ReplacingMergeTree(y) order by x settings index_granularity = 8;","fileName":"../ClickHouse/tests/queries/0_stateless/01318_parallel_final_stuck.sql","errors":[]},{"query":"create table map_test engine=TinyLog() as (select (number + 1) as n, ([1, number], [1,2]) as map from numbers(1, 5));","fileName":"../ClickHouse/tests/queries/0_stateless/01318_map_populate_series.sql","errors":[]},{"query":"create table tab engine=Memory() as (select map(1, toInt32(2), number, 2) as m from numbers(1, 10));","fileName":"../ClickHouse/tests/queries/0_stateless/01318_map_add_map_subtract_on_map_type.sql","errors":[]},{"query":"create table tab engine=Memory() as (select ([1, number], [toInt32(2),2]) as map from numbers(1, 10));","fileName":"../ClickHouse/tests/queries/0_stateless/01318_map_add_map_subtract.sql","errors":[]},{"query":"CREATE TABLE encryption_test (\ninput String,\nkey String DEFAULT unhex('fb9958e2e897ef3fdb49067b51a24af645b3626eed2f9ea1dc7fd4dd71b7e38f9a68db2a3184f952382c783785f9d77bf923577108a88adaacae5c141b1576b0'),\niv String DEFAULT unhex('8CA3554377DFF8A369BC50A89780DD85'),\nkey32 String DEFAULT substring(key, 1, 32),\nkey24 String DEFAULT substring(key, 1, 24),\nkey16 String DEFAULT substring(key, 1, 16)\n) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01318_decrypt.sql","errors":[]},{"query":"CREATE TABLE decrypt_null ( dt DateTime,\nuser_id UInt32,\nencrypted String,\niv String\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01318_decrypt.sql","errors":[]},{"query":"CREATE TABLE add_table (\nkey UInt64,\nvalue1 String\n)\nENGINE = MergeTree()\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01318_alter_add_column_exists.sql","errors":[]},{"query":"CREATE TABLE test (x UInt8, y String, z Array(String)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01314_position_in_system_columns.sql","errors":[]},{"query":"CREATE TABLE test (x UInt64) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 1000, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01312_comparison_with_constant_string_in_index_analysis.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE enum (x Enum('hello' = 1, 'world' = 2));","fileName":"../ClickHouse/tests/queries/0_stateless/01310_enum_comparison.sql","errors":[]},{"query":"CREATE TABLE t (x UInt8) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01308_row_policy_and_trivial_count_query.sql","errors":[]},{"query":"CREATE ROW POLICY filter ON t USING (x % 2 = 1) TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/01308_row_policy_and_trivial_count_query.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE test_01307 (id UInt64, val String, INDEX ind val TYPE bloom_filter() GRANULARITY 1) ENGINE = MergeTree() ORDER BY id SETTINGS index_granularity = 2, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01307_bloom_filter_index_string_multi_granulas.sql","errors":[]},{"query":"CREATE TABLE data (ts DateTime, field String, num_field Nullable(Float64)) ENGINE = MergeTree() PARTITION BY ts ORDER BY ts;","fileName":"../ClickHouse/tests/queries/0_stateless/01305_nullable-prewhere_bug.sql","errors":[]},{"query":"create table t (x UInt64) engine = MergeTree order by (x, intHash64(x)) sample by intHash64(x);","fileName":"../ClickHouse/tests/queries/0_stateless/01305_buffer_final_bug.sql","errors":[]},{"query":"create table t_buf as t engine = Buffer(currentDatabase(), 't', 16, 20, 100, 100000, 10000000, 50000000, 250000000);","fileName":"../ClickHouse/tests/queries/0_stateless/01305_buffer_final_bug.sql","errors":[]},{"query":"create table h (EventDate Date, CounterID UInt64, WatchID UInt64) engine = MergeTree order by (CounterID, EventDate);","fileName":"../ClickHouse/tests/queries/0_stateless/01305_array_join_prewhere_in_subquery.sql","errors":[]},{"query":"create table polygon_01302 (x Array(Array(Array(Tuple(Float64, Float64)))), y Array(Array(Array(Tuple(Float64, Float64))))) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01302_polygons_distance.sql","errors":[]},{"query":"CREATE TABLE geo (p Tuple(Float64, Float64), id Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01300_wkt.sql","errors":[]},{"query":"CREATE TABLE geo (p Array(Tuple(Float64, Float64)), id Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01300_wkt.sql","errors":[]},{"query":"CREATE TABLE geo (p Array(Array(Tuple(Float64, Float64))), id Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01300_wkt.sql","errors":[]},{"query":"CREATE TABLE geo (p Array(Array(Array(Tuple(Float64, Float64)))), id Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01300_wkt.sql","errors":[]},{"query":"CREATE TABLE geo (p Tuple(Float64, Float64), s String, id Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01300_svg.sql","errors":[]},{"query":"CREATE TABLE geo (p Array(Tuple(Float64, Float64)), s String, id Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01300_svg.sql","errors":[]},{"query":"CREATE TABLE geo (p Array(Array(Tuple(Float64, Float64))), s String, id Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01300_svg.sql","errors":[]},{"query":"CREATE TABLE geo (p Array(Array(Array(Tuple(Float64, Float64)))), s String, id Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01300_svg.sql","errors":[]},{"query":"CREATE TABLE geo (s String, id Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01300_read_wkt.sql","errors":[]},{"query":"CREATE TABLE geo (s String, id Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01300_read_wkt.sql","errors":[]},{"query":"CREATE TABLE geo (s String, id Int) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01300_read_wkt.sql","errors":[]},{"query":"create table merge_tree ( CounterID UInt32,  StartDate Date,  Sign Int8,  VisitID UInt64,  UserID UInt64,  StartTime DateTime,   ClickLogID UInt64) ENGINE = CollapsingMergeTree(StartDate, intHash32(UserID), tuple(CounterID, StartDate, intHash32(UserID), VisitID, ClickLogID), 8192, Sign);","fileName":"../ClickHouse/tests/queries/0_stateless/01299_alter_merge_tree.sql","errors":[]},{"query":"create table merge1 ( CounterID UInt32,  StartDate Date,  Sign Int8,  VisitID UInt64,  UserID UInt64,  StartTime DateTime,   ClickLogID UInt64) ENGINE = CollapsingMergeTree(StartDate, intHash32(UserID), tuple(CounterID, StartDate, intHash32(UserID), VisitID, ClickLogID), 8192, Sign);","fileName":"../ClickHouse/tests/queries/0_stateless/01298_alter_merge.sql","errors":[]},{"query":"create table merge2 ( CounterID UInt32,  StartDate Date,  Sign Int8,  VisitID UInt64,  UserID UInt64,  StartTime DateTime,   ClickLogID UInt64) ENGINE = CollapsingMergeTree(StartDate, intHash32(UserID), tuple(CounterID, StartDate, intHash32(UserID), VisitID, ClickLogID), 8192, Sign);","fileName":"../ClickHouse/tests/queries/0_stateless/01298_alter_merge.sql","errors":[]},{"query":"create table merge ( CounterID UInt32,  StartDate Date,  Sign Int8,  VisitID UInt64,  UserID UInt64,  StartTime DateTime,   ClickLogID UInt64) ENGINE = Merge(currentDatabase(), 'merge\\\\[0-9\\\\]');","fileName":"../ClickHouse/tests/queries/0_stateless/01298_alter_merge.sql","errors":[]},{"query":"CREATE QUOTA q1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q2_01297 TO NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q3_01297 FOR INTERVAL 1 HOUR NO LIMITS NOT KEYED TO NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q4_01297 KEYED BY none FOR 1 hour NO LIMITS;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q1_01297 NOT KEYED;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q2_01297 KEY BY user_name;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q3_01297 KEY BY ip_address;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q4_01297 KEY BY client_key;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q5_01297 KEY BY client_key, user_name;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q6_01297 KEY BY client_key, ip_address;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q7_01297 KEYED BY 'none';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q8_01297 KEYED BY 'user name';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q9_01297 KEYED BY 'IP_ADDRESS';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q10_01297 KEYED BY CLIENT_KEY;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q11_01297 KEYED BY 'client key or user name';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q12_01297 KEYED BY 'client key or ip address';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q1_01297 FOR INTERVAL 5 DAY MAX ERRORS = 3;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q2_01297 FOR INTERVAL 30 minute MAX ERRORS 4;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q3_01297 FOR 1 HOUR errors MAX 5;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q4_01297 FOR 2000 SECOND errors MAX 5;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q5_01297 FOR RANDOMIZED INTERVAL 1 YEAR MAX errors = 11, MAX queries = 100;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q6_01297 FOR 2 MONTH MAX errors = 11, queries = 100, result_rows = 1000, result_bytes = 10000, read_rows = 1001, read_bytes = 10001, execution_time=2.5;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q7_01297 FOR 1 QUARTER MAX errors 11, queries 100;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q8_01297 FOR 0.5 year ERRORS MAX 11, QUERIES MAX 100, FOR 2 MONTH RESULT ROWS MAX 1002;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE ROLE r1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE QUOTA q1_01297 TO NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q2_01297 TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q3_01297 TO r1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q4_01297 TO u1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q5_01297 TO r1_01297, u1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q6_01297 TO ALL EXCEPT r1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q7_01297 TO ALL EXCEPT r1_01297, u1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q1_01297, q2_01297 FOR 1 day MAX errors=5;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q1_01297 KEYED BY user_name TO r1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q2_01297 FOR 2 MONTH MAX errors = 11, queries = 100, result_rows = 1000, result_bytes = 10000, read_rows = 1001, read_bytes = 10001, execution_time=2.5 TO r1_01297, u1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q3_01297 KEYED BY client_key, user_name FOR 0.5 YEAR ERRORS MAX 11, QUERIES MAX 100, FOR 2 MONTH RESULT ROWS MAX 1002;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q4_01297 FOR 1 WEEK TRACKING ONLY TO ALL EXCEPT u1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q1_01297 KEYED BY user_name FOR INTERVAL 1 minute MAX query_selects = 1 TO r1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q2_01297 KEYED BY user_name FOR INTERVAL 1 minute MAX query_inserts = 1 TO r1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q1_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '12K';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q2_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '12Ki';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q3_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '12M';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q4_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '12Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q5_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '12G';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q6_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '12Gi';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q7_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '12T';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q8_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '12Ti';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q9_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '12K';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q10_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '12Ki';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q11_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '12M';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q12_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '12Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q13_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '12G';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q14_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '12Gi';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q15_01297 FOR INTERVAL 1 MINUTE MAX query_selects = 1.5;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q16_01297 FOR INTERVAL 1 MINUTE MAX execution_time = 1.5;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q17_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '1.5'; -- { clientError CANNOT_PARSE_INPUT_ASSERTION_FAILED } CREATE QUOTA q18_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '1.5'; -- { clientError CANNOT_PARSE_INPUT_ASSERTION_FAILED }\nSHOW CREATE QUOTA q1_01297;","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q1_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '18446744073709551615';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q2_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '18446744073';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q1_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '0';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q2_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '0';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q1_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '-1'; -- { clientError CANNOT_PARSE_NUMBER } CREATE QUOTA q2_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '-1'; -- { clientError CANNOT_PARSE_NUMBER }\nSELECT '-- syntax test';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q1_01297 FOR INTERVAL 1 MINUTE MAX query_selects = ' 12 ';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q2_01297 FOR INTERVAL 1 MINUTE MAX execution_time = ' 12 ';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q3_01297 FOR INTERVAL 1 MINUTE MAX query_selects = ' 12k ';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q4_01297 FOR INTERVAL 1 MINUTE MAX execution_time = ' 12k ';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q5_01297 FOR INTERVAL 1 MINUTE MAX execution_time = ' 00 ';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q6_01297 FOR INTERVAL 1 MINUTE MAX execution_time = ' 00 ';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q7_01297 FOR INTERVAL 1 MINUTE MAX execution_time = ' 00k ';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q8_01297 FOR INTERVAL 1 MINUTE MAX execution_time = ' 00k ';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q9_01297 FOR INTERVAL 1 MINUTE MAX execution_time = ' 00123k ';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"CREATE QUOTA q10_01297 FOR INTERVAL 1 MINUTE MAX execution_time = ' 00123k ';","fileName":"../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql","errors":[{"message":"no viable alternative at input 'CREATE QUOTA'","startColumn":7,"startLine":1,"endColumn":12,"endLine":1}]},{"query":"create table merge_distributed1 ( CounterID UInt32,  StartDate Date,  Sign Int8,  VisitID UInt64,  UserID UInt64,  StartTime DateTime,   ClickLogID UInt64) ENGINE = CollapsingMergeTree(StartDate, intHash32(UserID), tuple(CounterID, StartDate, intHash32(UserID), VisitID, ClickLogID), 8192, Sign);","fileName":"../ClickHouse/tests/queries/0_stateless/01297_alter_distributed.sql","errors":[]},{"query":"create table merge_distributed ( CounterID UInt32,  StartDate Date,  Sign Int8,  VisitID UInt64,  UserID UInt64,  StartTime DateTime,   ClickLogID UInt64) ENGINE = Distributed(test_shard_localhost, currentDatabase(), merge_distributed1);","fileName":"../ClickHouse/tests/queries/0_stateless/01297_alter_distributed.sql","errors":[]},{"query":"create table data_01295 (key Int) Engine=AggregatingMergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01296_pipeline_stuck.sql","errors":[]},{"query":"CREATE DATABASE db_01296;","fileName":"../ClickHouse/tests/queries/0_stateless/01296_create_row_policy_in_current_database.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE db_01296;'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE POLICY p1_01296 ON table;","fileName":"../ClickHouse/tests/queries/0_stateless/01296_create_row_policy_in_current_database.sql","errors":[{"message":"no viable alternative at input 'CREATE POLICY'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE ROW POLICY p1_01296, p2_01296 ON table USING 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01296_create_row_policy_in_current_database.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE USER u1_01296;","fileName":"../ClickHouse/tests/queries/0_stateless/01296_create_row_policy_in_current_database.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROW POLICY p3_01296 ON table, table2 TO u1_01296;","fileName":"../ClickHouse/tests/queries/0_stateless/01296_create_row_policy_in_current_database.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY p4_01296 ON table, p5_01296 ON table2 USING a=b;","fileName":"../ClickHouse/tests/queries/0_stateless/01296_create_row_policy_in_current_database.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE delta_table (\\`id\\` UInt64 CODEC(Delta(tuple()))) ENGINE = MergeTree() ORDER BY tuple(); --{serverError ILLEGAL_CODEC_PARAMETER} CREATE TABLE zstd_table (\\`id\\` UInt64 CODEC(ZSTD(tuple()))) ENGINE = MergeTree() ORDER BY tuple(); --{serverError ILLEGAL_CODEC_PARAMETER}\nCREATE TABLE lz4_table (\\`id\\` UInt64 CODEC(LZ4HC(tuple()))) ENGINE = MergeTree() ORDER BY tuple(); --{serverError ILLEGAL_CODEC_PARAMETER}\nCREATE TABLE lz4_table (\\`id\\` UInt64 CODEC(LZ4(tuple()))) ENGINE = MergeTree() ORDER BY tuple(); --{serverError DATA_TYPE_CANNOT_HAVE_ARGUMENTS}\nSELECT 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01296_codecs_bad_arguments.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE delta_table (\\'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE ROW POLICY p1_01295 ON db.table;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY p2_01295 ON db.table USING NONE TO NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE POLICY p3_01295 ON db.table;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE POLICY'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE ROW POLICY p1_01295 ON db.table USING a<b AND c>d;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY p2_01295 ON db.table USING id=currentUser() AS RESTRICTIVE;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY p3_01295 ON db.table USING 1 AS PERMISSIVE;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROLE r1_01295;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01295;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE POLICY p1_01295 ON db.table TO NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE POLICY'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE POLICY p2_01295 ON db.table TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE POLICY'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE POLICY p3_01295 ON db.table TO r1_01295;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE POLICY'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE POLICY p4_01295 ON db.table TO u1_01295;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE POLICY'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE POLICY p5_01295 ON db.table TO r1_01295, u1_01295;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE POLICY'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE POLICY p6_01295 ON db.table TO ALL EXCEPT r1_01295;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE POLICY'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE POLICY p7_01295 ON db.table TO ALL EXCEPT r1_01295, u1_01295;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE POLICY'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE ROW POLICY p1_01295, p2_01295 ON db.table USING 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY p3_01295 ON db.table, db2.table2 TO u1_01295;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY p4_01295 ON db.table, p5_01295 ON db2.table2 USING a=b;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY p1_01295 ON db.table USING a<b AND c>d;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY p2_01295 ON db.table USING id=currentUser() AS RESTRICTIVE TO u1_01295;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE ROW POLICY p3_01295 ON db.table USING 1 AS PERMISSIVE TO ALL EXCEPT r1_01295;","fileName":"../ClickHouse/tests/queries/0_stateless/01295_create_row_policy.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"create database db_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_system_distributed_on_cluster.sql","errors":[{"message":"no viable alternative at input 'create database db_01294;'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"create table db_01294.dist_01294 as system.one engine=Distributed(test_shard_localhost, system, one);","fileName":"../ClickHouse/tests/queries/0_stateless/01294_system_distributed_on_cluster.sql","errors":[]},{"query":"CREATE SETTINGS PROFILE s1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE SETTINGS'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE SETTINGS PROFILE s2_01294 SETTINGS NONE TO NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE SETTINGS'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE PROFILE s3_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s1_01294 SETTINGS NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s2_01294 SETTINGS INHERIT 'default';","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s3_01294 SETTINGS max_memory_usage=5000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s4_01294 SETTINGS max_memory_usage MIN=5000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s5_01294 SETTINGS max_memory_usage MAX=5000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s6_01294 SETTINGS max_memory_usage CONST;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s7_01294 SETTINGS max_memory_usage WRITABLE;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s8_01294 SETTINGS max_memory_usage=5000000 MIN 4000000 MAX 6000000 CONST;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s9_01294 SETTINGS INHERIT 'default', max_memory_usage=5000000 WRITABLE;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s10_01294 SETTINGS INHERIT s1_01294, s3_01294, INHERIT default, readonly=0, max_memory_usage MAX 6000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE ROLE r1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE PROFILE s1_01294 TO NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s2_01294 TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s3_01294 TO r1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s4_01294 TO u1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s5_01294 TO r1_01294, u1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s6_01294 TO ALL EXCEPT r1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s7_01294 TO ALL EXCEPT r1_01294, u1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE SETTINGS PROFILE s1_01294 SETTINGS readonly=0 TO r1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE SETTINGS'","startColumn":7,"startLine":1,"endColumn":15,"endLine":1}]},{"query":"CREATE PROFILE s1_01294, s2_01294 SETTINGS max_memory_usage=5000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s3_01294, s4_01294 TO ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s1_01294 SETTINGS readonly=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s2_01294 SETTINGS readonly readonly;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s3_01294 SETTINGS profile readonly;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s4_01294 SETTINGS profile readonly, readonly;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s5_01294 SETTINGS profile readonly, readonly=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s6_01294 SETTINGS profile readonly, readonly readonly;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s2_01294 SETTINGS readonly=0 TO r1_01294;;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s3_01294 SETTINGS max_memory_usage=5000000 MIN 4000000 MAX 6000000 CONST TO r1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s4_01294 SETTINGS max_memory_usage=5000000 TO r1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s5_01294 SETTINGS INHERIT default, readonly=0, max_memory_usage MAX 6000000 WRITABLE TO u1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE PROFILE s6_01294 TO ALL EXCEPT u1_01294, r1_01294;","fileName":"../ClickHouse/tests/queries/0_stateless/01294_create_settings_profile.sql","errors":[{"message":"no viable alternative at input 'CREATE PROFILE'","startColumn":7,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create table null_01293 (key Int) engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01293_system_distribution_queue.sql","errors":[]},{"query":"create table dist_01293 as null_01293 engine=Distributed(test_cluster_two_shards, currentDatabase(), null_01293, key);","fileName":"../ClickHouse/tests/queries/0_stateless/01293_system_distribution_queue.sql","errors":[]},{"query":"CREATE ROLE r1_01293;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r2_01293 SETTINGS NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r1_01293@'%';","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r2_01293@'%.myhost.com';","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r1_01293 SETTINGS NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r2_01293 SETTINGS PROFILE 'default';","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r3_01293 SETTINGS max_memory_usage=5000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r4_01293 SETTINGS max_memory_usage MIN=5000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r5_01293 SETTINGS max_memory_usage MAX=5000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r6_01293 SETTINGS max_memory_usage CONST;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r7_01293 SETTINGS max_memory_usage WRITABLE;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r8_01293 SETTINGS max_memory_usage=5000000 MIN 4000000 MAX 6000000 CONST;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r9_01293 SETTINGS PROFILE 'default', max_memory_usage=5000000 WRITABLE;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r1_01293, r2_01293;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r1_01293;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r1_01293 SETTINGS readonly=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r2_01293 SETTINGS PROFILE 'default';","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r3_01293 SETTINGS max_memory_usage=5000000 MIN 4000000 MAX 6000000 WRITABLE;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r4_01293 SETTINGS PROFILE 'default', max_memory_usage=5000000, readonly=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r5_01293 SETTINGS NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01293_create_role.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"create table data_01292 ( key Int,\nindex key_idx (key) type minmax granularity 1\n) Engine=MergeTree() ORDER BY (key+0);","fileName":"../ClickHouse/tests/queries/0_stateless/01292_optimize_data_skip_idx_order_by_expr.sql","errors":[]},{"query":"CREATE USER u1_01292;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u2_01292 NOT IDENTIFIED HOST ANY SETTINGS NONE DEFAULT ROLE ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u3_01292 DEFAULT ROLE ALL IDENTIFIED WITH no_password SETTINGS NONE HOST ANY;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01292 NOT IDENTIFIED;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u2_01292 IDENTIFIED WITH plaintext_password BY 'qwe123';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u3_01292 IDENTIFIED BY 'qwe123';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u4_01292 IDENTIFIED WITH sha256_password BY 'qwe123';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u5_01292 IDENTIFIED WITH sha256_hash BY '18138372FAD4B94533CD4881F03DC6C69296DD897234E0CEE83F727E2E6B1F63';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u6_01292 IDENTIFIED WITH double_sha1_password BY 'qwe123';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u7_01292 IDENTIFIED WITH double_sha1_hash BY '8DCDD69CE7D121DE8013062AEAEB2A148910D50E';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u8_01292 IDENTIFIED WITH bcrypt_password BY 'qwe123';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u9_01292 IDENTIFIED WITH bcrypt_hash BY '\\$2a\\$12\\$rz5iy2LhuwBezsM88ZzWiemOVUeJ94xHTzwAlLMDhTzwUxOHaY64q';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01292 HOST ANY;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u2_01292 HOST NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u3_01292 HOST LOCAL;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u4_01292 HOST NAME 'myhost.com';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u5_01292 HOST NAME 'myhost.com', LOCAL;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u6_01292 HOST LOCAL, NAME 'myhost.com';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u7_01292 HOST REGEXP '.*\\\\\\\\.myhost\\\\\\\\.com';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u8_01292 HOST LIKE '%';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u9_01292 HOST LIKE '%.myhost.com';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u10_01292 HOST LIKE '%.myhost.com', '%.myhost2.com';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u11_01292 HOST IP '127.0.0.1';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u12_01292 HOST IP '192.168.1.1';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u13_01292 HOST IP '192.168.0.0/16';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u14_01292 HOST IP '::1';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u15_01292 HOST IP '2001:0db8:11a3:09d7:1f34:8a2e:07a0:765d';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u16_01292 HOST IP '65:ff0c::/96', '::1';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01292@'%';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u2_01292@'%.myhost.com';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u3_01292@'192.168.%.%';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u4_01292@'::1';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u5_01292@'65:ff0c::/96';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01292 SETTINGS NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u2_01292 SETTINGS PROFILE 'default';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u3_01292 SETTINGS max_memory_usage=5000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u4_01292 SETTINGS max_memory_usage MIN=5000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u5_01292 SETTINGS max_memory_usage MAX=5000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u6_01292 SETTINGS max_memory_usage CONST;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u7_01292 SETTINGS max_memory_usage WRITABLE;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u8_01292 SETTINGS max_memory_usage=5000000 MIN 4000000 MAX 6000000 CONST;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u9_01292 SETTINGS PROFILE 'default', max_memory_usage=5000000 WRITABLE;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE r1_01292, r2_01292;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01292 DEFAULT ROLE ALL;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u2_01292 DEFAULT ROLE NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u3_01292 DEFAULT ROLE r1_01292;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u4_01292 DEFAULT ROLE r1_01292, r2_01292;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u5_01292 DEFAULT ROLE ALL EXCEPT r2_01292;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u6_01292 DEFAULT ROLE ALL EXCEPT r1_01292, r2_01292;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01292 IDENTIFIED WITH plaintext_password BY 'qwe123' HOST LOCAL SETTINGS readonly=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01292;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER IF NOT EXISTS u1_01292;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER OR REPLACE u1_01292;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER IF NOT EXISTS u2_01292;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01292, u2_01292 DEFAULT ROLE NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u3_01292, u4_01292 HOST LIKE '%.%.myhost.com';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u5_01292@'%.host.com', u6_01292@'%.host.com';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u7_01292@'%.host.com', u8_01292@'%.otherhost.com';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01292 IDENTIFIED WITH plaintext_password BY 'qwe123' HOST LOCAL;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u2_01292 NOT IDENTIFIED HOST LIKE '%.%.myhost.com' DEFAULT ROLE NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u3_01292 IDENTIFIED BY 'qwe123' HOST IP '192.168.0.0/16', '192.169.1.1', '::1' DEFAULT ROLE r1_01292;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u4_01292 IDENTIFIED WITH double_sha1_password BY 'qwe123' HOST ANY DEFAULT ROLE ALL EXCEPT r1_01292;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u1_01292 SETTINGS readonly=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u2_01292 SETTINGS PROFILE 'default';","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u3_01292 SETTINGS max_memory_usage=5000000 MIN 4000000 MAX 6000000 WRITABLE;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u4_01292 SETTINGS PROFILE 'default', max_memory_usage=5000000, readonly=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER u5_01292 SETTINGS NONE;","fileName":"../ClickHouse/tests/queries/0_stateless/01292_create_user.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE TABLE geo (a Point, b Ring, c Polygon, d MultiPolygon) ENGINE=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01291_geo_types.sql","errors":[]},{"query":"create table data (key String) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01291_distributed_low_cardinality_memory_efficient.sql","errors":[]},{"query":"create table dist (key LowCardinality(String)) engine=Distributed(test_cluster_two_shards, currentDatabase(), data);","fileName":"../ClickHouse/tests/queries/0_stateless/01291_distributed_low_cardinality_memory_efficient.sql","errors":[]},{"query":"CREATE TABLE pk_order(a UInt64, b UInt64, c UInt64, d UInt64) ENGINE=MergeTree() ORDER BY (a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/01291_aggregation_in_order.sql","errors":[]},{"query":"CREATE TABLE pk_order (d DateTime, a Int32, b Int32) ENGINE = MergeTree ORDER BY (d, a) PARTITION BY toDate(d) SETTINGS index_granularity=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01291_aggregation_in_order.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE times (t DateTime);","fileName":"../ClickHouse/tests/queries/0_stateless/01290_max_execution_speed_distributed.sql","errors":[]},{"query":"CREATE TABLE count_lc_test (\n\\`s\\` LowCardinality(String),\n\\`arr\\` Array(LowCardinality(String)),\n\\`num\\` UInt64\n)\nENGINE = MergeTree\nORDER BY (s, arr);","fileName":"../ClickHouse/tests/queries/0_stateless/01290_empty_array_index_analysis.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE count_lc_test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE count_lc_test (\n\\`s\\` LowCardinality(String),\n\\`arr\\` Array(String),\n\\`num\\` UInt64\n)\nENGINE = MergeTree\nORDER BY (s, arr);","fileName":"../ClickHouse/tests/queries/0_stateless/01290_empty_array_index_analysis.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE count_lc_test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table ES(A String) Engine=MergeTree order by tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01289_min_execution_speed_not_too_early.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE times (t DateTime);","fileName":"../ClickHouse/tests/queries/0_stateless/01288_shard_max_network_bandwidth.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE times (t DateTime);","fileName":"../ClickHouse/tests/queries/0_stateless/01287_max_execution_speed.sql","errors":[]},{"query":"CREATE TABLE default_constraints (\nx UInt8,\ny UInt8 DEFAULT x + 1,\nCONSTRAINT c CHECK y < 5\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01286_constraints_on_default.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE default_constraints (\nx UInt8,\ny UInt8 DEFAULT x + 1,\nCONSTRAINT c CHECK y < 5\n);","fileName":"../ClickHouse/tests/queries/0_stateless/01286_constraints_on_default.sql","errors":[]},{"query":"CREATE TABLE date_datetime_key_condition (dt DateTime) ENGINE = MergeTree() ORDER BY dt;","fileName":"../ClickHouse/tests/queries/0_stateless/01285_date_datetime_key_condition.sql","errors":[]},{"query":"CREATE TABLE data_01285 ( key   Int,\nvalue SimpleAggregateFunction(max, Nullable(Int)),\nINDEX value_idx assumeNotNull(value) TYPE minmax GRANULARITY 1\n)\nENGINE=AggregatingMergeTree()\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01285_data_skip_index_over_aggregation.sql","errors":[]},{"query":"CREATE VIEW view_bug_const AS SELECT 'World' AS hello FROM (SELECT number FROM system.numbers LIMIT 1) AS n1 JOIN (SELECT number FROM system.numbers LIMIT 1) AS n2 USING (number);","fileName":"../ClickHouse/tests/queries/0_stateless/01284_view_and_extremes_bug.sql","errors":[]},{"query":"create table num_10m (number UInt64) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01283_strict_resize_bug.sql","errors":[]},{"query":"CREATE TABLE data_01283 engine=MergeTree() ORDER BY key\nPARTITION BY key\nAS SELECT number key FROM numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/01283_max_threads_simple_query_optimization.sql","errors":[]},{"query":"CREATE TABLE ttl (d DateTime) ENGINE = MergeTree ORDER BY tuple() TTL d + INTERVAL 10 DAY SETTINGS remove_empty_parts=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01282_system_parts_ttl_info.sql","errors":[]},{"query":"CREATE TABLE current_failed_query_metrics (event LowCardinality(String), value UInt64) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01281_unsucceeded_insert_select_queries_counter.sql","errors":[]},{"query":"CREATE TABLE to_insert (value UInt64) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01281_unsucceeded_insert_select_queries_counter.sql","errors":[]},{"query":"create table t (x UInt8, id UInt8) ENGINE = MergeTree() order by (id);","fileName":"../ClickHouse/tests/queries/0_stateless/01281_join_with_prewhere_fix.sql","errors":[]},{"query":"CREATE TABLE rename_table_multiple (key Int32, value1 String, value2 Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01281_alter_rename_and_other_renames.sql","errors":[]},{"query":"CREATE TABLE rename_table_multiple_compact (key Int32, value1 String, value2 Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_rows_for_wide_part = 100000;","fileName":"../ClickHouse/tests/queries/0_stateless/01281_alter_rename_and_other_renames.sql","errors":[]},{"query":"create table ttl_01280_error (a Int, b Int, x Int64, y Int64, d DateTime) engine = MergeTree order by (a, b) ttl d + interval 1 second group by x set y = max(y); -- { serverError BAD_TTL_EXPRESSION} create table ttl_01280_error (a Int, b Int, x Int64, y Int64, d DateTime) engine = MergeTree order by (a, b) ttl d + interval 1 second group by b set y = max(y); -- { serverError BAD_TTL_EXPRESSION}\ncreate table ttl_01280_error (a Int, b Int, x Int64, y Int64, d DateTime) engine = MergeTree order by (a, b) ttl d + interval 1 second group by a, b, x set y = max(y); -- { serverError BAD_TTL_EXPRESSION}\ncreate table ttl_01280_error (a Int, b Int, x Int64, y Int64, d DateTime) engine = MergeTree order by (a, b) ttl d + interval 1 second group by a, b set y = max(y), y = max(y); -- { serverError BAD_TTL_EXPRESSION}\n","fileName":"../ClickHouse/tests/queries/0_stateless/01280_ttl_where_group_by_negative.sql","errors":[{"message":"mismatched input 'group' expecting <EOF>","startColumn":135,"startLine":1,"endColumn":140,"endLine":1}]},{"query":"create table data_01279 (key String) Engine=TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01279_dist_group_by.sql","errors":[]},{"query":"CREATE TABLE rename_table (key Int32, value1 Int32, value2 Int32) ENGINE = MergeTree ORDER BY tuple() SETTINGS min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01278_alter_rename_combination.sql","errors":[]},{"query":"CREATE TABLE rename_table_polymorphic ( key Int32,\nvalue1 Int32,\nvalue2 Int32\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS min_rows_for_wide_part = 10000;","fileName":"../ClickHouse/tests/queries/0_stateless/01278_alter_rename_combination.sql","errors":[]},{"query":"create table out_01277 (\nk1 Int,\nk2 Int,\na1 Int,\na2 Int,\nb1 Int,\nb2 Int,\nc  Int\n) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01277_buffer_column_order.sql","errors":[]},{"query":"create table buffer_01277 as out_01277 Engine=Buffer(currentDatabase(), out_01277, 1, 86400, 86400,\n1e5, 1e6,\n10e6, 100e6);","fileName":"../ClickHouse/tests/queries/0_stateless/01277_buffer_column_order.sql","errors":[]},{"query":"create table in_01277 as out_01277 Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01277_buffer_column_order.sql","errors":[]},{"query":"create materialized view mv_01277_1 to buffer_01277 as select k1, k2, a1, a2, b1, b2, c from in_01277;","fileName":"../ClickHouse/tests/queries/0_stateless/01277_buffer_column_order.sql","errors":[]},{"query":"create materialized view mv_01277_2 to buffer_01277 as select a1, a2, k1, k2, b1, b2, c from in_01277;","fileName":"../ClickHouse/tests/queries/0_stateless/01277_buffer_column_order.sql","errors":[]},{"query":"CREATE TABLE table_for_rename1 (\ndate Date,\nkey UInt64,\nvalue1 String,\nvalue2 String,\nvalue3 String,\nCONSTRAINT cs_value1 CHECK toInt64(value1) < toInt64(value2),\nCONSTRAINT cs_value2 CHECK toInt64(value2) < toInt64(value3)\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01277/test_for_rename', '1')\nPARTITION BY date\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01277_alter_rename_column_constraint_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE table_for_rename (\ndate Date,\nkey UInt64,\nvalue1 String,\nvalue2 String,\nvalue3 String,\nCONSTRAINT cs_value1 CHECK toInt64(value1) < toInt64(value2),\nCONSTRAINT cs_value2 CHECK toInt64(value2) < toInt64(value3)\n)\nENGINE = MergeTree()\nPARTITION BY date\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01277_alter_rename_column_constraint.sql","errors":[]},{"query":"CREATE TABLE table_for_rename (\ndate Date,\nkey UInt64,\nvalue1 String,\nvalue2 String,\nvalue3 String MATERIALIZED concat(value1, ' + ', value2) \n)\nENGINE = MergeTree()\nPARTITION BY date\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01276_alter_rename_column_materialized_expr.sql","errors":[]},{"query":"CREATE TABLE table_for_rename (\ndate Date,\nkey UInt64,\nvalue1 String,\nvalue2 String,\nvalue3 String DEFAULT concat(value1, ' + ', value2) \n)\nENGINE = MergeTree()\nPARTITION BY date\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01275_alter_rename_column_default_expr.sql","errors":[]},{"query":"CREATE TABLE visits(StartDate Date, Name String) ENGINE MergeTree ORDER BY(StartDate);","fileName":"../ClickHouse/tests/queries/0_stateless/01274_alter_rename_column_distributed.sql","errors":[]},{"query":"CREATE TABLE visits_dist AS visits ENGINE Distributed(test_cluster_two_shards_localhost,  currentDatabase(), 'visits', rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01274_alter_rename_column_distributed.sql","errors":[]},{"query":"CREATE TABLE t (\n\\`d\\` Date,\n\\`s\\` LowCardinality(FixedString(3)),\n\\`c\\` UInt32\n)\nENGINE = SummingMergeTree()\nPARTITION BY d\nORDER BY (d, s);","fileName":"../ClickHouse/tests/queries/0_stateless/01273_lc_fixed_string_field.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE foo (server_date Date, dimension_1 String, metric_1 UInt32) ENGINE = MergeTree() PARTITION BY toYYYYMM(server_date) ORDER BY (server_date);","fileName":"../ClickHouse/tests/queries/0_stateless/01272_totals_and_filter_bug.sql","errors":[]},{"query":"CREATE TABLE bar (server_date Date, dimension_1 String, metric_2 UInt32) ENGINE = MergeTree() PARTITION BY toYYYYMM(server_date) ORDER BY (server_date);","fileName":"../ClickHouse/tests/queries/0_stateless/01272_totals_and_filter_bug.sql","errors":[]},{"query":"CREATE TABLE codecs (\na UInt8 CODEC(LZ4),\nb UInt16 CODEC(ZSTD),\nc Float32 CODEC(Gorilla),\nd UInt8 CODEC(Delta, LZ4),\ne Float64 CODEC(Gorilla, ZSTD),\nf UInt32 CODEC(Delta, Delta, T64),\ng DateTime CODEC(DoubleDelta),\nh DateTime64 CODEC(DoubleDelta, LZ4),\ni String CODEC(NONE)\n) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs (a UInt8 CODEC(NONE, NONE)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS } CREATE TABLE codecs (a UInt8 CODEC(NONE, LZ4)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE codecs (a UInt8 CODEC(LZ4, NONE)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE codecs (a UInt8 CODEC(LZ4, LZ4)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE codecs (a UInt8 CODEC(LZ4, ZSTD)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE codecs (a UInt8 CODEC(Delta)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE codecs (a UInt8 CODEC(Delta, Delta)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE codecs (a UInt8 CODEC(LZ4, Delta)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE codecs (a UInt8 CODEC(Gorilla)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE codecs (a FixedString(2) CODEC(Gorilla)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE codecs (a Decimal(15,5) CODEC(Gorilla)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE codecs (a Float64 CODEC(Delta, Gorilla)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE codecs (a Float32 CODEC(DoubleDelta, FPC)) ENGINE = MergeTree ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nDROP TABLE IF EXISTS codecs1;","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs1 (a UInt8 CODEC(NONE, NONE)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs2 (a UInt8 CODEC(NONE, LZ4)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs3 (a UInt8 CODEC(LZ4, NONE)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs4 (a UInt8 CODEC(LZ4, LZ4)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs5 (a UInt8 CODEC(LZ4, ZSTD)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs6 (a UInt8 CODEC(Delta)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs7 (a UInt8 CODEC(Delta, Delta)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs8 (a UInt8 CODEC(LZ4, Delta)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs9 (a UInt8 CODEC(Gorilla)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs10 (a FixedString(2) CODEC(Gorilla)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE codecs11 (a Decimal(15,5) CODEC(Gorilla)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01272_suspicious_codecs.sql","errors":[]},{"query":"CREATE TABLE offset_without_limit ( value UInt32\n) Engine = MergeTree()\nPRIMARY KEY value\nORDER BY value;","fileName":"../ClickHouse/tests/queries/0_stateless/01272_offset_without_limit.sql","errors":[]},{"query":"create table data_01270 (key LowCardinality(Int)) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01270_optimize_skip_unused_shards_low_cardinality.sql","errors":[]},{"query":"create table dist_01270 as data_01270 Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01270, key);","fileName":"../ClickHouse/tests/queries/0_stateless/01270_optimize_skip_unused_shards_low_cardinality.sql","errors":[]},{"query":"CREATE TABLE data_null ( a INT NULL,\nb INT NOT NULL,\nc Nullable(INT),\nd INT\n) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01269_create_with_null.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE data_null ( a INT NULL'","startColumn":31,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"CREATE TABLE data_null_error ( a Nullable(INT) NULL,\nb INT NOT NULL,\nc Nullable(INT)\n) engine=Memory();  --{serverError ILLEGAL_SYNTAX_FOR_DATA_TYPE}\nCREATE TABLE data_null_error (\na INT NULL,\nb Nullable(INT) NOT NULL,\nc Nullable(INT)\n) engine=Memory();  --{serverError ILLEGAL_SYNTAX_FOR_DATA_TYPE}\nSET data_type_default_nullable='true';","fileName":"../ClickHouse/tests/queries/0_stateless/01269_create_with_null.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE data_null_error ( a Nullable(INT) NULL'","startColumn":47,"startLine":1,"endColumn":51,"endLine":1}]},{"query":"CREATE TABLE set_null ( a INT NULL,\nb INT NOT NULL,\nc Nullable(INT),\nd INT,\nf DEFAULT 1\n) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01269_create_with_null.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE set_null ( a INT NULL'","startColumn":30,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"CREATE TABLE cannot_be_nullable (n Int8, a Array(UInt8)) ENGINE=Memory; -- { serverError ILLEGAL_TYPE_OF_ARGUMENT } CREATE TABLE cannot_be_nullable (n Int8, a Array(UInt8) NOT NULL) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01269_create_with_null.sql","errors":[]},{"query":"CREATE TABLE data_01269 (\nkey     Int32,\nvalue   Nullable(Int32),\nalias   UInt8 ALIAS value>0\n)\nENGINE = MergeTree()\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01269_alias_type_differs.sql","errors":[]},{"query":"CREATE TABLE dummy(foo Int64) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01268_shard_avgweighted.sql","errors":[]},{"query":"create table src_table Engine=Memory as system.numbers;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_mv_scalars.sql","errors":[{"message":"no viable alternative at input 'create table src_table Engine=Memory as system'","startColumn":40,"startLine":1,"endColumn":46,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW dst_mv Engine=Memory as select *, (SELECT count() FROM src_table) AS cnt FROM src_table;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_mv_scalars.sql","errors":[]},{"query":"CREATE TABLE dest_table (\\`Date\\` Date, \\`Id\\` UInt64, \\`Units\\` Float32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_mv_scalars.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE dest_table (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"create table left_table as dest_table;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_mv_scalars.sql","errors":[]},{"query":"create table right_table as dest_table;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_mv_scalars.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW dest_table_mv TO dest_table as select * FROM (SELECT * FROM left_table) AS t1 INNER JOIN (WITH (SELECT DISTINCT Date FROM left_table LIMIT 1) AS dt SELECT * FROM right_table WHERE Date = dt) AS t2 USING (Date, Id);","fileName":"../ClickHouse/tests/queries/0_stateless/01268_mv_scalars.sql","errors":[]},{"query":"CREATE TABLE tab (x UInt32, y UInt32) ENGINE = MergeTree() ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_mergine_sorted_limit.sql","errors":[]},{"query":"CREATE DATABASE database_for_dict_01268;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_dictionary_direct_layout.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE database_for_dict_01268;'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE database_for_dict_01268.table_for_dict1 (\nkey_column UInt64,\nsecond_column UInt64,\nthird_column String\n)\nENGINE = MergeTree()\nORDER BY key_column;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_dictionary_direct_layout.sql","errors":[]},{"query":"CREATE TABLE database_for_dict_01268.table_for_dict2 (\nregion_id UInt64,\nparent_region UInt64,\nregion_name String\n)\nENGINE = MergeTree()\nORDER BY region_id;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_dictionary_direct_layout.sql","errors":[]},{"query":"CREATE TABLE database_for_dict_01268.table_for_dict3 (\nregion_id UInt64,\nparent_region Float32,\nregion_name String\n)\nENGINE = MergeTree()\nORDER BY region_id;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_dictionary_direct_layout.sql","errors":[]},{"query":"CREATE DATABASE db_01268;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_dictionary_direct_layout.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE db_01268;'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE DICTIONARY db_01268.dict1 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt64 DEFAULT 1,\nthird_column String DEFAULT 'qqq'\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict1' PASSWORD '' DB 'database_for_dict_01268'))\nLAYOUT(DIRECT()) SETTINGS(max_result_bytes=1);","fileName":"../ClickHouse/tests/queries/0_stateless/01268_dictionary_direct_layout.sql","errors":[]},{"query":"CREATE DICTIONARY db_01268.dict2 (\nregion_id UInt64 DEFAULT 0,\nparent_region UInt64 DEFAULT 0 HIERARCHICAL,\nregion_name String DEFAULT ''\n)\nPRIMARY KEY region_id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict2' PASSWORD '' DB 'database_for_dict_01268'))\nLAYOUT(DIRECT()) SETTINGS(dictionary_use_async_executor=1, max_threads=8);","fileName":"../ClickHouse/tests/queries/0_stateless/01268_dictionary_direct_layout.sql","errors":[]},{"query":"CREATE DICTIONARY db_01268.dict3 (\nregion_id UInt64 DEFAULT 0,\nparent_region Float32 DEFAULT 0,\nregion_name String DEFAULT ''\n)\nPRIMARY KEY region_id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict3' PASSWORD '' DB 'database_for_dict_01268'))\nLAYOUT(DIRECT());","fileName":"../ClickHouse/tests/queries/0_stateless/01268_dictionary_direct_layout.sql","errors":[]},{"query":"CREATE TABLE ints ( a TINYINT,\nb TINYINT(8),\nc SMALLINT,\nd SMALLINT(16),\ne INT,\nf INT(32),\ng BIGINT,\nh BIGINT(64)\n) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_data_numeric_parameters.sql","errors":[]},{"query":"CREATE TABLE floats ( a FLOAT,\nb FLOAT(12),\nc FLOAT(15, 22),\nd DOUBLE,\ne DOUBLE(12),\nf DOUBLE(4, 18)\n) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_data_numeric_parameters.sql","errors":[]},{"query":"CREATE TABLE strings ( a VARCHAR,\nb VARCHAR(11)\n) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01268_data_numeric_parameters.sql","errors":[]},{"query":"CREATE TABLE test_alter (x Date, s String) ENGINE = MergeTree ORDER BY s PARTITION BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01267_alter_default_key_columns_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE test_alter_r1 (x Date, s String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01267/alter', 'r1') ORDER BY s PARTITION BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01267_alter_default_key_columns_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE test_alter_r2 (x Date, s String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01267/alter', 'r2') ORDER BY s PARTITION BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01267_alter_default_key_columns_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE t1 (\ndate Date, \ns1 String,\ns2 String\n) ENGINE = MergeTree() PARTITION BY toYYYYMMDD(date) ORDER BY (date, s1)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01266_default_prewhere_reqq.sql","errors":[]},{"query":"CREATE TABLE tztest (\ntimeBerlin DateTime('Europe/Berlin'), \ntimeLA DateTime('America/Los_Angeles')\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01265_datetime_string_comparison_felix_mueller.sql","errors":[]},{"query":"CREATE TABLE LOG_T (\n\\`fingerprint\\` UInt64, \n\\`fields\\` Nested(\nname LowCardinality(String), \nvalue String)\n)\nENGINE = MergeTree\nORDER BY fingerprint;","fileName":"../ClickHouse/tests/queries/0_stateless/01264_nested_baloo_bear.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE LOG_T (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE m (\n\\`v\\` UInt8\n)\nENGINE = MergeTree()\nPARTITION BY tuple()\nORDER BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/01263_type_conversion_nvartolomei.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE m (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE d (\n\\`v\\` UInt16\n)\nENGINE = Distributed('test_cluster_two_shards', currentDatabase(), m, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01263_type_conversion_nvartolomei.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE d (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE m (\n\\`v\\` Enum8('a' = 1, 'b' = 2)\n)\nENGINE = MergeTree()\nPARTITION BY tuple()\nORDER BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/01263_type_conversion_nvartolomei.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE m (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE d (\n\\`v\\` Enum8('a' = 1)\n)\nENGINE = Distributed('test_cluster_two_shards', currentDatabase(), m, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01263_type_conversion_nvartolomei.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE d (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE IF NOT EXISTS testTable ( A LowCardinality(String), -- like voter\nB Int64\n) ENGINE MergeTree()\nORDER BY (A);","fileName":"../ClickHouse/tests/queries/0_stateless/01262_low_cardinality_remove.sql","errors":[]},{"query":"CREATE VIEW testView AS  SELECT\nA as ALow, -- like account\nB\nFROM\ntestTable;","fileName":"../ClickHouse/tests/queries/0_stateless/01262_low_cardinality_remove.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS testTable ( A String, -- like voter\nB Int64\n) ENGINE MergeTree()\nORDER BY (A);","fileName":"../ClickHouse/tests/queries/0_stateless/01262_low_cardinality_remove.sql","errors":[]},{"query":"CREATE TABLE table_for_dict (\nkey_column UInt64,\nsecond_column UInt64,\nthird_column String\n)\nENGINE = MergeTree()\nORDER BY key_column;","fileName":"../ClickHouse/tests/queries/0_stateless/01259_dictionary_custom_settings_ddl.sql","errors":[]},{"query":"CREATE DATABASE ordinary_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01259_dictionary_custom_settings_ddl.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE ordinary_db;'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE DICTIONARY ordinary_db.dict1 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt64 DEFAULT 1,\nthird_column String DEFAULT 'qqq'\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' PASSWORD '' DB currentDatabase()))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT()) SETTINGS(max_result_bytes=1);","fileName":"../ClickHouse/tests/queries/0_stateless/01259_dictionary_custom_settings_ddl.sql","errors":[]},{"query":"create table x( id UInt64, t  AggregateFunction(argMax, Enum8('<Empty>' = -1, 'Male' = 1, 'Female' = 2), UInt64) DEFAULT arrayReduce('argMaxState', ['cast(-1, \\\\'Enum8(\\\\'<Empty>\\\\' = -1, \\\\'Male\\\\' = 1, \\\\'Female\\\\' = 2)'], [toUInt64(0)]) ) Engine=MergeTree ORDER BY id; -- { serverError CANNOT_CONVERT_TYPE } ","fileName":"../ClickHouse/tests/queries/0_stateless/01258_wrong_cast_filimonov.sql","errors":[{"message":"no viable alternative at input 'create table x( id UInt64, t  AggregateFunction(argMax, Enum8('<Empty>' = -1, 'Male' = 1, 'Female' = 2), UInt64) DEFAULT arrayReduce('argMaxState', ['cast(-1, \\\\'Enum8('","startColumn":167,"startLine":1,"endColumn":168,"endLine":1}]},{"query":"CREATE DATABASE test_dict_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01257_dictionary_mismatch_types.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE test_dict_db;'","startColumn":28,"startLine":1,"endColumn":29,"endLine":1}]},{"query":"CREATE TABLE test_dict_db.table1 (\n\\`col1\\` String,\n\\`col2\\` Int16,\n\\`col3\\` String,\n\\`col4\\` Int32,\n\\`col5\\` String,\n\\`col6\\` Nullable(Float64),\n\\`col7\\` Nullable(Float64),\n\\`col8\\` Nullable(DateTime('UTC')),\n\\`col9\\` Nullable(String),\n\\`col10\\` Nullable(String),\n\\`col11\\` Nullable(String),\n\\`col12\\` Nullable(String),\n\\`col13\\` Nullable(Int32),\n\\`col14\\` Nullable(DateTime('UTC')),\n\\`col15\\` Nullable(DateTime('UTC')),\n\\`col16\\` Nullable(DateTime('UTC')),\n\\`col17\\` Nullable(DateTime('UTC')),\n\\`col18\\` Nullable(DateTime('UTC')),\n\\`col19\\` Nullable(DateTime('UTC')),\n\\`col20\\` Nullable(String)\n)\nENGINE = MergeTree\nORDER BY (col1, col2, col3, col4, col5);","fileName":"../ClickHouse/tests/queries/0_stateless/01257_dictionary_mismatch_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_dict_db.table1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE DICTIONARY test_dict_db.table1_dict (\ncol1 String,\ncol2 Int16,\ncol3 String,\ncol4 Int32,\ncol5 String,\ncol6 Float64,\ncol7 Float64,\ncol8 DateTime('UTC'),\ncol9 String,\ncol10 String,\ncol11 String,\ncol12 String,\ncol13 Int32,\ncol14 DateTime('UTC'),\ncol15 DateTime('UTC'),\ncol16 DateTime('UTC'),\ncol17 DateTime('UTC'),\ncol18 DateTime('UTC'),\ncol19 DateTime('UTC'),\ncol20 String\n)\nPRIMARY KEY col1,col2,col3,col4,col5\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() DB test_dict_db TABLE table1 USER 'default'))\nLIFETIME(MIN 0 MAX 0) LAYOUT(COMPLEX_KEY_HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01257_dictionary_mismatch_types.sql","errors":[]},{"query":"CREATE TABLE test_dict_db.table1 (\n\\`col1\\` String,\n\\`col2\\` Int16,\n\\`col3\\` String,\n\\`col4\\` Int32,\n\\`col5\\` String,\n\\`col6\\` Float64,\n\\`col7\\` Float64,\n\\`col8\\` DateTime('UTC'),\n\\`col9\\` String,\n\\`col10\\` String,\n\\`col11\\` String,\n\\`col12\\` String,\n\\`col13\\` Int32,\n\\`col14\\` DateTime('UTC'),\n\\`col15\\` DateTime('UTC'),\n\\`col16\\` DateTime('UTC'),\n\\`col17\\` DateTime('UTC'),\n\\`col18\\` DateTime('UTC'),\n\\`col19\\` DateTime('UTC'),\n\\`col20\\` String\n)\nENGINE = MergeTree\nORDER BY (col1, col2, col3, col4, col5);","fileName":"../ClickHouse/tests/queries/0_stateless/01257_dictionary_mismatch_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_dict_db.table1 (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE DICTIONARY testip (\n\\`network\\` String, \n\\`test_field\\` String\n)\nPRIMARY KEY network\nSOURCE(FILE(PATH '/tmp/test.csv' FORMAT CSVWithNames))\nLIFETIME(MIN 0 MAX 300)\nLAYOUT(IPTRIE()); -- { serverError UNKNOWN_ELEMENT_IN_CONFIG }\n","fileName":"../ClickHouse/tests/queries/0_stateless/01256_misspell_layout_name_podshumok.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY testip (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table tutorial ( inner_poly  Array(Tuple(Int32, Int32)), outer_poly  Array(Tuple(Int32, Int32)) ) engine = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/01255_geo_types_livace.sql","errors":[]},{"query":"CREATE TABLE dict_data (key UInt64, val UInt64) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01254_dict_load_after_detach_attach.sql","errors":[]},{"query":"CREATE DICTIONARY dict (\nkey UInt64 DEFAULT 0,\nval UInt64 DEFAULT 10\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict_data' PASSWORD '' DB currentDatabase()))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01254_dict_load_after_detach_attach.sql","errors":[]},{"query":"CREATE TABLE dict_data (key UInt64, val UInt64) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01254_dict_create_without_db.sql","errors":[]},{"query":"CREATE DICTIONARY dict (\nkey UInt64 DEFAULT 0,\nval UInt64 DEFAULT 10\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict_data' PASSWORD '' DB currentDatabase()))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01254_dict_create_without_db.sql","errors":[]},{"query":"CREATE TABLE mass_table_457 (key Array(Tuple(Float64, Float64)), name String, value UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01254_array_of_unnamed_tuples.sql","errors":[]},{"query":"create table test_table_sharded(\ndate Date,\ntext String,\nhash UInt64\n)\nengine=MergeTree(date, (hash, date), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01253_subquery_in_aggregate_function_JustStranger.sql","errors":[]},{"query":"create table test_table as test_table_sharded engine=Distributed(test_cluster_two_shards, currentDatabase(), test_table_sharded, hash);","fileName":"../ClickHouse/tests/queries/0_stateless/01253_subquery_in_aggregate_function_JustStranger.sql","errors":[]},{"query":"CREATE DATABASE database_for_dict;","fileName":"../ClickHouse/tests/queries/0_stateless/01251_dict_is_in_infinite_loop.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE database_for_dict;'","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"CREATE TABLE database_for_dict.dict_source (id UInt64, parent_id UInt64, value String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01251_dict_is_in_infinite_loop.sql","errors":[]},{"query":"CREATE DICTIONARY database_for_dict.dictionary_with_hierarchy (\nid UInt64, parent_id UInt64 HIERARCHICAL, value String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(host 'localhost' port tcpPort() user 'default' db 'database_for_dict' table 'dict_source'))\nLAYOUT(HASHED())\nLIFETIME(MIN 1 MAX 1);","fileName":"../ClickHouse/tests/queries/0_stateless/01251_dict_is_in_infinite_loop.sql","errors":[]},{"query":"CREATE DICTIONARY database_for_dict.dictionary_with_hierarchy (\nid UInt64, parent_id UInt64 HIERARCHICAL, value String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(host 'localhost' port tcpPort() user 'default' db 'database_for_dict' table 'dict_source'))\nLAYOUT(FLAT())\nLIFETIME(MIN 1 MAX 1);","fileName":"../ClickHouse/tests/queries/0_stateless/01251_dict_is_in_infinite_loop.sql","errors":[]},{"query":"CREATE DICTIONARY database_for_dict.dictionary_with_hierarchy (\nid UInt64, parent_id UInt64 HIERARCHICAL, value String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(host 'localhost' port tcpPort() user 'default' db 'database_for_dict' table 'dict_source'))\nLAYOUT(CACHE(SIZE_IN_CELLS 10))\nLIFETIME(MIN 1 MAX 1);","fileName":"../ClickHouse/tests/queries/0_stateless/01251_dict_is_in_infinite_loop.sql","errors":[]},{"query":"CREATE DATABASE test_01249 ENGINE=Ordinary;     -- Full ATTACH requires UUID with Atomic USE test_01249;","fileName":"../ClickHouse/tests/queries/0_stateless/01249_bad_arguments_for_bloom_filter.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_idx_good(\\`u64\\` UInt64, \\`i32\\` Int32, \\`f64\\` Float64, \\`d\\` Decimal(10, 2), \\`s\\` String, \\`e\\` Enum8('a' = 1, 'b' = 2, 'c' = 3), \\`dt\\` Date, INDEX bloom_filter_a i32 TYPE bloom_filter(0, 1) GRANULARITY 1) ENGINE = MergeTree() ORDER BY u64 SETTINGS index_granularity = 8192; -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH } CREATE TABLE bloom_filter_idx_good(\\`u64\\` UInt64, \\`i32\\` Int32, \\`f64\\` Float64, \\`d\\` Decimal(10, 2), \\`s\\` String, \\`e\\` Enum8('a' = 1, 'b' = 2, 'c' = 3), \\`dt\\` Date, INDEX bloom_filter_a i32 TYPE bloom_filter(-0.1) GRANULARITY 1) ENGINE = MergeTree() ORDER BY u64 SETTINGS index_granularity = 8192; -- { serverError BAD_ARGUMENTS }\nCREATE TABLE bloom_filter_idx_good(\\`u64\\` UInt64, \\`i32\\` Int32, \\`f64\\` Float64, \\`d\\` Decimal(10, 2), \\`s\\` String, \\`e\\` Enum8('a' = 1, 'b' = 2, 'c' = 3), \\`dt\\` Date, INDEX bloom_filter_a i32 TYPE bloom_filter(1.01) GRANULARITY 1) ENGINE = MergeTree() ORDER BY u64 SETTINGS index_granularity = 8192; -- { serverError BAD_ARGUMENTS }\nDROP TABLE IF EXISTS bloom_filter_idx_good;","fileName":"../ClickHouse/tests/queries/0_stateless/01249_bad_arguments_for_bloom_filter.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE bloom_filter_idx_good(\\'","startColumn":35,"startLine":1,"endColumn":36,"endLine":1}]},{"query":"create table data_01247 as system.numbers engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01247_optimize_distributed_group_by_sharding_key_dist_on_dist.sql","errors":[]},{"query":"create table dist_layer_01247 as data_01247 engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01247, number);","fileName":"../ClickHouse/tests/queries/0_stateless/01247_optimize_distributed_group_by_sharding_key_dist_on_dist.sql","errors":[]},{"query":"create table dist_01247 as data_01247 engine=Distributed(test_cluster_two_shards, currentDatabase(), dist_layer_01247, number);","fileName":"../ClickHouse/tests/queries/0_stateless/01247_optimize_distributed_group_by_sharding_key_dist_on_dist.sql","errors":[]},{"query":"create table dist_layer_01247 as data_01247 engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01247, number);","fileName":"../ClickHouse/tests/queries/0_stateless/01247_optimize_distributed_group_by_sharding_key_dist_on_dist.sql","errors":[]},{"query":"create table dist_01247 as data_01247 engine=Distributed(test_cluster_two_shards, currentDatabase(), dist_layer_01247, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01247_optimize_distributed_group_by_sharding_key_dist_on_dist.sql","errors":[]},{"query":"create table dist_layer_01247 as data_01247 engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01247, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01247_optimize_distributed_group_by_sharding_key_dist_on_dist.sql","errors":[]},{"query":"create table dist_01247 as data_01247 engine=Distributed(test_cluster_two_shards, currentDatabase(), dist_layer_01247, number);","fileName":"../ClickHouse/tests/queries/0_stateless/01247_optimize_distributed_group_by_sharding_key_dist_on_dist.sql","errors":[]},{"query":"create table test_quantile (x AggregateFunction(quantileTiming(0.2), UInt64)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01246_finalize_aggregation_race.sql","errors":[]},{"query":"create table data_01247 as system.numbers engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01244_optimize_distributed_group_by_sharding_key.sql","errors":[]},{"query":"create table dist_01247 as data_01247 engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01247, number);","fileName":"../ClickHouse/tests/queries/0_stateless/01244_optimize_distributed_group_by_sharding_key.sql","errors":[]},{"query":"create table data_01247 engine=Memory() as select number key, 0 value from numbers(2);","fileName":"../ClickHouse/tests/queries/0_stateless/01244_optimize_distributed_group_by_sharding_key.sql","errors":[]},{"query":"create table dist_01247 as data_01247 engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01247, key);","fileName":"../ClickHouse/tests/queries/0_stateless/01244_optimize_distributed_group_by_sharding_key.sql","errors":[]},{"query":"CREATE TABLE join_test (id UInt16, num UInt16) engine = Join(ANY, LEFT, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01240_join_get_or_null.sql","errors":[]},{"query":"CREATE TABLE join_test (id UInt16, num Nullable(UInt16)) engine = Join(ANY, LEFT, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01240_join_get_or_null.sql","errors":[]},{"query":"CREATE TABLE join_test (id UInt16, num Array(UInt16)) engine = Join(ANY, LEFT, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01240_join_get_or_null.sql","errors":[]},{"query":"create table test (x Date, y String) engine Join(ANY, LEFT, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01240_join_get_or_null.sql","errors":[]},{"query":"create table test_graphite (key UInt32, Path String, Time DateTime('UTC'), Value Float64, Version UInt32, col UInt64) engine = GraphiteMergeTree('graphite_rollup') order by key settings index_granularity=10;","fileName":"../ClickHouse/tests/queries/0_stateless/01236_graphite_mt.sql","errors":[]},{"query":"CREATE TABLE test1 (s String) ENGINE = MergeTree ORDER BY s SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01234_to_string_monotonic.sql","errors":[]},{"query":"CREATE TABLE test2 (s LowCardinality(String)) ENGINE = MergeTree ORDER BY s SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01234_to_string_monotonic.sql","errors":[]},{"query":"create table kv (key int, v1 int, v2 int, v3 int, v4 int, v5 int) engine MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01232_untuple.sql","errors":[]},{"query":"create database if not exists shard_0;","fileName":"../ClickHouse/tests/queries/0_stateless/01232_extremes.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_0;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create database if not exists shard_1;","fileName":"../ClickHouse/tests/queries/0_stateless/01232_extremes.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_1;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table shard_0.num_01232 (number UInt64) engine = MergeTree order by number;","fileName":"../ClickHouse/tests/queries/0_stateless/01232_extremes.sql","errors":[]},{"query":"create table shard_1.num_01232 (number UInt64) engine = MergeTree order by number;","fileName":"../ClickHouse/tests/queries/0_stateless/01232_extremes.sql","errors":[]},{"query":"create table distr (number UInt64) engine = Distributed(test_cluster_two_shards_different_databases, '', num_01232);","fileName":"../ClickHouse/tests/queries/0_stateless/01232_extremes.sql","errors":[]},{"query":"create table shard_0.num2_01232 (number UInt64) engine = MergeTree order by number;","fileName":"../ClickHouse/tests/queries/0_stateless/01232_extremes.sql","errors":[]},{"query":"create table shard_1.num2_01232 (number UInt64) engine = MergeTree order by number;","fileName":"../ClickHouse/tests/queries/0_stateless/01232_extremes.sql","errors":[]},{"query":"create table distr2 (number UInt64) engine = Distributed(test_cluster_two_shards_different_databases, '', num2_01232);","fileName":"../ClickHouse/tests/queries/0_stateless/01232_extremes.sql","errors":[]},{"query":"CREATE TABLE null_in (dt DateTime, idx int, i Nullable(int), s Nullable(String)) ENGINE = MergeTree() PARTITION BY dt ORDER BY idx SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01231_operator_null_in.sql","errors":[]},{"query":"CREATE TABLE test_set (i Nullable(int)) ENGINE = Set();","fileName":"../ClickHouse/tests/queries/0_stateless/01231_operator_null_in.sql","errors":[]},{"query":"CREATE TABLE test_set2 (i Nullable(int)) ENGINE = Set();","fileName":"../ClickHouse/tests/queries/0_stateless/01231_operator_null_in.sql","errors":[]},{"query":"CREATE TABLE null_in_subquery (dt DateTime, idx int, i Nullable(UInt64)) ENGINE = MergeTree() PARTITION BY dt ORDER BY idx SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01231_operator_null_in.sql","errors":[]},{"query":"CREATE TABLE null_in_tuple (dt DateTime, idx int, t Tuple(Nullable(UInt64), Nullable(String))) ENGINE = MergeTree() PARTITION BY dt ORDER BY idx SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01231_operator_null_in.sql","errors":[]},{"query":"CREATE TABLE markdown (id UInt32, name String, array Array(Int32), nullable Nullable(String), low_cardinality LowCardinality(String), decimal Decimal32(6)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01231_markdown_format.sql","errors":[]},{"query":"create database if not exists shard_0;","fileName":"../ClickHouse/tests/queries/0_stateless/01231_distributed_aggregation_memory_efficient_mix_levels.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_0;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create database if not exists shard_1;","fileName":"../ClickHouse/tests/queries/0_stateless/01231_distributed_aggregation_memory_efficient_mix_levels.sql","errors":[{"message":"no viable alternative at input 'create database if not exists shard_1;'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"create table shard_0.shard_01231_distributed_aggregation_memory_efficient (x UInt64) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/01231_distributed_aggregation_memory_efficient_mix_levels.sql","errors":[]},{"query":"create table shard_1.shard_01231_distributed_aggregation_memory_efficient (x UInt64) engine = MergeTree order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/01231_distributed_aggregation_memory_efficient_mix_levels.sql","errors":[]},{"query":"create table ma_dist (x UInt64) ENGINE =  Distributed(test_cluster_two_shards_different_databases, '', 'shard_01231_distributed_aggregation_memory_efficient');","fileName":"../ClickHouse/tests/queries/0_stateless/01231_distributed_aggregation_memory_efficient_mix_levels.sql","errors":[]},{"query":"CREATE TABLE join_test (id UInt16, num UInt16) engine = Join(ANY, LEFT, id) settings join_any_take_last_row = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01230_join_get_truncate.sql","errors":[]},{"query":"CREATE TABLE test_local (name String)  ENGINE = MergeTree\nORDER BY name as select 'x';","fileName":"../ClickHouse/tests/queries/0_stateless/01227_distributed_merge_global_in_primary_key.sql","errors":[]},{"query":"CREATE TABLE test_distributed as test_local ENGINE = Distributed(test_shard_localhost, currentDatabase(), test_local);","fileName":"../ClickHouse/tests/queries/0_stateless/01227_distributed_merge_global_in_primary_key.sql","errors":[]},{"query":"CREATE TABLE test_merge as test_local ENGINE = Merge(currentDatabase(), 'test_local');","fileName":"../ClickHouse/tests/queries/0_stateless/01227_distributed_merge_global_in_primary_key.sql","errors":[]},{"query":"CREATE TABLE test_merge_distributed as test_local ENGINE = Distributed(test_shard_localhost, currentDatabase(), test_merge);","fileName":"../ClickHouse/tests/queries/0_stateless/01227_distributed_merge_global_in_primary_key.sql","errors":[]},{"query":"CREATE TABLE test_distributed_merge as test_local ENGINE = Merge(currentDatabase(), 'test_distributed');","fileName":"../ClickHouse/tests/queries/0_stateless/01227_distributed_merge_global_in_primary_key.sql","errors":[]},{"query":"create table data_01227 (key Int) Engine=MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01227_distributed_global_in_issue_2610.sql","errors":[]},{"query":"CREATE DATABASE dict_db_01225 ENGINE=Ordinary;    -- Different internal dictionary name with Atomic CREATE DATABASE dict_db_01225_dictionary Engine=Dictionary;","fileName":"../ClickHouse/tests/queries/0_stateless/01225_show_create_table_from_dictionary.sql","errors":[]},{"query":"CREATE TABLE dict_db_01225.dict_data (key UInt64, val UInt64) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01225_show_create_table_from_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY dict_db_01225.dict (\nkey UInt64 DEFAULT 0,\nval UInt64 DEFAULT 10\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict_data' PASSWORD '' DB 'dict_db_01225'))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01225_show_create_table_from_dictionary.sql","errors":[]},{"query":"CREATE TABLE dict_data (key UInt64, val UInt64) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01225_drop_dictionary_as_table.sql","errors":[]},{"query":"CREATE DICTIONARY dict (\nkey UInt64 DEFAULT 0,\nval UInt64 DEFAULT 10\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict_data' PASSWORD '' DB currentDatabase()))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01225_drop_dictionary_as_table.sql","errors":[]},{"query":"CREATE DATABASE dict_db_01224 ENGINE=Ordinary;  -- Different internal dictionary name with Atomic CREATE DATABASE dict_db_01224_dictionary Engine=Dictionary;","fileName":"../ClickHouse/tests/queries/0_stateless/01224_no_superfluous_dict_reload.sql","errors":[]},{"query":"CREATE TABLE dict_db_01224.dict_data (key UInt64, val UInt64) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01224_no_superfluous_dict_reload.sql","errors":[]},{"query":"CREATE DICTIONARY dict_db_01224.dict (\nkey UInt64 DEFAULT 0,\nval UInt64 DEFAULT 10\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict_data' PASSWORD '' DB 'dict_db_01224'))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01224_no_superfluous_dict_reload.sql","errors":[]},{"query":"create table data_01223 (key Int) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01223_dist_on_dist.sql","errors":[]},{"query":"create table dist_layer_01223 as data_01223 Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01223);","fileName":"../ClickHouse/tests/queries/0_stateless/01223_dist_on_dist.sql","errors":[]},{"query":"create table dist_01223 as data_01223 Engine=Distributed(test_cluster_two_shards, currentDatabase(), dist_layer_01223);","fileName":"../ClickHouse/tests/queries/0_stateless/01223_dist_on_dist.sql","errors":[]},{"query":"create table dist_layer_01223 as data_01223 Engine=Distributed(test_shard_localhost, currentDatabase(), data_01223);","fileName":"../ClickHouse/tests/queries/0_stateless/01223_dist_on_dist.sql","errors":[]},{"query":"create table dist_01223 as data_01223 Engine=Distributed(test_cluster_two_shards, currentDatabase(), dist_layer_01223);","fileName":"../ClickHouse/tests/queries/0_stateless/01223_dist_on_dist.sql","errors":[]},{"query":"create table merge_dist_01223 as dist_01223 engine=Merge(currentDatabase(), 'dist_01223');","fileName":"../ClickHouse/tests/queries/0_stateless/01223_dist_on_dist.sql","errors":[]},{"query":"create table cdp_segments (seg_id String, mid_seqs AggregateFunction(groupBitmap, UInt32)) engine=ReplacingMergeTree() order by (seg_id);","fileName":"../ClickHouse/tests/queries/0_stateless/01220_scalar_optimization_in_alter.sql","errors":[]},{"query":"create table cdp_customers (mid String, mid_seq UInt32) engine=ReplacingMergeTree() order by (mid_seq);","fileName":"../ClickHouse/tests/queries/0_stateless/01220_scalar_optimization_in_alter.sql","errors":[]},{"query":"CREATE TABLE tt1 (a UInt32, b UInt32 ALIAS a) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01214_test_storage_merge_aliases_with_where.sql","errors":[]},{"query":"CREATE TABLE tt2 (a UInt32, b UInt32 ALIAS a * 2) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01214_test_storage_merge_aliases_with_where.sql","errors":[]},{"query":"CREATE TABLE tt3 (a UInt32, b UInt32 ALIAS c, c UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01214_test_storage_merge_aliases_with_where.sql","errors":[]},{"query":"CREATE TABLE tt4 (a UInt32, b UInt32 ALIAS 12) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01214_test_storage_merge_aliases_with_where.sql","errors":[]},{"query":"CREATE TABLE tt_m (a UInt32, b UInt32) ENGINE = Merge(currentDatabase(), 'tt1|tt2|tt3|tt4');","fileName":"../ClickHouse/tests/queries/0_stateless/01214_test_storage_merge_aliases_with_where.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS local_01213 (id Int) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01213_optimize_skip_unused_shards_DISTINCT.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS dist_01213 AS local_01213 ENGINE = Distributed(test_cluster_two_shards_localhost, currentDatabase(), local_01213, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01213_optimize_skip_unused_shards_DISTINCT.sql","errors":[]},{"query":"CREATE TABLE table_for_rename_nested (\ndate Date,\nkey UInt64,\nn Nested(x UInt32, y String),\nvalue1 String\n)\nENGINE = MergeTree()\nPARTITION BY date\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01213_alter_table_rename_nested.sql","errors":[]},{"query":"CREATE TABLE table_rename_with_default (\ndate Date,\nkey UInt64,\nvalue1 String,\nvalue2 String DEFAULT concat('Hello ', value1),\nvalue3 String ALIAS concat('Word ', value1)\n)\nENGINE = MergeTree()\nPARTITION BY date\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01213_alter_rename_with_default_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE table_rename_with_ttl (\ndate1 Date,\ndate2 Date,\nvalue1 String,\nvalue2 String TTL date1 + INTERVAL 500 MONTH\n)\nENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_01213/table_rename_with_ttl', '1')\nORDER BY tuple()\nTTL date2 + INTERVAL 500 MONTH;","fileName":"../ClickHouse/tests/queries/0_stateless/01213_alter_rename_with_default_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE table_for_rename_pk (\ndate Date,\nkey1 UInt64,\nkey2 UInt64,\nkey3 UInt64,\nvalue1 String,\nvalue2 String\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01213/table_for_rename_pk1', '1')\nPARTITION BY date\nORDER BY (key1, pow(key2, 2), key3);","fileName":"../ClickHouse/tests/queries/0_stateless/01213_alter_rename_primary_key_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE table_for_rename_with_primary_key (\ndate Date,\nkey1 UInt64,\nkey2 UInt64,\nkey3 UInt64,\nvalue1 String,\nvalue2 String,\nINDEX idx (value1) TYPE set(1) GRANULARITY 1\n)\nENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01213/table_for_rename_pk2', '1')\nPARTITION BY date\nORDER BY (key1, key2, key3)\nPRIMARY KEY (key1, key2);","fileName":"../ClickHouse/tests/queries/0_stateless/01213_alter_rename_primary_key_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE table_for_rename_nested (\ndate Date,\nkey UInt64,\nn Nested(x UInt32, y String),\nvalue1 Array(Array(LowCardinality(String))) -- column with several files\n)\nENGINE = MergeTree()\nPARTITION BY date\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01213_alter_rename_nested.sql","errors":[]},{"query":"CREATE TABLE table_with_compact_parts (\ndate Date,\nkey UInt64,\nvalue1 String,\nvalue2 String,\nvalue3 String\n)\nENGINE = MergeTree()\nPARTITION BY date\nORDER BY key\nsettings index_granularity = 8,\nmin_rows_for_wide_part = 10,\nmin_bytes_for_wide_part = '10G';","fileName":"../ClickHouse/tests/queries/0_stateless/01213_alter_rename_compact_part.sql","errors":[]},{"query":"CREATE TABLE table_for_rename (\ndate Date,\nkey UInt64,\nvalue1 String,\nvalue2 String,\nvalue3 String\n)\nENGINE = MergeTree()\nPARTITION BY date\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01213_alter_rename_column.sql","errors":[]},{"query":"create table data_02000 (key Int) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01211_optimize_skip_unused_shards_type_mismatch.sql","errors":[]},{"query":"create table dist_02000 as data_02000 Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_02000, key);","fileName":"../ClickHouse/tests/queries/0_stateless/01211_optimize_skip_unused_shards_type_mismatch.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS v_01210 AS SELECT 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01210_drop_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW IF NOT EXISTS mv_01210 ENGINE Log AS SELECT 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01210_drop_view.sql","errors":[]},{"query":"CREATE TABLE t (\nnumber UInt64\n)\nENGINE = MergeTree\nORDER BY number\nSETTINGS index_granularity = 128, ratio_of_defaults_for_sparse_serialization = 1.0, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01201_read_single_thread_in_order.sql","errors":[]},{"query":"create table mt_compact(a UInt64, b UInt64 DEFAULT a * a, s String, n Nested(x UInt32, y String), lc LowCardinality(String)) engine = ReplicatedMergeTree('/clickhouse/{database}/test_01201/mt_compact_replicated', '1')\norder by a partition by a % 10\nsettings index_granularity = 8,\nmin_rows_for_wide_part = 10;","fileName":"../ClickHouse/tests/queries/0_stateless/01201_drop_column_compact_part_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE table_with_single_pk (\nkey UInt8,\nvalue String\n)\nENGINE = MergeTree\nORDER BY key\nSETTINGS min_compress_block_size=65536, max_compress_block_size=65536;","fileName":"../ClickHouse/tests/queries/0_stateless/01200_mutations_memory_consumption.sql","errors":[]},{"query":"CREATE TABLE table_with_multi_pk (\nkey1 UInt8,\nkey2 UInt32,\nkey3 DateTime64(6, 'UTC'),\nvalue String\n)\nENGINE = MergeTree\nORDER BY (key1, key2, key3)\nSETTINGS min_compress_block_size=65536, max_compress_block_size=65536;","fileName":"../ClickHouse/tests/queries/0_stateless/01200_mutations_memory_consumption.sql","errors":[]},{"query":"CREATE TABLE table_with_function_pk (\nkey1 UInt8,\nkey2 UInt32,\nkey3 DateTime64(6, 'UTC'),\nvalue String\n)\nENGINE = MergeTree\nORDER BY (cast(value as UInt64), key2)\nSETTINGS min_compress_block_size=65536, max_compress_block_size=65536;","fileName":"../ClickHouse/tests/queries/0_stateless/01200_mutations_memory_consumption.sql","errors":[]},{"query":"CREATE TABLE table_without_pk (\nkey1 UInt8,\nkey2 UInt32,\nkey3 DateTime64(6, 'UTC'),\nvalue String\n)\nENGINE = MergeTree\nORDER BY tuple()\nSETTINGS min_compress_block_size=65536, max_compress_block_size=65536;","fileName":"../ClickHouse/tests/queries/0_stateless/01200_mutations_memory_consumption.sql","errors":[]},{"query":"CREATE TABLE summing (k String, x UInt64, e Enum('hello' = 1, 'world' = 2)) ENGINE = SummingMergeTree ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/01197_summing_enum.sql","errors":[]},{"query":"CREATE DATABASE test_01191 ENGINE=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01191_rename_dictionary.sql","errors":[]},{"query":"CREATE TABLE test_01191._ (n UInt64, s String) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01191_rename_dictionary.sql","errors":[]},{"query":"CREATE TABLE test_01191.t (n UInt64, s String) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01191_rename_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY test_01191.dict (n UInt64, s String) PRIMARY KEY n\nLAYOUT(DIRECT())\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE '_' DB 'test_01191'));","fileName":"../ClickHouse/tests/queries/0_stateless/01191_rename_dictionary.sql","errors":[]},{"query":"CREATE DATABASE dummy_db ENGINE=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01191_rename_dictionary.sql","errors":[]},{"query":"CREATE TABLE table2 AS numbers(5);","fileName":"../ClickHouse/tests/queries/0_stateless/01189_create_as_table_as_table_function.sql","errors":[]},{"query":"CREATE TABLE table3 AS table2;","fileName":"../ClickHouse/tests/queries/0_stateless/01189_create_as_table_as_table_function.sql","errors":[]},{"query":"create or replace table t1 (n UInt64, s String) engine=MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/01185_create_or_replace_table.sql","errors":[]},{"query":"create or replace table t1 (n UInt64, s Nullable(String)) engine=MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/01185_create_or_replace_table.sql","errors":[]},{"query":"CREATE TABLE test_table (key UInt32, value Decimal(16, 6)) ENGINE = SummingMergeTree() ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01182_materialized_view_different_structure.sql","errors":[]},{"query":"CREATE TABLE numbers (number UInt64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01182_materialized_view_different_structure.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_mv TO test_table (number UInt64, value Decimal(38, 6)) AS SELECT number, sum(number) AS value FROM (SELECT *, toDecimal64(number, 6) AS val FROM numbers) GROUP BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01182_materialized_view_different_structure.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW test_mv TO test_table ('","startColumn":47,"startLine":1,"endColumn":48,"endLine":1}]},{"query":"CREATE TABLE src (n UInt64, s FixedString(16)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01182_materialized_view_different_structure.sql","errors":[]},{"query":"CREATE TABLE dst (n UInt8, s String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01182_materialized_view_different_structure.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv TO dst (n String) AS SELECT * FROM src;","fileName":"../ClickHouse/tests/queries/0_stateless/01182_materialized_view_different_structure.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv TO dst ('","startColumn":35,"startLine":1,"endColumn":36,"endLine":1}]},{"query":"CREATE TABLE dist (n Int128) ENGINE=Distributed(test_cluster_two_shards, currentDatabase(), mv);","fileName":"../ClickHouse/tests/queries/0_stateless/01182_materialized_view_different_structure.sql","errors":[]},{"query":"CREATE TABLE test_repl ON CLUSTER test_shard_localhost (n UInt64) ENGINE ReplicatedMergeTree('/clickhouse/test_01181/{database}/test_repl','r1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01181_db_atomic_drop_on_cluster.sql","errors":[]},{"query":"create table mt1 (n Int64) engine=MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/01173_transaction_control_queries.sql","errors":[]},{"query":"create table mt2 (n Int64) engine=MergeTree order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/01173_transaction_control_queries.sql","errors":[]},{"query":"create table m (n int) engine=Memory; -- { serverError NOT_IMPLEMENTED } commit; -- { serverError INVALID_TRANSACTION } -- after 48\nrollback;","fileName":"../ClickHouse/tests/queries/0_stateless/01173_transaction_control_queries.sql","errors":[{"message":"mismatched input 'rollback' expecting <EOF>","startColumn":0,"startLine":2,"endColumn":8,"endLine":2}]},{"query":"create table m (n int) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01173_transaction_control_queries.sql","errors":[]},{"query":"create table txn_counters (n Int64, creation_tid DEFAULT transactionID()) engine=MergeTree order by n SETTINGS old_parts_lifetime=3600;","fileName":"../ClickHouse/tests/queries/0_stateless/01172_transaction_counters.sql","errors":[]},{"query":"create table trunc (n int, primary key n) engine=ReplicatedMergeTree('/test/1166/{database}', '1') partition by n % 10;","fileName":"../ClickHouse/tests/queries/0_stateless/01166_truncate_multiple_partitions.sql","errors":[{"message":"no viable alternative at input 'create table trunc (n int, primary key n'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"create table trunc (n int, primary key n) partition by n % 10;","fileName":"../ClickHouse/tests/queries/0_stateless/01166_truncate_multiple_partitions.sql","errors":[{"message":"no viable alternative at input 'create table trunc (n int, primary key n'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"create table rmt1 (d DateTime, n int) engine=ReplicatedMergeTree('/test/01165/{database}/rmt', '1') order by n partition by toYYYYMMDD(d);","fileName":"../ClickHouse/tests/queries/0_stateless/01165_lost_part_empty_partition.sql","errors":[]},{"query":"create table rmt2 (d DateTime, n int) engine=ReplicatedMergeTree('/test/01165/{database}/rmt', '2') order by n partition by toYYYYMMDD(d);","fileName":"../ClickHouse/tests/queries/0_stateless/01165_lost_part_empty_partition.sql","errors":[]},{"query":"create table rmt1 (d DateTime, n int) engine=ReplicatedMergeTree('/test/01165/{database}/rmt', '1') order by n partition by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01165_lost_part_empty_partition.sql","errors":[]},{"query":"create table rmt2 (d DateTime, n int) engine=ReplicatedMergeTree('/test/01165/{database}/rmt', '2') order by n partition by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01165_lost_part_empty_partition.sql","errors":[]},{"query":"create table rmt1 (n UInt8, m Int32, d Date, t DateTime) engine=ReplicatedMergeTree('/test/01165/{database}/rmt', '1') order by n partition by (n, m, d, t);","fileName":"../ClickHouse/tests/queries/0_stateless/01165_lost_part_empty_partition.sql","errors":[]},{"query":"create table rmt2 (n UInt8, m Int32, d Date, t DateTime) engine=ReplicatedMergeTree('/test/01165/{database}/rmt', '2') order by n partition by (n, m, d, t);","fileName":"../ClickHouse/tests/queries/0_stateless/01165_lost_part_empty_partition.sql","errors":[]},{"query":"create database test_1164_memory engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01164_alter_memory_database.sql","errors":[]},{"query":"create table test_1164_memory.r1 (n int) engine=ReplicatedMergeTree('/test/01164/{database}/t', '1') order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/01164_alter_memory_database.sql","errors":[]},{"query":"create table test_1164_memory.r2 (n int) engine=ReplicatedMergeTree('/test/01164/{database}/t', '2') order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/01164_alter_memory_database.sql","errors":[]},{"query":"CREATE TABLE t (n UInt64, f Float32, s String, fs FixedString(42), d Decimal(9, 6)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01161_information_schema.sql","errors":[]},{"query":"CREATE VIEW v (n Nullable(Int32), f Float64) AS SELECT n, f FROM t;","fileName":"../ClickHouse/tests/queries/0_stateless/01161_information_schema.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv ENGINE = Null AS SELECT * FROM system.one;","fileName":"../ClickHouse/tests/queries/0_stateless/01161_information_schema.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE tmp (d Date, dt DateTime, dtms DateTime64(3));","fileName":"../ClickHouse/tests/queries/0_stateless/01161_information_schema.sql","errors":[]},{"query":"CREATE TABLE kcu1 (i UInt32, s String) ENGINE MergeTree ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/01161_information_schema.sql","errors":[]},{"query":"CREATE TABLE kcu2 (i UInt32, d Date, u UUID) ENGINE MergeTree ORDER BY (u, d);","fileName":"../ClickHouse/tests/queries/0_stateless/01161_information_schema.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t0 AS SELECT quantileArrayState(0.10)([number]) FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01159_combinators_with_parameters.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t1 AS SELECT quantileDistinctState(0.10)(number) FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01159_combinators_with_parameters.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t2 AS SELECT quantileForEachState(0.10)([number]) FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01159_combinators_with_parameters.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t3 AS SELECT quantileIfState(0.10)(number, number % 2) FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01159_combinators_with_parameters.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t4 AS SELECT quantileMergeState(0.10)(state) FROM (SELECT quantileState(0.10)(number) as state FROM numbers(100));","fileName":"../ClickHouse/tests/queries/0_stateless/01159_combinators_with_parameters.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t5 AS SELECT quantileOrNullState(0.10)(number) FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01159_combinators_with_parameters.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t6 AS SELECT quantileOrDefaultState(0.10)(number) FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01159_combinators_with_parameters.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t7 AS SELECT quantileResampleState(0.10, 1, 2, 42)(number, number) FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01159_combinators_with_parameters.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t8 AS SELECT quantileState(0.10)(number) FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01159_combinators_with_parameters.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t9 AS SELECT quantileArrayResampleOrDefaultIfState(0.10, 1, 2, 42)([number], number, number % 2) FROM numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/01159_combinators_with_parameters.sql","errors":[]},{"query":"create table rmt (n int) engine=ReplicatedMergeTree('/test/01158/{database}/rmt', '1') order by n\nsettings\ncleanup_delay_period=86400,\nmax_cleanup_delay_period=86400,\nreplicated_can_become_leader=0,\nallow_remote_fs_zero_copy_replication=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01158_zookeeper_log_long.sql","errors":[]},{"query":"create table t (n UInt64, s String default 's' || toString(n)) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01157_replace_table.sql","errors":[]},{"query":"create table dist (n int) engine=Distributed(test_shard_localhost, currentDatabase(), t);","fileName":"../ClickHouse/tests/queries/0_stateless/01157_replace_table.sql","errors":[]},{"query":"create table buf (n int) engine=Buffer(currentDatabase(), dist, 1, 10, 100, 10, 100, 1000, 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01157_replace_table.sql","errors":[]},{"query":"create or replace table join engine=Join(ANY, INNER, n) as select * from t where throwIf(n); -- { serverError FUNCTION_THROW_IF_VALUE_IS_NON_ZERO } select count() from system.tables where database=currentDatabase() and name='join';","fileName":"../ClickHouse/tests/queries/0_stateless/01157_replace_table.sql","errors":[]},{"query":"create or replace table join engine=Join(ANY, INNER, n) as select * from t;","fileName":"../ClickHouse/tests/queries/0_stateless/01157_replace_table.sql","errors":[]},{"query":"CREATE DATABASE test_01155_ordinary ENGINE=Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/01155_rename_move_materialized_view.sql","errors":[]},{"query":"CREATE DATABASE test_01155_atomic ENGINE=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01155_rename_move_materialized_view.sql","errors":[]},{"query":"CREATE TABLE src (s String, x String DEFAULT 'a') ENGINE=MergeTree() PARTITION BY tuple() ORDER BY s;","fileName":"../ClickHouse/tests/queries/0_stateless/01155_rename_move_materialized_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv1 (s String, x String DEFAULT 'b') ENGINE=MergeTree() PARTITION BY tuple() ORDER BY s AS SELECT (*,).1 || 'mv1' as s FROM src;","fileName":"../ClickHouse/tests/queries/0_stateless/01155_rename_move_materialized_view.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv1 (s String, x String DEFAULT 'b') ENGINE=MergeTree() PARTITION BY tuple() ORDER BY s AS SELECT (*,)'","startColumn":126,"startLine":1,"endColumn":127,"endLine":1}]},{"query":"CREATE TABLE dst (s String, x String DEFAULT 'c') ENGINE=MergeTree() PARTITION BY tuple() ORDER BY s;","fileName":"../ClickHouse/tests/queries/0_stateless/01155_rename_move_materialized_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv2 TO dst (s String, x String DEFAULT 'd') AS SELECT (*,).1 || 'mv2' as s FROM src;","fileName":"../ClickHouse/tests/queries/0_stateless/01155_rename_move_materialized_view.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv2 TO dst ('","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE dist (s String, x String DEFAULT 'asdf') ENGINE=Distributed(test_shard_localhost, test_01155_ordinary, src);","fileName":"../ClickHouse/tests/queries/0_stateless/01155_rename_move_materialized_view.sql","errors":[]},{"query":"CREATE DICTIONARY dict (s String, x String DEFAULT 'qwerty') PRIMARY KEY s SOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dist' DB 'test_01155_ordinary'))\nLIFETIME(MIN 0 MAX 2) LAYOUT(COMPLEX_KEY_CACHE(SIZE_IN_CELLS 123));","fileName":"../ClickHouse/tests/queries/0_stateless/01155_rename_move_materialized_view.sql","errors":[]},{"query":"CREATE DATABASE test_01155_ordinary ENGINE=Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/01155_rename_move_materialized_view.sql","errors":[]},{"query":"CREATE TABLE src (n UInt64) ENGINE=MergeTree ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01153_attach_mv_uuid.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv (n Int32, n2 Int64) ENGINE = MergeTree PARTITION BY n % 10 ORDER BY n AS SELECT n, n * n AS n2 FROM src;","fileName":"../ClickHouse/tests/queries/0_stateless/01153_attach_mv_uuid.sql","errors":[]},{"query":"CREATE TABLE \".inner_id.e15f3ab5-6cae-4df3-b879-f40deafd82c2\" (n Int32, n2 Int64) ENGINE = MergeTree PARTITION BY n % 10 ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01153_attach_mv_uuid.sql","errors":[]},{"query":"CREATE TABLE \".inner_id.e15f3ab5-6cae-4df3-b879-f40deafd82c2\" UUID '3bd68e3c-2693-4352-ad66-a66eba9e345e' (n Int32, n2 Int64) ENGINE = MergeTree PARTITION BY n % 10 ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01153_attach_mv_uuid.sql","errors":[]},{"query":"CREATE DATABASE shard_0;","fileName":"../ClickHouse/tests/queries/0_stateless/01152_cross_replication.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE shard_0;'","startColumn":23,"startLine":1,"endColumn":24,"endLine":1}]},{"query":"CREATE DATABASE shard_1;","fileName":"../ClickHouse/tests/queries/0_stateless/01152_cross_replication.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE shard_1;'","startColumn":23,"startLine":1,"endColumn":24,"endLine":1}]},{"query":"CREATE TABLE demo_loan_01568 ON CLUSTER test_cluster_two_shards_different_databases ( \\`id\\` Int64 COMMENT 'id', \\`date_stat\\` Date COMMENT 'date of stat', \\`customer_no\\` String COMMENT 'customer no', \\`loan_principal\\` Float64 COMMENT 'loan principal' ) ENGINE=ReplacingMergeTree() ORDER BY id PARTITION BY toYYYYMM(date_stat); -- { serverError NOT_IMPLEMENTED } SET distributed_ddl_entry_format_version = 2;","fileName":"../ClickHouse/tests/queries/0_stateless/01152_cross_replication.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE demo_loan_01568 ON CLUSTER test_cluster_two_shards_different_databases ( \\'","startColumn":86,"startLine":1,"endColumn":87,"endLine":1}]},{"query":"CREATE TABLE demo_loan_01568 ON CLUSTER test_cluster_two_shards_different_databases ( \\`id\\` Int64 COMMENT 'id', \\`date_stat\\` Date COMMENT 'date of stat', \\`customer_no\\` String COMMENT 'customer no', \\`loan_principal\\` Float64 COMMENT 'loan principal' ) ENGINE=ReplacingMergeTree() ORDER BY id PARTITION BY toYYYYMM(date_stat); -- { serverError INCONSISTENT_CLUSTER_DEFINITION } SET distributed_ddl_output_mode='throw';","fileName":"../ClickHouse/tests/queries/0_stateless/01152_cross_replication.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE demo_loan_01568 ON CLUSTER test_cluster_two_shards_different_databases ( \\'","startColumn":86,"startLine":1,"endColumn":87,"endLine":1}]},{"query":"CREATE TABLE shard_0.demo_loan_01568 ON CLUSTER test_cluster_two_shards_different_databases ( \\`id\\` Int64 COMMENT 'id', \\`date_stat\\` Date COMMENT 'date of stat', \\`customer_no\\` String COMMENT 'customer no', \\`loan_principal\\` Float64 COMMENT 'loan principal' ) ENGINE=ReplacingMergeTree() ORDER BY id PARTITION BY toYYYYMM(date_stat);","fileName":"../ClickHouse/tests/queries/0_stateless/01152_cross_replication.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE shard_0.demo_loan_01568 ON CLUSTER test_cluster_two_shards_different_databases ( \\'","startColumn":94,"startLine":1,"endColumn":95,"endLine":1}]},{"query":"CREATE TABLE shard_1.demo_loan_01568 ON CLUSTER test_cluster_two_shards_different_databases ( \\`id\\` Int64 COMMENT 'id', \\`date_stat\\` Date COMMENT 'date of stat', \\`customer_no\\` String COMMENT 'customer no', \\`loan_principal\\` Float64 COMMENT 'loan principal' ) ENGINE=ReplacingMergeTree() ORDER BY id PARTITION BY toYYYYMM(date_stat);","fileName":"../ClickHouse/tests/queries/0_stateless/01152_cross_replication.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE shard_1.demo_loan_01568 ON CLUSTER test_cluster_two_shards_different_databases ( \\'","startColumn":94,"startLine":1,"endColumn":95,"endLine":1}]},{"query":"CREATE TABLE demo_loan_01568_dist AS shard_0.demo_loan_01568 ENGINE=Distributed('test_cluster_two_shards_different_databases', '', 'demo_loan_01568', id % 2);","fileName":"../ClickHouse/tests/queries/0_stateless/01152_cross_replication.sql","errors":[]},{"query":"create table src_table_1 (n UInt64) engine=Memory as select * from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/01151_storage_merge_filter_tables_by_virtual_column.sql","errors":[]},{"query":"create table src_table_2 (n UInt64) engine=Log as select number * 10 from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/01151_storage_merge_filter_tables_by_virtual_column.sql","errors":[]},{"query":"create table src_table_3 (n UInt64) engine=MergeTree order by n as select number * 100 from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/01151_storage_merge_filter_tables_by_virtual_column.sql","errors":[]},{"query":"create table set (s String) engine=Set as select arrayJoin(['src_table_1', 'src_table_2']);","fileName":"../ClickHouse/tests/queries/0_stateless/01151_storage_merge_filter_tables_by_virtual_column.sql","errors":[]},{"query":"create temporary table tmp (s String);","fileName":"../ClickHouse/tests/queries/0_stateless/01151_storage_merge_filter_tables_by_virtual_column.sql","errors":[]},{"query":"create table mt (n UInt64, s String) engine = MergeTree partition by intDiv(n, 10) order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/01149_zookeeper_mutation_stuck_after_replace_partition.sql","errors":[]},{"query":"create table rmt (n UInt64, s String) engine = ReplicatedMergeTree('/clickhouse/test_01149_{database}/rmt', 'r1') partition by intDiv(n, 10) order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/01149_zookeeper_mutation_stuck_after_replace_partition.sql","errors":[]},{"query":"create table rmt (n UInt64, s String) engine = ReplicatedMergeTree('/clickhouse/test_01149_{database}/rmt', 'r1') partition by intDiv(n, 10) order by n;","fileName":"../ClickHouse/tests/queries/0_stateless/01149_zookeeper_mutation_stuck_after_replace_partition.sql","errors":[]},{"query":"CREATE TABLE rmt (n UInt64, s String) ENGINE = ReplicatedMergeTree('/clickhouse/test_01148/{shard}/{database}/{table}', '{replica}') ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql","errors":[]},{"query":"CREATE TABLE rmt (n UInt64, s String) ENGINE = ReplicatedMergeTree('{default_path_test}{uuid}', '{default_name_test}') ORDER BY n;    -- { serverError BAD_ARGUMENTS } CREATE TABLE rmt (n UInt64, s String) ENGINE = ReplicatedMergeTree('{default_path_test}test_01148', '{default_name_test}') ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql","errors":[]},{"query":"CREATE DATABASE test_01148_atomic ENGINE=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql","errors":[]},{"query":"CREATE TABLE test_01148_atomic.rmt2 ON CLUSTER test_shard_localhost (n int, PRIMARY KEY n) ENGINE=ReplicatedMergeTree;","fileName":"../ClickHouse/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_01148_atomic.rmt2 ON CLUSTER test_shard_localhost (n int, PRIMARY KEY n'","startColumn":88,"startLine":1,"endColumn":89,"endLine":1}]},{"query":"CREATE TABLE test_01148_atomic.rmt3 AS test_01148_atomic.rmt2; -- { serverError BAD_ARGUMENTS } CREATE TABLE test_01148_atomic.rmt4 ON CLUSTER test_shard_localhost AS test_01148_atomic.rmt2;","fileName":"../ClickHouse/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql","errors":[]},{"query":"CREATE DATABASE test_01148_ordinary ENGINE=Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql","errors":[]},{"query":"CREATE DATABASE imdb_01148 ENGINE = Replicated('/test/databases/imdb_01148', '{shard}', '{replica}');","fileName":"../ClickHouse/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql","errors":[]},{"query":"CREATE TABLE imdb_01148.movie_directors (\\`director_id\\` UInt64, \\`movie_id\\` UInt64) ENGINE = ReplicatedMergeTree ORDER BY (director_id, movie_id) SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE imdb_01148.movie_directors (\\'","startColumn":41,"startLine":1,"endColumn":42,"endLine":1}]},{"query":"CREATE TABLE imdb_01148.anything AS imdb_01148.movie_directors;","fileName":"../ClickHouse/tests/queries/0_stateless/01148_zookeeper_path_macros_unfolding.sql","errors":[]},{"query":"CREATE TABLE t0 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01147_partial_merge_full_join.sql","errors":[]},{"query":"CREATE TABLE t1 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01147_partial_merge_full_join.sql","errors":[]},{"query":"CREATE TABLE t2 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01147_partial_merge_full_join.sql","errors":[]},{"query":"CREATE TABLE multiword_types ( a DOUBLE,\nb DOUBLE PRECISION,\nc CHAR DEFAULT 'str',\nd CHAR VARYING,\ne CHAR LARGE OBJECT COMMENT 'comment',\nf CHARACTER VARYING(123),\ng ChArAcTeR   large    OBJECT,\nh nchar varying (456) default toString(a) comment 'comment',\ni NCHAR LARGE OBJECT,\nj BINARY LARGE OBJECT,\nk BINARY VARYING,\nl NATIONAL CHAR,\nm NATIONAL CHARACTER,\nn NATIONAL CHARACTER LARGE OBJECT,\no NATIONAL CHARACTER VARYING,\np NATIONAL CHAR VARYING\n) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01144_multiword_data_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE multiword_types ( a DOUBLE,\\nb DOUBLE PRECISION'","startColumn":9,"startLine":2,"endColumn":18,"endLine":2}]},{"query":"CREATE TABLE unsigned_types ( a TINYINT  SIGNED,\nb INT1     SIGNED,\nc SMALLINT SIGNED,\nd INT      SIGNED,\ne INTEGER  SIGNED,\nf BIGINT   SIGNED,\ng TINYINT  UNSIGNED,\nh INT1     UNSIGNED,\ni SMALLINT UNSIGNED,\nj INT      UNSIGNED,\nk INTEGER  UNSIGNED,\nl BIGINT   UNSIGNED\n) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01144_multiword_data_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE unsigned_types ( a TINYINT  SIGNED'","startColumn":41,"startLine":1,"endColumn":47,"endLine":1}]},{"query":"create table table(query String, test String, run UInt32, metrics Array(UInt32), version UInt32) engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01144_multiple_joins_rewriter_v2_and_lambdas.sql","errors":[{"message":"no viable alternative at input 'create table table(query'","startColumn":19,"startLine":1,"endColumn":24,"endLine":1}]},{"query":"CREATE TABLE t1 (id UInt32, value1 String) ENGINE MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01144_join_rewrite_with_ambiguous_column_and_view.sql","errors":[]},{"query":"CREATE TABLE t2 (id UInt32, value2 String) ENGINE MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01144_join_rewrite_with_ambiguous_column_and_view.sql","errors":[]},{"query":"CREATE TABLE t3 (id UInt32, value3 String) ENGINE MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01144_join_rewrite_with_ambiguous_column_and_view.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS view1 AS SELECT t1.id AS id, t1.value1 AS value1, t2.value2 AS value2, t3.value3 AS value3\nFROM t1\nLEFT JOIN t2 ON t1.id = t2.id\nLEFT JOIN t3 ON t1.id = t3.id\nWHERE t1.id > 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01144_join_rewrite_with_ambiguous_column_and_view.sql","errors":[]},{"query":"create table t engine Memory as select * from numbers(2);","fileName":"../ClickHouse/tests/queries/0_stateless/01143_trivial_count_with_join.sql","errors":[]},{"query":"create table wt (a Int, b Int) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01142_with_ties_and_aliases.sql","errors":[]},{"query":"CREATE TABLE t (\\`x\\` UInt32, \\`lc\\` LowCardinality(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01142_merge_join_lc_and_nullable_in_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE nr (\\`x\\` Nullable(UInt32), \\`lc\\` Nullable(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01142_merge_join_lc_and_nullable_in_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE nr (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t (\\`x\\` UInt32, \\`lc\\` LowCardinality(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01142_join_lc_and_nullable_in_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE nr (\\`x\\` Nullable(UInt32), \\`lc\\` Nullable(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01142_join_lc_and_nullable_in_key.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE nr (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t1 (\\`s\\` String, \\`x\\` Array(UInt8), \\`k\\` UInt64) ENGINE = Join(ANY, LEFT, k);","fileName":"../ClickHouse/tests/queries/0_stateless/01141_join_get_negative.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t1 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t2 (\\`s\\` String, \\`x\\` Array(UInt8), \\`k\\` UInt64) ENGINE = Join(ANY, INNER, k);","fileName":"../ClickHouse/tests/queries/0_stateless/01141_join_get_negative.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE t1 (id String, name String, value UInt32) ENGINE = Join(ANY, LEFT, id)\nSETTINGS join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01140_select_from_storage_join_fix.sql","errors":[]},{"query":"CREATE TABLE t2 (id String, name String, value UInt32) ENGINE = Join(ANY, LEFT, id)\nSETTINGS join_use_nulls = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01140_select_from_storage_join_fix.sql","errors":[]},{"query":"CREATE TABLE t3 (id Nullable(String), name String, value UInt32) ENGINE = Join(ANY, LEFT, id)\nSETTINGS join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01140_select_from_storage_join_fix.sql","errors":[]},{"query":"CREATE TABLE t4 (id String, name Nullable(String), value UInt32) ENGINE = Join(ANY, LEFT, id)\nSETTINGS join_use_nulls = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01140_select_from_storage_join_fix.sql","errors":[]},{"query":"CREATE TABLE foo_local (bar UInt64) ENGINE = MergeTree()\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01138_join_on_distributed_and_tmp.sql","errors":[]},{"query":"CREATE TABLE foo_distributed AS foo_local ENGINE = Distributed('test_cluster_two_shards_localhost', currentDatabase(), foo_local);","fileName":"../ClickHouse/tests/queries/0_stateless/01138_join_on_distributed_and_tmp.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE _tmp_baz (qux UInt64);","fileName":"../ClickHouse/tests/queries/0_stateless/01138_join_on_distributed_and_tmp.sql","errors":[]},{"query":"create table tab (x UInt64, v UInt64) engine = ReplacingMergeTree(v) order by (x, sipHash64(x)) sample by sipHash64(x);","fileName":"../ClickHouse/tests/queries/0_stateless/01137_sample_final.sql","errors":[]},{"query":"create table tab (x UInt64, v UInt64) engine = ReplacingMergeTree(v) order by (x, sipHash64(x)) sample by sipHash64(x);","fileName":"../ClickHouse/tests/queries/0_stateless/01137_sample_final.sql","errors":[]},{"query":"CREATE TABLE pk_func(d DateTime, ui UInt32) ENGINE = SummingMergeTree ORDER BY toDate(d);","fileName":"../ClickHouse/tests/queries/0_stateless/01137_order_by_func_final.sql","errors":[]},{"query":"CREATE TABLE pk_func(d DateTime, ui UInt32) ENGINE = MergeTree ORDER BY toDate(d) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01137_order_by_func.sql","errors":[]},{"query":"CREATE TABLE nORX (\\`A\\` Int64, \\`B\\` Int64, \\`V\\` Int64) ENGINE = MergeTree ORDER BY (A, negate(B)) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01137_order_by_func.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE nORX (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"create table test (project LowCardinality(String)) engine=MergeTree() order by project;","fileName":"../ClickHouse/tests/queries/0_stateless/01136_multiple_sets.sql","errors":[]},{"query":"CREATE TABLE default_table (\nid UInt64,\nenum_column Enum8('undefined' = 0, 'fox' = 1, 'index' = 2)\n)\nENGINE ReplicatedMergeTree('/clickhouse/{database}/test_01135/default_table', '1')\nORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01135_default_and_alter_zookeeper.sql","errors":[]},{"query":"CREATE DICTIONARY IF NOT EXISTS system.dict1 (\nbytes_allocated UInt64,\nelement_count Int32,\nloading_start_time DateTime\n)\nPRIMARY KEY bytes_allocated\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' PASSWORD '' TABLE 'dictionaries' DB 'system'))\nLIFETIME(0)\nLAYOUT(hashed());","fileName":"../ClickHouse/tests/queries/0_stateless/01129_dict_get_join_lose_constness.sql","errors":[]},{"query":"CREATE TABLE mass_table_312 (d Date DEFAULT '2000-01-01', x UInt64, n Nested(a String, b String)) ENGINE = MergeTree(d, x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/01128_generate_random_nested.sql","errors":[]},{"query":"CREATE TABLE mt (d Date, x String) ENGINE = MergeTree(d, x, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01127_month_partitioning_consistency_select.sql","errors":[]},{"query":"CREATE TABLE mt (d Date, x UInt8) ENGINE = MergeTree(d, x, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01126_month_partitioning_consistent_code.sql","errors":[]},{"query":"CREATE TABLE mass_table_117 (\\`dt\\` Date, \\`site_id\\` Int32, \\`site_key\\` String) ENGINE = MergeTree(dt, (site_id, site_key, dt), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01125_generate_random_qoega.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mass_table_117 (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE date_table (\nid UInt32,\nval String,\nstart Date,\nend Date\n) Engine = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01125_dict_ddl_cannot_add_column.sql","errors":[]},{"query":"CREATE DICTIONARY somedict (\nid UInt32,\nval String,\nstart Date,\nend Date\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'date_table' DB currentDatabase()))\nLAYOUT(RANGE_HASHED())\nRANGE (MIN start MAX end)\nLIFETIME(MIN 300 MAX 360);","fileName":"../ClickHouse/tests/queries/0_stateless/01125_dict_ddl_cannot_add_column.sql","errors":[]},{"query":"CREATE TABLE source_table (x UInt16) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01124_view_bad_types.sql","errors":[]},{"query":"CREATE VIEW dest_view (x UInt64) AS SELECT * FROM source_table;","fileName":"../ClickHouse/tests/queries/0_stateless/01124_view_bad_types.sql","errors":[]},{"query":"CREATE TABLE rollup_having ( a Nullable(String),\nb Nullable(String)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01122_totals_rollup_having_block_header.sql","errors":[]},{"query":"create user \"       \";","fileName":"../ClickHouse/tests/queries/0_stateless/01119_weird_user_names.sql","errors":[{"message":"no viable alternative at input 'create user'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"create user '   spaces';","fileName":"../ClickHouse/tests/queries/0_stateless/01119_weird_user_names.sql","errors":[{"message":"no viable alternative at input 'create user'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"create user 'spaces    ';","fileName":"../ClickHouse/tests/queries/0_stateless/01119_weird_user_names.sql","errors":[{"message":"no viable alternative at input 'create user'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"create user \\` INTERSERVER SECRET \\`;  -- { serverError BAD_ARGUMENTS } create user '';  -- { clientError SYNTAX_ERROR }\ncreate user 'test 01119';","fileName":"../ClickHouse/tests/queries/0_stateless/01119_weird_user_names.sql","errors":[{"message":"no viable alternative at input 'create user'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"create user \"无名氏 \";","fileName":"../ClickHouse/tests/queries/0_stateless/01119_weird_user_names.sql","errors":[{"message":"no viable alternative at input 'create user'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"create user \"🙈 🙉 🙊\";","fileName":"../ClickHouse/tests/queries/0_stateless/01119_weird_user_names.sql","errors":[{"message":"no viable alternative at input 'create user'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"create table t(n int, a Int64, s String) engine = MergeTree() order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/01119_optimize_trivial_insert_select.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE sessions (date DateTime, visitorId String, sessionId String);","fileName":"../ClickHouse/tests/queries/0_stateless/01116_asof_join_dolbyzerr.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE orders (date DateTime, visitorId String, orderId String);","fileName":"../ClickHouse/tests/queries/0_stateless/01116_asof_join_dolbyzerr.sql","errors":[]},{"query":"CREATE TABLE prewhere (light UInt8, heavy String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01115_prewhere_array_join.sql","errors":[]},{"query":"CREATE TABLE testtable (DT Datetime, Label1 String, Value UInt64) ENGINE = MergeTree() PARTITION BY DT ORDER BY Label1;","fileName":"../ClickHouse/tests/queries/0_stateless/01115_prewhere_array_join.sql","errors":[]},{"query":"CREATE TABLE t1 (key UInt64, a UInt8, b String, c Float64) ENGINE = MergeTree() ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01115_join_with_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY dict_flat (key UInt64 DEFAULT 0, a UInt8 DEFAULT 42, b String DEFAULT 'x', c Float64 DEFAULT 42.0) PRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE 't1'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01115_join_with_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY dict_hashed (key UInt64 DEFAULT 0, a UInt8 DEFAULT 42, b String DEFAULT 'x', c Float64 DEFAULT 42.0) PRIMARY KEY key\nSOURCE(CLICKHOUSE(TABLE 't1'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01115_join_with_dictionary.sql","errors":[]},{"query":"CREATE DICTIONARY dict_complex_cache (key UInt64 DEFAULT 0, a UInt8 DEFAULT 42, b String DEFAULT 'x', c Float64 DEFAULT 42.0) PRIMARY KEY key, b\nSOURCE(CLICKHOUSE(TABLE 't1'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(COMPLEX_KEY_CACHE(SIZE_IN_CELLS 1));","fileName":"../ClickHouse/tests/queries/0_stateless/01115_join_with_dictionary.sql","errors":[]},{"query":"CREATE TABLE minmax_compact (\nu64 UInt64,\ni64 Int64,\ni32 Int32\n) ENGINE = MergeTree()\nPARTITION BY i32\nORDER BY u64\nSETTINGS index_granularity = 2, index_granularity_bytes = '10Mi', min_rows_for_wide_part = 1000000;","fileName":"../ClickHouse/tests/queries/0_stateless/01114_materialize_clear_index_compact_parts.sql","errors":[]},{"query":"CREATE TABLE clear_column(x UInt32, y UInt32) ENGINE MergeTree ORDER BY x PARTITION by x;","fileName":"../ClickHouse/tests/queries/0_stateless/01114_clear_column_compact_parts.sql","errors":[]},{"query":"CREATE TABLE mt_compact (d Date, id UInt32, s String) ENGINE = MergeTree ORDER BY id PARTITION BY d\nSETTINGS min_bytes_for_wide_part = 10000000, index_granularity = 128;","fileName":"../ClickHouse/tests/queries/0_stateless/01114_alter_modify_compact_parts.sql","errors":[]},{"query":"CREATE TABLE table_for_dict ( CompanyID String,\nOSType Enum('UNKNOWN' = 0, 'WINDOWS' = 1, 'LINUX' = 2, 'ANDROID' = 3, 'MAC' = 4),\nSomeID Int32\n)\nENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01113_local_dictionary_type_conversion.sql","errors":[]},{"query":"CREATE DICTIONARY dict_with_conversion (\nCompanyID String DEFAULT '',\nOSType String DEFAULT '',\nSomeID Int32 DEFAULT 0\n)\nPRIMARY KEY CompanyID\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' DB currentDatabase()))\nLIFETIME(MIN 1 MAX 20)\nLAYOUT(COMPLEX_KEY_HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01113_local_dictionary_type_conversion.sql","errors":[]},{"query":"CREATE TABLE check_table_with_indices ( id UInt64,\ndata String,\nINDEX a (id) type minmax GRANULARITY 3\n) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01112_check_table_with_index.sql","errors":[]},{"query":"CREATE DATABASE db_for_dict;","fileName":"../ClickHouse/tests/queries/0_stateless/01110_dictionary_layout_without_arguments.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE db_for_dict;'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"CREATE TABLE db_for_dict.table_for_dict (\nkey1 UInt64,\nvalue String\n)\nENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01110_dictionary_layout_without_arguments.sql","errors":[]},{"query":"CREATE DICTIONARY db_for_dict.dict_with_hashed_layout (\nkey1 UInt64,\nvalue String\n)\nPRIMARY KEY key1\nLAYOUT(HASHED)\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' DB 'db_for_dict'))\nLIFETIME(MIN 1 MAX 10);","fileName":"../ClickHouse/tests/queries/0_stateless/01110_dictionary_layout_without_arguments.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY db_for_dict.dict_with_hashed_layout (\\nkey1 UInt64,\\nvalue String\\n)\\nPRIMARY KEY key1\\nLAYOUT(HASHED)'","startColumn":13,"startLine":6,"endColumn":14,"endLine":6}]},{"query":"CREATE DATABASE test_01109 ENGINE=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01109_exchange_tables.sql","errors":[]},{"query":"CREATE TABLE t0 ENGINE=MergeTree() ORDER BY tuple() AS SELECT rowNumberInAllBlocks(), * FROM (SELECT toLowCardinality(arrayJoin(['exchange', 'tables'])));","fileName":"../ClickHouse/tests/queries/0_stateless/01109_exchange_tables.sql","errors":[]},{"query":"CREATE TABLE t1 ENGINE=Log() AS SELECT * FROM system.tables AS t JOIN system.databases AS d ON t.database=d.name;","fileName":"../ClickHouse/tests/queries/0_stateless/01109_exchange_tables.sql","errors":[]},{"query":"CREATE TABLE t2 ENGINE=MergeTree() ORDER BY tuple() AS SELECT rowNumberInAllBlocks() + (SELECT count() FROM t0), * FROM (SELECT arrayJoin(['hello', 'world']));","fileName":"../ClickHouse/tests/queries/0_stateless/01109_exchange_tables.sql","errors":[]},{"query":"CREATE DATABASE test_01109_other_atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01109_exchange_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE test_01109_other_atomic;'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE DATABASE test_01109_ordinary ENGINE=Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/01109_exchange_tables.sql","errors":[]},{"query":"CREATE TABLE test_01109_other_atomic.t3 ENGINE=MergeTree() ORDER BY tuple() AS SELECT rowNumberInAllBlocks() + (SELECT max((*,*).1.1) + 1 FROM (SELECT (*,) FROM t1 UNION ALL SELECT (*,) FROM t2)), *\nFROM (SELECT arrayJoin(['another', 'db']));","fileName":"../ClickHouse/tests/queries/0_stateless/01109_exchange_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_01109_other_atomic.t3 ENGINE=MergeTree() ORDER BY tuple() AS SELECT rowNumberInAllBlocks() + (SELECT max((*,*).1.1) + 1 FROM (SELECT (*,)'","startColumn":154,"startLine":1,"endColumn":155,"endLine":1}]},{"query":"CREATE TABLE test_01109_ordinary.t4 AS t1;","fileName":"../ClickHouse/tests/queries/0_stateless/01109_exchange_tables.sql","errors":[]},{"query":"CREATE DATABASE test_01109_rename_exists ENGINE=Atomic;","fileName":"../ClickHouse/tests/queries/0_stateless/01109_exchange_tables.sql","errors":[]},{"query":"CREATE TABLE t0 ENGINE=Log() AS SELECT * FROM system.numbers limit 2;","fileName":"../ClickHouse/tests/queries/0_stateless/01109_exchange_tables.sql","errors":[]},{"query":"CREATE TABLE t (item_id UInt64, price_sold Float32, date Date) ENGINE MergeTree ORDER BY item_id;","fileName":"../ClickHouse/tests/queries/0_stateless/01107_join_right_table_totals.sql","errors":[]},{"query":"CREATE TABLE d_one (dummy UInt8) ENGINE = Distributed(test_cluster_two_shards, system, one, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01104_distributed_one_test.sql","errors":[]},{"query":"CREATE TABLE d_numbers (number UInt32) ENGINE = Distributed(test_cluster_two_shards, system, numbers, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01104_distributed_numbers_test.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS test_01103;","fileName":"../ClickHouse/tests/queries/0_stateless/01103_distributed_product_mode_local_column_renames.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_01103;'","startColumn":40,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"create table t1_shard (id Int32) engine MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/01103_distributed_product_mode_local_column_renames.sql","errors":[]},{"query":"create table t2_shard (id Int32) engine MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/01103_distributed_product_mode_local_column_renames.sql","errors":[]},{"query":"create table t1_distr as t1_shard engine Distributed(test_cluster_two_shards_localhost, test_01103, t1_shard, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01103_distributed_product_mode_local_column_renames.sql","errors":[]},{"query":"create table t2_distr as t2_shard engine Distributed(test_cluster_two_shards_localhost, test_01103, t2_shard, id);","fileName":"../ClickHouse/tests/queries/0_stateless/01103_distributed_product_mode_local_column_renames.sql","errors":[]},{"query":"CREATE TABLE visits(StartDate Date) ENGINE MergeTree ORDER BY(StartDate);","fileName":"../ClickHouse/tests/queries/0_stateless/01102_distributed_local_in_bug.sql","errors":[]},{"query":"CREATE TABLE hits(EventDate Date, WatchID UInt8) ENGINE MergeTree ORDER BY(EventDate);","fileName":"../ClickHouse/tests/queries/0_stateless/01102_distributed_local_in_bug.sql","errors":[]},{"query":"CREATE TABLE visits_layer(StartDate Date) ENGINE Distributed(test_cluster_two_shards_localhost,  currentDatabase(), 'visits');","fileName":"../ClickHouse/tests/queries/0_stateless/01102_distributed_local_in_bug.sql","errors":[]},{"query":"CREATE TABLE hits_layer(EventDate Date, WatchID UInt8) ENGINE Distributed(test_cluster_two_shards_localhost,  currentDatabase(), 'hits');","fileName":"../ClickHouse/tests/queries/0_stateless/01102_distributed_local_in_bug.sql","errors":[]},{"query":"CREATE TABLE test_a (\nOldColumn String DEFAULT '',\nEventDate Date DEFAULT toDate(EventTime),\nEventTime DateTime\n) ENGINE = MergeTree(EventDate, EventTime, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01101_prewhere_after_alter.sql","errors":[]},{"query":"CREATE TABLE test_b (\nOldColumn String DEFAULT '',\nNewColumn String DEFAULT '',\nEventDate Date DEFAULT toDate(EventTime),\nEventTime DateTime\n) ENGINE = MergeTree(EventDate, EventTime, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01101_prewhere_after_alter.sql","errors":[]},{"query":"CREATE TABLE local_01099_a (number UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_b (number UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_a AS local_01099_a ENGINE = Distributed('test_shard_localhost', currentDatabase(), local_01099_a, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_b AS local_01099_b ENGINE = Distributed('test_shard_localhost', currentDatabase(), local_01099_b, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_a (number UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_b (number UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_a AS local_01099_a ENGINE = Distributed('test_cluster_two_shards_localhost', currentDatabase(), local_01099_a, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_b AS local_01099_b ENGINE = Distributed('test_cluster_two_shards_localhost', currentDatabase(), local_01099_b, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_a (number UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_b (number UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_a AS local_01099_a ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), local_01099_a, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_b AS local_01099_b ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), local_01099_b, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_a (number UInt64) ENGINE = MergeTree() ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_b (number UInt64) ENGINE = MergeTree() ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_a AS local_01099_a ENGINE = Distributed('test_cluster_1_shard_3_replicas_1_unavailable', currentDatabase(), local_01099_a, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_b AS local_01099_b ENGINE = Distributed('test_cluster_1_shard_3_replicas_1_unavailable', currentDatabase(), local_01099_b, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_b (number UInt64) ENGINE = MergeTree() ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_b AS local_01099_b ENGINE = Distributed('test_cluster_1_shard_3_replicas_1_unavailable', currentDatabase(), local_01099_b, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_a (number UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_b (number UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_a AS local_01099_a ENGINE = Distributed('test_shard_localhost', currentDatabase(), local_01099_a, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_b AS local_01099_b ENGINE = Distributed('test_shard_localhost', currentDatabase(), local_01099_b, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_a (number UInt64) ENGINE = MergeTree() ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_b (number UInt64) ENGINE = MergeTree() ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_a AS local_01099_a ENGINE = Distributed('test_cluster_two_shards_localhost', currentDatabase(), local_01099_a, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_b AS local_01099_b ENGINE = Distributed('test_cluster_two_shards_localhost', currentDatabase(), local_01099_b, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_a (number UInt64) ENGINE = MergeTree() ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_b (number UInt64) ENGINE = MergeTree() ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_a AS local_01099_a ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), local_01099_a, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_b AS local_01099_b ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), local_01099_b, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_a (number UInt64) ENGINE = MergeTree() ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_b (number UInt64) ENGINE = MergeTree() ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_a AS local_01099_a ENGINE = Distributed('test_cluster_1_shard_3_replicas_1_unavailable', currentDatabase(), local_01099_a, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_b AS local_01099_b ENGINE = Distributed('test_cluster_1_shard_3_replicas_1_unavailable', currentDatabase(), local_01099_b, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE local_01099_b (number UInt64) ENGINE = MergeTree() ORDER BY number;","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"CREATE TABLE distributed_01099_b AS local_01099_b ENGINE = Distributed('test_cluster_1_shard_3_replicas_1_unavailable', currentDatabase(), local_01099_b, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01099_parallel_distributed_insert_select.sql","errors":[]},{"query":"create table t (id UInt32, a Int) engine = MergeTree order by id settings min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01097_one_more_range_reader_test_wide_part.sql","errors":[]},{"query":"create table t (id UInt32, a Int) engine = MergeTree order by id settings min_bytes_for_wide_part=0;","fileName":"../ClickHouse/tests/queries/0_stateless/01097_one_more_range_reader_test_wide_part.sql","errors":[]},{"query":"create table t (id UInt32, a Int) engine = MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/01097_one_more_range_reader_test.sql","errors":[]},{"query":"create table t (id UInt32, a Int) engine = MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/01097_one_more_range_reader_test.sql","errors":[]},{"query":"CREATE TABLE table_with_cyclic_defaults (a DEFAULT b, b DEFAULT a) ENGINE = Memory; --{serverError CYCLIC_ALIASES} CREATE TABLE table_with_cyclic_defaults (a DEFAULT b + 1, b DEFAULT a * a) ENGINE = Memory; --{serverError CYCLIC_ALIASES}\nCREATE TABLE table_with_cyclic_defaults (a DEFAULT b, b DEFAULT toString(c), c DEFAULT concat(a, '1')) ENGINE = Memory; --{serverError CYCLIC_ALIASES}\nCREATE TABLE table_with_cyclic_defaults (a DEFAULT b, b DEFAULT c, c DEFAULT a * b) ENGINE = Memory; --{serverError CYCLIC_ALIASES}\nCREATE TABLE table_with_cyclic_defaults (a String DEFAULT b, b String DEFAULT a) ENGINE = Memory; --{serverError CYCLIC_ALIASES}\nCREATE TABLE table_with_cyclic_defaults (a String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01097_cyclic_defaults.sql","errors":[]},{"query":"CREATE TABLE part (\np_partkey       Int32,  -- PK\np_name          String, -- variable text, size 55\np_mfgr          FixedString(25),\np_brand         FixedString(10),\np_type          String, -- variable text, size 25\np_size          Int32,  -- integer\np_container     FixedString(10),\np_retailprice   Decimal(18,2),\np_comment       String, -- variable text, size 23\nCONSTRAINT pk CHECK p_partkey >= 0,\nCONSTRAINT positive CHECK (p_size >= 0 AND p_retailprice >= 0)\n) engine = MergeTree ORDER BY (p_partkey);","fileName":"../ClickHouse/tests/queries/0_stateless/01095_tpch_like_smoke.sql","errors":[]},{"query":"CREATE TABLE supplier (\ns_suppkey       Int32,  -- PK\ns_name          FixedString(25),\ns_address       String, -- variable text, size 40\ns_nationkey     Int32,  -- FK n_nationkey\ns_phone         FixedString(15),\ns_acctbal       Decimal(18,2),\ns_comment       String, -- variable text, size 101\nCONSTRAINT pk CHECK s_suppkey >= 0\n) engine = MergeTree ORDER BY (s_suppkey);","fileName":"../ClickHouse/tests/queries/0_stateless/01095_tpch_like_smoke.sql","errors":[]},{"query":"CREATE TABLE partsupp (\nps_partkey      Int32,  -- PK(1), FK p_partkey\nps_suppkey      Int32,  -- PK(2), FK s_suppkey\nps_availqty     Int32,  -- integer\nps_supplycost   Decimal(18,2),\nps_comment      String, -- variable text, size 199\nCONSTRAINT pk CHECK ps_partkey >= 0,\nCONSTRAINT c1 CHECK (ps_availqty >= 0 AND ps_supplycost >= 0)\n) engine = MergeTree ORDER BY (ps_partkey, ps_suppkey);","fileName":"../ClickHouse/tests/queries/0_stateless/01095_tpch_like_smoke.sql","errors":[]},{"query":"CREATE TABLE customer (\nc_custkey       Int32,  -- PK\nc_name          String, -- variable text, size 25\nc_address       String, -- variable text, size 40\nc_nationkey     Int32,  -- FK n_nationkey\nc_phone         FixedString(15),\nc_acctbal       Decimal(18,2),\nc_mktsegment    FixedString(10),\nc_comment       String, -- variable text, size 117\nCONSTRAINT pk CHECK c_custkey >= 0\n) engine = MergeTree ORDER BY (c_custkey);","fileName":"../ClickHouse/tests/queries/0_stateless/01095_tpch_like_smoke.sql","errors":[]},{"query":"CREATE TABLE orders (\no_orderkey      Int32,  -- PK\no_custkey       Int32,  -- FK c_custkey\no_orderstatus   FixedString(1),\no_totalprice    Decimal(18,2),\no_orderdate     Date,\no_orderpriority FixedString(15),\no_clerk         FixedString(15),\no_shippriority  Int32,  -- integer\no_comment       String, -- variable text, size 79\nCONSTRAINT c1 CHECK o_totalprice >= 0\n) engine = MergeTree ORDER BY (o_orderdate, o_orderkey);","fileName":"../ClickHouse/tests/queries/0_stateless/01095_tpch_like_smoke.sql","errors":[]},{"query":"CREATE TABLE lineitem (\nl_orderkey      Int32,  -- PK(1), FK o_orderkey\nl_partkey       Int32,  -- FK ps_partkey\nl_suppkey       Int32,  -- FK ps_suppkey\nl_linenumber    Int32,  -- PK(2)\nl_quantity      Decimal(18,2),\nl_extendedprice Decimal(18,2),\nl_discount      Decimal(18,2),\nl_tax           Decimal(18,2),\nl_returnflag    FixedString(1),\nl_linestatus    FixedString(1),\nl_shipdate      Date,\nl_commitdate    Date,\nl_receiptdate   Date,\nl_shipinstruct  FixedString(25),\nl_shipmode      FixedString(10),\nl_comment       String, -- variable text size 44\nCONSTRAINT c1 CHECK (l_quantity >= 0 AND l_extendedprice >= 0 AND l_tax >= 0 AND l_shipdate <= l_receiptdate)\n) engine = MergeTree ORDER BY (l_shipdate, l_receiptdate, l_orderkey, l_linenumber);","fileName":"../ClickHouse/tests/queries/0_stateless/01095_tpch_like_smoke.sql","errors":[]},{"query":"CREATE TABLE nation (\nn_nationkey     Int32,  -- PK\nn_name          FixedString(25),\nn_regionkey     Int32,  -- FK r_regionkey\nn_comment       String, -- variable text, size 152\nCONSTRAINT pk CHECK n_nationkey >= 0\n) Engine = MergeTree ORDER BY (n_nationkey);","fileName":"../ClickHouse/tests/queries/0_stateless/01095_tpch_like_smoke.sql","errors":[]},{"query":"CREATE TABLE region (\nr_regionkey     Int32,  -- PK\nr_name          FixedString(25),\nr_comment       String, -- variable text, size 152\nCONSTRAINT pk CHECK r_regionkey >= 0\n) engine = MergeTree ORDER BY (r_regionkey);","fileName":"../ClickHouse/tests/queries/0_stateless/01095_tpch_like_smoke.sql","errors":[]},{"query":"create view revenue0 as select\nl_suppkey,\nsum(l_extendedprice * (1 - l_discount))\nfrom\nlineitem\nwhere\nl_shipdate >= date '1996-01-01'\nand l_shipdate < date '1996-01-01' + interval '3' month\ngroup by\nl_suppkey;","fileName":"../ClickHouse/tests/queries/0_stateless/01095_tpch_like_smoke.sql","errors":[]},{"query":"CREATE TABLE test (\n\\`a0\\` UInt64 DEFAULT a1 + 1,\n\\`a1\\` UInt64 DEFAULT a0 + 1,\n\\`a2\\` UInt64 DEFAULT a3 + a4,\n\\`a3\\` UInt64 DEFAULT a2 + 1,\n\\`a4\\` UInt64 ALIAS a3 + 1\n)\nENGINE = Log; -- { serverError CYCLIC_ALIASES }\nCREATE TABLE pythagoras\n(\n\\`a\\` Float64 DEFAULT sqrt((c * c) - (b * b)),\n\\`b\\` Float64 DEFAULT sqrt((c * c) - (a * a)),\n\\`c\\` Float64 DEFAULT sqrt((a * a) + (b * b))\n)\nENGINE = Log; -- { serverError CYCLIC_ALIASES }\n","fileName":"../ClickHouse/tests/queries/0_stateless/01093_cyclic_defaults_filimonov.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE table_with_complex_default (i Int8, n UInt8 DEFAULT 42, s String DEFAULT concat('test', CAST(n, 'String'))) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01091_insert_with_default_json.sql","errors":[]},{"query":"CREATE TABLE test_default_using_alias (\nwhat String,\na String DEFAULT concat(c, ' is great'),\nb String DEFAULT concat(c, ' is fast'),\nc String ALIAS concat(what, 'House')\n)\nENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01091_insert_with_default_json.sql","errors":[]},{"query":"CREATE TABLE mutations_and_quorum1 (\\`server_date\\` Date, \\`something\\` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01090/mutations_and_quorum', '1') PARTITION BY toYYYYMM(server_date) ORDER BY (server_date, something);","fileName":"../ClickHouse/tests/queries/0_stateless/01090_zookeeper_mutations_and_insert_quorum_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mutations_and_quorum1 (\\'","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE mutations_and_quorum2 (\\`server_date\\` Date, \\`something\\` String) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01090/mutations_and_quorum', '2') PARTITION BY toYYYYMM(server_date) ORDER BY (server_date, something);","fileName":"../ClickHouse/tests/queries/0_stateless/01090_zookeeper_mutations_and_insert_quorum_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mutations_and_quorum2 (\\'","startColumn":36,"startLine":1,"endColumn":37,"endLine":1}]},{"query":"CREATE TABLE old_format_mt ( event_date Date,\nkey UInt64,\nvalue1 UInt64,\nvalue2 String\n)\nENGINE = MergeTree(event_date, (key, value1), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01089_alter_settings_old_format.sql","errors":[]},{"query":"CREATE TABLE test_table(a Array(Int8), d Decimal32(4), c Tuple(DateTime64(3, 'UTC'), UUID)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01087_table_function_generate.sql","errors":[]},{"query":"CREATE TABLE test_table_2(a Array(Int8), b UInt32, c Nullable(String), d Decimal32(4), e Nullable(Enum16('h' = 1, 'w' = 5 , 'o' = -200)), f Float64, g Tuple(Date, DateTime('UTC'), DateTime64(3, 'UTC'), UUID), h FixedString(2)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01087_table_function_generate.sql","errors":[]},{"query":"CREATE TABLE test_table(a Array(Int8), d Decimal32(4), c Tuple(DateTime64(3), UUID)) ENGINE = GenerateRandom();","fileName":"../ClickHouse/tests/queries/0_stateless/01087_storage_generate.sql","errors":[]},{"query":"CREATE TABLE test_table_2(a Array(Int8), d Decimal32(4), c Tuple(DateTime64(3, 'UTC'), UUID)) ENGINE = GenerateRandom(10, 5, 3);","fileName":"../ClickHouse/tests/queries/0_stateless/01087_storage_generate.sql","errors":[]},{"query":"create table t (i Int, a Int, s String, index ind_s (s) type set(1) granularity 1) engine = MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01087_index_set_ubsan.sql","errors":[]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE:Identifier} ENGINE=Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/01085_window_view_attach.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.mt(a Int32, market Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01085_window_view_attach.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;","fileName":"../ClickHouse/tests/queries/0_stateless/01085_window_view_attach.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv ENGINE Memory WATERMARK=ASCENDING AS SELECT count(a) AS count, market, tumbleEnd(wid) AS w_end FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '5' SECOND) AS wid, market;","fileName":"../ClickHouse/tests/queries/0_stateless/01085_window_view_attach.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE_1:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/01084_regexp_empty.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE t (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01084_regexp_empty.sql","errors":[]},{"query":"CREATE TABLE table_with_defaults_on_aliases (col1 UInt32, col2 ALIAS col1, col3 DEFAULT col2) Engine = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01084_defaults_on_aliases.sql","errors":[]},{"query":"CREATE TABLE test_alias (a UInt8 ALIAS b, b UInt8) ENGINE Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01083_log_first_column_alias.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS functional_index_mergetree (x Float64) ENGINE = MergeTree ORDER BY round(x);","fileName":"../ClickHouse/tests/queries/0_stateless/01083_functional_index_in_mergetree.sql","errors":[]},{"query":"CREATE TABLE file (n Int8) ENGINE = File(upper('tsv') || 'WithNames' || 'AndTypes');","fileName":"../ClickHouse/tests/queries/0_stateless/01083_expressions_in_engine_arguments.sql","errors":[]},{"query":"CREATE TABLE buffer (n Int8) ENGINE = Buffer(currentDatabase(), file, 16, 10, 200, 10000, 1000000, 10000000, 1000000000);","fileName":"../ClickHouse/tests/queries/0_stateless/01083_expressions_in_engine_arguments.sql","errors":[]},{"query":"CREATE TABLE merge (n Int8) ENGINE = Merge('', lower('DISTRIBUTED'));","fileName":"../ClickHouse/tests/queries/0_stateless/01083_expressions_in_engine_arguments.sql","errors":[]},{"query":"CREATE TABLE merge_tf as merge(currentDatabase(), '.*');","fileName":"../ClickHouse/tests/queries/0_stateless/01083_expressions_in_engine_arguments.sql","errors":[]},{"query":"CREATE TABLE distributed (n Int8) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 'fi' || 'le');","fileName":"../ClickHouse/tests/queries/0_stateless/01083_expressions_in_engine_arguments.sql","errors":[]},{"query":"CREATE TABLE distributed_tf as cluster('test' || '_' || 'shard_localhost', '', 'buf' || 'fer');","fileName":"../ClickHouse/tests/queries/0_stateless/01083_expressions_in_engine_arguments.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE distributed_tf as cluster('test' ||'","startColumn":46,"startLine":1,"endColumn":48,"endLine":1}]},{"query":"CREATE TABLE url (n UInt64, col String) ENGINE=URL (\nreplace\n(\n'https://localhost:' || getServerPort('https_port') || '/?query='  || 'select n, _table from ' || currentDatabase() || '.merge format CSV', ' ', '+'\n),\nCSV\n);","fileName":"../ClickHouse/tests/queries/0_stateless/01083_expressions_in_engine_arguments.sql","errors":[]},{"query":"CREATE VIEW view AS SELECT toInt64(n) as n FROM (SELECT toString(n) as n from merge WHERE _table != 'qwerty' ORDER BY _table) UNION ALL SELECT * FROM file;","fileName":"../ClickHouse/tests/queries/0_stateless/01083_expressions_in_engine_arguments.sql","errors":[]},{"query":"CREATE TABLE rich_syntax as remote (\n'localhos{x|y|t}',\ncluster\n(\n'test' || '_' || 'shard_localhost',\nremote\n(\n'127.0.0.{1..4}',\nif\n(\ntoString(40 + 2) NOT IN ('hello', dictGetString(currentDatabase() || '.dict', 'col', toUInt64('0001'))),\ncurrentDatabase(),\n'FAIL'\n),\nextract('123view456', '[a-z]+')\n)\n)\n);","fileName":"../ClickHouse/tests/queries/0_stateless/01083_expressions_in_engine_arguments.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE rich_syntax as remote (\\n'localhos{x|y|t}',\\ncluster\\n(\\n'test' ||'","startColumn":7,"startLine":5,"endColumn":9,"endLine":5}]},{"query":"CREATE TABLE n (k UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01083_cross_to_inner_with_like.sql","errors":[]},{"query":"CREATE TABLE r (k UInt32, name String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01083_cross_to_inner_with_like.sql","errors":[]},{"query":"create table ax (A Int64, B Int64) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01083_cross_to_inner_with_in_bug.sql","errors":[]},{"query":"create table bx (A Int64) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01083_cross_to_inner_with_in_bug.sql","errors":[]},{"query":"create table da_memory_efficient_shard(A Int64, B Int64) Engine=MergeTree order by A partition by B % 2;","fileName":"../ClickHouse/tests/queries/0_stateless/01083_aggregation_memory_efficient_bug.sql","errors":[]},{"query":"create table test_01081 (key Int) engine=MergeTree() order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01081_PartialSortingTransform_full_column.sql","errors":[]},{"query":"CREATE TABLE test_joinGet(user_id Nullable(Int32), name String) Engine = Join(ANY, LEFT, user_id);","fileName":"../ClickHouse/tests/queries/0_stateless/01080_join_get_null.sql","errors":[]},{"query":"CREATE TABLE A1( a DateTime ) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01080_engine_merge_prewhere_tupleelement_error.sql","errors":[]},{"query":"CREATE TABLE A_M as A1 ENGINE = Merge(currentDatabase(), '^A1\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/01080_engine_merge_prewhere_tupleelement_error.sql","errors":[]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.test_table_01080 (dim_key Int64, dim_id String) ENGINE = MergeTree Order by (dim_key);","fileName":"../ClickHouse/tests/queries/0_stateless/01080_check_for_error_incorrect_size_of_nested_column.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.test_dict_01080 ( dim_key Int64, dim_id String ) PRIMARY KEY dim_key\nsource(clickhouse(host 'localhost' port tcpPort() user 'default' password '' db currentDatabase() table 'test_table_01080'))\nLIFETIME(MIN 0 MAX 0) LAYOUT(complex_key_hashed());","fileName":"../ClickHouse/tests/queries/0_stateless/01080_check_for_error_incorrect_size_of_nested_column.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE mt_pk ENGINE = MergeTree PARTITION BY d ORDER BY x SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi' AS SELECT toDate(number % 32) AS d, number AS x FROM system.numbers LIMIT 10000010;","fileName":"../ClickHouse/tests/queries/0_stateless/01079_order_by_pk.sql","errors":[]},{"query":"create table t (a Int) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/01079_new_range_reader_segfault.sql","errors":[]},{"query":"CREATE TABLE alter_default (\ndate Date,\nkey UInt64\n)\nENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_01079/alter_default', '1')\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01079_alter_default_zookeeper_long.sql","errors":[]},{"query":"create table t (a Int, b Int) engine = MergeTree order by (a, b) settings index_granularity = 400;","fileName":"../ClickHouse/tests/queries/0_stateless/01078_merge_tree_read_one_thread.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_not_has (ary Array(LowCardinality(Nullable(String))), d Date, INDEX idx_ary ary TYPE bloom_filter(0.01) GRANULARITY 1024) ENGINE = MergeTree() PARTITION BY d ORDER BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/01078_bloom_filter_operator_not_has.sql","errors":[]},{"query":"create table t50 (a Int, b Int, s String) engine = MergeTree order by a settings index_granularity = 50, index_granularity_bytes=1000, min_index_granularity_bytes=500;","fileName":"../ClickHouse/tests/queries/0_stateless/01077_yet_another_prewhere_test.sql","errors":[]},{"query":"CREATE TABLE t (a Int, b Int, c Int) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01076_range_reader_segfault.sql","errors":[]},{"query":"CREATE TABLE test(date Date, id Int8, name String, value Int64) ENGINE = MergeTree(date, (id, date), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01076_predicate_optimizer_with_view.sql","errors":[]},{"query":"CREATE VIEW test_view AS SELECT * FROM test;","fileName":"../ClickHouse/tests/queries/0_stateless/01076_predicate_optimizer_with_view.sql","errors":[]},{"query":"CREATE USER test_user_01075;","fileName":"../ClickHouse/tests/queries/0_stateless/01075_allowed_client_hosts.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER test_user_01075_x@localhost;","fileName":"../ClickHouse/tests/queries/0_stateless/01075_allowed_client_hosts.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE USER test_user_01074;","fileName":"../ClickHouse/tests/queries/0_stateless/01074_partial_revokes.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE TABLE test1 (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01073_show_tables_not_like.sql","errors":[]},{"query":"CREATE TABLE test2 (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01073_show_tables_not_like.sql","errors":[]},{"query":"CREATE USER test_user_01073;","fileName":"../ClickHouse/tests/queries/0_stateless/01073_grant_and_revoke.sql","errors":[{"message":"no viable alternative at input 'CREATE USER'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE ROLE test_role_01073;","fileName":"../ClickHouse/tests/queries/0_stateless/01073_grant_and_revoke.sql","errors":[{"message":"no viable alternative at input 'CREATE ROLE'","startColumn":7,"startLine":1,"endColumn":11,"endLine":1}]},{"query":"CREATE TABLE test_01073_crlf_end_of_line (value UInt8, word String) ENGINE = MergeTree() ORDER BY value;","fileName":"../ClickHouse/tests/queries/0_stateless/01073_crlf_end_of_line.sql","errors":[]},{"query":"CREATE TABLE merge_tree (d Date) ENGINE = MergeTree ORDER BY d PARTITION BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/01073_bad_alter_partition.sql","errors":[]},{"query":"CREATE TABLE aine (a Int) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01073_attach_if_not_exists.sql","errors":[]},{"query":"create table data_01072 (key Int, value Int, str String) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01072_optimize_skip_unused_shards_const_expr_eval.sql","errors":[]},{"query":"create table dist_01072 (key Int, value Int, str String) Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01072, key%2);","fileName":"../ClickHouse/tests/queries/0_stateless/01072_optimize_skip_unused_shards_const_expr_eval.sql","errors":[]},{"query":"create table dist_01072 (key Int, value Nullable(Int), str String) Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01072, key%2);","fileName":"../ClickHouse/tests/queries/0_stateless/01072_optimize_skip_unused_shards_const_expr_eval.sql","errors":[]},{"query":"create table dist_01072 (key Int, value LowCardinality(Int), str String) Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01072, key%2);","fileName":"../ClickHouse/tests/queries/0_stateless/01072_optimize_skip_unused_shards_const_expr_eval.sql","errors":[]},{"query":"create table dist_01072 (key Int, value LowCardinality(Nullable(Int)), str String) Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01072, key%2);","fileName":"../ClickHouse/tests/queries/0_stateless/01072_optimize_skip_unused_shards_const_expr_eval.sql","errors":[]},{"query":"create table data_01072 (key Int) Engine=MergeTree() ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01072_optimize_skip_unused_shards_const_expr_eval.sql","errors":[]},{"query":"create table dist_01072 (key Int) Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01072, key);","fileName":"../ClickHouse/tests/queries/0_stateless/01072_optimize_skip_unused_shards_const_expr_eval.sql","errors":[]},{"query":"CREATE TABLE foo ( id UInt32,\na Float64,\nb Float64,\nc Float64,\nd Float64\n) Engine = MergeTree()\nPARTITION BY id\nORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01072_nullable_jit.sql","errors":[]},{"query":"CREATE TABLE json_square_brackets (id UInt32, name String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01072_json_each_row_data_in_square_brackets.sql","errors":[]},{"query":"CREATE TABLE table_to_drop(x Int8) ENGINE=Log;","fileName":"../ClickHouse/tests/queries/0_stateless/01072_drop_temporary_table_with_same_name.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_to_drop(x Int8);","fileName":"../ClickHouse/tests/queries/0_stateless/01072_drop_temporary_table_with_same_name.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE table_to_drop(x Int8);","fileName":"../ClickHouse/tests/queries/0_stateless/01072_drop_temporary_table_with_same_name.sql","errors":[]},{"query":"CREATE TABLE old_syntax_01071_test (date Date, id UInt8) ENGINE = MergeTree(date, id, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01071_prohibition_secondary_index_with_old_format_merge_tree.sql","errors":[]},{"query":"create table data_01071 (key Int) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01071_force_optimize_skip_unused_shards.sql","errors":[]},{"query":"create table dist_01071 as data_01071 Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01071);","fileName":"../ClickHouse/tests/queries/0_stateless/01071_force_optimize_skip_unused_shards.sql","errors":[]},{"query":"create table dist_01071 as data_01071 Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01071, key%2);","fileName":"../ClickHouse/tests/queries/0_stateless/01071_force_optimize_skip_unused_shards.sql","errors":[]},{"query":"create table dist_01071 as data_01071 Engine=Distributed(test_cluster_two_shards, currentDatabase(), data_01071, key + rand());","fileName":"../ClickHouse/tests/queries/0_stateless/01071_force_optimize_skip_unused_shards.sql","errors":[]},{"query":"create table data2_01071 (key Int, sub_key Int) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01071_force_optimize_skip_unused_shards.sql","errors":[]},{"query":"create table dist2_layer_01071 as data2_01071 Engine=Distributed(test_cluster_two_shards, currentDatabase(), data2_01071, sub_key%2);","fileName":"../ClickHouse/tests/queries/0_stateless/01071_force_optimize_skip_unused_shards.sql","errors":[]},{"query":"create table dist2_01071 as data2_01071 Engine=Distributed(test_cluster_two_shards, currentDatabase(), dist2_layer_01071, key%2);","fileName":"../ClickHouse/tests/queries/0_stateless/01071_force_optimize_skip_unused_shards.sql","errors":[]},{"query":"create table ttl (i Int, a Int, s String) engine = MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_mutations_with_dependencies.sql","errors":[]},{"query":"create table ttl (i Int, a Int, s String default 'b' ttl a % 2 = 0 ? today() - 10 : toDate('2100-01-01'), index ind_s (s) type set(1) granularity 1) engine = MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_mutations_with_dependencies.sql","errors":[]},{"query":"create table ttl (i Int, s String) engine = MergeTree order by i ttl toDate('2000-01-01') TO DISK 'default';","fileName":"../ClickHouse/tests/queries/0_stateless/01070_mutations_with_dependencies.sql","errors":[]},{"query":"create table ttl (a Int, b Int, c Int default 42 ttl d, d Date, index ind (b * c) type minmax granularity 1) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_mutations_with_dependencies.sql","errors":[]},{"query":"create table ttl (d Date, a Int) engine = MergeTree order by a partition by toDayOfMonth(d) SETTINGS max_number_of_merges_with_ttl_in_pool=0,materialize_ttl_recalculate_only=true;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_modify_ttl_recalc_only.sql","errors":[{"message":"no viable alternative at input 'create table ttl (d Date, a Int) engine = MergeTree order by a partition by toDayOfMonth(d) SETTINGS max_number_of_merges_with_ttl_in_pool=0,materialize_ttl_recalculate_only=true'","startColumn":174,"startLine":1,"endColumn":178,"endLine":1}]},{"query":"create table ttl (i Int, s String) engine = MergeTree order by i SETTINGS max_number_of_merges_with_ttl_in_pool=0,materialize_ttl_recalculate_only=true;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_modify_ttl_recalc_only.sql","errors":[{"message":"no viable alternative at input 'create table ttl (i Int, s String) engine = MergeTree order by i SETTINGS max_number_of_merges_with_ttl_in_pool=0,materialize_ttl_recalculate_only=true'","startColumn":147,"startLine":1,"endColumn":151,"endLine":1}]},{"query":"create table ttl (i Int, s String) engine = MergeTree order by i SETTINGS max_number_of_merges_with_ttl_in_pool=0,materialize_ttl_recalculate_only=true;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_modify_ttl_recalc_only.sql","errors":[{"message":"no viable alternative at input 'create table ttl (i Int, s String) engine = MergeTree order by i SETTINGS max_number_of_merges_with_ttl_in_pool=0,materialize_ttl_recalculate_only=true'","startColumn":147,"startLine":1,"endColumn":151,"endLine":1}]},{"query":"create table ttl (d Date, i Int, s String) engine = MergeTree order by i SETTINGS max_number_of_merges_with_ttl_in_pool=0,materialize_ttl_recalculate_only=true;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_modify_ttl_recalc_only.sql","errors":[{"message":"no viable alternative at input 'create table ttl (d Date, i Int, s String) engine = MergeTree order by i SETTINGS max_number_of_merges_with_ttl_in_pool=0,materialize_ttl_recalculate_only=true'","startColumn":155,"startLine":1,"endColumn":159,"endLine":1}]},{"query":"create table ttl (i Int, s String, t String) engine = MergeTree order by i SETTINGS max_number_of_merges_with_ttl_in_pool=0,materialize_ttl_recalculate_only=true;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_modify_ttl_recalc_only.sql","errors":[{"message":"no viable alternative at input 'create table ttl (i Int, s String, t String) engine = MergeTree order by i SETTINGS max_number_of_merges_with_ttl_in_pool=0,materialize_ttl_recalculate_only=true'","startColumn":157,"startLine":1,"endColumn":161,"endLine":1}]},{"query":"create table ttl (i Int, s String ttl toDate('2000-01-02')) engine = MergeTree order by i SETTINGS max_number_of_merges_with_ttl_in_pool=0,materialize_ttl_recalculate_only=true;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_modify_ttl_recalc_only.sql","errors":[{"message":"no viable alternative at input 'create table ttl (i Int, s String ttl toDate('2000-01-02')) engine = MergeTree order by i SETTINGS max_number_of_merges_with_ttl_in_pool=0,materialize_ttl_recalculate_only=true'","startColumn":172,"startLine":1,"endColumn":176,"endLine":1}]},{"query":"create table ttl (d Date, a Int) engine = MergeTree order by a partition by toDayOfMonth(d);","fileName":"../ClickHouse/tests/queries/0_stateless/01070_modify_ttl.sql","errors":[]},{"query":"create table ttl (i Int, s String) engine = MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_modify_ttl.sql","errors":[]},{"query":"create table ttl (i Int, s String) engine = MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_modify_ttl.sql","errors":[]},{"query":"create table ttl (d Date, i Int, s String) engine = MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_modify_ttl.sql","errors":[]},{"query":"create table ttl (i Int, s String, t String) engine = MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_modify_ttl.sql","errors":[]},{"query":"create table ttl (i Int, s String ttl toDate('2000-01-02')) engine = MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_modify_ttl.sql","errors":[]},{"query":"create table ttl (d Date, a Int) engine = MergeTree order by a partition by toDayOfMonth(d);","fileName":"../ClickHouse/tests/queries/0_stateless/01070_materialize_ttl.sql","errors":[]},{"query":"create table ttl (i Int, s String) engine = MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_materialize_ttl.sql","errors":[]},{"query":"create table ttl (i Int, s String) engine = MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_materialize_ttl.sql","errors":[]},{"query":"create table ttl (d Date, i Int, s String) engine = MergeTree order by i;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_materialize_ttl.sql","errors":[]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64, res UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_h3_to_children.sql","errors":[]},{"query":"create table alter_ttl(i Int) engine = MergeTree order by i ttl toDate('2020-05-05');","fileName":"../ClickHouse/tests/queries/0_stateless/01070_alter_with_ttl.sql","errors":[]},{"query":"create table alter_ttl(d Date, s String) engine = MergeTree order by d ttl d + interval 1 month;","fileName":"../ClickHouse/tests/queries/0_stateless/01070_alter_with_ttl.sql","errors":[]},{"query":"CREATE TABLE testmt (\\`CounterID\\` UInt64, \\`value\\` String) ENGINE = MergeTree() ORDER BY CounterID;","fileName":"../ClickHouse/tests/queries/0_stateless/01069_set_in_group_by.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE testmt (\\'","startColumn":21,"startLine":1,"endColumn":22,"endLine":1}]},{"query":"CREATE TABLE mv_source (\\`a\\` UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01069_materialized_view_alter_target_table_with_default_expression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mv_source (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE mv_target (\\`a\\` UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01069_materialized_view_alter_target_table_with_default_expression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mv_target (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW mv TO mv_target AS SELECT * FROM mv_source;","fileName":"../ClickHouse/tests/queries/0_stateless/01069_materialized_view_alter_target_table_with_default_expression.sql","errors":[]},{"query":"CREATE TABLE mv_source (\\`a\\` UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01069_materialized_view_alter_target_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mv_source (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE mv_target (\\`a\\` UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01069_materialized_view_alter_target_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mv_target (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW mv TO mv_target AS SELECT * FROM mv_source;","fileName":"../ClickHouse/tests/queries/0_stateless/01069_materialized_view_alter_target_table.sql","errors":[]},{"query":"create temporary table t1 (a Nullable(UInt8));","fileName":"../ClickHouse/tests/queries/0_stateless/01069_insert_float_as_nullable_unit8.sql","errors":[]},{"query":"create temporary table t2 (a UInt8);","fileName":"../ClickHouse/tests/queries/0_stateless/01069_insert_float_as_nullable_unit8.sql","errors":[]},{"query":"CREATE DATABASE memory_01069 ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01069_database_memory.sql","errors":[]},{"query":"CREATE TABLE memory_01069.mt (n UInt8) ENGINE = MergeTree() ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01069_database_memory.sql","errors":[]},{"query":"CREATE TABLE memory_01069.file (n UInt8) ENGINE = File(CSV);","fileName":"../ClickHouse/tests/queries/0_stateless/01069_database_memory.sql","errors":[]},{"query":"CREATE TABLE target_table Engine=SummingMergeTree() ORDER BY id SETTINGS index_granularity=128, index_granularity_bytes = '10Mi'\nAS\nSELECT\nnumber as id,\nmaxState( toDateTime(0, 'UTC') ) as latest_login_time,\nmaxState( toDateTime(0, 'UTC') ) as latest_checkout_time,\nminState( toUInt64(-1) ) as fastest_session,\nmaxState( toUInt64(0) ) as biggest_inactivity_period\nFROM numbers(50000)\nGROUP BY id\nSETTINGS max_insert_threads=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01064_incremental_streaming_from_2_src_with_feedback.sql","errors":[]},{"query":"CREATE TABLE logins ( id UInt64,\nts DateTime('UTC')\n) Engine=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01064_incremental_streaming_from_2_src_with_feedback.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_logins2target TO target_table AS\nSELECT\nid,\nmaxState( ts ) as latest_login_time,\nmaxState( toDateTime(0, 'UTC') ) as latest_checkout_time,\nminState( toUInt64(-1) ) as fastest_session,\nif(max(current_latest_checkout_time) > 0, maxState(toUInt64(ts - current_latest_checkout_time)), maxState( toUInt64(0) ) ) as biggest_inactivity_period\nFROM logins\nLEFT JOIN (\nSELECT\nid,\nmaxMerge(latest_checkout_time) as current_latest_checkout_time\nFROM target_table\nWHERE id IN (SELECT id FROM logins)\nGROUP BY id\n) USING (id)\nGROUP BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01064_incremental_streaming_from_2_src_with_feedback.sql","errors":[]},{"query":"CREATE TABLE checkouts ( id UInt64,\nts DateTime('UTC')\n) Engine=MergeTree ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01064_incremental_streaming_from_2_src_with_feedback.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_checkouts2target TO target_table AS\nSELECT\nid,\nmaxState( toDateTime(0, 'UTC') ) as latest_login_time,\nmaxState( ts ) as latest_checkout_time,\nif(max(current_latest_login_time) > 0, minState( toUInt64(ts - current_latest_login_time)), minState( toUInt64(-1) ) ) as fastest_session,\nmaxState( toUInt64(0) ) as biggest_inactivity_period\nFROM checkouts\nLEFT JOIN (SELECT id, maxMerge(latest_login_time) as current_latest_login_time FROM target_table WHERE id IN (SELECT id FROM checkouts) GROUP BY id) USING (id)\nGROUP BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01064_incremental_streaming_from_2_src_with_feedback.sql","errors":[]},{"query":"CREATE TABLE mt (x UInt8, y Date) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01063_create_column_set.sql","errors":[]},{"query":"CREATE TABLE test_alter_on_mutation (\ndate Date,\nkey UInt64,\nvalue String\n)\nENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_01062/alter_on_mutation', '1')\nORDER BY key PARTITION BY date;","fileName":"../ClickHouse/tests/queries/0_stateless/01062_alter_on_mutataion_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE nested_alter (\\`d\\` Date, \\`k\\` UInt64, \\`i32\\` Int32, \\`dt\\` DateTime, \\`n.ui8\\` Array(UInt8), \\`n.s\\` Array(String), \\`n.d\\` Array(Date), \\`s\\` String DEFAULT '0') ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01062/nested_alter', 'r2', d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01062_alter_on_mutataion_zookeeper_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE nested_alter (\\'","startColumn":27,"startLine":1,"endColumn":28,"endLine":1}]},{"query":"create table alter_bug ( epoch UInt64 CODEC(Delta,LZ4),\n_time_dec Float64\n) Engine = MergeTree ORDER BY (epoch);","fileName":"../ClickHouse/tests/queries/0_stateless/01061_alter_codec_with_type.sql","errors":[]},{"query":"CREATE TABLE test Engine = MergeTree ORDER BY number SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi' AS SELECT number, toString(rand()) x from numbers(10000000);","fileName":"../ClickHouse/tests/queries/0_stateless/01060_shutdown_table_after_detach.sql","errors":[]},{"query":"CREATE TABLE defaults_all_columns (n UInt8 DEFAULT 42, s String DEFAULT concat('test', CAST(n, 'String'))) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01060_defaults_all_columns.sql","errors":[]},{"query":"CREATE TABLE t1 (id UInt32, value1 String ) ENGINE ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_predicate_optimizer_bugs.sql","errors":[]},{"query":"CREATE TABLE t2 (id UInt32, value2 String ) ENGINE ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_predicate_optimizer_bugs.sql","errors":[]},{"query":"CREATE TABLE t3 (id UInt32, value3 String ) ENGINE ReplacingMergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_predicate_optimizer_bugs.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS view1 AS SELECT t1.id AS id, t1.value1 AS value1, t2.value2 AS value2, t3.value3 AS value3 FROM t1 LEFT JOIN t2 ON t1.id = t2.id LEFT JOIN t3 ON t1.id = t3.id WHERE t1.id > 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_predicate_optimizer_bugs.sql","errors":[]},{"query":"CREATE TABLE A (ts DateTime, id String, id_b String) ENGINE = MergeTree PARTITION BY toStartOfHour(ts) ORDER BY (ts,id);","fileName":"../ClickHouse/tests/queries/0_stateless/01056_predicate_optimizer_bugs.sql","errors":[]},{"query":"CREATE TABLE B (ts DateTime, id String, id_c String) ENGINE = MergeTree PARTITION BY toStartOfHour(ts) ORDER BY (ts,id);","fileName":"../ClickHouse/tests/queries/0_stateless/01056_predicate_optimizer_bugs.sql","errors":[]},{"query":"CREATE TABLE test ( A Int32, B Int32 ) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01056_predicate_optimizer_bugs.sql","errors":[]},{"query":"CREATE TABLE test (\\`int8\\` Int8, \\`int16\\` Int16, \\`int32\\` Int32, \\`int64\\` Int64, INDEX idx (\\`int8\\`, \\`int16\\`, \\`int32\\`, \\`int64\\`) TYPE bloom_filter(0.01) GRANULARITY 8192 ) ENGINE = MergeTree() ORDER BY \\`int8\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_negative_with_bloom_filter.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\'","startColumn":19,"startLine":1,"endColumn":20,"endLine":1}]},{"query":"CREATE TABLE t1 (key Int) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_create_table_as.sql","errors":[]},{"query":"CREATE TABLE t2 AS t1;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_create_table_as.sql","errors":[]},{"query":"CREATE TABLE t2 Engine=Memory AS t1;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_create_table_as.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t2 Engine=Memory AS t1'","startColumn":33,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"CREATE TABLE t2 AS t1 Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_create_table_as.sql","errors":[]},{"query":"CREATE TABLE t3 AS numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/01056_create_table_as.sql","errors":[]},{"query":"CREATE VIEW v AS SELECT * FROM t1;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_create_table_as.sql","errors":[]},{"query":"CREATE TABLE t3 AS v; -- { serverError INCORRECT_QUERY } DROP TABLE v;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_create_table_as.sql","errors":[]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE_1:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/01056_create_table_as.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE_1:Identifier}.dict_data (key Int, value UInt16) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01056_create_table_as.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY dict (\n\\`key\\` UInt64,\n\\`value\\` UInt16\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(\nHOST '127.0.0.1' PORT tcpPort()\nTABLE 'dict_data' DB concat(currentDatabase(), '_1') USER 'default' PASSWORD ''))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(SPARSE_HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01056_create_table_as.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY dict (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t3 AS dict; -- { serverError INCORRECT_QUERY } DROP TABLE IF EXISTS t1;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_create_table_as.sql","errors":[]},{"query":"CREATE TABLE t1 (x String) ENGINE = Memory AS SELECT 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01056_create_table_as.sql","errors":[]},{"query":"CREATE TABLE test_prewhere_default_column (APIKey UInt8, SessionType UInt8) ENGINE = MergeTree() PARTITION BY APIKey ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01055_prewhere_bugs.sql","errors":[]},{"query":"CREATE TABLE test_prewhere_column_type (\\`a\\` LowCardinality(String), \\`x\\` Nullable(Int32)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01055_prewhere_bugs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_prewhere_column_type (\\'","startColumn":40,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"create table mt_compact (a Int, s String) engine = MergeTree order by a partition by a settings index_granularity_bytes = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01055_compact_parts_1.sql","errors":[]},{"query":"create table mt_compact_2 (a Int, s String) engine = MergeTree order by a partition by a settings min_rows_for_wide_part = 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/01055_compact_parts_1.sql","errors":[]},{"query":"create table mt_compact (a Int, s String) engine = MergeTree order by a partition by a settings index_granularity_bytes = 0, min_rows_for_wide_part = 1000;","fileName":"../ClickHouse/tests/queries/0_stateless/01055_compact_parts_1.sql","errors":[]},{"query":"create table mt_compact(a UInt64, b UInt64 DEFAULT a * a, s String, n Nested(x UInt32, y String), lc LowCardinality(String)) engine = MergeTree\norder by a partition by a % 10\nsettings index_granularity = 8,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 10;","fileName":"../ClickHouse/tests/queries/0_stateless/01055_compact_parts.sql","errors":[]},{"query":"create database if not exists test_01054_overflow;","fileName":"../ClickHouse/tests/queries/0_stateless/01054_cache_dictionary_overflow_cell.sql","errors":[{"message":"no viable alternative at input 'create database if not exists test_01054_overflow;'","startColumn":49,"startLine":1,"endColumn":50,"endLine":1}]},{"query":"create table test_01054_overflow.ints (key UInt64, i8 Int8, i16 Int16, i32 Int32, i64 Int64, u8 UInt8, u16 UInt16, u32 UInt32, u64 UInt64) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01054_cache_dictionary_overflow_cell.sql","errors":[]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE:Identifier} ENGINE=Ordinary; -- Different inner table name with Atomic set allow_deprecated_syntax_for_merge_tree=1;","fileName":"../ClickHouse/tests/queries/0_stateless/01053_drop_database_mat_view.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"create table {CLICKHOUSE_DATABASE:Identifier}.my_table ENGINE = MergeTree(day, (day), 8192) as select today() as day, 'mystring' as str;","fileName":"../ClickHouse/tests/queries/0_stateless/01053_drop_database_mat_view.sql","errors":[{"message":"no viable alternative at input 'create table {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create materialized view {CLICKHOUSE_DATABASE:Identifier}.my_materialized_view ENGINE = MergeTree(day, (day), 8192) as select * from {CLICKHOUSE_DATABASE:Identifier}.my_table;","fileName":"../ClickHouse/tests/queries/0_stateless/01053_drop_database_mat_view.sql","errors":[{"message":"no viable alternative at input 'create materialized view {'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE mt(a Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01051_window_view_parser_hop.sql","errors":[]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory WATERMARK=INTERVAL '1' SECOND AS SELECT count(a), hopStart(wid) AS w_start, hopEnd(wid) AS w_end FROM mt GROUP BY hop(timestamp, INTERVAL '3' SECOND, INTERVAL '5' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_window_view_parser_hop.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), hopStart(wid) AS w_start, hopEnd(wid) AS w_end FROM mt GROUP BY hop(timestamp, INTERVAL '3' SECOND, INTERVAL '5' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_window_view_parser_hop.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), hopStart(wid) AS w_start FROM mt GROUP BY hop(timestamp, INTERVAL '3' SECOND, INTERVAL '5' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_window_view_parser_hop.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory AS WITH toDateTime('2018-01-01 00:00:00') AS date_time SELECT count(a), hopStart(wid) AS w_start, hopEnd(wid) AS w_end, date_time FROM mt GROUP BY hop(timestamp, INTERVAL '3' SECOND, INTERVAL '5' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_window_view_parser_hop.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), hopStart(wid) AS w_start FROM mt WHERE a != 1 GROUP BY hop(timestamp, INTERVAL '3' SECOND, INTERVAL '5' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_window_view_parser_hop.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), hopStart(wid) AS w_start FROM mt WHERE a != 1 GROUP BY hop(timestamp, INTERVAL '3' SECOND, INTERVAL '5' SECOND) AS wid ORDER BY w_start;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_window_view_parser_hop.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), hopStart(wid) AS w_start, hopEnd(hop(now(), INTERVAL '1' SECOND, INTERVAL '3' SECOND)) as w_end FROM mt GROUP BY hop(now(), INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_window_view_parser_hop.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE TABLE a (x UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_same_name_alias_with_joins.sql","errors":[]},{"query":"CREATE TABLE b (x UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_same_name_alias_with_joins.sql","errors":[]},{"query":"CREATE TABLE c (x UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_same_name_alias_with_joins.sql","errors":[]},{"query":"CREATE TABLE t1 (x UInt32, str String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_new_any_join_engine.sql","errors":[]},{"query":"CREATE TABLE any_left_join (x UInt32, s String) engine = Join(ANY, LEFT, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01051_new_any_join_engine.sql","errors":[]},{"query":"CREATE TABLE any_inner_join (x UInt32, s String) engine = Join(ANY, INNER, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01051_new_any_join_engine.sql","errors":[]},{"query":"CREATE TABLE any_right_join (x UInt32, s String) engine = Join(ANY, RIGHT, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01051_new_any_join_engine.sql","errors":[]},{"query":"CREATE TABLE semi_left_join (x UInt32, s String) engine = Join(SEMI, LEFT, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01051_new_any_join_engine.sql","errors":[]},{"query":"CREATE TABLE semi_right_join (x UInt32, s String) engine = Join(SEMI, RIGHT, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01051_new_any_join_engine.sql","errors":[]},{"query":"CREATE TABLE anti_left_join (x UInt32, s String) engine = Join(ANTI, LEFT, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01051_new_any_join_engine.sql","errors":[]},{"query":"CREATE TABLE anti_right_join (x UInt32, s String) engine = Join(ANTI, RIGHT, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01051_new_any_join_engine.sql","errors":[]},{"query":"CREATE TABLE t1 (x UInt32, str String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_all_join_engine.sql","errors":[]},{"query":"CREATE TABLE left_join (x UInt32, s String) engine = Join(ALL, LEFT, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01051_all_join_engine.sql","errors":[]},{"query":"CREATE TABLE inner_join (x UInt32, s String) engine = Join(ALL, INNER, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01051_all_join_engine.sql","errors":[]},{"query":"CREATE TABLE right_join (x UInt32, s String) engine = Join(ALL, RIGHT, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01051_all_join_engine.sql","errors":[]},{"query":"CREATE TABLE full_join (x UInt32, s String) engine = Join(ALL, FULL, x);","fileName":"../ClickHouse/tests/queries/0_stateless/01051_all_join_engine.sql","errors":[]},{"query":"CREATE TABLE left_join (x UInt32, s String) engine = Join(ALL, LEFT, x) SETTINGS join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_all_join_engine.sql","errors":[]},{"query":"CREATE TABLE inner_join (x UInt32, s String) engine = Join(ALL, INNER, x) SETTINGS join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_all_join_engine.sql","errors":[]},{"query":"CREATE TABLE right_join (x UInt32, s String) engine = Join(ALL, RIGHT, x) SETTINGS join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_all_join_engine.sql","errors":[]},{"query":"CREATE TABLE full_join (x UInt32, s String) engine = Join(ALL, FULL, x) SETTINGS join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01051_all_join_engine.sql","errors":[]},{"query":"CREATE TABLE mt(a Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01050_window_view_parser_tumble.sql","errors":[]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory WATERMARK=INTERVAL '1' SECOND AS SELECT count(a), tumbleStart(wid) AS w_start, tumbleEnd(wid) AS w_end FROM mt GROUP BY tumble(timestamp, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_window_view_parser_tumble.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), tumbleStart(tumble(timestamp, INTERVAL '3' SECOND)) AS w_start, tumbleEnd(wid) AS w_end FROM mt GROUP BY tumble(timestamp, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_window_view_parser_tumble.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), tumbleStart(wid) AS w_start FROM mt GROUP BY tumble(timestamp, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_window_view_parser_tumble.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory AS WITH toDateTime('2018-01-01 00:00:00') AS date_time SELECT count(a), tumbleStart(wid) AS w_start, tumbleEnd(wid) AS w_end, date_time FROM mt GROUP BY tumble(timestamp, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_window_view_parser_tumble.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), tumbleStart(wid) AS w_start FROM mt WHERE a != 1 GROUP BY tumble(timestamp, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_window_view_parser_tumble.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), tumbleStart(wid) AS w_start FROM mt WHERE a != 1 GROUP BY tumble(timestamp, INTERVAL '3' SECOND) AS wid ORDER BY w_start;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_window_view_parser_tumble.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW wv ENGINE Memory AS SELECT count(a), tumbleStart(wid) AS w_start, tumbleEnd(tumble(now(), INTERVAL '3' SECOND)) AS w_end FROM mt GROUP BY tumble(now(), INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_window_view_parser_tumble.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE TABLE a(\\`id1\\` UInt32, \\`id2\\` UInt32, \\`valA\\` UInt32) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_engine_join_view_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE a(\\'","startColumn":15,"startLine":1,"endColumn":16,"endLine":1}]},{"query":"CREATE TABLE id1(\\`id1\\` UInt32, \\`val1\\` UInt8) ENGINE = Join(ANY, LEFT, id1);","fileName":"../ClickHouse/tests/queries/0_stateless/01050_engine_join_view_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE id1(\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE id2(\\`id2\\` UInt32, \\`val2\\` UInt8) ENGINE = Join(ANY, LEFT, id2);","fileName":"../ClickHouse/tests/queries/0_stateless/01050_engine_join_view_crash.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE id2(\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"create view b as (SELECT * from (SELECT * FROM a ANY LEFT OUTER JOIN id1 USING id1) js1 ANY LEFT OUTER JOIN id2 USING id2);","fileName":"../ClickHouse/tests/queries/0_stateless/01050_engine_join_view_crash.sql","errors":[]},{"query":"CREATE TABLE testJoinTable (number UInt64, data String) ENGINE = Join(ANY, INNER, number) SETTINGS any_join_distinct_right_table_keys = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_engine_join_crash.sql","errors":[]},{"query":"CREATE TABLE transaction (id Int32, value Float64, master_id Int32) ENGINE = MergeTree() ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_engine_join_crash.sql","errors":[]},{"query":"CREATE TABLE master (id Int32, name String) ENGINE = Join (ANY, LEFT, id) SETTINGS any_join_distinct_right_table_keys = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_engine_join_crash.sql","errors":[]},{"query":"CREATE TABLE tbl (eventDate Date, id String) ENGINE = MergeTree() PARTITION BY tuple() ORDER BY eventDate;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_engine_join_crash.sql","errors":[]},{"query":"CREATE TABLE some_join (id String, value String) ENGINE = Join(ANY, LEFT, id) SETTINGS any_join_distinct_right_table_keys = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_engine_join_crash.sql","errors":[]},{"query":"create table {CLICKHOUSE_DATABASE:Identifier}.test_01051_d (key UInt64, value String) engine = MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/01050_clickhouse_dict_source_with_subquery.sql","errors":[{"message":"no viable alternative at input 'create table {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create view {CLICKHOUSE_DATABASE:Identifier}.test_view_01051_d (key UInt64, value String) as select k2 + 1 as key, v2 || '_x' as value from (select key + 2 as k2, value || '_y' as v2 from test_01051_d);","fileName":"../ClickHouse/tests/queries/0_stateless/01050_clickhouse_dict_source_with_subquery.sql","errors":[{"message":"no viable alternative at input 'create view {'","startColumn":12,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"create dictionary {CLICKHOUSE_DATABASE:Identifier}.test_dict_01051_d (key UInt64, value String) primary key key source(clickhouse(host 'localhost' port '9000' user 'default' password '' db currentDatabase() table 'test_view_01051_d')) layout(flat()) lifetime(100500);","fileName":"../ClickHouse/tests/queries/0_stateless/01050_clickhouse_dict_source_with_subquery.sql","errors":[{"message":"no viable alternative at input 'create dictionary {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE table_for_synchronous_mutations1(k UInt32, v1 UInt64) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_01049/table_for_synchronous_mutations', '1') ORDER BY k SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01049_zookeeper_synchronous_mutations_long.sql","errors":[]},{"query":"CREATE TABLE table_for_synchronous_mutations2(k UInt32, v1 UInt64) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_01049/table_for_synchronous_mutations', '2') ORDER BY k SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01049_zookeeper_synchronous_mutations_long.sql","errors":[]},{"query":"CREATE TABLE table_for_synchronous_mutations_no_replication(k UInt32, v1 UInt64) ENGINE MergeTree ORDER BY k SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01049_zookeeper_synchronous_mutations_long.sql","errors":[]},{"query":"CREATE TABLE Alpha (foo String, bar UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01049_join_low_card_crash.sql","errors":[]},{"query":"CREATE TABLE Beta (foo LowCardinality(String), baz UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01049_join_low_card_crash.sql","errors":[]},{"query":"CREATE DATABASE test_01048 ENGINE=Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[]},{"query":"CREATE TABLE test_01048.mt(a Int32, b Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[]},{"query":"CREATE TABLE test_01048.mt_2(a Int32, b Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count, tumbleEnd(wid) as wend FROM test_01048.mt GROUP BY tumble(timestamp, INTERVAL 1 SECOND) as wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count, tumble(timestamp, INTERVAL '1' SECOND) AS wid FROM test_01048.mt GROUP BY wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count FROM test_01048.mt GROUP BY b, tumble(timestamp, INTERVAL '1' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count FROM test_01048.mt GROUP BY tumble(timestamp, INTERVAL '1' SECOND) AS wid, b;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count FROM test_01048.mt GROUP BY plus(a, b) as _type, tumble(timestamp, INTERVAL '1' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count FROM test_01048.mt GROUP BY tumble(timestamp, INTERVAL '1' SECOND) AS wid, plus(a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count, tumble(timestamp, INTERVAL '1' SECOND, 'Asia/Shanghai') AS wid FROM test_01048.mt GROUP BY wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count, b as id FROM test_01048.mt GROUP BY id, tumble(timestamp, INTERVAL '1' SECOND);","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(test_01048.mt.a), count(test_01048.mt_2.b), wid FROM test_01048.mt JOIN test_01048.mt_2 ON test_01048.mt.timestamp = test_01048.mt_2.timestamp GROUP BY tumble(test_01048.mt.timestamp, INTERVAL '1' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory POPULATE AS SELECT count(test_01048.mt.a), count(test_01048.mt_2.b), wid FROM test_01048.mt JOIN test_01048.mt_2 ON test_01048.mt.timestamp = test_01048.mt_2.timestamp GROUP BY tumble(test_01048.mt.timestamp, INTERVAL '1' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count, hopEnd(wid) as wend FROM test_01048.mt GROUP BY hop(timestamp, INTERVAL 1 SECOND, INTERVAL 3 SECOND) as wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count, hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid FROM test_01048.mt GROUP BY wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count FROM test_01048.mt GROUP BY b, hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count FROM test_01048.mt GROUP BY hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid, b;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count FROM test_01048.mt GROUP BY plus(a, b) as _type, hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count FROM test_01048.mt GROUP BY hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid, plus(a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count, hopEnd(wid) as wend FROM test_01048.mt GROUP BY hop(timestamp, INTERVAL 1 SECOND, INTERVAL 3 SECOND, 'Asia/Shanghai') as wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(a) AS count, b as id FROM test_01048.mt GROUP BY id, hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND);","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory AS SELECT count(test_01048.mt.a), count(test_01048.mt_2.b), wid FROM test_01048.mt JOIN test_01048.mt_2 ON test_01048.mt.timestamp = test_01048.mt_2.timestamp GROUP BY hop(test_01048.mt.timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW test_01048.wv ENGINE Memory POPULATE AS SELECT count(test_01048.mt.a), count(test_01048.mt_2.b), wid FROM test_01048.mt JOIN test_01048.mt_2 ON test_01048.mt.timestamp = test_01048.mt_2.timestamp GROUP BY hop(test_01048.mt.timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_window_view_parser.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE DATABASE db_01048;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_exists_query.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE db_01048;'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE db_01048.t_01048 (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_exists_query.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t_01048 (x UInt8);","fileName":"../ClickHouse/tests/queries/0_stateless/01048_exists_query.sql","errors":[]},{"query":"CREATE DICTIONARY db_01048.t_01048 (k UInt64, v String) PRIMARY KEY k LAYOUT(FLAT()) SOURCE(HTTP(URL 'http://example.test/' FORMAT 'TSV')) LIFETIME(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01048_exists_query.sql","errors":[]},{"query":"CREATE TABLE db_01048.t_01048_2 (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_exists_query.sql","errors":[]},{"query":"CREATE VIEW db_01048.v_01048 AS SELECT * FROM db_01048.t_01048_2;","fileName":"../ClickHouse/tests/queries/0_stateless/01048_exists_query.sql","errors":[]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE:Identifier} ENGINE=Ordinary;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.mt(a Int32, b Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.mt_2(a Int32, b Int32, timestamp DateTime) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY tumble(timestamp, INTERVAL '1' SECOND) ENGINE Memory AS SELECT count(a), tumbleEnd(wid) AS count FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY tumble(timestamp, INTERVAL '1' SECOND) as wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY wid ENGINE Memory AS SELECT count(a) AS count, tumble(timestamp, INTERVAL '1' SECOND) AS wid FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY id ENGINE Memory AS SELECT count(a) AS count, b as id FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY id, tumble(timestamp, INTERVAL '1' SECOND);","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY (tumble(timestamp, INTERVAL '1' SECOND), b) PRIMARY KEY tumble(timestamp, INTERVAL '1' SECOND) ENGINE Memory AS SELECT count(a) AS count FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY b, tumble(timestamp, INTERVAL '1' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY (tumble(timestamp, INTERVAL '1' SECOND), plus(a, b)) PRIMARY KEY tumble(timestamp, INTERVAL '1' SECOND) ENGINE Memory AS SELECT count(a) AS count FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY plus(a, b) as _type, tumble(timestamp, INTERVAL '1' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY wid PARTITION BY wid ENGINE Memory AS SELECT count(a) AS count, tumble(now(), INTERVAL '1' SECOND) AS wid FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY tumble({CLICKHOUSE_DATABASE:Identifier}.mt.timestamp, INTERVAL '1' SECOND) ENGINE Memory AS SELECT count({CLICKHOUSE_DATABASE:Identifier}.mt.a), count({CLICKHOUSE_DATABASE:Identifier}.mt_2.b), wid FROM {CLICKHOUSE_DATABASE:Identifier}.mt JOIN {CLICKHOUSE_DATABASE:Identifier}.mt_2 ON {CLICKHOUSE_DATABASE:Identifier}.mt.timestamp = {CLICKHOUSE_DATABASE:Identifier}.mt_2.timestamp GROUP BY tumble({CLICKHOUSE_DATABASE:Identifier}.mt.timestamp, INTERVAL '1' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY wid ENGINE Memory AS SELECT count({CLICKHOUSE_DATABASE:Identifier}.mt.a), count({CLICKHOUSE_DATABASE:Identifier}.mt_2.b), wid FROM {CLICKHOUSE_DATABASE:Identifier}.mt JOIN {CLICKHOUSE_DATABASE:Identifier}.mt_2 ON {CLICKHOUSE_DATABASE:Identifier}.mt.timestamp = {CLICKHOUSE_DATABASE:Identifier}.mt_2.timestamp GROUP BY tumble({CLICKHOUSE_DATABASE:Identifier}.mt.timestamp, INTERVAL '1' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) ENGINE Memory AS SELECT count(a) AS count, hopEnd(wid) FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) as wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY wid ENGINE Memory AS SELECT count(a) AS count, hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY id ENGINE Memory AS SELECT count(a) AS count, b as id FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY id, hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND);","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY (hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND), b) PRIMARY KEY hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) ENGINE Memory AS SELECT count(a) AS count FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY b, hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY (hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND), plus(a, b)) PRIMARY KEY hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) ENGINE Memory AS SELECT count(a) AS count FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY plus(a, b) as _type, hop(timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY wid PARTITION BY wid ENGINE Memory AS SELECT count(a) AS count, hopEnd(wid) FROM {CLICKHOUSE_DATABASE:Identifier}.mt GROUP BY hop(now(), INTERVAL '1' SECOND, INTERVAL '3' SECOND) as wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY hop({CLICKHOUSE_DATABASE:Identifier}.mt.timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) ENGINE Memory AS SELECT count({CLICKHOUSE_DATABASE:Identifier}.mt.a), count({CLICKHOUSE_DATABASE:Identifier}.mt_2.b), wid FROM {CLICKHOUSE_DATABASE:Identifier}.mt JOIN {CLICKHOUSE_DATABASE:Identifier}.mt_2 ON {CLICKHOUSE_DATABASE:Identifier}.mt.timestamp = {CLICKHOUSE_DATABASE:Identifier}.mt_2.timestamp GROUP BY hop({CLICKHOUSE_DATABASE:Identifier}.mt.timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE WINDOW VIEW {CLICKHOUSE_DATABASE:Identifier}.wv INNER ENGINE AggregatingMergeTree ORDER BY wid ENGINE Memory AS SELECT count({CLICKHOUSE_DATABASE:Identifier}.mt.a), count({CLICKHOUSE_DATABASE:Identifier}.mt_2.b), wid FROM {CLICKHOUSE_DATABASE:Identifier}.mt JOIN {CLICKHOUSE_DATABASE:Identifier}.mt_2 ON {CLICKHOUSE_DATABASE:Identifier}.mt.timestamp = {CLICKHOUSE_DATABASE:Identifier}.mt_2.timestamp GROUP BY hop({CLICKHOUSE_DATABASE:Identifier}.mt.timestamp, INTERVAL '1' SECOND, INTERVAL '3' SECOND) AS wid;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_window_view_parser_inner_table.sql","errors":[{"message":"no viable alternative at input 'CREATE WINDOW'","startColumn":7,"startLine":1,"endColumn":13,"endLine":1}]},{"query":"CREATE TABLE column_size_bug (date_time DateTime, value SimpleAggregateFunction(sum,UInt64)) ENGINE = AggregatingMergeTree PARTITION BY toStartOfInterval(date_time, INTERVAL 1 DAY) ORDER BY (date_time) SETTINGS remove_empty_parts = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01047_simple_aggregate_sizes_of_columns_bug.sql","errors":[]},{"query":"CREATE TABLE requests ( event_time DateTime,\nevent_date Date MATERIALIZED toDate(event_time),\nevent_tm DateTime ALIAS event_time\n) ENGINE = MergeTree ORDER BY (event_time);","fileName":"../ClickHouse/tests/queries/0_stateless/01047_no_alias_columns_with_table_aliases.sql","errors":[]},{"query":"CREATE TABLE test_count (\\`pt\\` Date) ENGINE = MergeTree PARTITION BY pt ORDER BY pt SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01046_trivial_count_query_distributed.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_count (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE t (\\`A\\` Int64) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01046_materialized_view_with_join_over_distributed.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE t (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE t_d AS t ENGINE = Distributed(test_shard_localhost, currentDatabase(), t);","fileName":"../ClickHouse/tests/queries/0_stateless/01046_materialized_view_with_join_over_distributed.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW t_v ENGINE = MergeTree() ORDER BY tuple() AS SELECT A FROM t LEFT JOIN ( SELECT toInt64(dummy) AS A FROM system.one ) js2 USING (A);","fileName":"../ClickHouse/tests/queries/0_stateless/01046_materialized_view_with_join_over_distributed.sql","errors":[]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.restricted_dict ( key UInt64,\nvalue String\n)\nPRIMARY KEY key\nSOURCE(EXECUTABLE(COMMAND 'echo -E \"1\\\\thello\"' FORMAT TabSeparated))\nLIFETIME(MIN 0 MAX 1)\nLAYOUT(CACHE(SIZE_IN_CELLS 10));","fileName":"../ClickHouse/tests/queries/0_stateless/01045_dictionaries_restrictions.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE bloom_filter_null_array (v Array(LowCardinality(Nullable(String))), INDEX idx v TYPE bloom_filter(0.1) GRANULARITY 1) ENGINE = MergeTree() ORDER BY v SETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/01045_bloom_filter_null_array.sql","errors":[]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.dicttbl(key Int64, value_default String, value_expression String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01043_dictionary_attribute_properties_values.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict (\nkey Int64 DEFAULT -1,\nvalue_default String DEFAULT 'world',\nvalue_expression String DEFAULT 'xxx' EXPRESSION 'toString(127 * 172)'\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dicttbl' DB currentDatabase()))\nLAYOUT(FLAT())\nLIFETIME(1);","fileName":"../ClickHouse/tests/queries/0_stateless/01043_dictionary_attribute_properties_values.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE h3_indexes (h3_index UInt64, k UInt16) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01042_h3_k_ring.sql","errors":[]},{"query":"CREATE TABLE check_query_test (SomeKey UInt64, SomeValue String) ENGINE = MergeTree() ORDER BY SomeKey SETTINGS min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01042_check_query_and_last_granule_size.sql","errors":[]},{"query":"CREATE TABLE check_query_test_non_adaptive (SomeKey UInt64, SomeValue String) ENGINE = MergeTree() ORDER BY SomeKey SETTINGS index_granularity_bytes = 0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01042_check_query_and_last_granule_size.sql","errors":[]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.table_for_dict (\nkey_column UInt64,\nvalue Float64\n)\nENGINE = MergeTree()\nORDER BY key_column;","fileName":"../ClickHouse/tests/queries/0_stateless/01041_create_dictionary_if_not_exists.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY IF NOT EXISTS {CLICKHOUSE_DATABASE:Identifier}.dict_exists (\nkey_column UInt64,\nvalue Float64 DEFAULT 77.77\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' DB currentDatabase()))\nLIFETIME(1)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01041_create_dictionary_if_not_exists.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY IF NOT EXISTS {'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE DICTIONARY IF NOT EXISTS {CLICKHOUSE_DATABASE:Identifier}.dict_exists (\nkey_column UInt64,\nvalue Float64 DEFAULT 77.77\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' DB currentDatabase()))\nLIFETIME(1)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01041_create_dictionary_if_not_exists.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY IF NOT EXISTS {'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE test_01040 (key UInt64) ENGINE=TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/01040_distributed_background_insert_batch_inserts.sql","errors":[]},{"query":"CREATE TABLE dist_test_01040 AS test_01040 Engine=Distributed(test_cluster_two_shards, currentDatabase(), test_01040, key) SETTINGS background_insert_batch=1,\nbackground_insert_sleep_time_ms=10,\nbackground_insert_max_sleep_time_ms=100;","fileName":"../ClickHouse/tests/queries/0_stateless/01040_distributed_background_insert_batch_inserts.sql","errors":[]},{"query":"CREATE TABLE dist_test_01040 AS test_01040 Engine=Distributed(test_cluster_two_shards_internal_replication, currentDatabase(), test_01040, key) SETTINGS background_insert_batch=1,\nbackground_insert_sleep_time_ms=10,\nbackground_insert_max_sleep_time_ms=100;","fileName":"../ClickHouse/tests/queries/0_stateless/01040_distributed_background_insert_batch_inserts.sql","errors":[]},{"query":"create table tab (A Int64) Engine=MergeTree order by tuple() SETTINGS min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/01039_mergetree_exec_time.sql","errors":[]},{"query":"CREATE TABLE array_of_tuples  (\nf Array(Tuple(Float64, Float64)), \ns Array(Tuple(UInt8, UInt16, UInt32))\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01038_array_of_unnamed_tuples.sql","errors":[]},{"query":"CREATE TABLE mt_without_pk (SomeField1 Int64, SomeField2 Double) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01037_zookeeper_check_table_empty_pk.sql","errors":[]},{"query":"CREATE TABLE replicated_mt_without_pk (SomeField1 Int64, SomeField2 Double) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_01037/replicated_mt_without_pk', '1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01037_zookeeper_check_table_empty_pk.sql","errors":[]},{"query":"CREATE DATABASE \\`foo 1234\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/01036_no_superfluous_dict_reload_on_create_database_2.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE \\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE \\`foo 1234\\`.dict_data (key UInt64, val UInt64) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01036_no_superfluous_dict_reload_on_create_database_2.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY \\`foo 1234\\`.dict (\nkey UInt64 DEFAULT 0,\nval UInt64 DEFAULT 10\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict_data' PASSWORD '' DB 'foo 1234'))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01036_no_superfluous_dict_reload_on_create_database_2.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY \\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE DATABASE \\`foo 123\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/01036_no_superfluous_dict_reload_on_create_database_2.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE \\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE dict_data (key UInt64, val UInt64) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01036_no_superfluous_dict_reload_on_create_database.sql","errors":[]},{"query":"CREATE DICTIONARY dict (\nkey UInt64 DEFAULT 0,\nval UInt64 DEFAULT 10\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict_data' PASSWORD '' DB currentDatabase()))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01036_no_superfluous_dict_reload_on_create_database.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS empty_db_01036;","fileName":"../ClickHouse/tests/queries/0_stateless/01036_no_superfluous_dict_reload_on_create_database.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS empty_db_01036;'","startColumn":44,"startLine":1,"endColumn":45,"endLine":1}]},{"query":"CREATE TABLE test (a UInt8, b UInt8, c UInt16 ALIAS a + b) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01035_prewhere_with_alias.sql","errors":[]},{"query":"create table audience_local (\nDate Date,\nAudienceType Enum8('other' = 0, 'client' = 1, 'group' = 2),\nUMA UInt64,\nAPIKey String,\nTrialNameID UInt32,\nTrialGroupID UInt32,\nAppVersion String,\nArch Enum8('other' = 0, 'x32' = 1, 'x64' = 2),\nUserID UInt32,\nGroupID UInt8,\nOSName Enum8('other' = 0, 'Android' = 1, 'iOS' = 2, 'macOS' = 3, 'Windows' = 4, 'Linux' = 5),\nChannel Enum8('other' = 0, 'Canary' = 1, 'Dev' = 2, 'Beta' = 3, 'Stable' = 4),\nHits UInt64,\nSum Int64,\nRelease String alias splitByChar('-', AppVersion)[1]\n)\nengine = SummingMergeTree\nPARTITION BY (toISOYear(Date), toISOWeek(Date))\nORDER BY (AudienceType, UMA, APIKey, Date, TrialNameID, TrialGroupID, AppVersion, Arch, UserID, GroupID, OSName, Channel)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01035_prewhere_with_alias.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_01035_avg ( i8 Int8         DEFAULT i64,\ni16 Int16       DEFAULT i64,\ni32 Int32       DEFAULT i64,\ni64 Int64       DEFAULT if(u64 % 2 = 0, toInt64(u64), toInt64(-u64)),\ni128 Int128     DEFAULT i64,\ni256 Int256     DEFAULT i64,\nu8 UInt8        DEFAULT u64,\nu16 UInt16      DEFAULT u64,\nu32 UInt32      DEFAULT u64,\nu64 UInt64,\nu128 UInt128    DEFAULT u64,\nu256 UInt256    DEFAULT u64,\nf32 Float32     DEFAULT u64,\nf64 Float64     DEFAULT u64,\nd32 Decimal32(4)    DEFAULT toDecimal32(i32 / 1000, 4),\nd64 Decimal64(18)   DEFAULT toDecimal64(u64 / 1000000, 8),\nd128 Decimal128(20) DEFAULT toDecimal128(i128 / 100000, 20),\nd256 Decimal256(40) DEFAULT toDecimal256(i256 / 100000, 40)\n) ENGINE = MergeTree() ORDER BY i64 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01035_avg.sql","errors":[]},{"query":"create table sample_final (CounterID UInt32, EventDate Date, EventTime DateTime, UserID UInt64, Sign Int8) engine = CollapsingMergeTree(Sign) order by (CounterID, EventDate, intHash32(UserID), EventTime) sample by intHash32(UserID) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01034_sample_final_distributed.sql","errors":[]},{"query":"CREATE TABLE test_max_parallel_replicas_lr (timestamp UInt64) ENGINE = MergeTree ORDER BY (intHash32(timestamp)) SAMPLE BY intHash32(timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/01034_prewhere_max_parallel_replicas_distributed.sql","errors":[]},{"query":"CREATE TABLE test_table (n Int32, s String) ENGINE = MergeTree() PARTITION BY n % 10 ORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/01034_order_by_pk_prefix.sql","errors":[]},{"query":"CREATE TABLE BannerDict (\\`BannerID\\` UInt64, \\`CompaignID\\` UInt64) ENGINE = ODBC('DSN=pgconn;Database=postgres', bannerdict); -- {serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH} CREATE TABLE BannerDict (\\`BannerID\\` UInt64, \\`CompaignID\\` UInt64) ENGINE = ODBC('DSN=pgconn;Database=postgres', somedb, bannerdict);","fileName":"../ClickHouse/tests/queries/0_stateless/01033_storage_odbc_parsing_exception_check.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE BannerDict (\\'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE TABLE tab(e8 Enum8('hello' = -5, 'world' = 15), e16 Enum16('shark' = -999, 'eagle' = 9999)) ENGINE MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01033_function_substring.sql","errors":[]},{"query":"CREATE TABLE tab (s String, l Int8, r Int8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01033_function_substring.sql","errors":[]},{"query":"CREATE TABLE tab (s FixedString(8), l Int8, r Int8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01033_function_substring.sql","errors":[]},{"query":"CREATE TABLE t (\ns String,\nl Int8,\nr Int8\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01033_function_substring.sql","errors":[]},{"query":"CREATE TABLE t( s FixedString(8),\nl Int8,\nr Int8\n) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01033_function_substring.sql","errors":[]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.table_for_dict (\nkey_column UInt64,\nsecond_column UInt8,\nthird_column String\n)\nENGINE = MergeTree()\nORDER BY key_column;","fileName":"../ClickHouse/tests/queries/0_stateless/01033_dictionaries_lifetime.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE_1:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/01033_dictionaries_lifetime.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE_1:Identifier}.dict1 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt8 DEFAULT 1,\nthird_column String DEFAULT 'qqq'\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' PASSWORD '' DB currentDatabase()))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01033_dictionaries_lifetime.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE sometable ( date Date,\ntime Int64,\nvalue UInt64\n) ENGINE=MergeTree()\nORDER BY time;","fileName":"../ClickHouse/tests/queries/0_stateless/01032_duplicate_column_insert_query.sql","errors":[]},{"query":"CREATE TABLE t_uuid (x UUID) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01032_cityHash64_for_UUID.sql","errors":[]},{"query":"CREATE TABLE t1 (x UInt32, s String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01031_semi_anti_join.sql","errors":[]},{"query":"CREATE TABLE t2 (x UInt32, s String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01031_semi_anti_join.sql","errors":[]},{"query":"CREATE TABLE t1 (x UInt32, s String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01031_pmj_new_any_semi_join.sql","errors":[]},{"query":"CREATE TABLE t2 (x UInt32, s String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01031_pmj_new_any_semi_join.sql","errors":[]},{"query":"create table test_table_url_syntax (id UInt32) ENGINE = URL('') ; -- { serverError UNSUPPORTED_URI_SCHEME }\ncreate table test_table_url_syntax (id UInt32) ENGINE = URL('','','','')\n; -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }\ndrop table if exists test_table_url_syntax\n;","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint') ; -- { serverError CANNOT_DETECT_FORMAT }\ncreate table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint.json');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'ErrorFormat') ; -- { serverError UNKNOWN_FORMAT }\ncreate table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'gzip');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'gz');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'deflate');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'brotli');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'lzma');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'zstd');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'lz4');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'bz2');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'snappy');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'none');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow', 'auto');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint.gz', 'JSONEachRow');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint.fr', 'JSONEachRow');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"create table test_table_url(id UInt32) ENGINE = URL('http://localhost/endpoint', 'JSONEachRow');","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_url_syntax.sql","errors":[]},{"query":"CREATE TABLE userid_test (userid UInt64) ENGINE = MergeTree() PARTITION BY (intDiv(userid, 500)) ORDER BY (userid) SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_set_supports_read.sql","errors":[]},{"query":"CREATE TABLE userid_set(userid UInt64) ENGINE = Set;","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_set_supports_read.sql","errors":[]},{"query":"create table test_table_hdfs_syntax (id UInt32) ENGINE = HDFS('') ; -- { serverError BAD_ARGUMENTS }\ncreate table test_table_hdfs_syntax (id UInt32) ENGINE = HDFS('','','', '')\n; -- { serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH }\ndrop table if exists test_table_hdfs_syntax\n;","fileName":"../ClickHouse/tests/queries/0_stateless/01030_storage_hdfs_syntax.sql","errors":[]},{"query":"create table tst (timestamp DateTime, val Nullable(Int8)) engine SummingMergeTree partition by toYYYYMM(timestamp) ORDER by (timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/01030_incorrect_count_summing_merge_tree.sql","errors":[]},{"query":"create table tst (timestamp DateTime, val Nullable(Int8)) engine SummingMergeTree partition by toYYYYMM(timestamp) ORDER by (timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/01030_incorrect_count_summing_merge_tree.sql","errors":[]},{"query":"create table tst (timestamp DateTime, val Int8) engine SummingMergeTree partition by toYYYYMM(timestamp) ORDER by (timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/01030_incorrect_count_summing_merge_tree.sql","errors":[]},{"query":"create table tst (timestamp DateTime, val Int8) engine SummingMergeTree partition by toYYYYMM(timestamp) ORDER by (timestamp);","fileName":"../ClickHouse/tests/queries/0_stateless/01030_incorrect_count_summing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE empty_pk (x UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 256, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/01030_final_mark_empty_primary_key.sql","errors":[]},{"query":"CREATE TABLE foo (key String, macro String MATERIALIZED __getScalar(key)) Engine=Null(); -- { serverError ILLEGAL_TYPE_OF_ARGUMENT } ","fileName":"../ClickHouse/tests/queries/0_stateless/01024__getScalar.sql","errors":[]},{"query":"CREATE DATABASE dict_in_01023;","fileName":"../ClickHouse/tests/queries/0_stateless/01023_materialized_view_query_context.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE dict_in_01023;'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE dict_in_01023.input (key UInt64, val UInt64) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01023_materialized_view_query_context.sql","errors":[]},{"query":"CREATE DICTIONARY dict_in_01023.dict (\nkey UInt64 DEFAULT 0,\nval UInt64 DEFAULT 1\n)\nPRIMARY KEY key\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'input' PASSWORD '' DB 'dict_in_01023'))\nLIFETIME(MIN 0 MAX 0)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01023_materialized_view_query_context.sql","errors":[]},{"query":"CREATE TABLE input    (key UInt64) Engine=Distributed(test_shard_localhost, currentDatabase(), buffer_, key);","fileName":"../ClickHouse/tests/queries/0_stateless/01023_materialized_view_query_context.sql","errors":[]},{"query":"CREATE TABLE null_    (key UInt64) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01023_materialized_view_query_context.sql","errors":[]},{"query":"CREATE TABLE buffer_  (key UInt64) Engine=Buffer(currentDatabase(), dist_out, 1, 0, 0, 0, 0, 0, 0);","fileName":"../ClickHouse/tests/queries/0_stateless/01023_materialized_view_query_context.sql","errors":[]},{"query":"CREATE TABLE dist_out (key UInt64) Engine=Distributed(test_shard_localhost, currentDatabase(), null_, key);","fileName":"../ClickHouse/tests/queries/0_stateless/01023_materialized_view_query_context.sql","errors":[]},{"query":"CREATE TABLE output (key UInt64, val UInt64) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01023_materialized_view_query_context.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv TO output AS SELECT key, dictGetUInt64('dict_in_01023.dict', 'val', key) val FROM dist_out;","fileName":"../ClickHouse/tests/queries/0_stateless/01023_materialized_view_query_context.sql","errors":[]},{"query":"CREATE TABLE tuple_values (t Tuple(int)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01021_tuple_parser.sql","errors":[]},{"query":"CREATE TABLE test (\n\\`x\\` Tuple(UInt64, UInt64)\n)\nENGINE = MergeTree\nORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/01021_only_tuple_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE create_as_select_01021 engine=Memory AS (SELECT (1, 1));","fileName":"../ClickHouse/tests/queries/0_stateless/01021_create_as_select.sql","errors":[]},{"query":"CREATE TABLE mv_extra_columns_dst ( v UInt64\n) ENGINE = MergeTree()\nPARTITION BY tuple()\nORDER BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/01019_materialized_view_select_extra_columns.sql","errors":[]},{"query":"CREATE TABLE mv_extra_columns_src ( v1 UInt64,\nv2 UInt64\n) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/01019_materialized_view_select_extra_columns.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_extra_columns_view TO mv_extra_columns_dst AS SELECT\nv1 as v,\nv2 as v2\nFROM mv_extra_columns_src;","fileName":"../ClickHouse/tests/queries/0_stateless/01019_materialized_view_select_extra_columns.sql","errors":[]},{"query":"CREATE TABLE src_01019(v UInt64) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/01019_alter_materialized_view_query.sql","errors":[]},{"query":"CREATE TABLE dest_01019(v UInt64) Engine = MergeTree() ORDER BY v;","fileName":"../ClickHouse/tests/queries/0_stateless/01019_alter_materialized_view_query.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW pipe_01019 TO dest_01019 AS SELECT v FROM src_01019;","fileName":"../ClickHouse/tests/queries/0_stateless/01019_alter_materialized_view_query.sql","errors":[]},{"query":"CREATE TABLE null_ (key UInt64) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/01019_Buffer_and_max_memory_usage.sql","errors":[]},{"query":"CREATE TABLE buffer_ (key UInt64) Engine=Buffer(currentDatabase(), null_, 1,    \n);","fileName":"../ClickHouse/tests/queries/0_stateless/01019_Buffer_and_max_memory_usage.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE buffer_ (key UInt64) Engine=Buffer(currentDatabase(), null_, 1,    \\n)'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE TESTTABLE4 (_id UInt64, pt String, l String )  ENGINE = MergeTree() PARTITION BY (pt) ORDER BY (_id);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_optimize_read_in_order_with_in_subquery.sql","errors":[]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie (\nprefix String,\nasn UInt32,\ncca2 String\n)\nengine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ip_dictionary_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict_ipv4_trie (\nprefix String,\nasn UInt32,\ncca2 String\n)\nPRIMARY KEY prefix\nSOURCE(CLICKHOUSE(host 'localhost' port 9000 user 'default' db currentDatabase() table 'table_ipv4_trie'))\nLAYOUT(IP_TRIE())\nLIFETIME(MIN 10 MAX 100)\nSETTINGS(dictionary_use_async_executor=1, max_threads=8)\n;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ip_dictionary_long.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.table_from_ipv4_trie_dict (\nprefix String,\nasn UInt32,\ncca2 String\n) ENGINE = Dictionary({CLICKHOUSE_DATABASE:Identifier}.dict_ipv4_trie);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ip_dictionary_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie (\nprefix String,\nval UInt32\n)\nengine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ip_dictionary_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict_ipv4_trie (\nprefix String,\nval UInt32\n)\nPRIMARY KEY prefix\nSOURCE(CLICKHOUSE(host 'localhost' port 9000 user 'default' db currentDatabase() table 'table_ipv4_trie'))\nLAYOUT(IP_TRIE())\nLIFETIME(MIN 10 MAX 100);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ip_dictionary_long.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.table_ipv4_trie ( prefix String, val UInt32 ) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ip_dictionary_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict_ipv4_trie ( prefix String, val UInt32 ) PRIMARY KEY prefix\nSOURCE(CLICKHOUSE(host 'localhost' port 9000 user 'default' db currentDatabase() table 'table_ipv4_trie'))\nLAYOUT(IP_TRIE(ACCESS_TO_KEY_FROM_ATTRIBUTES 1))\nLIFETIME(MIN 10 MAX 100);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ip_dictionary_long.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.table_ip_trie (\nprefix String,\nval String\n)\nengine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ip_dictionary_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict_ip_trie (\nprefix String,\nval String\n)\nPRIMARY KEY prefix\nSOURCE(CLICKHOUSE(host 'localhost' port 9000 user 'default' db currentDatabase() table 'table_ip_trie'))\nLAYOUT(IP_TRIE(ACCESS_TO_KEY_FROM_ATTRIBUTES 1))\nLIFETIME(MIN 10 MAX 100);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ip_dictionary_long.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.table_from_ip_trie_dict (\nprefix String,\nval String\n) ENGINE = Dictionary({CLICKHOUSE_DATABASE:Identifier}.dict_ip_trie);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ip_dictionary_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.table_ip_trie (\nprefix String,\nval String\n)\nengine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ip_dictionary_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict_ip_trie (\nprefix String,\nval String\n)\nPRIMARY KEY prefix\nSOURCE(CLICKHOUSE(host 'localhost' port 9000 user 'default' db currentDatabase() table 'table_ip_trie'))\nLAYOUT(IP_TRIE())\nLIFETIME(MIN 10 MAX 100);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ip_dictionary_long.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE DATABASE database_for_dict;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_dictionaries_from_dictionaries.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE database_for_dict;'","startColumn":33,"startLine":1,"endColumn":34,"endLine":1}]},{"query":"CREATE TABLE database_for_dict.table_for_dict (\nkey_column UInt64,\nsecond_column UInt8,\nthird_column String,\nfourth_column Float64\n)\nENGINE = MergeTree()\nORDER BY key_column;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_dictionaries_from_dictionaries.sql","errors":[]},{"query":"CREATE DICTIONARY database_for_dict.dict1 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt8 DEFAULT 1,\nthird_column String DEFAULT 'qqq',\nfourth_column Float64 DEFAULT 42.0\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' DB 'database_for_dict'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01018_dictionaries_from_dictionaries.sql","errors":[]},{"query":"CREATE DICTIONARY database_for_dict.dict2 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt8 DEFAULT 1,\nthird_column String DEFAULT 'qqq',\nfourth_column Float64 DEFAULT 42.0\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict1' DB 'database_for_dict'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01018_dictionaries_from_dictionaries.sql","errors":[]},{"query":"CREATE DICTIONARY database_for_dict.dict3 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt8 DEFAULT 1,\nthird_column String DEFAULT 'qqq',\nfourth_column Float64 DEFAULT 42.0\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'dict2' DB 'database_for_dict'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01018_dictionaries_from_dictionaries.sql","errors":[]},{"query":"CREATE DICTIONARY database_for_dict.dict4 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt8 DEFAULT 1,\nthird_column String DEFAULT 'qqq',\nfourth_column Float64 DEFAULT 42.0\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'non_existing_table' DB 'database_for_dict'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01018_dictionaries_from_dictionaries.sql","errors":[]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.date_table (\nCountryID UInt64,\nStartDate Date,\nEndDate Date,\nTax Float64\n)\nENGINE = MergeTree()\nORDER BY CountryID;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_special.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict1 (\nCountryID UInt64,\nStartDate Date,\nEndDate Date,\nTax Float64\n)\nPRIMARY KEY CountryID\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'date_table' DB currentDatabase()))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(RANGE_HASHED())\nRANGE(MIN StartDate MAX EndDate);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_special.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.datetime_table (\nCountryID UInt64,\nStartDate DateTime,\nEndDate DateTime,\nTax Float64\n)\nENGINE = MergeTree()\nORDER BY CountryID;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_special.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict2 (\nCountryID UInt64,\nStartDate DateTime,\nEndDate DateTime,\nTax Float64\n)\nPRIMARY KEY CountryID\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'datetime_table' DB currentDatabase()))\nLIFETIME(MIN 1 MAX 1000)\nLAYOUT(RANGE_HASHED())\nRANGE(MIN StartDate MAX EndDate);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_special.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.table_with_hierarchy (\nRegionID UInt64,\nParentRegionID UInt64,\nRegionName String\n)\nENGINE = MergeTree()\nORDER BY RegionID;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_special.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dictionary_with_hierarchy (\nRegionID UInt64,\nParentRegionID UInt64 HIERARCHICAL,\nRegionName String\n)\nPRIMARY KEY RegionID\nSOURCE(CLICKHOUSE(host 'localhost' port tcpPort() user 'default' db currentDatabase() table 'table_with_hierarchy'))\nLAYOUT(HASHED())\nLIFETIME(MIN 1 MAX 1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_special.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.table_for_dict (\nkey_column UInt64,\nsecond_column UInt8,\nthird_column String,\nfourth_column Float64\n)\nENGINE = MergeTree()\nORDER BY key_column;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_select.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict1 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt8 DEFAULT 1,\nthird_column String DEFAULT 'qqq',\nfourth_column Float64 DEFAULT 42.0\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' PASSWORD '' DB currentDatabase()))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_select.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict1 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt8 DEFAULT 1,\nthird_column String DEFAULT 'qqq',\nfourth_column Float64 DEFAULT 42.0\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(TABLE 'table_for_dict' DB currentDatabase()))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_select.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict1 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt8 DEFAULT 1,\nthird_column String DEFAULT 'qqq',\nfourth_column Float64 DEFAULT 42.0\n)\nPRIMARY KEY key_column, third_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' DB currentDatabase()))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(COMPLEX_KEY_CACHE(SIZE_IN_CELLS 1));","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_select.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict2 (\nkey_column UInt64 DEFAULT 0,\nsome_column String EXPRESSION toString(fourth_column),\nfourth_column Float64 DEFAULT 42.0\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' DB currentDatabase()))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_select.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE DICTIONARY {CLICKHOUSE_DATABASE:Identifier}.dict3 (\nkey_column UInt64 DEFAULT 0,\nsome_column String EXPRESSION toString(fourth_column),\nfourth_column Float64 DEFAULT 42.0\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' DB currentDatabase()))\nLIFETIME(0)\nLAYOUT(HASHED());","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_select.sql","errors":[{"message":"no viable alternative at input 'CREATE DICTIONARY {'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE DATABASE database_for_dict_01018;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE database_for_dict_01018;'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE database_for_dict_01018.table_for_dict (\nkey_column UInt64,\nsecond_column UInt8,\nthird_column String\n)\nENGINE = MergeTree()\nORDER BY key_column;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql","errors":[]},{"query":"CREATE DATABASE db_01018;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE db_01018;'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE DICTIONARY db_01018.dict1 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt8 DEFAULT 1,\nthird_column String DEFAULT 'qqq'\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' PASSWORD '' DB 'database_for_dict_01018'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql","errors":[]},{"query":"CREATE DATABASE memory_db ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql","errors":[]},{"query":"CREATE DICTIONARY memory_db.dict2 (\nkey_column UInt64 DEFAULT 0 INJECTIVE,\nsecond_column UInt8 DEFAULT 1 EXPRESSION rand() % 222,\nthird_column String DEFAULT 'qqq'\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' PASSWORD '' DB 'database_for_dict_01018'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql","errors":[]},{"query":"CREATE DATABASE lazy_db ENGINE = Lazy(1);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql","errors":[]},{"query":"CREATE DICTIONARY lazy_db.dict3 (\nkey_column UInt64 DEFAULT 0 INJECTIVE,\nsecond_column UInt8 DEFAULT 1 EXPRESSION rand() % 222,\nthird_column String DEFAULT 'qqq'\n)\nPRIMARY KEY key_column, second_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' PASSWORD '' DB 'database_for_dict_01018'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(COMPLEX_KEY_HASHED()); --{serverError UNSUPPORTED_METHOD}\nDROP DATABASE IF EXISTS lazy_db;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql","errors":[]},{"query":"CREATE DATABASE db_01018;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE db_01018;'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE DICTIONARY db_01018.dict4 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt8 DEFAULT 1,\nthird_column String DEFAULT 'qqq'\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' PASSWORD '' DB 'database_for_dict_01018'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql","errors":[]},{"query":"CREATE DATABASE db_01018;","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE db_01018;'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE DICTIONARY db_01018.dict4 (\nkey_column UInt64 DEFAULT 0,\nsecond_column UInt8 DEFAULT 1,\nthird_column String DEFAULT 'qqq'\n)\nPRIMARY KEY key_column\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' TABLE 'table_for_dict' PASSWORD '' DB 'database_for_dict_01018'))\nLIFETIME(MIN 1 MAX 10)\nLAYOUT(FLAT());","fileName":"../ClickHouse/tests/queries/0_stateless/01018_ddl_dictionaries_create.sql","errors":[]},{"query":"CREATE TABLE mem1 (key Int) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01018_Distributed__shard_num.sql","errors":[]},{"query":"CREATE TABLE dist_1 AS mem1 Engine=Distributed(test_shard_localhost, currentDatabase(), mem1);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_Distributed__shard_num.sql","errors":[]},{"query":"CREATE TABLE mem2 (key Int) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01018_Distributed__shard_num.sql","errors":[]},{"query":"CREATE TABLE dist_2 AS mem2 Engine=Distributed(test_cluster_two_shards_localhost, currentDatabase(), mem2);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_Distributed__shard_num.sql","errors":[]},{"query":"CREATE TABLE mem3 (key Int, _shard_num String) Engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01018_Distributed__shard_num.sql","errors":[]},{"query":"CREATE TABLE dist_3 AS mem3 Engine=Distributed(test_shard_localhost, currentDatabase(), mem3);","fileName":"../ClickHouse/tests/queries/0_stateless/01018_Distributed__shard_num.sql","errors":[]},{"query":"CREATE TABLE defaults (\n\tt1 Tuple(UInt16, UInt16),\n\tt2 Tuple(UInt32, UInt32),\n\tt3 Tuple(Int64, Int64)\n)ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01017_tuplehamming_distance.sql","errors":[]},{"query":"CREATE TABLE defaults (\n\tn1 UInt8,\n\tn2 UInt16,\n\tn3 UInt32,\n\tn4 UInt64\n)ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01017_bithamming_distance.sql","errors":[]},{"query":"CREATE TABLE test_string (\n\ts1 String,\n\ts2 String,\n\ts3 FixedString(10),\n\ts4 FixedString(10),\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01017_bithamming_distance.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_string (\\n\\ts1 String,\\n\\ts2 String,\\n\\ts3 FixedString(10),\\n\\ts4 FixedString(10),\\n)'","startColumn":0,"startLine":6,"endColumn":1,"endLine":6}]},{"query":"CREATE TABLE defaults (\ns String\n)ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01016_simhash_minhash_ppc.sql","errors":[]},{"query":"CREATE TABLE defaults (\ns String\n)ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01016_simhash_minhash.sql","errors":[]},{"query":"create table if not exists null_01016 (x Nullable(String)) engine MergeTree order by ifNull(x, 'order-null') partition by ifNull(x, 'partition-null');","fileName":"../ClickHouse/tests/queries/0_stateless/01016_null_part_minmax.sql","errors":[]},{"query":"CREATE TABLE tuple_01016(a Tuple(DateTime, Int32)) ENGINE = MergeTree() ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/01016_index_tuple_field_type.sql","errors":[]},{"query":"CREATE TABLE table_01 ( date Date,\nn Int32\n) ENGINE = MergeTree()\nPARTITION BY date\nORDER BY date;","fileName":"../ClickHouse/tests/queries/0_stateless/01015_attach_part.sql","errors":[]},{"query":"CREATE TABLE new_table_test(name String) ENGINE = MergeTree ORDER BY name;","fileName":"../ClickHouse/tests/queries/0_stateless/01014_count_of_merges_metrics.sql","errors":[]},{"query":"CREATE TABLE check_table_test(value1 UInt64, value2 UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01014_count_of_merges_metrics.sql","errors":[]},{"query":"CREATE TABLE defaults (\nstrings String,\ni8 Int8,\nu16 UInt16,\nu32 UInt32,\nu64 UInt64\n)ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/01013_repeat_function.sql","errors":[]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.test1 (test UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01012_show_tables_limit.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.test2 (test UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01012_show_tables_limit.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.test3 (test UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01012_show_tables_limit.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.test4 (test UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01012_show_tables_limit.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.test5 (test UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01012_show_tables_limit.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.test6 (test UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/01012_show_tables_limit.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE foo (key int, INDEX i1 key TYPE minmax GRANULARITY 1) Engine=MergeTree() ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/01011_test_create_as_skip_indices.sql","errors":[]},{"query":"CREATE TABLE as_foo AS foo;","fileName":"../ClickHouse/tests/queries/0_stateless/01011_test_create_as_skip_indices.sql","errors":[]},{"query":"CREATE TABLE dist (key int, INDEX i1 key TYPE minmax GRANULARITY 1) Engine=Distributed(test_shard_localhost, currentDatabase(), 'foo'); -- { serverError BAD_ARGUMENTS } CREATE TABLE dist_as_foo Engine=Distributed(test_shard_localhost, currentDatabase(), 'foo') AS foo;","fileName":"../ClickHouse/tests/queries/0_stateless/01011_test_create_as_skip_indices.sql","errors":[]},{"query":"CREATE TABLE t0 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01010_pmj_skip_blocks.sql","errors":[]},{"query":"CREATE TABLE t1 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01010_pmj_skip_blocks.sql","errors":[]},{"query":"CREATE TABLE t2 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01010_pmj_skip_blocks.sql","errors":[]},{"query":"CREATE TABLE t0 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01010_pmj_one_row_blocks.sql","errors":[]},{"query":"CREATE TABLE t1 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01010_pmj_one_row_blocks.sql","errors":[]},{"query":"CREATE TABLE t2 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01010_pmj_one_row_blocks.sql","errors":[]},{"query":"CREATE TABLE ints (i64 Int64, i32 Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01010_pm_join_all_join_bug.sql","errors":[]},{"query":"CREATE TABLE t0 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01010_partial_merge_join_negative.sql","errors":[]},{"query":"CREATE TABLE t1 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01010_partial_merge_join_negative.sql","errors":[]},{"query":"CREATE TABLE t0 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01010_partial_merge_join.sql","errors":[]},{"query":"CREATE TABLE t1 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01010_partial_merge_join.sql","errors":[]},{"query":"CREATE TABLE t2 (x UInt32, y UInt64) engine = MergeTree ORDER BY (x,y);","fileName":"../ClickHouse/tests/queries/0_stateless/01010_partial_merge_join.sql","errors":[]},{"query":"CREATE TABLE test_insert_t1 (\\`dt\\` Date, \\`uid\\` String, \\`name\\` String, \\`city\\` String) ENGINE = MergeTree PARTITION BY toYYYYMMDD(dt) ORDER BY name SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01009_insert_select_nicelulu.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_insert_t1 (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE test_insert_t2 (\\`dt\\` Date, \\`uid\\` String) ENGINE = MergeTree PARTITION BY toYYYYMMDD(dt) ORDER BY uid SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01009_insert_select_nicelulu.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_insert_t2 (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"CREATE TABLE test_insert_t3 (\\`dt\\` Date, \\`uid\\` String, \\`name\\` String, \\`city\\` String) ENGINE = MergeTree PARTITION BY toYYYYMMDD(dt) ORDER BY name SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/01009_insert_select_nicelulu.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_insert_t3 (\\'","startColumn":29,"startLine":1,"endColumn":30,"endLine":1}]},{"query":"create table tab (x UInt64) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/01009_insert_select_data_loss.sql","errors":[]},{"query":"CREATE TABLE test1 (a UInt8, b Array(DateTime)) ENGINE Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/01009_global_array_join_names.sql","errors":[]},{"query":"CREATE TABLE test2 as test1 ENGINE Distributed(test_shard_localhost, currentDatabase(), test1);","fileName":"../ClickHouse/tests/queries/0_stateless/01009_global_array_join_names.sql","errors":[]},{"query":"create table foo (ddate Date, id Int64, n String) ENGINE = ReplacingMergeTree(ddate, (id), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01008_materialized_view_henyihanwobushi.sql","errors":[]},{"query":"create table bar (ddate Date, id Int64, n String, foo_id Int64) ENGINE = ReplacingMergeTree(ddate, (id), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/01008_materialized_view_henyihanwobushi.sql","errors":[]},{"query":"create MATERIALIZED view view_foo_bar ENGINE = ReplacingMergeTree(ddate, (bar_id), 8192) as select ddate, bar_id, bar_n, foo_id, foo_n from (select ddate, id as bar_id, n as bar_n, foo_id from bar) js1 any left join (select id as foo_id, n as foo_n from foo) js2 using foo_id;","fileName":"../ClickHouse/tests/queries/0_stateless/01008_materialized_view_henyihanwobushi.sql","errors":[]},{"query":"CREATE TABLE ttl_with_default (d DateTime, a Int default 777 ttl d + interval 5 SECOND) ENGINE = MergeTree ORDER BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/01006_ttl_with_default_2.sql","errors":[]},{"query":"CREATE TABLE enums AS VALUES('x Enum8(\\\\'hello\\\\' = 0, \\\\'world\\\\' = 1, \\\\'foo\\\\' = -1), y String', ('hello', 'find me'), (0, 'and me'), (-1, 'also me'), ('world', 'don\\\\'t find me'));","fileName":"../ClickHouse/tests/queries/0_stateless/01001_enums_in_in_section.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE enums AS VALUES('x Enum8(\\\\'hello'","startColumn":41,"startLine":1,"endColumn":46,"endLine":1}]},{"query":"CREATE TABLE bad_skip_idx (\nid UInt64,\nvalue String\n) ENGINE MergeTree()\nORDER BY id SETTINGS index_granularity_bytes = 64, min_index_granularity_bytes = 10, vertical_merge_algorithm_min_rows_to_activate = 0, vertical_merge_algorithm_min_columns_to_activate = 0; -- actually vertical merge is not required condition for this bug, but it's more easy to reproduce (becuse we don't recalc granularities)\nINSERT INTO bad_skip_idx SELECT number, concat('x', toString(number)) FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/01000_bad_size_of_marks_skip_idx.sql","errors":[]},{"query":"CREATE TABLE test_vertical_merge ( k UInt64,\nval1 UInt64,\nval2 UInt64,\nINDEX idx1 val1 * val2 TYPE minmax GRANULARITY 1,\nINDEX idx2 val1 * k TYPE minmax GRANULARITY 1\n) ENGINE MergeTree()\nORDER BY k\nSETTINGS vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00999_test_skip_indices_with_alter_and_merge.sql","errors":[]},{"query":"CREATE TABLE l (a String, b Tuple(String, String)) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/00999_nullable_nested_types_4877.sql","errors":[]},{"query":"CREATE TABLE r (a String, c Tuple(String, String)) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/00999_nullable_nested_types_4877.sql","errors":[]},{"query":"CREATE TABLE l (a String, b String) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/00999_nullable_nested_types_4877.sql","errors":[]},{"query":"CREATE TABLE r (a String, c Array(String)) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/00999_nullable_nested_types_4877.sql","errors":[]},{"query":"create table X (id Int64) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00999_join_on_expression.sql","errors":[]},{"query":"create table Y (id Int64) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00999_join_on_expression.sql","errors":[]},{"query":"CREATE TABLE constrained (URL String, CONSTRAINT is_censor CHECK domainWithoutWWW(URL) = 'censor.net', CONSTRAINT is_utf8 CHECK isValidUTF8(URL)) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00998_constraints_all_tables.sql","errors":[]},{"query":"CREATE TABLE constrained (URL String, CONSTRAINT is_censor CHECK domainWithoutWWW(URL) = 'censor.net', CONSTRAINT is_utf8 CHECK isValidUTF8(URL)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00998_constraints_all_tables.sql","errors":[]},{"query":"CREATE TABLE constrained (URL String, CONSTRAINT is_censor CHECK domainWithoutWWW(URL) = 'censor.net', CONSTRAINT is_utf8 CHECK isValidUTF8(URL)) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00998_constraints_all_tables.sql","errors":[]},{"query":"CREATE TABLE constrained (URL String, CONSTRAINT is_censor CHECK domainWithoutWWW(URL) = 'censor.net', CONSTRAINT is_utf8 CHECK isValidUTF8(URL)) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00998_constraints_all_tables.sql","errors":[]},{"query":"CREATE TABLE constrained (URL String, CONSTRAINT is_censor CHECK domainWithoutWWW(URL) = 'censor.net', CONSTRAINT is_utf8 CHECK isValidUTF8(URL)) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00998_constraints_all_tables.sql","errors":[]},{"query":"CREATE TABLE constrained (URL String, CONSTRAINT is_censor CHECK domainWithoutWWW(URL) = 'censor.net', CONSTRAINT is_utf8 CHECK isValidUTF8(URL)) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00998_constraints_all_tables.sql","errors":[]},{"query":"CREATE TABLE constrained2 AS constrained;","fileName":"../ClickHouse/tests/queries/0_stateless/00998_constraints_all_tables.sql","errors":[]},{"query":"CREATE TABLE set_array (\nprimary_key String,\nindex_array Array(UInt64),\nINDEX additional_index_array (index_array) TYPE set(10000) GRANULARITY 1\n) ENGINE = MergeTree()\nORDER BY (primary_key);","fileName":"../ClickHouse/tests/queries/0_stateless/00997_set_index_array.sql","errors":[]},{"query":"CREATE TABLE ties (a Int) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00996_limit_with_ties.sql","errors":[]},{"query":"CREATE TABLE fill (date Date, val Int, str String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00995_order_by_with_fill.sql","errors":[]},{"query":"CREATE TABLE fill (a UInt32, b Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00995_order_by_with_fill.sql","errors":[]},{"query":"CREATE TABLE order_with_aggr(a Int) ENGINE = MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/00995_optimize_read_in_order_with_aggregation.sql","errors":[]},{"query":"CREATE TABLE bloom_filter (\nid UInt64,\ns String,\nINDEX tok_bf (s, lower(s)) TYPE tokenbf_v1(512, 3, 0) GRANULARITY 1\n) ENGINE = MergeTree() ORDER BY id SETTINGS index_granularity = 8, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00990_hasToken_and_tokenbf.sql","errors":[]},{"query":"create table bloom_filter2 (\nid UInt64,\ns String,\nindex tok_bf3 (s, lower(s)) type tokenbf_v1(512, 3, 0) GRANULARITY 1\n) engine = MergeTree() order by id settings index_granularity = 8;","fileName":"../ClickHouse/tests/queries/0_stateless/00990_hasToken_and_tokenbf.sql","errors":[]},{"query":"CREATE TABLE tab (row_id UInt32, str String, INDEX idx str TYPE tokenbf_v1(256, 2, 0)) ENGINE = MergeTree ORDER BY row_id;","fileName":"../ClickHouse/tests/queries/0_stateless/00990_hasToken_and_tokenbf.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (row_id UInt32, str String, INDEX idx str TYPE tokenbf_v1(256, 2, 0))'","startColumn":85,"startLine":1,"endColumn":86,"endLine":1}]},{"query":"CREATE TABLE mt (x UInt64) ENGINE = MergeTree ORDER BY x SETTINGS parts_to_delay_insert = 100000, parts_to_throw_insert = 100000;","fileName":"../ClickHouse/tests/queries/0_stateless/00989_parallel_parts_loading.sql","errors":[]},{"query":"CREATE TABLE mt (x UInt64) ENGINE = MergeTree ORDER BY x SETTINGS cleanup_delay_period = 1, cleanup_delay_period_random_add = 0,\ncleanup_thread_preferred_points_per_iteration=0, old_parts_lifetime = 1, parts_to_delay_insert = 100000, parts_to_throw_insert = 100000;","fileName":"../ClickHouse/tests/queries/0_stateless/00988_parallel_parts_removal.sql","errors":[]},{"query":"CREATE TABLE replicated_constraints1 (\na UInt32,\nb UInt32,\nCONSTRAINT a_constraint CHECK a < 10\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00988/alter_constraints', 'r1') ORDER BY (a);","fileName":"../ClickHouse/tests/queries/0_stateless/00988_constraints_replication_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_constraints2 (\na UInt32,\nb UInt32,\nCONSTRAINT a_constraint CHECK a < 10\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00988/alter_constraints', 'r2') ORDER BY (a);","fileName":"../ClickHouse/tests/queries/0_stateless/00988_constraints_replication_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE distr (x UInt8) ENGINE = Distributed(test_shard_localhost, currentDatabase(), distr); -- { serverError INFINITE_LOOP } CREATE TABLE distr0 (x UInt8) ENGINE = Distributed(test_shard_localhost, '', distr0); -- { serverError INFINITE_LOOP }\nCREATE TABLE distr1 (x UInt8) ENGINE = Distributed(test_shard_localhost, currentDatabase(), distr2);","fileName":"../ClickHouse/tests/queries/0_stateless/00987_distributed_stack_overflow.sql","errors":[]},{"query":"CREATE TABLE distr2 (x UInt8) ENGINE = Distributed(test_shard_localhost, currentDatabase(), distr1); -- { serverError INFINITE_LOOP } DROP TABLE distr1;","fileName":"../ClickHouse/tests/queries/0_stateless/00987_distributed_stack_overflow.sql","errors":[]},{"query":"CREATE TABLE test1 (a UInt8) ENGINE MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/00986_materialized_view_stack_overflow.sql","errors":[]},{"query":"CREATE TABLE test2 (a UInt8) ENGINE MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/00986_materialized_view_stack_overflow.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv1 TO test1 AS SELECT a FROM test2;","fileName":"../ClickHouse/tests/queries/0_stateless/00986_materialized_view_stack_overflow.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv2 TO test2 AS SELECT a FROM test1;","fileName":"../ClickHouse/tests/queries/0_stateless/00986_materialized_view_stack_overflow.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS merge1 (x UInt64) ENGINE = Merge(currentDatabase(), '^merge\\\\\\\\d\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00985_merge_stack_overflow.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS merge2 (x UInt64) ENGINE = Merge(currentDatabase(), '^merge\\\\\\\\d\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00985_merge_stack_overflow.sql","errors":[]},{"query":"CREATE TABLE test1 (a UInt8, b String) ENGINE MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/00984_materialized_view_to_columns.sql","errors":[]},{"query":"CREATE TABLE test2 (c UInt8, d String) ENGINE MergeTree ORDER BY c;","fileName":"../ClickHouse/tests/queries/0_stateless/00984_materialized_view_to_columns.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv TO test1 (b String, a UInt8) AS SELECT d AS b, c AS a FROM test2;","fileName":"../ClickHouse/tests/queries/0_stateless/00984_materialized_view_to_columns.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW mv TO test1 ('","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE TABLE xx (\n\\`date\\` Date, \n\\`id\\` Int64, \n\\`clicks\\` Int64, \n\\`price\\` Float64, \n\\`spend\\` Float64\n)\nENGINE = SummingMergeTree([price, spend])\nPARTITION BY toYYYYMM(date)\nORDER BY id\nSAMPLE BY id\nSETTINGS index_granularity = 8192; -- { serverError UNEXPECTED_AST_STRUCTURE }\n","fileName":"../ClickHouse/tests/queries/0_stateless/00983_summing_merge_tree_not_an_identifier.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE xx (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE test1 (a LowCardinality(String)) ENGINE=MergeTree() ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/00982_low_cardinality_setting_in_mv.sql","errors":[]},{"query":"CREATE TABLE test2 (a UInt64) engine=MergeTree() ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/00982_low_cardinality_setting_in_mv.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_mv TO test2 AS SELECT toUInt64(a = 'test') AS a FROM test1;","fileName":"../ClickHouse/tests/queries/0_stateless/00982_low_cardinality_setting_in_mv.sql","errors":[]},{"query":"CREATE TABLE topk (val1 String, val2 UInt32) ENGINE = MergeTree ORDER BY val1 SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00981_topK_topKWeighted_long.sql","errors":[]},{"query":"CREATE TABLE merge_a (x UInt8) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00981_no_virtual_columns.sql","errors":[]},{"query":"CREATE TABLE merge_b (x UInt8) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00981_no_virtual_columns.sql","errors":[]},{"query":"CREATE TABLE merge_ab AS merge(currentDatabase(), '^merge_[ab]\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00981_no_virtual_columns.sql","errors":[]},{"query":"CREATE TABLE replicated_table_for_alter1 ( id UInt64,\nData String\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/test_00980_{database}/replicated_table_for_alter', '1') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/00980_zookeeper_merge_tree_alter_settings.sql","errors":[]},{"query":"CREATE TABLE replicated_table_for_alter2 ( id UInt64,\nData String\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/test_00980_{database}/replicated_table_for_alter', '2') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/00980_zookeeper_merge_tree_alter_settings.sql","errors":[]},{"query":"CREATE TABLE replicated_table_for_reset_setting1 ( id UInt64,\nData String\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/test_00980_{database}/replicated_table_for_reset_setting', '1') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/00980_zookeeper_merge_tree_alter_settings.sql","errors":[]},{"query":"CREATE TABLE replicated_table_for_reset_setting2 ( id UInt64,\nData String\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/test_00980_{database}/replicated_table_for_reset_setting', '2') ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/00980_zookeeper_merge_tree_alter_settings.sql","errors":[]},{"query":"CREATE TABLE t_local (a Int) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00980_skip_unused_shards_without_sharding_key.sql","errors":[]},{"query":"CREATE TABLE t_distr (a Int) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 't_local');","fileName":"../ClickHouse/tests/queries/0_stateless/00980_skip_unused_shards_without_sharding_key.sql","errors":[]},{"query":"CREATE VIEW numbers500k AS SELECT number FROM system.numbers LIMIT 500000;","fileName":"../ClickHouse/tests/queries/0_stateless/00980_shard_aggregation_state_deserialization.sql","errors":[]},{"query":"CREATE TABLE log_for_alter ( id UInt64,\nData String\n) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00980_merge_alter_settings.sql","errors":[]},{"query":"CREATE TABLE table_for_alter ( id UInt64,\nData String\n) ENGINE = MergeTree() ORDER BY id SETTINGS index_granularity=4096, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00980_merge_alter_settings.sql","errors":[]},{"query":"CREATE TABLE table_for_reset_setting ( id UInt64,\nData String\n) ENGINE = MergeTree() ORDER BY id SETTINGS index_granularity=4096, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00980_merge_alter_settings.sql","errors":[]},{"query":"create table test_join (date Date, id Int32, name Nullable(String)) engine = MergeTree partition by date order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/00980_full_join_crash_fancyqlx.sql","errors":[]},{"query":"CREATE TABLE test1 (n UInt64) ENGINE = MergeTree ORDER BY n SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00979_toFloat_monotonicity.sql","errors":[]},{"query":"CREATE TABLE test2 (s String) ENGINE = MergeTree ORDER BY s SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00979_toFloat_monotonicity.sql","errors":[]},{"query":"CREATE TABLE test3 (d Decimal(4, 3)) ENGINE = MergeTree ORDER BY d SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00979_toFloat_monotonicity.sql","errors":[]},{"query":"CREATE TABLE set_index_not (   name String, status Enum8('alive' = 0, 'rip' = 1),\nINDEX idx_status status TYPE set(2) GRANULARITY 1\n)\nENGINE = MergeTree()  ORDER BY name  SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/00979_set_index_not.sql","errors":[]},{"query":"CREATE TABLE num AS numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00979_quantileExcatExclusive_and_Inclusive.sql","errors":[]},{"query":"create table t(a Int64, b Int64, c String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00977_join_use_nulls_denny_crane.sql","errors":[]},{"query":"create table s(a Int64, b Int64, c String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00977_join_use_nulls_denny_crane.sql","errors":[]},{"query":"create table t(a Int64, b Int64, c Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00977_join_use_nulls_denny_crane.sql","errors":[]},{"query":"create table s(a Int64, b Int64, c Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00977_join_use_nulls_denny_crane.sql","errors":[]},{"query":"create table t(a Int64, b Nullable(Int64), c String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00977_join_use_nulls_denny_crane.sql","errors":[]},{"query":"create table s(a Int64, b Nullable(Int64), c String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00977_join_use_nulls_denny_crane.sql","errors":[]},{"query":"create table t(a Int64, b Nullable(Int64), c Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00977_join_use_nulls_denny_crane.sql","errors":[]},{"query":"create table s(a Int64, b Nullable(Int64), c Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00977_join_use_nulls_denny_crane.sql","errors":[]},{"query":"create table t(a Nullable(Int64), b Nullable(Int64), c Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00977_join_use_nulls_denny_crane.sql","errors":[]},{"query":"create table s(a Nullable(Int64), b Nullable(Int64), c Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00977_join_use_nulls_denny_crane.sql","errors":[]},{"query":"create table ttl (d Date, a Int) engine = MergeTree order by a partition by toDayOfMonth(d) settings remove_empty_parts = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00976_ttl_with_old_parts.sql","errors":[]},{"query":"create table ttl (d Date, a Int) engine = MergeTree order by a partition by toDayOfMonth(d) ttl d + interval 1 day;","fileName":"../ClickHouse/tests/queries/0_stateless/00976_system_stop_ttl_merges.sql","errors":[]},{"query":"CREATE TABLE han_1 (k Int32, date_dt LowCardinality(Nullable(String)))  ENGINE = MergeTree() PARTITION BY k ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/00976_shard_low_cardinality_achimbab.sql","errors":[]},{"query":"CREATE TABLE values_list AS VALUES('a UInt64, s String', (1, 'one'), (2, 'two'), (3, 'three'));","fileName":"../ClickHouse/tests/queries/0_stateless/00975_values_list.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE values_list AS VALUES('a UInt64, s String', ('","startColumn":57,"startLine":1,"endColumn":58,"endLine":1}]},{"query":"create table if not exists sample_prewhere (date Date, id Int32, time Int64) engine = MergeTree partition by date order by (id, time, intHash64(time)) sample by intHash64(time);","fileName":"../ClickHouse/tests/queries/0_stateless/00975_sample_prewhere_distributed.sql","errors":[]},{"query":"CREATE TABLE src (x UInt8) ENGINE Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00975_recursive_materialized_view.sql","errors":[]},{"query":"CREATE TABLE dst1 (x UInt8) ENGINE Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00975_recursive_materialized_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW src_to_dst1 TO dst1 AS SELECT x + 1 as x FROM src;","fileName":"../ClickHouse/tests/queries/0_stateless/00975_recursive_materialized_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW dst2 ENGINE Memory AS SELECT x + 1 as x FROM dst1;","fileName":"../ClickHouse/tests/queries/0_stateless/00975_recursive_materialized_view.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_move_partition_src ( pk UInt8,\nval UInt32\n) Engine = MergeTree()\nPARTITION BY pk\nORDER BY (pk, val) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00975_move_partition_merge_tree.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test_move_partition_dest ( pk UInt8,\nval UInt32\n) Engine = MergeTree()\nPARTITION BY pk\nORDER BY (pk, val) SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00975_move_partition_merge_tree.sql","errors":[]},{"query":"create table t1 (a UInt32, b String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00974_fix_join_on.sql","errors":[]},{"query":"create table t2 (c UInt32, d String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00974_fix_join_on.sql","errors":[]},{"query":"create table t3 (a UInt32) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00974_fix_join_on.sql","errors":[]},{"query":"CREATE TABLE test_00974 (\ndate Date,\nx Int32,\nver UInt64\n)\nENGINE = ReplacingMergeTree(date, x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00974_final_predicate_push_down.sql","errors":[]},{"query":"CREATE TABLE source_table1 (a Int64, b String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00974_distributed_join_on.sql","errors":[]},{"query":"CREATE TABLE source_table2 (c Int64, d String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00974_distributed_join_on.sql","errors":[]},{"query":"CREATE TABLE distributed_table1 AS source_table1 ENGINE = Distributed('test_shard_localhost', currentDatabase(), source_table1);","fileName":"../ClickHouse/tests/queries/0_stateless/00974_distributed_join_on.sql","errors":[]},{"query":"CREATE TABLE distributed_table2 AS source_table2 ENGINE = Distributed('test_shard_localhost', currentDatabase(), source_table2);","fileName":"../ClickHouse/tests/queries/0_stateless/00974_distributed_join_on.sql","errors":[]},{"query":"CREATE TABLE test (num UInt64, str String) ENGINE = MergeTree ORDER BY num;","fileName":"../ClickHouse/tests/queries/0_stateless/00974_bitmapContains_with_primary_key.sql","errors":[]},{"query":"CREATE TABLE indexed_table (\n\\`tm\\` DateTime,\n\\`log_message\\` String,\nINDEX log_message log_message TYPE tokenbf_v1(4096, 2, 0) GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY (tm)\nSETTINGS index_granularity_bytes = 50, min_index_granularity_bytes = 40;","fileName":"../ClickHouse/tests/queries/0_stateless/00974_adaptive_granularity_secondary_index.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE indexed_table (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE another_indexed_table (\n\\`tm\\` DateTime,\n\\`log_message\\` String,\nINDEX log_message log_message TYPE tokenbf_v1(4096, 2, 0) GRANULARITY 1\n)\nENGINE = MergeTree\nORDER BY (tm)\nSETTINGS index_granularity_bytes = 50,\nmin_index_granularity_bytes = 40,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0;","fileName":"../ClickHouse/tests/queries/0_stateless/00974_adaptive_granularity_secondary_index.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE another_indexed_table (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"CREATE TABLE t1 AS remote('127.0.0.1', system.one);","fileName":"../ClickHouse/tests/queries/0_stateless/00973_create_table_as_table_function.sql","errors":[]},{"query":"CREATE TABLE t2 AS remote('127.0.0.1', system.numbers);","fileName":"../ClickHouse/tests/queries/0_stateless/00973_create_table_as_table_function.sql","errors":[]},{"query":"CREATE TABLE t3 AS remote('127.0.0.1', numbers(100));","fileName":"../ClickHouse/tests/queries/0_stateless/00973_create_table_as_table_function.sql","errors":[]},{"query":"CREATE TABLE t4 AS numbers(100);","fileName":"../ClickHouse/tests/queries/0_stateless/00973_create_table_as_table_function.sql","errors":[]},{"query":"CREATE TABLE upyachka (x UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00972_desc_table_virtual_columns.sql","errors":[]},{"query":"CREATE TABLE merge_tree (x UInt8) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00971_merge_tree_uniform_read_distribution_and_max_rows_to_read.sql","errors":[]},{"query":"CREATE TABLE ColumnsClauseTest (product_price Int64, product_weight Int16, amount Int64) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00969_columns_clause.sql","errors":[]},{"query":"CREATE TABLE tableFile_00968(number UInt64) ENGINE = File('TSV');","fileName":"../ClickHouse/tests/queries/0_stateless/00968_file_engine_in_subquery.sql","errors":[]},{"query":"CREATE TABLE tableMergeTree_00968(id UInt64) ENGINE = MergeTree() PARTITION BY id ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/00968_file_engine_in_subquery.sql","errors":[]},{"query":"CREATE TABLE dist_00967 (key UInt64) Engine=Distributed('test_shard_localhost', currentDatabase(), underlying_00967);","fileName":"../ClickHouse/tests/queries/0_stateless/00967_insert_into_distributed_different_types.sql","errors":[]},{"query":"CREATE TABLE underlying_00967 (key Nullable(UInt64)) Engine=TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/00967_insert_into_distributed_different_types.sql","errors":[]},{"query":"CREATE TABLE test_startsWith (a String) Engine = MergeTree PARTITION BY tuple() ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/00963_startsWith_force_primary_key.sql","errors":[]},{"query":"CREATE TABLE t_enum8( x Enum('hello' = 1, 'world' = 2) ) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00962_enumNotExect.sql","errors":[]},{"query":"CREATE TABLE t_enum16( x Enum('hello' = 1, 'world' = 128) ) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00962_enumNotExect.sql","errors":[]},{"query":"CREATE TABLE test_00961 (d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = MergeTree PARTITION BY d ORDER BY (a, b)\nSETTINGS index_granularity = 111,\nmin_bytes_for_wide_part = 0,\ncompress_marks = 0,\ncompress_primary_key = 0,\nindex_granularity_bytes = '10Mi',\nratio_of_defaults_for_sparse_serialization = 1,\nreplace_long_file_name_to_hash = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00961_checksums_in_system_parts_columns_table.sql","errors":[]},{"query":"CREATE TABLE mt_table (d Date, key UInt64, data String) ENGINE = MergeTree() PARTITION BY toYYYYMM(d) ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/00961_check_table.sql","errors":[]},{"query":"CREATE TABLE segfault_table (id UInt16 CODEC(Delta(2))) ENGINE MergeTree() order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00957_delta_diff_bug.sql","errors":[]},{"query":"CREATE TABLE mt_with_pk ( d Date DEFAULT '2000-01-01',\nx DateTime,\ny Array(UInt64),\nz UInt64,\nn Nested (Age UInt8, Name String),\nw Int16 DEFAULT 10\n) ENGINE = MergeTree()\nPARTITION BY toYYYYMM(d) ORDER BY (x, z) SETTINGS index_granularity_bytes=10000; -- write_final_mark=1 by default\nSELECT '===test insert===';","fileName":"../ClickHouse/tests/queries/0_stateless/00955_test_final_mark.sql","errors":[]},{"query":"CREATE TABLE alter_attach (x UInt64, p UInt8) ENGINE = MergeTree ORDER BY tuple() PARTITION BY p  SETTINGS index_granularity_bytes=10000, write_final_mark=1;","fileName":"../ClickHouse/tests/queries/0_stateless/00955_test_final_mark.sql","errors":[]},{"query":"CREATE TABLE alter_update_00806 (d Date, e Enum8('foo'=1, 'bar'=2)) Engine = MergeTree PARTITION BY d ORDER BY (d) SETTINGS index_granularity_bytes=10000, write_final_mark=1;","fileName":"../ClickHouse/tests/queries/0_stateless/00955_test_final_mark.sql","errors":[]},{"query":"CREATE TABLE mt_without_pk ( d Date DEFAULT '2000-01-01',\nx DateTime,\ny Array(UInt64),\nz UInt64,\nn Nested (Age UInt8, Name String),\nw Int16 DEFAULT 10\n) ENGINE = MergeTree()\nPARTITION BY toYYYYMM(d) ORDER BY tuple() SETTINGS index_granularity_bytes=10000, write_final_mark=1;","fileName":"../ClickHouse/tests/queries/0_stateless/00955_test_final_mark.sql","errors":[]},{"query":"CREATE TABLE mt_with_small_granularity ( d Date DEFAULT '2000-01-01',\nx DateTime,\ny Array(UInt64),\nz UInt64,\nn Nested (Age UInt8, Name String),\nw Int16 DEFAULT 10\n) ENGINE = MergeTree()\nPARTITION BY toYYYYMM(d) ORDER BY (x, z) SETTINGS index_granularity_bytes=30, min_index_granularity_bytes=20, write_final_mark=1;","fileName":"../ClickHouse/tests/queries/0_stateless/00955_test_final_mark.sql","errors":[]},{"query":"CREATE TABLE moving_sum_num ( k String,\ndt DateTime,\nv UInt64\n)\nENGINE = MergeTree ORDER BY (k, dt);","fileName":"../ClickHouse/tests/queries/0_stateless/00953_moving_functions.sql","errors":[]},{"query":"CREATE TABLE moving_sum_dec ENGINE = Memory AS SELECT k, dt, toDecimal64(v, 2) as v\nFROM moving_sum_num;","fileName":"../ClickHouse/tests/queries/0_stateless/00953_moving_functions.sql","errors":[]},{"query":"CREATE TABLE part_info (t DateTime) ENGINE = MergeTree PARTITION BY toDate(t) ORDER BY (t);","fileName":"../ClickHouse/tests/queries/0_stateless/00952_part_frozen_info.sql","errors":[]},{"query":"CREATE TABLE local_00952 (date Date, value Date MATERIALIZED toDate('2017-08-01')) ENGINE = MergeTree(date, date, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00952_insert_into_distributed_with_materialized_column.sql","errors":[]},{"query":"CREATE TABLE distributed_00952 AS local_00952 ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), local_00952, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/00952_insert_into_distributed_with_materialized_column.sql","errors":[]},{"query":"CREATE TABLE local_00952 (date Date, value Date MATERIALIZED toDate('2017-08-01')) ENGINE = MergeTree(date, date, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00952_insert_into_distributed_with_materialized_column.sql","errors":[]},{"query":"CREATE TABLE distributed_00952 AS local_00952 ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), local_00952, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/00952_insert_into_distributed_with_materialized_column.sql","errors":[]},{"query":"CREATE TABLE local_00952 (date Date, value Date MATERIALIZED toDate('2017-08-01')) ENGINE = MergeTree(date, date, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00952_insert_into_distributed_with_materialized_column.sql","errors":[]},{"query":"CREATE TABLE distributed_00952 AS local_00952 ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), local_00952, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/00952_insert_into_distributed_with_materialized_column.sql","errors":[]},{"query":"CREATE TABLE local_00952 (date Date, value Date MATERIALIZED toDate('2017-08-01')) ENGINE = MergeTree(date, date, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00952_insert_into_distributed_with_materialized_column.sql","errors":[]},{"query":"CREATE TABLE distributed_00952 AS local_00952 ENGINE = Distributed('test_cluster_two_shards', currentDatabase(), local_00952, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/00952_insert_into_distributed_with_materialized_column.sql","errors":[]},{"query":"create table test_entry_distance (Title String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00951_ngram_search.sql","errors":[]},{"query":"CREATE TABLE codecTest ( key      UInt64,\nname     String,\nref_valueF64 Float64,\nref_valueF32 Float32,\nvalueF64 Float64  CODEC(Gorilla),\nvalueF32 Float32  CODEC(Gorilla)\n) Engine = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/00950_test_gorilla_codec.sql","errors":[]},{"query":"CREATE TABLE codecTest ( key      UInt64,\nref_valueU64 UInt64,\nref_valueU32 UInt32,\nref_valueU16 UInt16,\nref_valueU8  UInt8,\nref_valueI64 Int64,\nref_valueI32 Int32,\nref_valueI16 Int16,\nref_valueI8  Int8,\nref_valueDT  DateTime,\nref_valueD   Date,\nvalueU64 UInt64   CODEC(DoubleDelta),\nvalueU32 UInt32   CODEC(DoubleDelta),\nvalueU16 UInt16   CODEC(DoubleDelta),\nvalueU8  UInt8    CODEC(DoubleDelta),\nvalueI64 Int64    CODEC(DoubleDelta),\nvalueI32 Int32    CODEC(DoubleDelta),\nvalueI16 Int16    CODEC(DoubleDelta),\nvalueI8  Int8     CODEC(DoubleDelta),\nvalueDT  DateTime CODEC(DoubleDelta),\nvalueD   Date     CODEC(DoubleDelta)\n) Engine = MergeTree ORDER BY key SETTINGS min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00950_test_double_delta_codec.sql","errors":[]},{"query":"create table ints (key UInt64, i8 Int8, i16 Int16, i32 Int32, i64 Int64, u8 UInt8, u16 UInt16, u32 UInt32, u64 UInt64) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00950_dict_get.sql","errors":[]},{"query":"create table strings (key UInt64, str String) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00950_dict_get.sql","errors":[]},{"query":"create table decimals (key UInt64, d32 Decimal32(4), d64 Decimal64(6), d128 Decimal128(1)) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00950_dict_get.sql","errors":[]},{"query":"CREATE TABLE test_generic_events_all (APIKey UInt8, SessionType UInt8) ENGINE = MergeTree() PARTITION BY APIKey ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00950_default_prewhere.sql","errors":[]},{"query":"CREATE TABLE test_generic_events_all (APIKey UInt8, SessionType UInt8) ENGINE = MergeTree() PARTITION BY APIKey ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00950_default_prewhere.sql","errors":[]},{"query":"CREATE TABLE join_test (number UInt8, value Float32) Engine = Join(ANY, LEFT, number);","fileName":"../ClickHouse/tests/queries/0_stateless/00950_bad_alloc_when_truncate_join_storage.sql","errors":[]},{"query":"CREATE TABLE type_names (n UInt8, s1 String, s2 String, s3 String) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00948_values_interpreter_template.sql","errors":[]},{"query":"CREATE TABLE values_template (d Date, s String, u UInt8, i Int64, f Float64, a Array(UInt8)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00948_values_interpreter_template.sql","errors":[]},{"query":"CREATE TABLE values_template_nullable (d Date, s Nullable(String), u Nullable(UInt8), a Array(Nullable(Float32))) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00948_values_interpreter_template.sql","errors":[]},{"query":"CREATE TABLE values_template_fallback (n UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00948_values_interpreter_template.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS defaults (\nparam1 Float64,\nparam2 Float64,\ntarget Float64,\npredict1 Float64,\npredict2 Float64\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00947_ml_test.sql","errors":[]},{"query":"create table model engine = Memory as select stochasticLinearRegressionState(0.03, 0.00001, 2, 'Nesterov')(target, param1, param2) as state from defaults;","fileName":"../ClickHouse/tests/queries/0_stateless/00947_ml_test.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS grouptest (\nuser_id UInt32,\np1 Float64,\np2 Float64,\ntarget Float64\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00947_ml_test.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS defaults (\nparam1 Float64,\nparam2 Float64,\nparam3 Float64,\nparam4 Float64,\nparam5 Float64,\nparam6 Float64,\nparam7 Float64,\ntarget Float64,\npredict1 Float64,\npredict2 Float64,\npredict3 Float64,\npredict4 Float64,\npredict5 Float64,\npredict6 Float64,\npredict7 Float64\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00946_ml_test.sql","errors":[]},{"query":"create table model engine = Memory as select stochasticLinearRegressionState(0.1, 0.0, 5, 'SGD')(target, param1, param2, param3, param4, param5, param6, param7) as state from defaults;","fileName":"../ClickHouse/tests/queries/0_stateless/00946_ml_test.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS defaults (\nparam1 Float64,\nparam2 Float64,\ntarget Float64,\npredict1 Float64,\npredict2 Float64\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00945_ml_test.sql","errors":[]},{"query":"create table model engine = Memory as select stochasticLogisticRegressionState(0.1, 0.0, 1.0, 'SGD')(target, param1, param2) as state from defaults;","fileName":"../ClickHouse/tests/queries/0_stateless/00945_ml_test.sql","errors":[]},{"query":"CREATE TABLE single_column_bloom_filter (u64 UInt64, i32 Int32, i64 UInt64, INDEX idx (i32) TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree() ORDER BY u64 SETTINGS index_granularity = 6, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00945_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_types_test (order_key   UInt64, i8 Int8, i16 Int16, i32 Int32, i64 Int64, u8 UInt8, u16 UInt16, u32 UInt32, u64 UInt64, f32 Float32, f64 Float64, date Date, date_time DateTime('Asia/Istanbul'), str String, fixed_string FixedString(5), INDEX idx (i8, i16, i32, i64, u8, u16, u32, u64, f32, f64, date, date_time, str, fixed_string) TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree() ORDER BY order_key SETTINGS index_granularity = 6, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00945_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_array_types_test (order_key   Array(UInt64), i8 Array(Int8), i16 Array(Int16), i32 Array(Int32), i64 Array(Int64), u8 Array(UInt8), u16 Array(UInt16), u32 Array(UInt32), u64 Array(UInt64), f32 Array(Float32), f64 Array(Float64), date Array(Date), date_time Array(DateTime('Asia/Istanbul')), str Array(String), fixed_string Array(FixedString(5)), INDEX idx (i8, i16, i32, i64, u8, u16, u32, u64, f32, f64, date, date_time, str, fixed_string) TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree() ORDER BY order_key SETTINGS index_granularity = 6, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00945_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_null_types_test (order_key UInt64, i8 Nullable(Int8), i16 Nullable(Int16), i32 Nullable(Int32), i64 Nullable(Int64), u8 Nullable(UInt8), u16 Nullable(UInt16), u32 Nullable(UInt32), u64 Nullable(UInt64), f32 Nullable(Float32), f64 Nullable(Float64), date Nullable(Date), date_time Nullable(DateTime('Asia/Istanbul')), str Nullable(String), fixed_string Nullable(FixedString(5)), INDEX idx (i8, i16, i32, i64, u8, u16, u32, u64, f32, f64, date, date_time, str, fixed_string) TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree() ORDER BY order_key SETTINGS index_granularity = 6, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00945_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_lc_null_types_test (order_key UInt64, str LowCardinality(Nullable(String)), fixed_string LowCardinality(Nullable(FixedString(5))), INDEX idx (str, fixed_string) TYPE bloom_filter GRANULARITY 1) ENGINE = MergeTree() ORDER BY order_key SETTINGS index_granularity = 6, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00945_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_array_lc_null_types_test ( order_key   Array(LowCardinality(Nullable(UInt64))),\ni8 Array(LowCardinality(Nullable(Int8))),\ni16 Array(LowCardinality(Nullable(Int16))),\ni32 Array(LowCardinality(Nullable(Int32))),\ni64 Array(LowCardinality(Nullable(Int64))),\nu8 Array(LowCardinality(Nullable(UInt8))),\nu16 Array(LowCardinality(Nullable(UInt16))),\nu32 Array(LowCardinality(Nullable(UInt32))),\nu64 Array(LowCardinality(Nullable(UInt64))),\nf32 Array(LowCardinality(Nullable(Float32))),\nf64 Array(LowCardinality(Nullable(Float64))),\ndate Array(LowCardinality(Nullable(Date))),\ndate_time Array(LowCardinality(Nullable(DateTime('Asia/Istanbul')))),\nstr Array(LowCardinality(Nullable(String))),\nfixed_string Array(LowCardinality(Nullable(FixedString(5)))),\nINDEX idx (i8, i16, i32, i64, u8, u16, u32, u64, f32, f64, date, date_time, str, fixed_string)\nTYPE bloom_filter GRANULARITY 1)\nENGINE = MergeTree() ORDER BY order_key SETTINGS index_granularity = 6, index_granularity_bytes = '10Mi', allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00945_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_array_offsets_lc_str (order_key int, str Array(LowCardinality(String)), INDEX idx str TYPE bloom_filter(1.) GRANULARITY 1024) ENGINE = MergeTree() ORDER BY order_key SETTINGS index_granularity = 1024, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00945_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_array_offsets_str (order_key int, str Array(String), INDEX idx str TYPE bloom_filter(1.) GRANULARITY 1024) ENGINE = MergeTree() ORDER BY order_key SETTINGS index_granularity = 1024, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00945_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE bloom_filter_array_offsets_i (order_key int, i Array(int), INDEX idx i TYPE bloom_filter(1.) GRANULARITY 1024) ENGINE = MergeTree() ORDER BY order_key SETTINGS index_granularity = 1024, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00945_bloom_filter_index.sql","errors":[]},{"query":"CREATE TABLE test_bf_indexOf ( \\`id\\` int, \\`ary\\` Array(LowCardinality(Nullable(String))), INDEX idx_ary ary TYPE bloom_filter(0.01) GRANULARITY 1) ENGINE = MergeTree() ORDER BY id SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00945_bloom_filter_index.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_bf_indexOf ( \\'","startColumn":31,"startLine":1,"endColumn":32,"endLine":1}]},{"query":"CREATE TABLE test_bf_cast (c Int32, INDEX x1 (c) type bloom_filter) ENGINE = MergeTree ORDER BY c AS SELECT 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00945_bloom_filter_index.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE test_bf_cast (c Int32, INDEX x1 (c) type bloom_filter)'","startColumn":66,"startLine":1,"endColumn":67,"endLine":1}]},{"query":"CREATE TABLE defaults (\nparam1 Float64,\nparam2 Float64,\ntarget Float64,\npredict1 Float64,\npredict2 Float64\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00944_ml_test.sql","errors":[]},{"query":"create table model engine = Memory as select stochasticLinearRegressionState(0.1, 0.0, 2, 'SGD')(target, param1, param2) as state from defaults;","fileName":"../ClickHouse/tests/queries/0_stateless/00944_ml_test.sql","errors":[]},{"query":"CREATE TABLE min_max_with_nullable_string ( t DateTime,\nnullable_str Nullable(String),\nINDEX nullable_str_min_max nullable_str TYPE minmax GRANULARITY 1\n) ENGINE = MergeTree ORDER BY (t);","fileName":"../ClickHouse/tests/queries/0_stateless/00944_minmax_null.sql","errors":[]},{"query":"CREATE TABLE src (x UInt8) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00943_mv_rename_without_inner_table.sql","errors":[]},{"query":"CREATE TABLE dst (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00943_mv_rename_without_inner_table.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW original_mv TO dst AS SELECT * FROM src;","fileName":"../ClickHouse/tests/queries/0_stateless/00943_mv_rename_without_inner_table.sql","errors":[]},{"query":"CREATE TABLE src_00942 (x UInt8) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00942_mv_rename_table.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW view_table_00942 Engine = Memory AS SELECT * FROM src_00942;","fileName":"../ClickHouse/tests/queries/0_stateless/00942_mv_rename_table.sql","errors":[]},{"query":"create table tab (a UInt32, b UInt32, c UInt32, d UInt32) engine = MergeTree order by ((a + b) * c, sin(a / b));","fileName":"../ClickHouse/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.sql","errors":[]},{"query":"create table tab2 (x DateTime, y UInt32, z UInt32) engine = MergeTree order by (x, y);","fileName":"../ClickHouse/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.sql","errors":[]},{"query":"create table tab3 (a UInt32, b UInt32, c UInt32, d UInt32) engine = MergeTree order by ((a + b) * c, sin(a / b));","fileName":"../ClickHouse/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.sql","errors":[]},{"query":"create table tab4 (a UInt32, b UInt32, c UInt32, d UInt32) engine = MergeTree order by sin(a / b);","fileName":"../ClickHouse/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.sql","errors":[]},{"query":"create table tab5 (a UInt32, b UInt32, c UInt32, d UInt32) engine = MergeTree order by (a + b) * c;","fileName":"../ClickHouse/tests/queries/0_stateless/00940_order_by_read_in_order_query_plan.sql","errors":[]},{"query":"CREATE TABLE pk_order(a UInt64, b UInt64, c UInt64, d UInt64) ENGINE=MergeTree() ORDER BY (a, b);","fileName":"../ClickHouse/tests/queries/0_stateless/00940_order_by_read_in_order.sql","errors":[]},{"query":"CREATE TABLE pk_order (d DateTime, a Int32, b Int32) ENGINE = MergeTree ORDER BY (d, a) PARTITION BY toDate(d) SETTINGS index_granularity=1;","fileName":"../ClickHouse/tests/queries/0_stateless/00940_order_by_read_in_order.sql","errors":[]},{"query":"CREATE TABLE pk_order (a Int, b Int) ENGINE = MergeTree ORDER BY (a / b);","fileName":"../ClickHouse/tests/queries/0_stateless/00940_order_by_read_in_order.sql","errors":[]},{"query":"create table max_parts_in_total (x UInt64) ENGINE = MergeTree PARTITION BY x ORDER BY x SETTINGS max_parts_in_total = 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00940_max_parts_in_total.sql","errors":[]},{"query":"CREATE TABLE nullt (c1 Nullable(UInt32), c2 Nullable(String))ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00939_test_null_in.sql","errors":[]},{"query":"create table limit_by(id Int, val Int) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00939_limit_by_offset.sql","errors":[]},{"query":"CREATE TABLE retention_test(date Date, uid Int32)ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00938_test_retention_function.sql","errors":[]},{"query":"CREATE TABLE ipv6_range(ip IPv6, cidr UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00938_ipv6_cidr_range.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS defaults (\nparam1 Float64,\nparam2 Float64,\ntarget Float64,\npredict1 Float64,\npredict2 Float64\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00938_dataset_test.sql","errors":[]},{"query":"create table model engine = Memory as select stochasticLinearRegressionState(0.03, 0.00001, 2, 'Momentum')(target, param1, param2) as state from defaults;","fileName":"../ClickHouse/tests/queries/0_stateless/00938_dataset_test.sql","errors":[]},{"query":"CREATE TABLE ipv4_range(ip IPv4, cidr UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00937_ipv4_cidr_range.sql","errors":[]},{"query":"CREATE TABLE samples (key UInt32, value UInt32) ENGINE = MergeTree() ORDER BY key PRIMARY KEY key;","fileName":"../ClickHouse/tests/queries/0_stateless/00936_function_result_with_operator_in.sql","errors":[]},{"query":"CREATE TABLE table1 (str1 String, str2 String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00936_crc_functions.sql","errors":[]},{"query":"create table ttl_00933_2 (d DateTime, a Int default 111 ttl d + interval 1 DAY) engine = MergeTree order by tuple() partition by toDayOfMonth(d);","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_with_default.sql","errors":[]},{"query":"create table ttl_00933_2 (d DateTime, a Int, b default a * 2 ttl d + interval 1 DAY) engine = MergeTree order by tuple() partition by toDayOfMonth(d);","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_with_default.sql","errors":[]},{"query":"create table ttl_00933_2 (d DateTime, a Int, b default 222 ttl d + interval 1 DAY) engine = MergeTree order by tuple() partition by toDayOfMonth(d);","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_with_default.sql","errors":[]},{"query":"create table ttl_00933_1 (d DateTime, a Int ttl d + interval 1 second, b Int ttl d + interval 1 second) engine = MergeTree order by tuple() partition by toMinute(d) settings min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_simple.sql","errors":[]},{"query":"create table ttl_00933_1 (d DateTime, a Int, b Int) engine = MergeTree order by toDate(d) partition by tuple() ttl d + interval 1 second\nsettings remove_empty_parts = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_simple.sql","errors":[]},{"query":"create table ttl_00933_1 (d DateTime, a Int ttl d + interval 1 DAY) engine = MergeTree order by tuple() partition by toDayOfMonth(d) settings min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_simple.sql","errors":[]},{"query":"create table ttl_00933_1 (d DateTime, a Int) engine = MergeTree order by tuple() partition by tuple() ttl d + interval 1 day\nsettings remove_empty_parts = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_simple.sql","errors":[]},{"query":"create table ttl_00933_1 (d Date, a Int) engine = MergeTree order by a partition by toDayOfMonth(d) ttl d + interval 1 day\nsettings remove_empty_parts = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_simple.sql","errors":[]},{"query":"create table ttl_00933_1 (b Int, a Int ttl '2000-10-10 00:00:00'::DateTime) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_simple.sql","errors":[{"message":"no viable alternative at input 'create table ttl_00933_1 (b Int, a Int ttl '2000-10-10 00:00:00':'","startColumn":64,"startLine":1,"endColumn":65,"endLine":1}]},{"query":"create table ttl_00933_1 (b Int, a Int ttl '2100-10-10 00:00:00'::DateTime) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_simple.sql","errors":[{"message":"no viable alternative at input 'create table ttl_00933_1 (b Int, a Int ttl '2100-10-10 00:00:00':'","startColumn":64,"startLine":1,"endColumn":65,"endLine":1}]},{"query":"create table ttl_00933_1 (b Int, a Int ttl '2000-10-10'::Date) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_simple.sql","errors":[{"message":"no viable alternative at input 'create table ttl_00933_1 (b Int, a Int ttl '2000-10-10':'","startColumn":55,"startLine":1,"endColumn":56,"endLine":1}]},{"query":"create table ttl_00933_1 (b Int, a Int ttl '2100-10-10'::Date) engine = MergeTree order by tuple() partition by tuple() settings min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_simple.sql","errors":[{"message":"no viable alternative at input 'create table ttl_00933_1 (b Int, a Int ttl '2100-10-10':'","startColumn":55,"startLine":1,"endColumn":56,"endLine":1}]},{"query":"create table ttl_00933_1 (d DateTime ttl d) engine = MergeTree order by tuple() partition by toSecond(d); -- { serverError ILLEGAL_COLUMN} create table ttl_00933_1 (d DateTime, a Int ttl d) engine = MergeTree order by a partition by toSecond(d); -- { serverError ILLEGAL_COLUMN}\ncreate table ttl_00933_1 (d DateTime, a Int ttl 2 + 2) engine = MergeTree order by tuple() partition by toSecond(d); -- { serverError BAD_TTL_EXPRESSION }\ncreate table ttl_00933_1 (d DateTime, a Int ttl d - d) engine = MergeTree order by tuple() partition by toSecond(d); -- { serverError BAD_TTL_EXPRESSION }\ncreate table ttl_00933_1 (d DateTime, a Int  ttl d + interval 1 day) engine = Log; -- { serverError BAD_ARGUMENTS }\ncreate table ttl_00933_1 (d DateTime, a Int) engine = Log ttl d + interval 1 day; -- { serverError BAD_ARGUMENTS }\ndrop table if exists ttl_00933_1;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_ttl_simple.sql","errors":[]},{"query":"CREATE TABLE reserved_word_table (\\`index\\` UInt8) ENGINE = MergeTree ORDER BY \\`index\\`;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_reserved_word.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE reserved_word_table (\\'","startColumn":34,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"create table ttl (d Date, a Int) engine = MergeTree order by a partition by toDayOfMonth(d) settings remove_empty_parts = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_alter_ttl.sql","errors":[]},{"query":"create table ttl (d Date, a Int) engine = MergeTree order by tuple() partition by toDayOfMonth(d) settings remove_empty_parts = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00933_alter_ttl.sql","errors":[]},{"query":"create table geohash_test_data ( \tlatitude  Float64,\n\tlongitude Float64,\n\tencoded   String\n) engine = MergeTree order by (latitude, longitude, encoded);","fileName":"../ClickHouse/tests/queries/0_stateless/00932_geohash_support.sql","errors":[]},{"query":"create table test_in (a LowCardinality(String)) Engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/00931_low_cardinality_set_index_in_key_condition.sql","errors":[]},{"query":"CREATE TABLE lc_00931 ( key UInt64,\nvalue Array(LowCardinality(String)))\nENGINE = MergeTree\nORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/00931_low_cardinality_read_with_empty_array.sql","errors":[]},{"query":"CREATE TABLE lc (\\`date\\` Date, \\`name\\` LowCardinality(Nullable(String)), \\`clicks\\` Nullable(Int32)) ENGINE = MergeTree() ORDER BY date SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/00931_low_cardinality_nullable_aggregate_function_type.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE lc (\\'","startColumn":17,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE partitions (x UInt64) ENGINE = MergeTree ORDER BY x PARTITION BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00930_max_partitions_per_insert_block.sql","errors":[]},{"query":"create table array_intersect (date Date, arr Array(UInt8)) engine=MergeTree partition by date order by date;","fileName":"../ClickHouse/tests/queries/0_stateless/00930_arrayIntersect.sql","errors":[]},{"query":"CREATE TABLE md(key UInt32, t DateTime, bid Float64, ask Float64) ENGINE = MergeTree() ORDER BY (key, t);","fileName":"../ClickHouse/tests/queries/0_stateless/00927_asof_joins.sql","errors":[]},{"query":"CREATE TABLE tv(key UInt32, t DateTime, tv Float64) ENGINE = MergeTree() ORDER BY (key, t);","fileName":"../ClickHouse/tests/queries/0_stateless/00927_asof_joins.sql","errors":[]},{"query":"CREATE TABLE A(k UInt32, t DateTime, a Float64) ENGINE = MergeTree() ORDER BY (k, t);","fileName":"../ClickHouse/tests/queries/0_stateless/00927_asof_join_noninclusive.sql","errors":[]},{"query":"CREATE TABLE tvs(k UInt32, t UInt32, tv UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00927_asof_join_long.sql","errors":[]},{"query":"CREATE TABLE A(k UInt32, t UInt32, a UInt64) ENGINE = MergeTree() ORDER BY (k, t);","fileName":"../ClickHouse/tests/queries/0_stateless/00927_asof_join_correct_bt.sql","errors":[]},{"query":"CREATE TABLE B1(k UInt32, t UInt32, b UInt64) ENGINE = MergeTree() ORDER BY (k, t);","fileName":"../ClickHouse/tests/queries/0_stateless/00927_asof_join_correct_bt.sql","errors":[]},{"query":"CREATE TABLE B2(t UInt32, k UInt32, b UInt64) ENGINE = MergeTree() ORDER BY (k, t);","fileName":"../ClickHouse/tests/queries/0_stateless/00927_asof_join_correct_bt.sql","errors":[]},{"query":"CREATE TABLE B3(k UInt32, b UInt64, t UInt32) ENGINE = MergeTree() ORDER BY (k, t);","fileName":"../ClickHouse/tests/queries/0_stateless/00927_asof_join_correct_bt.sql","errors":[]},{"query":"CREATE TABLE zero_rows_per_granule1 ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00926/zero_rows_in_granule', '1') PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 20, min_index_granularity_bytes = 10, write_final_mark = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_zookeeper_adaptive_index_granularity_replicated_merge_tree_long.sql","errors":[]},{"query":"CREATE TABLE zero_rows_per_granule2 ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00926/zero_rows_in_granule', '2') PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 20, min_index_granularity_bytes = 10, write_final_mark = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_zookeeper_adaptive_index_granularity_replicated_merge_tree_long.sql","errors":[]},{"query":"CREATE TABLE four_rows_per_granule1 ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00926/four_rows_in_granule', '1') PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 110, min_index_granularity_bytes = 100, write_final_mark = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_zookeeper_adaptive_index_granularity_replicated_merge_tree_long.sql","errors":[]},{"query":"CREATE TABLE four_rows_per_granule2 ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00926/four_rows_in_granule', '2') PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 110, min_index_granularity_bytes = 100 ,write_final_mark = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_zookeeper_adaptive_index_granularity_replicated_merge_tree_long.sql","errors":[]},{"query":"CREATE TABLE adaptive_granularity_alter1 ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00926/adaptive_granularity_alter', '1') PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 110, min_index_granularity_bytes = 100, write_final_mark = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_zookeeper_adaptive_index_granularity_replicated_merge_tree_long.sql","errors":[]},{"query":"CREATE TABLE adaptive_granularity_alter2 ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00926/adaptive_granularity_alter', '2') PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 110, min_index_granularity_bytes = 100, write_final_mark = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_zookeeper_adaptive_index_granularity_replicated_merge_tree_long.sql","errors":[]},{"query":"CREATE TABLE table1 (lat Float64, lon Float64, resolution UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_geo_to_h3.sql","errors":[]},{"query":"CREATE TABLE zero_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64,\nSign Int8,\nVersion UInt8\n) ENGINE VersionedCollapsingMergeTree(Sign, Version) PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes = 20,\nmin_index_granularity_bytes = 10,\nwrite_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE four_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64,\nSign Int8,\nVersion UInt8\n) ENGINE VersionedCollapsingMergeTree(Sign, Version) PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes=120,\nmin_index_granularity_bytes = 100,\nwrite_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE six_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64,\nSign Int8,\nVersion UInt8\n) ENGINE VersionedCollapsingMergeTree(Sign, Version) PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes=170,\nmin_index_granularity_bytes = 100,\nwrite_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE zero_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE ReplacingMergeTree() PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes=20,\nmin_index_granularity_bytes = 10,\nwrite_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_replacing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE two_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE ReplacingMergeTree() PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes = 40,\nmin_index_granularity_bytes = 10,\nwrite_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_replacing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE four_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE ReplacingMergeTree() PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes = 110,\nmin_index_granularity_bytes=100,\nwrite_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_replacing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE huge_granularity_small_blocks ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE ReplacingMergeTree() PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes=1000000, write_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_replacing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE adaptive_granularity_alter ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE ReplacingMergeTree() PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes=110,\nmin_index_granularity_bytes=40,\nwrite_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_replacing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE pk (d Date DEFAULT '2000-01-01', x DateTime, y UInt64, z UInt64) ENGINE = MergeTree() PARTITION BY d ORDER BY (toStartOfMinute(x, 'UTC'), y, z) SETTINGS index_granularity_bytes=19, min_index_granularity_bytes=9, write_final_mark = 0; -- one row granule INSERT INTO pk (x, y, z) VALUES (1, 11, 1235), (2, 11, 4395), (3, 22, 3545), (4, 22, 6984), (5, 33, 4596), (61, 11, 4563), (62, 11, 4578), (63, 11, 3572), (64, 22, 5786), (65, 22, 5786), (66, 22, 2791), (67, 22, 2791), (121, 33, 2791), (122, 33, 2791), (123, 33, 1235), (124, 44, 4935), (125, 44, 4578), (126, 55, 5786), (127, 55, 2791), (128, 55, 1235);","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_pk.sql","errors":[]},{"query":"CREATE TABLE merge_tree (x UInt32) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity_bytes = 4, min_index_granularity_bytes=1, write_final_mark = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_pk.sql","errors":[]},{"query":"CREATE TABLE large_alter_table_00926 ( somedate Date CODEC(ZSTD, ZSTD, ZSTD(12), LZ4HC(12)),\nid UInt64 CODEC(LZ4, ZSTD, NONE, LZ4HC),\ndata String CODEC(ZSTD(2), LZ4HC, NONE, LZ4, LZ4)\n) ENGINE = MergeTree() PARTITION BY somedate ORDER BY id SETTINGS min_index_granularity_bytes=30, write_final_mark = 0, min_bytes_for_wide_part = '10M', min_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_pk.sql","errors":[]},{"query":"CREATE TABLE store_of_hash_00926 (hash UInt64) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_pk.sql","errors":[]},{"query":"CREATE TABLE zero_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE MergeTree() PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 20, min_index_granularity_bytes = 10, write_final_mark = 0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_merge_tree.sql","errors":[]},{"query":"CREATE TABLE two_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE MergeTree() PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 40, min_index_granularity_bytes = 10, write_final_mark = 0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_merge_tree.sql","errors":[]},{"query":"CREATE TABLE four_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE MergeTree() PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 110, min_index_granularity_bytes = 10, write_final_mark = 0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_merge_tree.sql","errors":[]},{"query":"CREATE TABLE huge_granularity_small_blocks ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE MergeTree() PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 1000000, write_final_mark = 0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_merge_tree.sql","errors":[]},{"query":"CREATE TABLE adaptive_granularity_alter ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE MergeTree() PARTITION BY toYYYYMM(p) ORDER BY k SETTINGS index_granularity_bytes = 110, min_index_granularity_bytes = 100, write_final_mark = 0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_merge_tree.sql","errors":[]},{"query":"CREATE TABLE zero_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE MergeTree() PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes = 20,\nmin_index_granularity_bytes = 10,\nwrite_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_merge_tree.sql","errors":[]},{"query":"CREATE TABLE two_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE MergeTree() PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes=40,\nmin_index_granularity_bytes = 10,\nwrite_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_merge_tree.sql","errors":[]},{"query":"CREATE TABLE four_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE MergeTree() PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes = 110,\nmin_index_granularity_bytes = 10,\nwrite_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_merge_tree.sql","errors":[]},{"query":"CREATE TABLE huge_granularity_small_blocks ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE MergeTree() PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes=1000000, write_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_merge_tree.sql","errors":[]},{"query":"CREATE TABLE adaptive_granularity_alter ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64\n) ENGINE MergeTree() PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes=110,\nmin_index_granularity_bytes = 100,\nwrite_final_mark = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_merge_tree.sql","errors":[]},{"query":"CREATE TABLE zero_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64,\nSign Int8\n) ENGINE CollapsingMergeTree(Sign) PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes=20, min_index_granularity_bytes=10, write_final_mark = 0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_collapsing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE four_rows_per_granule ( p Date,\nk UInt64,\nv1 UInt64,\nv2 Int64,\nSign Int8\n) ENGINE CollapsingMergeTree(Sign) PARTITION BY toYYYYMM(p) ORDER BY k\nSETTINGS index_granularity_bytes=110, min_index_granularity_bytes=100, write_final_mark = 0,\nmin_bytes_for_wide_part = 0,\nmin_rows_for_wide_part = 0,\nenable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0;","fileName":"../ClickHouse/tests/queries/0_stateless/00926_adaptive_index_granularity_collapsing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE ANIMAL ( ANIMAL Nullable(String) ) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00917_multiple_joins_denny_crane.sql","errors":[]},{"query":"CREATE OR REPLACE VIEW t (number UInt64) AS SELECT number FROM system.numbers;","fileName":"../ClickHouse/tests/queries/0_stateless/00916_create_or_replace_view.sql","errors":[]},{"query":"CREATE OR REPLACE VIEW t AS SELECT number+1 AS next_number FROM system.numbers;","fileName":"../ClickHouse/tests/queries/0_stateless/00916_create_or_replace_view.sql","errors":[]},{"query":"CREATE TABLE add_materialized_column_after (x UInt32, z UInt64) ENGINE MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00916_add_materialized_column_after.sql","errors":[]},{"query":"create table simple (id UInt64,val SimpleAggregateFunction(sum,Double)) engine=AggregatingMergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/00915_simple_aggregate_function.sql","errors":[]},{"query":"create table simple ( id UInt64,\nnullable_str SimpleAggregateFunction(anyLast,Nullable(String)),\nlow_str SimpleAggregateFunction(anyLast,LowCardinality(Nullable(String))),\nip SimpleAggregateFunction(anyLast,IPv4),\nstatus SimpleAggregateFunction(groupBitOr, UInt32),\ntup SimpleAggregateFunction(sumMap, Tuple(Array(Int32), Array(Int64))),\ntup_min SimpleAggregateFunction(minMap, Tuple(Array(Int32), Array(Int64))),\ntup_max SimpleAggregateFunction(maxMap, Tuple(Array(Int32), Array(Int64))),\narr SimpleAggregateFunction(groupArrayArray, Array(Int32)),\nuniq_arr SimpleAggregateFunction(groupUniqArrayArray, Array(Int32))\n) engine=AggregatingMergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/00915_simple_aggregate_function.sql","errors":[]},{"query":"create table with_overflow ( id UInt64,\ns SimpleAggregateFunction(sumWithOverflow, UInt8)\n) engine AggregatingMergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/00915_simple_aggregate_function.sql","errors":[]},{"query":"CREATE TABLE table1 (A String, B String, ts DateTime) ENGINE = MergeTree PARTITION BY toStartOfDay(ts)  ORDER BY (ts, A, B);","fileName":"../ClickHouse/tests/queries/0_stateless/00914_join_bgranvea.sql","errors":[]},{"query":"CREATE TABLE table2 (B String, ts DateTime) ENGINE = MergeTree PARTITION BY toStartOfDay(ts) ORDER BY (ts, B);","fileName":"../ClickHouse/tests/queries/0_stateless/00914_join_bgranvea.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t (x UInt64);","fileName":"../ClickHouse/tests/queries/0_stateless/00913_many_threads.sql","errors":[]},{"query":"CREATE TABLE alter_compression_codec1 ( somedate Date CODEC(LZ4),\nid UInt64 CODEC(NONE)\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00910/'||currentDatabase()||'alter_compression_codecs/{shard}', '1_{replica}') PARTITION BY somedate ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/00910_zookeeper_test_alter_compression_codecs_long.sql","errors":[]},{"query":"CREATE TABLE alter_compression_codec2 ( somedate Date CODEC(LZ4),\nid UInt64 CODEC(NONE)\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00910/'||currentDatabase()||'alter_compression_codecs/{shard}', '2_{replica}') PARTITION BY somedate ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/00910_zookeeper_test_alter_compression_codecs_long.sql","errors":[]},{"query":"CREATE TABLE compression_codec_replicated1( id UInt64 CODEC(LZ4),\ndata String CODEC(ZSTD),\nddd Date CODEC(NONE),\nsomenum Float64 CODEC(ZSTD(2)),\nsomestr FixedString(3) CODEC(LZ4HC(7)),\nothernum Int64 CODEC(Delta)\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00910/compression_codec_replicated', '1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00910_zookeeper_custom_compression_codecs_replicated_long.sql","errors":[]},{"query":"CREATE TABLE compression_codec_replicated2( id UInt64 CODEC(LZ4),\ndata String CODEC(ZSTD),\nddd Date CODEC(NONE),\nsomenum Float64 CODEC(ZSTD(2)),\nsomestr FixedString(3) CODEC(LZ4HC(7)),\nothernum Int64 CODEC(Delta)\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00910/compression_codec_replicated', '2') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00910_zookeeper_custom_compression_codecs_replicated_long.sql","errors":[]},{"query":"CREATE TABLE compression_codec_multiple_replicated1 ( id UInt64 CODEC(LZ4, ZSTD, NONE, LZ4HC, Delta(4)),\ndata String CODEC(ZSTD(2), NONE, Delta(2), LZ4HC, LZ4, LZ4, Delta(8)),\nddd Date CODEC(NONE, NONE, NONE, Delta(1), LZ4, ZSTD, LZ4HC, LZ4HC),\nsomenum Float64 CODEC(Delta(4), LZ4, LZ4, ZSTD(2), LZ4HC(5), ZSTD(3), ZSTD)\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00910/compression_codec_multiple', '1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00910_zookeeper_custom_compression_codecs_replicated_long.sql","errors":[]},{"query":"CREATE TABLE compression_codec_multiple_replicated2 ( id UInt64 CODEC(LZ4, ZSTD, NONE, LZ4HC, Delta(4)),\ndata String CODEC(ZSTD(2), NONE, Delta(2), LZ4HC, LZ4, LZ4, Delta(8)),\nddd Date CODEC(NONE, NONE, NONE, Delta(1), LZ4, ZSTD, LZ4HC, LZ4HC),\nsomenum Float64 CODEC(Delta(4), LZ4, LZ4, ZSTD(2), LZ4HC(5), ZSTD(3), ZSTD)\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00910/compression_codec_multiple', '2') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00910_zookeeper_custom_compression_codecs_replicated_long.sql","errors":[]},{"query":"CREATE TABLE compression_codec_multiple_more_types_replicated ( id Decimal128(13) CODEC(ZSTD, LZ4, ZSTD, ZSTD, Delta(2), Delta(4), Delta(1), LZ4HC),\ndata FixedString(12) CODEC(ZSTD, ZSTD, Delta(1), Delta(1), Delta(1), NONE, NONE, NONE, LZ4HC),\nddd Nested (age UInt8, Name String) CODEC(LZ4, LZ4HC, NONE, NONE, NONE, ZSTD, Delta(8))\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00910/compression_codec_multiple_more_types_replicated', '1') ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00910_zookeeper_custom_compression_codecs_replicated_long.sql","errors":[]},{"query":"CREATE TABLE compression_codec_multiple_with_key_replicated ( somedate Date CODEC(ZSTD, ZSTD, ZSTD(12), LZ4HC(12), Delta, Delta),\nid UInt64 CODEC(LZ4, ZSTD, Delta, NONE, LZ4HC, Delta),\ndata String CODEC(ZSTD(2), Delta(1), LZ4HC, NONE, LZ4, LZ4)\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00910/compression_codec_multiple_with_key_replicated', '1') PARTITION BY somedate ORDER BY id SETTINGS index_granularity = 2, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00910_zookeeper_custom_compression_codecs_replicated_long.sql","errors":[]},{"query":"CREATE TABLE sensor_value ( received_at DateTime('Asia/Istanbul'),\ndevice_id UUID,\nsensor_id UUID,\nvalue Nullable(Decimal(18, 4)),\nlow_warning Nullable(Decimal(18, 4)),\nlow_critical Nullable(Decimal(18, 4)),\nhigh_warning Nullable(Decimal(18, 4)),\nhigh_critical Nullable(Decimal(18, 4))\n) ENGINE = MergeTree\nPARTITION BY toDate(received_at)\nORDER BY (device_id, sensor_id);","fileName":"../ClickHouse/tests/queries/0_stateless/00910_decimal_group_array_crash_3783.sql","errors":[]},{"query":"CREATE TABLE union1 ( date Date, a Int32, b Int32, c Int32, d Int32) ENGINE = MergeTree(date, (a, date), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00910_crash_when_distributed_modify_order_by.sql","errors":[]},{"query":"CREATE TABLE union2 ( date Date, a Int32, b Int32, c Int32, d Int32) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 'union1');","fileName":"../ClickHouse/tests/queries/0_stateless/00910_crash_when_distributed_modify_order_by.sql","errors":[]},{"query":"CREATE TABLE merge_tree_table1 (\\`x\\` UInt32) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00910_buffer_prewhere_different_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE merge_tree_table1 (\\'","startColumn":32,"startLine":1,"endColumn":33,"endLine":1}]},{"query":"CREATE TABLE buffer_table1__fuzz_24 (\\`s\\` Nullable(Int128), \\`x\\` Nullable(FixedString(17))) ENGINE = Buffer(currentDatabase(), 'merge_tree_table1', 16, 10, 60, 10, 1000, 1048576, 2097152);","fileName":"../ClickHouse/tests/queries/0_stateless/00910_buffer_prewhere_different_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE buffer_table1__fuzz_24 (\\'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE TABLE buffer_table1__fuzz_28 (\\`x\\` Nullable(UInt32)) ENGINE = Buffer(currentDatabase(), 'merge_tree_table1', 16, 10, 60, 10, 1000, 1048576, 2097152);","fileName":"../ClickHouse/tests/queries/0_stateless/00910_buffer_prewhere_different_types.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE buffer_table1__fuzz_28 (\\'","startColumn":37,"startLine":1,"endColumn":38,"endLine":1}]},{"query":"CREATE ROW POLICY rp ON buffer_table1__fuzz_28 FOR SELECT USING x = toLowCardinality(1) TO default;","fileName":"../ClickHouse/tests/queries/0_stateless/00910_buffer_prewhere_different_types.sql","errors":[{"message":"no viable alternative at input 'CREATE ROW'","startColumn":7,"startLine":1,"endColumn":10,"endLine":1}]},{"query":"CREATE TABLE mt (uid UInt64, ts DateTime, val Float64) ENGINE = MergeTree PARTITION BY toDate(ts) ORDER BY (uid, ts);","fileName":"../ClickHouse/tests/queries/0_stateless/00910_buffer_prewhere.sql","errors":[]},{"query":"CREATE TABLE buf as mt ENGINE = Buffer({CLICKHOUSE_DATABASE:Identifier}, mt, 2, 10, 60, 10000, 100000, 1000000, 10000000);","fileName":"../ClickHouse/tests/queries/0_stateless/00910_buffer_prewhere.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE buf as mt ENGINE = Buffer({'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"create table test_distance (Title String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00909_ngram_distance.sql","errors":[]},{"query":"CREATE TABLE arrays_test (a1 Array(UInt16), a2 Array(UInt16), a3 Array(Array(UInt16)), a4 Array(Array(UInt16)) ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00909_arrayEnumerateUniq.sql","errors":[]},{"query":"CREATE TABLE arrays_test (a3 Array(Array(UInt8)), a4 Array(Array(UInt32)) ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00909_arrayEnumerateUniq.sql","errors":[]},{"query":"CREATE TABLE arrays_test (a1 Array(UInt8), a2 Array(UInt32) ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00909_arrayEnumerateUniq.sql","errors":[]},{"query":"CREATE TABLE arr_tests_visits (\nCounterID        UInt32,\nStartDate        Date,\nSign             Int8,\nVisitID          UInt64,\nUserID           UInt64,\nVisitVersion     UInt16,\n\\`Test.BannerID\\` Array(UInt64),\n\\`Test.Load\\`     Array(UInt8),\n\\`Test.PuidKey\\`  Array(Array(UInt8)),\n\\`Test.PuidVal\\`  Array(Array(UInt32))\n) ENGINE = MergeTree() PARTITION BY toMonday(StartDate) ORDER BY (CounterID, StartDate, intHash32(UserID), VisitID) SAMPLE BY intHash32(UserID) SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/00909_arrayEnumerateUniq.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE arr_tests_visits (\\nCounterID        UInt32,\\nStartDate        Date,\\nSign             Int8,\\nVisitID          UInt64,\\nUserID           UInt64,\\nVisitVersion     UInt16,\\n\\'","startColumn":0,"startLine":8,"endColumn":1,"endLine":8}]},{"query":"CREATE TABLE a (a UInt8, b UInt8) ENGINE MergeTree ORDER BY a;","fileName":"../ClickHouse/tests/queries/0_stateless/00908_analyze_query.sql","errors":[]},{"query":"CREATE TABLE null_lc_set_index ( timestamp         DateTime,\naction            LowCardinality(Nullable(String)),\nuser              LowCardinality(Nullable(String)),\nINDEX test_user_idx (user) TYPE set(0) GRANULARITY 8192\n) ENGINE=MergeTree\nPARTITION BY toYYYYMMDD(timestamp)\nORDER BY (timestamp, action, cityHash64(user)) SETTINGS allow_nullable_key = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00907_set_index_with_nullable_and_low_cardinality_bug.sql","errors":[]},{"query":"create table nullable_set_index (a UInt64, b Nullable(String), INDEX b_index b TYPE set(0) GRANULARITY 8192) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/00907_set_index_with_nullable_and_low_cardinality.sql","errors":[]},{"query":"create table nullable_set_index (a UInt64, b Nullable(String), INDEX b_index b TYPE set(1) GRANULARITY 8192) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/00907_set_index_with_nullable_and_low_cardinality.sql","errors":[]},{"query":"create table nullable_set_index (a UInt64, b Nullable(String), INDEX b_index b TYPE set(0) GRANULARITY 8192) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/00907_set_index_with_nullable_and_low_cardinality.sql","errors":[]},{"query":"create table nullable_set_index (a UInt64, b LowCardinality(Nullable(String)), INDEX b_index b TYPE set(0) GRANULARITY 8192) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/00907_set_index_with_nullable_and_low_cardinality.sql","errors":[]},{"query":"create table nullable_set_index (a UInt64, b LowCardinality(Nullable(String)), INDEX b_index b TYPE set(1) GRANULARITY 8192) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/00907_set_index_with_nullable_and_low_cardinality.sql","errors":[]},{"query":"create table nullable_set_index (a UInt64, b LowCardinality(Nullable(String)), INDEX b_index b TYPE set(0) GRANULARITY 8192) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/00907_set_index_with_nullable_and_low_cardinality.sql","errors":[]},{"query":"CREATE TABLE lc (a LowCardinality(Nullable(String)), b LowCardinality(Nullable(String))) ENGINE = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00906_low_cardinality_rollup.sql","errors":[]},{"query":"create table lc_00906 (b LowCardinality(String)) engine=MergeTree order by b SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00906_low_cardinality_cache.sql","errors":[]},{"query":"CREATE TABLE foo_c(d DateTime) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00905_compile_expressions_compare_big_dates.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS defaults (\nvals String\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00902_entropy.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS defaults (\nvals UInt64\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00902_entropy.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS defaults (\nvals UInt32\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00902_entropy.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS defaults (\nvals Int32\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00902_entropy.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS defaults (\nvals DateTime\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00902_entropy.sql","errors":[]},{"query":"CREATE TABLE index_memory (x UInt64) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00899_long_attach_memory_limit.sql","errors":[]},{"query":"create table t(a Int64, b Int64) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00882_multiple_join_no_alias.sql","errors":[]},{"query":"create table s(a Int64, b Int64) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00882_multiple_join_no_alias.sql","errors":[]},{"query":"create table y(a Int64, b Int64) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00882_multiple_join_no_alias.sql","errors":[]},{"query":"CREATE TABLE t1 (str String, dec Decimal64(8)) ENGINE = MergeTree ORDER BY str;","fileName":"../ClickHouse/tests/queries/0_stateless/00880_decimal_in_key.sql","errors":[]},{"query":"CREATE TABLE t2 (str String, dec Decimal64(8)) ENGINE = MergeTree ORDER BY dec;","fileName":"../ClickHouse/tests/queries/0_stateless/00880_decimal_in_key.sql","errors":[]},{"query":"create table t(a Int64, b Int64) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00878_join_unexpected_results.sql","errors":[]},{"query":"create table s(a Int64, b Int64) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00878_join_unexpected_results.sql","errors":[]},{"query":"CREATE TABLE visits (str String) ENGINE = MergeTree ORDER BY (str);","fileName":"../ClickHouse/tests/queries/0_stateless/00876_wrong_arraj_join_column.sql","errors":[]},{"query":"CREATE TABLE t (x String) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00875_join_right_nulls_ors.sql","errors":[]},{"query":"CREATE TABLE nt (x Nullable(String)) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00875_join_right_nulls_ors.sql","errors":[]},{"query":"CREATE TABLE ntxy (x Nullable(String), y Nullable(String)) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00875_join_right_nulls_ors.sql","errors":[]},{"query":"CREATE TABLE t (x String) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00875_join_right_nulls.sql","errors":[]},{"query":"CREATE TABLE nt (x Nullable(String)) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00875_join_right_nulls.sql","errors":[]},{"query":"create table t (a Int8, val Float32) engine = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/00874_issue_3495.sql","errors":[]},{"query":"CREATE TABLE t64 (\ndate16 Date,\nt_date16 Date Codec(T64, ZSTD),\ndate_32 Date32,\nt_date32 Date32 Codec(T64, ZSTD)\n) ENGINE MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00873_t64_codec_date.sql","errors":[]},{"query":"CREATE TABLE t64 (\nu8 UInt8,\nt_u8 UInt8 Codec(T64('bit'), LZ4),\nu16 UInt16,\nt_u16 UInt16 Codec(T64('bit'), LZ4),\nu32 UInt32,\nt_u32 UInt32 Codec(T64('bit'), LZ4),\nu64 UInt64,\nt_u64 UInt64 Codec(T64('bit'), LZ4)\n) ENGINE MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00872_t64_bit_codec.sql","errors":[]},{"query":"CREATE TABLE t64 (\ni8 Int8,\nt_i8 Int8 Codec(T64, LZ4),\ni16 Int16,\nt_i16 Int16 Codec(T64, LZ4),\ni32 Int32,\nt_i32 Int32 Codec(T64, LZ4),\ni64 Int64,\nt_i64 Int64 Codec(T64, LZ4)\n) ENGINE MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00871_t64_codec_signed.sql","errors":[]},{"query":"CREATE TABLE t64 (\nu8 UInt8,\nt_u8 UInt8 Codec(T64, ZSTD),\nu16 UInt16,\nt_u16 UInt16 Codec(T64, ZSTD),\nu32 UInt32,\nt_u32 UInt32 Codec(T64, ZSTD),\nu64 UInt64,\nt_u64 UInt64 Codec(T64, ZSTD)\n) ENGINE MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00870_t64_codec.sql","errors":[]},{"query":"create table test1_00863 (id UInt64, code String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00863_comma_join_in.sql","errors":[]},{"query":"create table test3_00863 (id UInt64, code String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00863_comma_join_in.sql","errors":[]},{"query":"create table test2_00863 (id UInt64, code String, test1_id UInt64, test3_id UInt64) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00863_comma_join_in.sql","errors":[]},{"query":"CREATE TABLE temp (\nx Decimal(38, 2),\ny Nullable(Decimal(38, 2))\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00862_decimal_in.sql","errors":[]},{"query":"CREATE TABLE test_00861 (key UInt64, d32 Decimal32(2), d64 Decimal64(2), d128 Decimal128(2)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00861_decimal_quoted_csv.sql","errors":[]},{"query":"CREATE TABLE appointment_events (\n_appointment_id UInt32,\n_id String,\n_status String,\n_set_by_id String,\n_company_id String,\n_client_id String,\n_type String,\n_at String,\n_vacancy_id String,\n_set_at UInt32,\n_job_requisition_id String\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00860_unknown_identifier_bug.sql","errors":[]},{"query":"create table fooL (a Int32, v String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00859_distinct_with_join.sql","errors":[]},{"query":"create table fooR (a Int32, v String) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00859_distinct_with_join.sql","errors":[]},{"query":"create table shard1 (id Int32) engine = MergeTree order by cityHash64(id);","fileName":"../ClickHouse/tests/queries/0_stateless/00858_issue_4756.sql","errors":[]},{"query":"create table shard2 (id Int32) engine = MergeTree order by cityHash64(id);","fileName":"../ClickHouse/tests/queries/0_stateless/00858_issue_4756.sql","errors":[]},{"query":"create table distr1 as shard1 engine Distributed (test_cluster_two_shards_localhost, currentDatabase(), shard1, cityHash64(id));","fileName":"../ClickHouse/tests/queries/0_stateless/00858_issue_4756.sql","errors":[]},{"query":"create table distr2 as shard2 engine Distributed (test_cluster_two_shards_localhost, currentDatabase(), shard2, cityHash64(id));","fileName":"../ClickHouse/tests/queries/0_stateless/00858_issue_4756.sql","errors":[]},{"query":"CREATE TABLE local_table (\nid Int32,\nname String,\nts DateTime,\noth_id Int32\n) ENGINE = MergeTree() PARTITION BY toMonday(ts) ORDER BY (ts, id);","fileName":"../ClickHouse/tests/queries/0_stateless/00857_global_joinsavel_table_alias.sql","errors":[]},{"query":"CREATE TABLE other_table (\nid Int32,\nname String,\nts DateTime,\ntrd_id Int32\n) ENGINE = MergeTree() PARTITION BY toMonday(ts) ORDER BY (ts, id);","fileName":"../ClickHouse/tests/queries/0_stateless/00857_global_joinsavel_table_alias.sql","errors":[]},{"query":"CREATE TABLE t1_00856 (n Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00856_no_column_issue_4242.sql","errors":[]},{"query":"CREATE TABLE t2_00856 (a Int32, n Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00856_no_column_issue_4242.sql","errors":[]},{"query":"CREATE TABLE f (\\`d_ids\\` Array(Int64) ) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00855_join_with_array_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE f (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE d (\\`id\\` Int64, \\`name\\` String ) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00855_join_with_array_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE d (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE table_a ( event_id UInt64,\nsomething String,\nother Nullable(String)\n) ENGINE = MergeTree ORDER BY (event_id);","fileName":"../ClickHouse/tests/queries/0_stateless/00853_join_with_nulls_crash.sql","errors":[]},{"query":"CREATE TABLE table_b ( event_id UInt64,\nsomething Nullable(String),\nother String\n) ENGINE = MergeTree ORDER BY (event_id);","fileName":"../ClickHouse/tests/queries/0_stateless/00853_join_with_nulls_crash.sql","errors":[]},{"query":"CREATE TABLE table1 ( id String ) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00852_any_join_nulls.sql","errors":[]},{"query":"CREATE TABLE table2 ( parent_id String ) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00852_any_join_nulls.sql","errors":[]},{"query":"CREATE TABLE t_local (dummy UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00850_global_join_dups.sql","errors":[]},{"query":"CREATE TABLE t1_00850 (dummy UInt8) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 't_local');","fileName":"../ClickHouse/tests/queries/0_stateless/00850_global_join_dups.sql","errors":[]},{"query":"CREATE TABLE t2_00850 (dummy UInt8) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 't_local');","fileName":"../ClickHouse/tests/queries/0_stateless/00850_global_join_dups.sql","errors":[]},{"query":"CREATE TABLE t1 (a UInt32, b Nullable(Int32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00849_multiple_comma_join_2.sql","errors":[]},{"query":"CREATE TABLE t2 (a UInt32, b Nullable(Int32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00849_multiple_comma_join_2.sql","errors":[]},{"query":"CREATE TABLE t3 (a UInt32, b Nullable(Int32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00849_multiple_comma_join_2.sql","errors":[]},{"query":"CREATE TABLE t4 (a UInt32, b Nullable(Int32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00849_multiple_comma_join_2.sql","errors":[]},{"query":"CREATE TABLE t1_00848 ( id String ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00848_join_use_nulls_segfault.sql","errors":[]},{"query":"CREATE TABLE t2_00848 ( id Nullable(String) ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00848_join_use_nulls_segfault.sql","errors":[]},{"query":"CREATE TABLE t3_00848 ( id Nullable(String), not_id Nullable(String) ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00848_join_use_nulls_segfault.sql","errors":[]},{"query":"create table t(a Int64, b Int64) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00847_multiple_join_same_column.sql","errors":[]},{"query":"create table s(a Int64, b Int64) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00847_multiple_join_same_column.sql","errors":[]},{"query":"create table y(a Int64, b Int64) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00847_multiple_join_same_column.sql","errors":[]},{"query":"CREATE TABLE table1 (a UInt32, b UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00845_join_on_aliases.sql","errors":[]},{"query":"CREATE TABLE table2 (a UInt32, b UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00845_join_on_aliases.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS t1_00844 ( f1 UInt32,\nf2 String\n) ENGINE = MergeTree ORDER BY (f1);","fileName":"../ClickHouse/tests/queries/0_stateless/00844_join_lightee2.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS t2_00844 ( f1 String,\nf3 String\n) ENGINE = MergeTree ORDER BY (f1);","fileName":"../ClickHouse/tests/queries/0_stateless/00844_join_lightee2.sql","errors":[]},{"query":"CREATE TABLE test1_00843 (a UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00843_optimize_predicate_and_rename_table.sql","errors":[]},{"query":"CREATE VIEW view_00843 AS SELECT * FROM test1_00843;","fileName":"../ClickHouse/tests/queries/0_stateless/00843_optimize_predicate_and_rename_table.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t1_00841 (x UInt8);","fileName":"../ClickHouse/tests/queries/0_stateless/00841_temporary_table_database.sql","errors":[]},{"query":"CREATE TABLE minmax_idx1 (\nu64 UInt64,\ni32 Int32,\nf64 Float64,\nd Decimal(10, 2),\ns String,\ne Enum8('a' = 1, 'b' = 2, 'c' = 3),\ndt Date,\nINDEX\nidx_all (i32, i32 + f64, d, s, e, dt) TYPE minmax GRANULARITY 1,\nINDEX\nidx_2 (u64 + toYear(dt), substring(s, 2, 4)) TYPE minmax GRANULARITY 3\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00837/minmax', 'r1')\nORDER BY u64\nSETTINGS index_granularity = 2, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00837_minmax_index_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE minmax_idx2 (\nu64 UInt64,\ni32 Int32,\nf64 Float64,\nd Decimal(10, 2),\ns String,\ne Enum8('a' = 1, 'b' = 2, 'c' = 3),\ndt Date,\nINDEX\nidx_all (i32, i32 + f64, d, s, e, dt) TYPE minmax GRANULARITY 1,\nINDEX\nidx_2 (u64 + toYear(dt), substring(s, 2, 4)) TYPE minmax GRANULARITY 3\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00837/minmax', 'r2')\nORDER BY u64\nSETTINGS index_granularity = 2, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00837_minmax_index_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE file (s String, n UInt32) ENGINE = File(CSVWithNames);","fileName":"../ClickHouse/tests/queries/0_stateless/00837_insert_select_and_read_prefix.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE file2 AS SELECT * FROM file;","fileName":"../ClickHouse/tests/queries/0_stateless/00837_insert_select_and_read_prefix.sql","errors":[]},{"query":"CREATE TABLE minmax_idx (\nu64 UInt64,\ni32 Int32\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00836/indices_alter1', 'r1')\nORDER BY u64;","fileName":"../ClickHouse/tests/queries/0_stateless/00836_indices_alter_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE minmax_idx_r (\nu64 UInt64,\ni32 Int32\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00836/indices_alter1', 'r2')\nORDER BY u64;","fileName":"../ClickHouse/tests/queries/0_stateless/00836_indices_alter_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE minmax_idx2 (\nu64 UInt64,\ni32 Int32,\nINDEX idx1 u64 + i32 TYPE minmax GRANULARITY 10,\nINDEX idx2 u64 * i32 TYPE minmax GRANULARITY 10\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00836/indices_alter2', 'r1')\nORDER BY u64;","fileName":"../ClickHouse/tests/queries/0_stateless/00836_indices_alter_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE minmax_idx2_r (\nu64 UInt64,\ni32 Int32,\nINDEX idx1 u64 + i32 TYPE minmax GRANULARITY 10,\nINDEX idx2 u64 * i32 TYPE minmax GRANULARITY 10\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00836/indices_alter2', 'r2')\nORDER BY u64;","fileName":"../ClickHouse/tests/queries/0_stateless/00836_indices_alter_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE minmax_idx (\nu64 UInt64,\ni32 Int32\n) ENGINE = MergeTree()\nORDER BY u64;","fileName":"../ClickHouse/tests/queries/0_stateless/00836_indices_alter.sql","errors":[]},{"query":"CREATE TABLE minmax_idx2 (\nu64 UInt64,\ni32 Int32,\nINDEX idx1 (u64 + i32) TYPE minmax GRANULARITY 10,\nINDEX idx2 u64 * i32 TYPE minmax GRANULARITY 10\n) ENGINE = MergeTree()\nORDER BY u64;","fileName":"../ClickHouse/tests/queries/0_stateless/00836_indices_alter.sql","errors":[]},{"query":"CREATE TABLE file (number UInt64) ENGINE = File(TSV);","fileName":"../ClickHouse/tests/queries/0_stateless/00832_storage_file_lock.sql","errors":[]},{"query":"CREATE TABLE kv (k UInt32, v UInt32) ENGINE Join(Any, Left, k);","fileName":"../ClickHouse/tests/queries/0_stateless/00830_join_overwrite.sql","errors":[]},{"query":"CREATE TABLE kv_overwrite (k UInt32, v UInt32) ENGINE Join(Any, Left, k) SETTINGS join_any_take_last_row = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00830_join_overwrite.sql","errors":[]},{"query":"CREATE TABLE t2 (k UInt32, v UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00830_join_overwrite.sql","errors":[]},{"query":"CREATE TABLE bitmap_test(pickup_date Date, city_id UInt32, uid UInt32)ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00829_bitmap_function.sql","errors":[]},{"query":"CREATE TABLE bitmap_state_test (\n\tpickup_date Date,\n\tcity_id UInt32,\nuv AggregateFunction( groupBitmap, UInt32 )\n)\nENGINE = AggregatingMergeTree( pickup_date, ( pickup_date, city_id ), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00829_bitmap_function.sql","errors":[]},{"query":"CREATE TABLE bitmap_column_expr_test (\nt DateTime,\nz AggregateFunction(groupBitmap, UInt32)\n)\nENGINE = MergeTree\nPARTITION BY toYYYYMMDD(t)\nORDER BY t;","fileName":"../ClickHouse/tests/queries/0_stateless/00829_bitmap_function.sql","errors":[]},{"query":"CREATE TABLE bitmap_column_expr_test2 (\ntag_id String,\nz AggregateFunction(groupBitmap, UInt32)\n)\nENGINE = MergeTree\nORDER BY tag_id;","fileName":"../ClickHouse/tests/queries/0_stateless/00829_bitmap_function.sql","errors":[]},{"query":"CREATE TABLE bitmap_column_expr_test3 (\ntag_id String,\nz AggregateFunction(groupBitmap, UInt64),\nreplace Nested (\nfrom UInt16,\nto UInt64\n)\n)\nENGINE = MergeTree\nORDER BY tag_id;","fileName":"../ClickHouse/tests/queries/0_stateless/00829_bitmap_function.sql","errors":[]},{"query":"CREATE VIEW numbers10 AS SELECT number FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00829_bitmap_function.sql","errors":[]},{"query":"CREATE TABLE bitmap_test(pickup_date Date, city_id UInt32, uid UInt32)ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00829_bitmap_function.sql","errors":[]},{"query":"CREATE TABLE bitmap_test(pickup_date Date, city_id UInt32, uid UInt64)ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00829_bitmap64_function.sql","errors":[]},{"query":"CREATE TABLE bitmap_state_test (\n\tpickup_date Date,\n\tcity_id UInt32,\nuv AggregateFunction( groupBitmap, UInt64 )\n)\nENGINE = AggregatingMergeTree() PARTITION BY toYYYYMM(pickup_date) ORDER BY (pickup_date, city_id);","fileName":"../ClickHouse/tests/queries/0_stateless/00829_bitmap64_function.sql","errors":[]},{"query":"CREATE TABLE t1_00826 (a Int8, b Nullable(Int8)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00826_cross_to_inner_join.sql","errors":[]},{"query":"CREATE TABLE t2_00826 (a Int8, b Nullable(Int8)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00826_cross_to_inner_join.sql","errors":[]},{"query":"CREATE TABLE sequence (\nuserID UInt64,\neventType Enum8('A' = 1, 'B' = 2, 'C' = 3, 'D' = 4),\nEventTime UInt64\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00823_sequence_match_dfa.sql","errors":[]},{"query":"CREATE TABLE table1 AS system.columns ENGINE = Distributed('test_shard_localhost', system, columns);","fileName":"../ClickHouse/tests/queries/0_stateless/00821_distributed_storage_with_join_on.sql","errors":[]},{"query":"CREATE TABLE table2 AS system.tables ENGINE = Distributed('test_shard_localhost', system, tables);","fileName":"../ClickHouse/tests/queries/0_stateless/00821_distributed_storage_with_join_on.sql","errors":[]},{"query":"CREATE TABLE table1 (a UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00820_multiple_joins_subquery_requires_alias.sql","errors":[]},{"query":"CREATE TABLE table2 (a UInt32, b UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00820_multiple_joins_subquery_requires_alias.sql","errors":[]},{"query":"CREATE TABLE table3 (b UInt32, c UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00820_multiple_joins_subquery_requires_alias.sql","errors":[]},{"query":"CREATE TABLE table5 (a UInt32, b UInt32, c UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00820_multiple_joins_subquery_requires_alias.sql","errors":[]},{"query":"CREATE TABLE table1 (a UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00820_multiple_joins.sql","errors":[]},{"query":"CREATE TABLE table2 (a UInt32, b UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00820_multiple_joins.sql","errors":[]},{"query":"CREATE TABLE table3 (b UInt32, c UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00820_multiple_joins.sql","errors":[]},{"query":"CREATE TABLE table5 (a UInt32, b UInt32, c UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00820_multiple_joins.sql","errors":[]},{"query":"CREATE TABLE table_set ( x UInt32 ) ENGINE = Set;","fileName":"../ClickHouse/tests/queries/0_stateless/00820_multiple_joins.sql","errors":[]},{"query":"CREATE TABLE visits1 (\nSign Int8,\nArr Array(Int8),\n\\`ParsedParams.Key1\\` Array(String),\n\\`ParsedParams.Key2\\` Array(String),\nCounterID UInt32\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00819_ast_refactoring_bugs.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE visits1 (\\nSign Int8,\\nArr Array(Int8),\\n\\'","startColumn":0,"startLine":4,"endColumn":1,"endLine":4}]},{"query":"create table t_00818(a Nullable(Int64), b Nullable(Int64), c Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00818_join_bug_4271.sql","errors":[]},{"query":"create table s_00818(a Nullable(Int64), b Nullable(Int64), c Nullable(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00818_join_bug_4271.sql","errors":[]},{"query":"CREATE TABLE table1(a String, b Date) ENGINE MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/00818_inner_join_bug_3567.sql","errors":[]},{"query":"CREATE TABLE table2(c String, a String, d Date) ENGINE MergeTree order by c;","fileName":"../ClickHouse/tests/queries/0_stateless/00818_inner_join_bug_3567.sql","errors":[]},{"query":"CREATE TABLE test_00818 (field String, not_field String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00818_alias_bug_4110.sql","errors":[]},{"query":"create table t1_00816 (a Int8, val Float32) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/00816_join_column_names_sarg.sql","errors":[]},{"query":"create table t2_00816 (a Int8, val Float32) engine=Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/00816_join_column_names_sarg.sql","errors":[]},{"query":"CREATE TABLE fact_cpc_clicks (model_id UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00815_left_join_on_stepanel.sql","errors":[]},{"query":"CREATE TABLE dim_model (model_id UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00815_left_join_on_stepanel.sql","errors":[]},{"query":"CREATE TABLE prewhere (x Array(UInt64), y ALIAS x, s String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00812_prewhere_alias_array.sql","errors":[]},{"query":"CREATE TABLE test_00808(date Date, id Int8, name String, value Int64, sign Int8) ENGINE = CollapsingMergeTree(sign) ORDER BY (id, date);","fileName":"../ClickHouse/tests/queries/0_stateless/00808_not_optimize_predicate.sql","errors":[]},{"query":"CREATE TABLE test_00808_push_down_with_finalizeAggregation ENGINE = AggregatingMergeTree ORDER BY n AS\nSELECT\nintDiv(number, 25) AS n,\navgState(number) AS s\nFROM numbers(2500)\nGROUP BY n\nORDER BY n;","fileName":"../ClickHouse/tests/queries/0_stateless/00808_not_optimize_predicate.sql","errors":[]},{"query":"CREATE TABLE alter_update_00806 (d Date, e Enum8('foo'=1, 'bar'=2)) Engine = MergeTree(d, (d), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00806_alter_update.sql","errors":[]},{"query":"CREATE TABLE compression_codec(id UInt64 CODEC(ZSTD_QAT(0))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_CODEC_PARAMETER } CREATE TABLE compression_codec(id UInt64 CODEC(ZSTD_QAT(13))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_CODEC_PARAMETER }\nCREATE TABLE compression_codec(\nid UInt64 CODEC(ZSTD_QAT),\ndata String CODEC(ZSTD_QAT),\nddd Date CODEC(ZSTD_QAT),\nddd32 Date32 CODEC(ZSTD_QAT),\nsomenum Float64 CODEC(ZSTD_QAT),\nsomestr FixedString(3) CODEC(ZSTD_QAT),\nothernum Int64 CODEC(ZSTD_QAT),\nsomearray Array(UInt8) CODEC(ZSTD_QAT),\nsomemap Map(String, UInt32) CODEC(ZSTD_QAT),\nsometuple Tuple(UInt16, UInt64) CODEC(ZSTD_QAT),\n) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_zstd_qat_codec_compression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE compression_codec(\\nid UInt64 CODEC(ZSTD_QAT),\\ndata String CODEC(ZSTD_QAT),\\nddd Date CODEC(ZSTD_QAT),\\nddd32 Date32 CODEC(ZSTD_QAT),\\nsomenum Float64 CODEC(ZSTD_QAT),\\nsomestr FixedString(3) CODEC(ZSTD_QAT),\\nothernum Int64 CODEC(ZSTD_QAT),\\nsomearray Array(UInt8) CODEC(ZSTD_QAT),\\nsomemap Map(String, UInt32) CODEC(ZSTD_QAT),\\nsometuple Tuple(UInt16, UInt64) CODEC(ZSTD_QAT),\\n)'","startColumn":0,"startLine":13,"endColumn":1,"endLine":13}]},{"query":"CREATE TABLE delta_codec_for_alter (date Date, x UInt32 Codec(Delta), s FixedString(128)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_delta_codec_no_type_alter.sql","errors":[]},{"query":"CREATE TABLE delta_codec_synthetic (\nid UInt64 Codec(Delta, ZSTD(3))\n) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false, compress_primary_key = false, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_delta_codec_compression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE delta_codec_synthetic (\\nid UInt64 Codec(Delta, ZSTD(3))\\n) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false'","startColumn":93,"startLine":3,"endColumn":98,"endLine":3}]},{"query":"CREATE TABLE default_codec_synthetic (\nid UInt64 Codec(ZSTD(3))\n) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false, compress_primary_key = false, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_delta_codec_compression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE default_codec_synthetic (\\nid UInt64 Codec(ZSTD(3))\\n) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false'","startColumn":93,"startLine":3,"endColumn":98,"endLine":3}]},{"query":"CREATE TABLE delta_codec_float (\nid Float64 Codec(Delta, LZ4HC)\n) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false, compress_primary_key = false, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_delta_codec_compression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE delta_codec_float (\\nid Float64 Codec(Delta, LZ4HC)\\n) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false'","startColumn":93,"startLine":3,"endColumn":98,"endLine":3}]},{"query":"CREATE TABLE default_codec_float (\nid Float64 Codec(LZ4HC)\n) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false, compress_primary_key = false, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_delta_codec_compression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE default_codec_float (\\nid Float64 Codec(LZ4HC)\\n) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false'","startColumn":93,"startLine":3,"endColumn":98,"endLine":3}]},{"query":"CREATE TABLE delta_codec_string (\nid Float64 Codec(Delta, LZ4)\n) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false, compress_primary_key = false, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_delta_codec_compression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE delta_codec_string (\\nid Float64 Codec(Delta, LZ4)\\n) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false'","startColumn":93,"startLine":3,"endColumn":98,"endLine":3}]},{"query":"CREATE TABLE default_codec_string (\nid Float64 Codec(LZ4)\n) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false, compress_primary_key = false, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_delta_codec_compression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE default_codec_string (\\nid Float64 Codec(LZ4)\\n) ENGINE MergeTree() ORDER BY tuple() SETTINGS min_bytes_for_wide_part = 0, compress_marks = false'","startColumn":93,"startLine":3,"endColumn":98,"endLine":3}]},{"query":"CREATE TABLE compression_codec( id UInt64 CODEC(DEFLATE_QPL),\ndata String CODEC(DEFLATE_QPL),\nddd Date CODEC(DEFLATE_QPL),\nddd32 Date32 CODEC(DEFLATE_QPL),\nsomenum Float64 CODEC(DEFLATE_QPL),\nsomestr FixedString(3) CODEC(DEFLATE_QPL),\nothernum Int64 CODEC(DEFLATE_QPL),\nsomearray Array(UInt8) CODEC(DEFLATE_QPL),\nsomemap Map(String, UInt32) CODEC(DEFLATE_QPL),\nsometuple Tuple(UInt16, UInt64) CODEC(DEFLATE_QPL),\n) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_deflate_qpl_codec_compression.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE compression_codec( id UInt64 CODEC(DEFLATE_QPL),\\ndata String CODEC(DEFLATE_QPL),\\nddd Date CODEC(DEFLATE_QPL),\\nddd32 Date32 CODEC(DEFLATE_QPL),\\nsomenum Float64 CODEC(DEFLATE_QPL),\\nsomestr FixedString(3) CODEC(DEFLATE_QPL),\\nothernum Int64 CODEC(DEFLATE_QPL),\\nsomearray Array(UInt8) CODEC(DEFLATE_QPL),\\nsomemap Map(String, UInt32) CODEC(DEFLATE_QPL),\\nsometuple Tuple(UInt16, UInt64) CODEC(DEFLATE_QPL),\\n)'","startColumn":0,"startLine":11,"endColumn":1,"endLine":11}]},{"query":"CREATE TABLE compression_codec_log( id UInt64 CODEC(LZ4),\ndata String CODEC(ZSTD),\nddd Date CODEC(NONE),\nsomenum Float64 CODEC(ZSTD(2)),\nsomestr FixedString(3) CODEC(LZ4HC(7)),\nothernum Int64 CODEC(Delta)\n) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_custom_compression_codes_log_storages.sql","errors":[]},{"query":"CREATE TABLE compression_codec_multiple_log ( id UInt64 CODEC(LZ4, ZSTD, NONE, LZ4HC, Delta(4)),\ndata String CODEC(ZSTD(2), NONE, Delta(2), LZ4HC, LZ4, LZ4, Delta(8)),\nddd Date CODEC(NONE, NONE, NONE, Delta(1), LZ4, ZSTD, LZ4HC, LZ4HC),\nsomenum Float64 CODEC(Delta(4), LZ4, LZ4, ZSTD(2), LZ4HC(5), ZSTD(3), ZSTD)\n) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_custom_compression_codes_log_storages.sql","errors":[]},{"query":"CREATE TABLE compression_codec_tiny_log( id UInt64 CODEC(LZ4),\ndata String CODEC(ZSTD),\nddd Date CODEC(NONE),\nsomenum Float64 CODEC(ZSTD(2)),\nsomestr FixedString(3) CODEC(LZ4HC(7)),\nothernum Int64 CODEC(Delta)\n) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_custom_compression_codes_log_storages.sql","errors":[]},{"query":"CREATE TABLE compression_codec_multiple_tiny_log ( id UInt64 CODEC(LZ4, ZSTD, NONE, LZ4HC, Delta(4)),\ndata String CODEC(ZSTD(2), NONE, Delta(2), LZ4HC, LZ4, LZ4, Delta(8)),\nddd Date CODEC(NONE, NONE, NONE, Delta(1), LZ4, ZSTD, LZ4HC, LZ4HC),\nsomenum Float64 CODEC(Delta(4), LZ4, LZ4, ZSTD(2), LZ4HC(5), ZSTD(3), ZSTD)\n) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_custom_compression_codes_log_storages.sql","errors":[]},{"query":"CREATE TABLE compression_codec( id UInt64 CODEC(LZ4),\ndata String CODEC(ZSTD),\nddd Date CODEC(NONE),\nsomenum Float64 CODEC(ZSTD(2)),\nsomestr FixedString(3) CODEC(LZ4HC(7)),\nothernum Int64 CODEC(Delta)\n) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_custom_compression_codecs.sql","errors":[]},{"query":"CREATE TABLE bad_codec(id UInt64 CODEC(adssadads)) ENGINE = MergeTree() order by tuple(); -- { serverError UNKNOWN_CODEC } CREATE TABLE too_many_params(id UInt64 CODEC(ZSTD(2,3,4,5))) ENGINE = MergeTree() order by tuple(); -- { serverError ILLEGAL_SYNTAX_FOR_CODEC_TYPE }\nCREATE TABLE params_when_no_params(id UInt64 CODEC(LZ4(1))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError DATA_TYPE_CANNOT_HAVE_ARGUMENTS }\nCREATE TABLE codec_multiple_direct_specification_1(id UInt64 CODEC(MULTIPLE(LZ4, ZSTD))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError UNKNOWN_CODEC }\nCREATE TABLE codec_multiple_direct_specification_2(id UInt64 CODEC(multiple(LZ4, ZSTD))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError UNKNOWN_CODEC }\nCREATE TABLE delta_bad_params1(id UInt64 CODEC(Delta(3))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_CODEC_PARAMETER }\nCREATE TABLE delta_bad_params2(id UInt64 CODEC(Delta(16))) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError ILLEGAL_CODEC_PARAMETER }\nDROP TABLE IF EXISTS bad_codec;","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_custom_compression_codecs.sql","errors":[]},{"query":"CREATE TABLE compression_codec_multiple ( id UInt64 CODEC(LZ4, ZSTD, NONE, LZ4HC, Delta(4)),\ndata String CODEC(ZSTD(2), NONE, Delta(2), LZ4HC, LZ4, LZ4, Delta(8)),\nddd Date CODEC(NONE, NONE, NONE, Delta(1), LZ4, ZSTD, LZ4HC, LZ4HC),\nsomenum Float64 CODEC(Delta(4), LZ4, LZ4, ZSTD(2), LZ4HC(5), ZSTD(3), ZSTD)\n) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_custom_compression_codecs.sql","errors":[]},{"query":"CREATE TABLE compression_codec_multiple_more_types ( id Decimal128(13) CODEC(ZSTD, LZ4, ZSTD, ZSTD, Delta(2), Delta(4), Delta(1), LZ4HC),\ndata FixedString(12) CODEC(ZSTD, ZSTD, Delta, Delta, Delta, NONE, NONE, NONE, LZ4HC),\nddd Nested (age UInt8, Name String) CODEC(LZ4, LZ4HC, NONE, NONE, NONE, ZSTD, Delta(8))\n) ENGINE = MergeTree() ORDER BY tuple(); -- { serverError BAD_ARGUMENTS }\nCREATE TABLE compression_codec_multiple_more_types (\nid Decimal128(13) CODEC(ZSTD, LZ4, ZSTD, ZSTD, Delta(2), Delta(4), Delta(1), LZ4HC),\ndata FixedString(12) CODEC(ZSTD, ZSTD, NONE, NONE, NONE, LZ4HC),\nddd Nested (age UInt8, Name String) CODEC(LZ4, LZ4HC, NONE, NONE, NONE, ZSTD, Delta(8))\n) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_custom_compression_codecs.sql","errors":[]},{"query":"CREATE TABLE compression_codec_multiple_with_key ( somedate Date CODEC(ZSTD, ZSTD, ZSTD(12), LZ4HC(12), Delta, Delta),\nid UInt64 CODEC(LZ4, ZSTD, Delta, NONE, LZ4HC, Delta),\ndata String CODEC(ZSTD(2), Delta(1), LZ4HC, NONE, LZ4, LZ4)\n) ENGINE = MergeTree() PARTITION BY somedate ORDER BY id SETTINGS index_granularity = 2, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_custom_compression_codecs.sql","errors":[]},{"query":"CREATE TABLE test_default_delta( id UInt64 CODEC(Delta),\ndata String CODEC(Delta(1)),\nsomedate Date CODEC(Delta),\nsomenum Float64 CODEC(Delta),\nsomestr FixedString(3) CODEC(Delta(1)),\nothernum Int64 CODEC(Delta),\nyetothernum Float32 CODEC(Delta),\nddd Nested (age UInt8, Name String, OName String, BName String) CODEC(Delta(1))\n) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_custom_compression_codecs.sql","errors":[]},{"query":"CREATE TABLE alter_compression_codec ( somedate Date CODEC(LZ4),\nid UInt64 CODEC(NONE)\n) ENGINE = MergeTree() PARTITION BY somedate ORDER BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_alter_compression_codecs.sql","errors":[]},{"query":"CREATE TABLE alter_bad_codec ( somedate Date CODEC(LZ4),\nid UInt64 CODEC(NONE)\n) ENGINE = MergeTree() ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_alter_compression_codecs.sql","errors":[]},{"query":"CREATE TABLE large_alter_table_00804 ( somedate Date CODEC(ZSTD, ZSTD, ZSTD(12), LZ4HC(12)),\nid UInt64 CODEC(LZ4, ZSTD, NONE, LZ4HC),\ndata String CODEC(ZSTD(2), LZ4HC, NONE, LZ4, LZ4)\n) ENGINE = MergeTree() PARTITION BY somedate ORDER BY id SETTINGS index_granularity = 2, index_granularity_bytes = '10Mi', min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_alter_compression_codecs.sql","errors":[]},{"query":"CREATE TABLE store_of_hash_00804 (hash UInt64) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/00804_test_alter_compression_codecs.sql","errors":[]},{"query":"CREATE TABLE rollup_having ( a Nullable(String),\nb Nullable(String)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00804_rollup_with_having.sql","errors":[]},{"query":"CREATE TABLE datetime_table (\nt DateTime('UTC'),\nname String,\nvalue UInt32\n) ENGINE = MergeTree()\nORDER BY (t, name)\n\tPARTITION BY value;","fileName":"../ClickHouse/tests/queries/0_stateless/00802_system_parts_with_datetime_partition.sql","errors":[]},{"query":"CREATE TABLE datetime_table (\nt DateTime('UTC'),\nname String,\nvalue UInt32\n) ENGINE = MergeTree()\nORDER BY (t, name)\n\tPARTITION BY toStartOfDay(t);","fileName":"../ClickHouse/tests/queries/0_stateless/00802_system_parts_with_datetime_partition.sql","errors":[]},{"query":"CREATE TABLE datetime_table (\nt DateTime('UTC'),\nname String,\nvalue UInt32\n) ENGINE = MergeTree()\nORDER BY (t, name)\nPARTITION BY (name, toUInt32(toUnixTimestamp(t)/(60*60*24)) );","fileName":"../ClickHouse/tests/queries/0_stateless/00802_system_parts_with_datetime_partition.sql","errors":[]},{"query":"CREATE TABLE join_any_inner (s String, x Array(UInt8), k UInt64) ENGINE = Join(ANY, INNER, k);","fileName":"../ClickHouse/tests/queries/0_stateless/00800_versatile_storage_join.sql","errors":[]},{"query":"CREATE TABLE join_any_left (s String, x Array(UInt8), k UInt64) ENGINE = Join(ANY, LEFT, k);","fileName":"../ClickHouse/tests/queries/0_stateless/00800_versatile_storage_join.sql","errors":[]},{"query":"CREATE TABLE join_all_inner (s String, x Array(UInt8), k UInt64) ENGINE = Join(ALL, INNER, k);","fileName":"../ClickHouse/tests/queries/0_stateless/00800_versatile_storage_join.sql","errors":[]},{"query":"CREATE TABLE join_all_left (s String, x Array(UInt8), k UInt64) ENGINE = Join(ALL, LEFT, k);","fileName":"../ClickHouse/tests/queries/0_stateless/00800_versatile_storage_join.sql","errors":[]},{"query":"CREATE TABLE join_any_left_null (s String, k UInt64) ENGINE = Join(ANY, LEFT, k) SETTINGS join_use_nulls = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00800_versatile_storage_join.sql","errors":[]},{"query":"CREATE TABLE join_string_key (s String, x Array(UInt8), k UInt64) ENGINE = Join(ANY, LEFT, s);","fileName":"../ClickHouse/tests/queries/0_stateless/00800_versatile_storage_join.sql","errors":[]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.join_test (a UInt8, b UInt8) Engine = Join(ANY, LEFT, a);","fileName":"../ClickHouse/tests/queries/0_stateless/00800_versatile_storage_join.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create table lc_00800_1 (names Array(LowCardinality(String))) engine=MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00800_low_cardinality_empty_array.sql","errors":[]},{"query":"CREATE TABLE low_cardinality (d Date, x UInt32, s LowCardinality(String)) ENGINE = MergeTree(d, x, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00800_low_cardinality_distributed_insert.sql","errors":[]},{"query":"CREATE TABLE low_cardinality_all (d Date, x UInt32, s LowCardinality(String)) ENGINE = Distributed(test_shard_localhost, currentDatabase(), low_cardinality, sipHash64(s));","fileName":"../ClickHouse/tests/queries/0_stateless/00800_low_cardinality_distributed_insert.sql","errors":[]},{"query":"create table lc_00800_2 (val LowCardinality(UInt64)) engine = MergeTree order by val;","fileName":"../ClickHouse/tests/queries/0_stateless/00800_low_cardinality_distinct_numeric.sql","errors":[]},{"query":"CREATE TABLE table1 (\ndt Date,\nid Int32,\narr Array(LowCardinality(String))\n) ENGINE = MergeTree PARTITION BY toMonday(dt)\nORDER BY (dt, id) SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/00800_low_cardinality_array_group_by_arg.sql","errors":[]},{"query":"CREATE TABLE table2 (\ndt Date,\nid Int32,\narr Array(LowCardinality(String))\n) ENGINE = MergeTree PARTITION BY toMonday(dt)\nORDER BY (dt, id) SETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/00800_low_cardinality_array_group_by_arg.sql","errors":[]},{"query":"CREATE TABLE bm (amount float, business_dttm DateTime) engine Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00799_function_dry_run.sql","errors":[]},{"query":"CREATE TABLE source_table ( date Date,\ndatetime DateTime,\nzoneId UInt64,\ntest1 ALIAS zoneId == 1,\ntest2 DEFAULT zoneId * 3,\ntest3 MATERIALIZED zoneId * 5\n) ENGINE = MergeTree(date, (date, zoneId), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00794_materialized_view_with_column_defaults.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW table_view ENGINE = MergeTree(date, (date, zoneId), 8192)\nAS SELECT\ndate,\nzoneId,\ntest1,\ntest2,\ntest3\nFROM source_table;","fileName":"../ClickHouse/tests/queries/0_stateless/00794_materialized_view_with_column_defaults.sql","errors":[]},{"query":"create table t (val UInt32) engine = MergeTree order by val;","fileName":"../ClickHouse/tests/queries/0_stateless/00763_create_query_as_table_engine_bug.sql","errors":[]},{"query":"create table td engine = Distributed(test_shard_localhost, currentDatabase(), 't') as t;","fileName":"../ClickHouse/tests/queries/0_stateless/00763_create_query_as_table_engine_bug.sql","errors":[{"message":"no viable alternative at input 'create table td engine = Distributed(test_shard_localhost, currentDatabase(), 't') as t'","startColumn":86,"startLine":1,"endColumn":87,"endLine":1}]},{"query":"CREATE TABLE defaults (\nx UInt32,\ny UInt32,\na DEFAULT x + y,\nb Float32 DEFAULT round(log(1 + x + y), 5),\nc UInt32 DEFAULT 42,\ne MATERIALIZED x + y,\nf ALIAS x + y\n) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00760_insert_json_with_defaults.sql","errors":[]},{"query":"CREATE TABLE auto_assign_enum (x enum('a', 'b')) ENGINE=MergeTree() order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/00757_enum_defaults.sql","errors":[]},{"query":"CREATE TABLE auto_assign_enum1 (x enum('a' = -1000, 'b')) ENGINE=MergeTree() order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/00757_enum_defaults.sql","errors":[]},{"query":"CREATE TABLE auto_assign_enum2 (x enum('a' = -1000, 'b', 'c' = -99)) ENGINE=MergeTree() order by x; -- { serverError UNEXPECTED_AST_STRUCTURE } CREATE TABLE auto_assign_enum2 (x Enum8(\n'00' = -128 ,'01','02','03','04','05','06','07','08','09','0A','0B','0C','0D','0E','0F',\n'10','11','12','13','14','15','16','17','18','19','1A','1B','1C','1D','1E','1F',\n'20','21','22','23','24','25','26','27','28','29','2A','2B','2C','2D','2E','2F',\n'30','31','32','33','34','35','36','37','38','39','3A','3B','3C','3D','3E','3F',\n'40','41','42','43','44','45','46','47','48','49','4A','4B','4C','4D','4E','4F',\n'50','51','52','53','54','55','56','57','58','59','5A','5B','5C','5D','5E','5F',\n'60','61','62','63','64','65','66','67','68','69','6A','6B','6C','6D','6E','6F',\n'70','71','72','73','74','75','76','77','78','79','7A','7B','7C','7D','7E','7F'\n)) ENGINE=MergeTree() order by x;","fileName":"../ClickHouse/tests/queries/0_stateless/00757_enum_defaults.sql","errors":[{"message":"mismatched input ''00'' expecting <EOF>","startColumn":0,"startLine":2,"endColumn":4,"endLine":2}]},{"query":"CREATE TABLE auto_assign_enum3 (x enum('a', 'b', NULL)) ENGINE=MergeTree() order by x; -- { serverError UNEXPECTED_AST_STRUCTURE } DROP TABLE auto_assign_enum;","fileName":"../ClickHouse/tests/queries/0_stateless/00757_enum_defaults.sql","errors":[]},{"query":"CREATE TABLE size_hint (s Array(String)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 1000, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00755_avg_value_size_hint_passing.sql","errors":[]},{"query":"CREATE TABLE old_style(d Date, x UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00754/old_style', 'r1', d, x, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00754_alter_modify_order_by_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE summing_r1(x UInt32, y UInt32, val UInt32) ENGINE ReplicatedSummingMergeTree('/clickhouse/tables/{database}/test_00754/summing', 'r1') ORDER BY (x, y);","fileName":"../ClickHouse/tests/queries/0_stateless/00754_alter_modify_order_by_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE summing_r2(x UInt32, y UInt32, val UInt32) ENGINE ReplicatedSummingMergeTree('/clickhouse/tables/{database}/test_00754/summing', 'r2') ORDER BY (x, y);","fileName":"../ClickHouse/tests/queries/0_stateless/00754_alter_modify_order_by_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE no_order(a UInt32, b UInt32) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00754_alter_modify_order_by.sql","errors":[]},{"query":"CREATE TABLE old_style(d Date, x UInt32) ENGINE MergeTree(d, x, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00754_alter_modify_order_by.sql","errors":[]},{"query":"CREATE TABLE summing(x UInt32, y UInt32, val UInt32) ENGINE SummingMergeTree ORDER BY (x, y);","fileName":"../ClickHouse/tests/queries/0_stateless/00754_alter_modify_order_by.sql","errors":[]},{"query":"CREATE TABLE alter_column(x UInt32, y Int32) ENGINE MergeTree PARTITION BY x ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00754_alter_modify_column_partitions.sql","errors":[]},{"query":"CREATE TABLE check_system_tables (\nname1 UInt8,\nname2 UInt8,\nname3 UInt8\n) ENGINE = MergeTree()\nORDER BY name1\nPARTITION BY name2\nSAMPLE BY name1\nSETTINGS min_bytes_for_wide_part = 0, compress_marks = false, compress_primary_key = false, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE check_system_tables (\\nname1 UInt8,\\nname2 UInt8,\\nname3 UInt8\\n) ENGINE = MergeTree()\\nORDER BY name1\\nPARTITION BY name2\\nSAMPLE BY name1\\nSETTINGS min_bytes_for_wide_part = 0, compress_marks = false'","startColumn":55,"startLine":9,"endColumn":60,"endLine":9}]},{"query":"CREATE TABLE check_system_tables (\ndate Date,\nvalue String,\nversion UInt64,\nsign Int8\n) ENGINE = VersionedCollapsingMergeTree(sign, version)\nPARTITION BY date\nORDER BY date\nSETTINGS compress_marks=false, compress_primary_key=false;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE check_system_tables (\\ndate Date,\\nvalue String,\\nversion UInt64,\\nsign Int8\\n) ENGINE = VersionedCollapsingMergeTree(sign, version)\\nPARTITION BY date\\nORDER BY date\\nSETTINGS compress_marks=false'","startColumn":24,"startLine":9,"endColumn":29,"endLine":9}]},{"query":"CREATE TABLE check_system_tables (\nEvent Date,\nUserId UInt32,\nCounter UInt32\n) ENGINE = MergeTree(Event, intHash32(UserId), (Counter, Event, intHash32(UserId)), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[]},{"query":"CREATE TABLE check_system_tables (key UInt8) ENGINE = TinyLog();","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[]},{"query":"CREATE TABLE check_system_tables (key UInt8) ENGINE = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[]},{"query":"CREATE TABLE check_system_tables (key UInt8) ENGINE = StripeLog();","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[]},{"query":"CREATE TABLE check_system_tables (key UInt16) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[]},{"query":"CREATE TABLE check_system_tables_null (key UInt16) ENGINE = Null();","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[]},{"query":"CREATE TABLE check_system_tables (key UInt16) ENGINE = Buffer( currentDatabase(),\ncheck_system_tables_null,\n2,\n0,   100, \n);","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE check_system_tables (key UInt16) ENGINE = Buffer( currentDatabase(),\\ncheck_system_tables_null,\\n2,\\n0,   100, \\n)'","startColumn":0,"startLine":5,"endColumn":1,"endLine":5}]},{"query":"CREATE TABLE check_system_tables Engine=Set() AS SELECT * FROM numbers(50);","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[]},{"query":"CREATE TABLE check_system_tables Engine=Join(ANY, LEFT, number) AS SELECT * FROM numbers(50);","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[]},{"query":"CREATE TABLE check_system_tables (\nname1 UInt8,\nname2 UInt8,\nname3 UInt8\n) ENGINE = MergeTree()\nORDER BY name1\nPARTITION BY name2\nSAMPLE BY name1\nSETTINGS min_bytes_for_wide_part = 0, compress_marks = false, compress_primary_key = false, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE check_system_tables (\\nname1 UInt8,\\nname2 UInt8,\\nname3 UInt8\\n) ENGINE = MergeTree()\\nORDER BY name1\\nPARTITION BY name2\\nSAMPLE BY name1\\nSETTINGS min_bytes_for_wide_part = 0, compress_marks = false'","startColumn":55,"startLine":9,"endColumn":60,"endLine":9}]},{"query":"CREATE MATERIALIZED VIEW check_system_tables_mv ENGINE = MergeTree() ORDER BY name2 AS SELECT name1, name2, name3 FROM check_system_tables;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_system_columns_and_system_tables_long.sql","errors":[]},{"query":"CREATE TABLE datetime (d DateTime('UTC')) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_quantile_format.sql","errors":[]},{"query":"CREATE TABLE check_system_tables_null (key Int) Engine=Null();","fileName":"../ClickHouse/tests/queries/0_stateless/00753_distributed_system_columns_and_system_tables.sql","errors":[]},{"query":"CREATE TABLE check_system_tables AS check_system_tables_null Engine=Distributed(test_shard_localhost, currentDatabase(), check_system_tables_null);","fileName":"../ClickHouse/tests/queries/0_stateless/00753_distributed_system_columns_and_system_tables.sql","errors":[]},{"query":"CREATE TABLE check_comments (\ncolumn_name1 UInt8 DEFAULT 1 COMMENT 'comment',\ncolumn_name2 UInt8 COMMENT 'non default comment'\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00753/comments', 'r1')\nORDER BY column_name1;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_comment_columns_zookeeper.sql","errors":[]},{"query":"CREATE TABLE dst_00753 (x UInt64, y UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00753_alter_destination_for_storage_buffer.sql","errors":[]},{"query":"CREATE TABLE buffer_00753 (x UInt64, y UInt64) ENGINE = Buffer(currentDatabase(), dst_00753, 1, 99999, 99999, 1, 1, 99999, 99999);","fileName":"../ClickHouse/tests/queries/0_stateless/00753_alter_destination_for_storage_buffer.sql","errors":[]},{"query":"CREATE TABLE alter_attach (x UInt64, p UInt8) ENGINE = MergeTree ORDER BY tuple() PARTITION BY p;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_alter_attach.sql","errors":[]},{"query":"CREATE TABLE detach_all_no_partition (x UInt64, p UInt8) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00753_alter_attach.sql","errors":[]},{"query":"CREATE TABLE replicated_table_detach_all1 ( id UInt64,\nData String\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/test_00753_{database}/replicated_table_detach_all', '1') ORDER BY id PARTITION BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_alter_attach.sql","errors":[]},{"query":"CREATE TABLE replicated_table_detach_all2 ( id UInt64,\nData String\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/test_00753_{database}/replicated_table_detach_all', '2') ORDER BY id PARTITION BY id;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_alter_attach.sql","errors":[]},{"query":"CREATE TABLE partition_all (x UInt64, p UInt8, q UInt8) ENGINE = MergeTree ORDER BY tuple() PARTITION BY p;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_alter_attach.sql","errors":[]},{"query":"CREATE TABLE partition_all2 (x UInt64, p UInt8, q UInt8) ENGINE = MergeTree ORDER BY tuple() PARTITION BY p;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_alter_attach.sql","errors":[]},{"query":"CREATE TABLE partition_attach_all (x UInt64, p UInt8) ENGINE = MergeTree ORDER BY x PARTITION BY p;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_alter_attach.sql","errors":[]},{"query":"CREATE TABLE replicated_partition_attach_all (x UInt64, p UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/test_00753_{database}/replicated_partition_attach_all', '1')\nORDER BY x\nPARTITION BY p;","fileName":"../ClickHouse/tests/queries/0_stateless/00753_alter_attach.sql","errors":[]},{"query":"create table lc_perm (val UInt32, str LowCardinality(String)) engine = MergeTree order by val;","fileName":"../ClickHouse/tests/queries/0_stateless/00752_low_cardinality_permute.sql","errors":[]},{"query":"CREATE TABLE radacct ( radacctid UInt64, f3gppchargingid Nullable(String), f3gppggsnaddress Nullable(String), f3gppggsnmccmnc Nullable(String), f3gppgprsqos Nullable(String), f3gppimeisv Nullable(String), f3gppimsi Nullable(UInt64), f3gppimsimccmnc Nullable(String), f3gpploci Nullable(String), f3gppnsapi Nullable(String), f3gpprattype Nullable(String), f3gppsgsnaddress Nullable(String), f3gppsgsnmccmnc Nullable(String), acctdelaytime Nullable(UInt32), acctinputoctets Nullable(UInt64), acctinputpackets Nullable(UInt64), acctoutputoctets Nullable(UInt64), acctoutputpackets Nullable(UInt64), acctsessionid String, acctstatustype Nullable(String), acctuniqueid String, calledstationid Nullable(String), callingstationid Nullable(String), framedipaddress Nullable(String), nasidentifier Nullable(String), nasipaddress Nullable(String), acctstarttime Nullable(DateTime), acctstoptime Nullable(DateTime), acctsessiontime Nullable(UInt32), acctterminatecause Nullable(String), acctstartdelay Nullable(UInt32), acctstopdelay Nullable(UInt32), connectinfo_start Nullable(String), connectinfo_stop Nullable(String), timestamp DateTime, username Nullable(String), realm Nullable(String), f3gppimsi_int UInt64, f3gppsgsnaddress_int Nullable(UInt32), timestamp_date Date, tac Nullable(String), mnc Nullable(String), tadig LowCardinality(String), country LowCardinality(String), tadig_op_ip Nullable(String) DEFAULT CAST('TADIG NOT FOUND', 'Nullable(String)'), mcc Nullable(UInt16) MATERIALIZED toUInt16OrNull(substring(f3gppsgsnmccmnc, 1, 6))) ENGINE = MergeTree(timestamp_date, (timestamp, radacctid, acctuniqueid), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00752_low_cardinality_mv_2.sql","errors":[]},{"query":"create materialized view mv_traffic_by_tadig15min Engine=AggregatingMergeTree partition by tadig order by (ts,tadig) populate as select toStartOfFifteenMinutes(timestamp) ts,toDayOfWeek(timestamp) dow, tadig, sumState(acctinputoctets+acctoutputoctets) traffic_bytes,maxState(timestamp) last_stop, minState(radacctid) min_radacctid,maxState(radacctid) max_radacctid from radacct where acctstatustype='Stop' and acctinputoctets+acctoutputoctets > 0 group by tadig,ts,dow;","fileName":"../ClickHouse/tests/queries/0_stateless/00752_low_cardinality_mv_2.sql","errors":[]},{"query":"create table lc_00752 (str LowCardinality(String)) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00752_low_cardinality_mv_1.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW lc_mv_00752 ENGINE = AggregatingMergeTree() ORDER BY tuple() populate AS SELECT substring(str, 1, 1) as letter, min(length(str)) AS min_len, max(length(str)) AS max_len FROM lc_00752 GROUP BY substring(str, 1, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00752_low_cardinality_mv_1.sql","errors":[]},{"query":"CREATE TABLE lc_left_aj (\nstr Array(LowCardinality(String)), \nnull_str Array(LowCardinality(Nullable(String))), \nval Array(LowCardinality(Float64)), \nnull_val Array(LowCardinality(Nullable(Float64)))\n)\nENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00752_low_cardinality_left_array_join.sql","errors":[]},{"query":"create table lc_lambda (arr Array(LowCardinality(UInt64))) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00752_low_cardinality_lambda_argument.sql","errors":[]},{"query":"CREATE TABLE test_array(resources_host Array(LowCardinality(String))) ENGINE = MergeTree() ORDER BY (resources_host);","fileName":"../ClickHouse/tests/queries/0_stateless/00752_low_cardinality_lambda_argument.sql","errors":[]},{"query":"CREATE TABLE low_null_float (a LowCardinality(Nullable(Float64))) ENGINE = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00751_low_cardinality_nullable_group_by.sql","errors":[]},{"query":"CREATE TABLE t_00751 (\ndate Date,\nplatform Enum8('a' = 0, 'b' = 1),\napp Enum8('a' = 0, 'b' = 1)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00751_default_databasename_for_view.sql","errors":[]},{"query":"CREATE TABLE u_00751 (app Enum8('a' = 0, 'b' = 1)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00751_default_databasename_for_view.sql","errors":[]},{"query":"CREATE TABLE v_00751 (platform Enum8('a' = 0, 'b' = 1)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00751_default_databasename_for_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW t_mv_00751 ENGINE = MergeTree ORDER BY date AS SELECT date, platform, app FROM t_00751\nWHERE app = (SELECT min(app) from u_00751) AND platform = (SELECT (SELECT min(platform) from v_00751));","fileName":"../ClickHouse/tests/queries/0_stateless/00751_default_databasename_for_view.sql","errors":[]},{"query":"CREATE TABLE sample_merge_tree (dt DateTime, x UInt64) ENGINE = MergeTree PARTITION BY toYYYYMMDD(dt) ORDER BY x SETTINGS min_merge_bytes_to_use_direct_io=1, index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/00750_merge_tree_merge_with_o_direct.sql","errors":[]},{"query":"CREATE TABLE left_table(APIKey Int32, SomeColumn String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00749_inner_join_of_unnamed_subqueries.sql","errors":[]},{"query":"CREATE TABLE right_table(APIKey Int32, EventValueForPostback String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00749_inner_join_of_unnamed_subqueries.sql","errors":[]},{"query":"CREATE TABLE arraytest ( created_date Date DEFAULT toDate(created_at), created_at DateTime DEFAULT now(), strings Array(String) DEFAULT emptyArrayString()) ENGINE = MergeTree(created_date, cityHash64(created_at), (created_date, cityHash64(created_at)), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00748_insert_array_with_null.sql","errors":[]},{"query":"CREATE TABLE time_table(timecol DateTime, value Int32) ENGINE = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00746_compile_non_deterministic_function.sql","errors":[]},{"query":"CREATE TABLE dt(tkey Int32) ENGINE = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00745_compile_scalar_subquery.sql","errors":[]},{"query":"CREATE TABLE testx(t Int32, a UInt8) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00745_compile_scalar_subquery.sql","errors":[]},{"query":"CREATE TABLE dt(tkey Int32) ENGINE = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00745_compile_scalar_subquery.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test_00744 (\nx Int32\n);","fileName":"../ClickHouse/tests/queries/0_stateless/00744_join_not_found_column.sql","errors":[]},{"query":"CREATE TABLE installation_stats (message String, info String, message_type String) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00743_limit_by_not_found_column.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE Accounts (AccountID UInt64, Currency String);","fileName":"../ClickHouse/tests/queries/0_stateless/00743_limit_by_not_found_column.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE commententry1 (created_date Date, link_id String, subreddit String);","fileName":"../ClickHouse/tests/queries/0_stateless/00743_limit_by_not_found_column.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS test_00741; -- foo DROP DATABASE test_00741;","fileName":"../ClickHouse/tests/queries/0_stateless/00741_client_comment_multiline.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS test_00741;'","startColumn":40,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"CREATE TABLE perf (site String, user_id UInt64, z Float64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00740_optimize_predicate_expression.sql","errors":[]},{"query":"CREATE VIEW test_00740 AS SELECT 1 AS N;","fileName":"../ClickHouse/tests/queries/0_stateless/00740_database_in_nested_view.sql","errors":[]},{"query":"CREATE VIEW test_view_00740 AS SELECT * FROM test_00740;","fileName":"../ClickHouse/tests/queries/0_stateless/00740_database_in_nested_view.sql","errors":[]},{"query":"CREATE VIEW test_nested_view_00740 AS SELECT * FROM (SELECT * FROM test_00740);","fileName":"../ClickHouse/tests/queries/0_stateless/00740_database_in_nested_view.sql","errors":[]},{"query":"CREATE VIEW test_joined_view_00740 AS SELECT *, N AS x FROM test_00740 ANY LEFT JOIN test_00740 USING N;","fileName":"../ClickHouse/tests/queries/0_stateless/00740_database_in_nested_view.sql","errors":[]},{"query":"create temporary table wups (a Array(Nullable(String)));","fileName":"../ClickHouse/tests/queries/0_stateless/00739_array_element_nullable_string_mattrobenolt.sql","errors":[]},{"query":"create temporary table wups (a Array(Nullable(String)));","fileName":"../ClickHouse/tests/queries/0_stateless/00739_array_element_nullable_string_mattrobenolt.sql","errors":[]},{"query":"CREATE TABLE sites (Domain UInt8, \\`Users.UserID\\` Array(UInt64), \\`Users.Dates\\` Array(Array(Date))) ENGINE = MergeTree ORDER BY Domain SETTINGS vertical_merge_algorithm_min_rows_to_activate = 0, vertical_merge_algorithm_min_columns_to_activate = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00738_nested_merge_multidimensional_array.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE sites (Domain UInt8, \\'","startColumn":34,"startLine":1,"endColumn":35,"endLine":1}]},{"query":"CREATE TABLE IF NOT EXISTS decimal (\nA UInt64,\nB Decimal128(18),\nC Decimal128(18)\n) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00737_decimal_group_by.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS bug(k UInt64, s UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00736_disjunction_optimisation.sql","errors":[]},{"query":"CREATE TABLE or_expr_bug (a UInt64, b UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00735_or_expr_optimize_bug.sql","errors":[]},{"query":"CREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum2', '1') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/00732_quorum_insert_simple_test_2_parts_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum2', '2') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/00732_quorum_insert_simple_test_2_parts_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum1', '1') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/00732_quorum_insert_simple_test_1_parts_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum1', '2') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/00732_quorum_insert_simple_test_1_parts_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_old_data', '1') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/00732_quorum_insert_select_with_old_data_and_without_quorum_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_old_data', '2') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/00732_quorum_insert_select_with_old_data_and_without_quorum_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_lost', '1') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/00732_quorum_insert_lost_part_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_lost', '2') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/00732_quorum_insert_lost_part_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_lost_alive', '1') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/00732_quorum_insert_lost_part_and_alive_part_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_lost_alive', '2') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/00732_quorum_insert_lost_part_and_alive_part_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_have_data', '1') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/00732_quorum_insert_have_data_before_quorum_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_have_data', '2') ORDER BY x PARTITION BY y;","fileName":"../ClickHouse/tests/queries/0_stateless/00732_quorum_insert_have_data_before_quorum_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE decimal_sum (\ndate Date,\nsum32 Decimal32(4),\nsum64 Decimal64(8),\nsum128 Decimal128(10)\n) Engine = SummingMergeTree(date, (date), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00732_decimal_summing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE unicode(c1 String, c2 String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00730_unicode_terminal_format.sql","errors":[]},{"query":"create table t1_00729 (id UInt64, val Array(String),nid UInt64, eDate Date)ENGINE = MergeTree(eDate, (id, eDate), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00729_prewhere_array_join.sql","errors":[]},{"query":"create table t1_00729 (id UInt64, val Array(String),nid UInt64, eDate Date) ENGINE = MergeTree(eDate, (id, eDate), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00729_prewhere_array_join.sql","errors":[]},{"query":"CREATE TABLE concat_saf_test(x SimpleAggregateFunction(max, Int32)) ENGINE=MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00727_concat.sql","errors":[]},{"query":"CREATE TABLE concat_nested_test(attrs Nested(k String, v String)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00727_concat.sql","errors":[]},{"query":"CREATE TABLE src_00726 (x UInt8) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00726_materialized_view_concurrent.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv1_00726 ENGINE = Memory AS SELECT x FROM src_00726 WHERE x % 2 = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00726_materialized_view_concurrent.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv2_00726 ENGINE = Memory AS SELECT x FROM src_00726 WHERE x % 2 = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00726_materialized_view_concurrent.sql","errors":[]},{"query":"create table t_00725_4(a Int64, b Int64, c String) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00725_join_on_bug_4.sql","errors":[]},{"query":"create table s_00725_4(a Int64, b Int64, c String) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00725_join_on_bug_4.sql","errors":[]},{"query":"create table t_00725_3(a Int64, b Int64) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00725_join_on_bug_3.sql","errors":[]},{"query":"create table z_00725_3(c Int64, d Int64, e Int64) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00725_join_on_bug_3.sql","errors":[]},{"query":"create table t_00725_2(a Int64, b Int64) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00725_join_on_bug_2.sql","errors":[]},{"query":"create table s_00725_2(a Int64, b Int64) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00725_join_on_bug_2.sql","errors":[]},{"query":"CREATE TABLE a1(a UInt8, b UInt8) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00725_join_on_bug_1.sql","errors":[]},{"query":"CREATE TABLE a2(a UInt8, b UInt8) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00725_join_on_bug_1.sql","errors":[]},{"query":"CREATE TABLE ipv4_test (ipv4_ IPv4) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00725_ipv4_ipv6_domains.sql","errors":[]},{"query":"CREATE TABLE ipv6_test (ipv6_ IPv6) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00725_ipv4_ipv6_domains.sql","errors":[]},{"query":"CREATE TABLE check_query_comment_column (\nfirst_column UInt8 DEFAULT 1 COMMENT 'comment 1',\nsecond_column UInt8 MATERIALIZED first_column COMMENT 'comment 2',\nthird_column UInt8 ALIAS second_column COMMENT 'comment 3',\nfourth_column UInt8 COMMENT 'comment 4',\nfifth_column UInt8\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00725_comment_columns_long.sql","errors":[]},{"query":"CREATE TABLE check_query_comment_column (\nfirst_column UInt8 COMMENT 'comment 1',\nsecond_column UInt8 COMMENT 'comment 2',\nthird_column UInt8 COMMENT 'comment 3'\n) ENGINE = MergeTree()\nORDER BY first_column\nPARTITION BY second_column\nSAMPLE BY first_column;","fileName":"../ClickHouse/tests/queries/0_stateless/00725_comment_columns_long.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test_00724 (d Date, dt DateTime);","fileName":"../ClickHouse/tests/queries/0_stateless/00724_insert_values_datetime_conversion.sql","errors":[]},{"query":"CREATE TABLE one(dummy UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00722_inner_join.sql","errors":[]},{"query":"CREATE TABLE byte_identical_r1(x UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00721/byte_identical', 'r1') ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00721_force_by_identical_result_after_merge_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE byte_identical_r2(x UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00721/byte_identical', 'r2') ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00721_force_by_identical_result_after_merge_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE cube(a String, b Int32, s Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00720_with_cube.sql","errors":[]},{"query":"create table tab_00718 (a String, b LowCardinality(UInt32)) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/00718_low_cardinaliry_alter.sql","errors":[]},{"query":"CREATE TABLE test_local_1 (date Date, value UInt32) ENGINE = MergeTree(date, date, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00717_merge_and_distributed.sql","errors":[]},{"query":"CREATE TABLE test_local_2 (date Date, value UInt32) ENGINE = MergeTree(date, date, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00717_merge_and_distributed.sql","errors":[]},{"query":"CREATE TABLE test_distributed_1 AS test_local_1 ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_local_1, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/00717_merge_and_distributed.sql","errors":[]},{"query":"CREATE TABLE test_distributed_2 AS test_local_2 ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_local_2, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/00717_merge_and_distributed.sql","errors":[]},{"query":"CREATE TABLE test_s64_local (date Date, value Int64) ENGINE = MergeTree(date, date, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00717_merge_and_distributed.sql","errors":[]},{"query":"CREATE TABLE test_u64_local (date Date, value UInt64) ENGINE = MergeTree(date, date, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00717_merge_and_distributed.sql","errors":[]},{"query":"CREATE TABLE test_s64_distributed AS test_s64_local ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_s64_local, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/00717_merge_and_distributed.sql","errors":[]},{"query":"CREATE TABLE test_u64_distributed AS test_u64_local ENGINE = Distributed('test_shard_localhost', currentDatabase(), test_u64_local, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/00717_merge_and_distributed.sql","errors":[]},{"query":"create table tab_00717 (a String, b LowCardinality(String)) engine = MergeTree order by a;","fileName":"../ClickHouse/tests/queries/0_stateless/00717_low_cardinaliry_group_by.sql","errors":[]},{"query":"CREATE TABLE test_low_null_float (a LowCardinality(Nullable(Float64))) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00717_low_cardinaliry_distributed_group_by.sql","errors":[]},{"query":"CREATE TABLE dist_00717 (a LowCardinality(Nullable(Float64))) ENGINE = Distributed('test_cluster_two_shards_localhost', currentDatabase(), 'test_low_null_float', rand());","fileName":"../ClickHouse/tests/queries/0_stateless/00717_low_cardinaliry_distributed_group_by.sql","errors":[]},{"query":"CREATE TABLE default_join1(a Int64, b Int64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00717_default_join_type.sql","errors":[]},{"query":"CREATE TABLE default_join2(a Int64, b Int64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00717_default_join_type.sql","errors":[]},{"query":"create table rate_test (timestamp UInt32, event UInt32) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00715_bounding_ratio_merge_empty.sql","errors":[]},{"query":"create table rate_test2 (timestamp UInt32, event UInt32) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00715_bounding_ratio_merge_empty.sql","errors":[]},{"query":"create table rate_test (timestamp UInt32, event UInt32) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00715_bounding_ratio.sql","errors":[]},{"query":"create table rate_test2 (uid UInt32 default 1,timestamp DateTime, event UInt32) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00715_bounding_ratio.sql","errors":[]},{"query":"CREATE TABLE test_merge_1(id UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00714_create_temporary_table_with_in_clause.sql","errors":[]},{"query":"CREATE TABLE test_merge_2(id UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00714_create_temporary_table_with_in_clause.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE temporary_table AS SELECT * FROM numbers(1) WHERE number NOT IN (SELECT id FROM merge(currentDatabase(), 'test_merge_1|test_merge_2'));","fileName":"../ClickHouse/tests/queries/0_stateless/00714_create_temporary_table_with_in_clause.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS uuid (\ncreated_at DateTime,\nid0 String,\nid1 FixedString(36)\n)\nENGINE = MergeTree\nPARTITION BY toDate(created_at)\nORDER BY (created_at);","fileName":"../ClickHouse/tests/queries/0_stateless/00714_alter_uuid.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS uuid (\ncreated_at DateTime,\nid0 String,\nid1 FixedString(36)\n)\nENGINE = MergeTree\nPARTITION BY toDate(created_at)\nORDER BY (created_at, id0, id1);","fileName":"../ClickHouse/tests/queries/0_stateless/00714_alter_uuid.sql","errors":[]},{"query":"CREATE TABLE collapsing(key String, value String, sign Int8) ENGINE CollapsingMergeTree(sign) ORDER BY key\nSETTINGS enable_vertical_merge_algorithm=1,\nvertical_merge_algorithm_min_rows_to_activate=0,\nvertical_merge_algorithm_min_columns_to_activate=0;","fileName":"../ClickHouse/tests/queries/0_stateless/00713_collapsing_merge_tree.sql","errors":[]},{"query":"create table t_00712_2 (date Date, counter UInt64, sampler UInt64, alias_col alias date + 1) engine = MergeTree(date, intHash32(sampler), (counter, date, intHash32(sampler)), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00712_prewhere_with_sampling_and_alias.sql","errors":[]},{"query":"create table tab_00712_2 (a UInt32, b UInt32) engine = MergeTree order by b % 2 sample by b % 2;","fileName":"../ClickHouse/tests/queries/0_stateless/00712_prewhere_with_sampling.sql","errors":[]},{"query":"CREATE TABLE sample_prewhere (CounterID UInt32, UserID UInt64) ENGINE = MergeTree ORDER BY UserID SAMPLE BY UserID;","fileName":"../ClickHouse/tests/queries/0_stateless/00712_prewhere_with_sampling.sql","errors":[]},{"query":"create table t_00712_1 (a Int32, b Int32) engine = MergeTree partition by (a,b) order by (a);","fileName":"../ClickHouse/tests/queries/0_stateless/00712_prewhere_with_missing_columns_2.sql","errors":[]},{"query":"CREATE TABLE mergetree_00712 (x UInt8, s String) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00712_prewhere_with_missing_columns.sql","errors":[]},{"query":"create table trepl(d Date,a Int32, b Int32) engine = ReplacingMergeTree(d, (a,b), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00712_prewhere_with_final.sql","errors":[]},{"query":"create table versioned_collapsing(d Date, x UInt32, sign Int8, version UInt32) engine = VersionedCollapsingMergeTree(d, x, 8192, sign, version);","fileName":"../ClickHouse/tests/queries/0_stateless/00712_prewhere_with_final.sql","errors":[]},{"query":"CREATE TABLE table (a UInt32,  date Date, b UInt64,  c UInt64, str String, d Int8, arr Array(UInt64), arr_alias Array(UInt64) ALIAS arr) ENGINE = MergeTree(date, intHash32(c), (a, date, intHash32(c), b), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00712_prewhere_with_alias_bug_2.sql","errors":[]},{"query":"create table prewhere_alias (a Int32, b Int32, c alias a + b) engine = MergeTree order by b;","fileName":"../ClickHouse/tests/queries/0_stateless/00712_prewhere_with_alias_bug.sql","errors":[]},{"query":"create table tab_00712_1 (a UInt32, b UInt32 alias a + 1, c UInt32) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00712_prewhere_with_alias_and_virtual_column.sql","errors":[]},{"query":"CREATE TABLE prewhere_alias (a UInt8,  b Int32,  c UInt8 ALIAS a,  d Int64 ALIAS b + 1, e Int32 alias a + b) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00712_prewhere_with_alias.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS partition_id (d Date DEFAULT '2000-01-01', x UInt64) ENGINE = MergeTree(d, x, 5);","fileName":"../ClickHouse/tests/queries/0_stateless/00709_virtual_column_partition_id.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test_00707 (x Float32, y Float64, z UInt64, s String);","fileName":"../ClickHouse/tests/queries/0_stateless/00707_float_csv_delimiter.sql","errors":[]},{"query":"CREATE TABLE add_aggregate(a UInt32, b UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00705_aggregate_states_addition.sql","errors":[]},{"query":"CREATE TABLE test(a Array(Int64), b Array(Float64), c Array(UInt64)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00704_arrayCumSumLimited_arrayDifference.sql","errors":[]},{"query":"create table tab1 (a1 Int32, b1 Int32) engine = MergeTree order by a1;","fileName":"../ClickHouse/tests/queries/0_stateless/00703_join_crash.sql","errors":[]},{"query":"create table tab1_copy (a1 Int32, b1 Int32) engine = MergeTree order by a1;","fileName":"../ClickHouse/tests/queries/0_stateless/00703_join_crash.sql","errors":[]},{"query":"CREATE TABLE where_qualified(a UInt32, b UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00702_where_with_quailified_names.sql","errors":[]},{"query":"create table X (id Int32, x_name String) engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00702_join_with_using_dups.sql","errors":[]},{"query":"create table Y (id Int32, y_name String) engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00702_join_with_using_dups.sql","errors":[]},{"query":"CREATE TABLE using1(a UInt8, b UInt8) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00702_join_with_using.sql","errors":[]},{"query":"CREATE TABLE using2(a UInt8, b UInt8) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00702_join_with_using.sql","errors":[]},{"query":"create table persons (id String, name String) engine MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/00702_join_with_using.sql","errors":[]},{"query":"create table children (id String, childName String) engine MergeTree order by id;","fileName":"../ClickHouse/tests/queries/0_stateless/00702_join_with_using.sql","errors":[]},{"query":"create table X (id Int32, x_a String, x_b Nullable(Int32)) engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00702_join_on_dups.sql","errors":[]},{"query":"create table Y (id Int32, y_a String, y_b Nullable(String)) engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00702_join_on_dups.sql","errors":[]},{"query":"CREATE TABLE rollup(a String, b Int32, s Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00701_rollup.sql","errors":[]},{"query":"CREATE TABLE a1(a UInt8, b UInt8) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00701_join_default_strictness.sql","errors":[]},{"query":"CREATE TABLE a2(a UInt8, b UInt8) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00701_join_default_strictness.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS decimal (\nd1 DECIMAL(9, 8),\nd2 DECIMAL(18),\nd3 DECIMAL\n)\nENGINE = MergeTree\nPARTITION BY toInt32(d1)\nORDER BY (d2, d3);","fileName":"../ClickHouse/tests/queries/0_stateless/00700_decimal_with_default_precision_and_scale.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS decimal (\na DEC(9, 2),\nb DEC(18, 5),\nc DEC(38, 5),\nd Nullable(DEC(9, 4)),\ne Nullable(DEC(18, 8)),\nf Nullable(DEC(38, 8))\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00700_decimal_null.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS decimal (\nd1 DECIMAL(9, 8),\nd2 DECIMAL(18, 8),\nd3 DECIMAL(38, 8)\n)\nENGINE = MergeTree\nPARTITION BY toInt32(d1)\nORDER BY (d2, d3);","fileName":"../ClickHouse/tests/queries/0_stateless/00700_decimal_in_keys.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS decimal (\na DEC(9, 3),\nb DEC(18, 9),\nc DEC(38, 18)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00700_decimal_formats.sql","errors":[]},{"query":"CREATE TABLE decimal (\na Decimal(6, 4),\nb Decimal(16, 7),\nc Decimal(20, 8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00700_decimal_empty_aggregates.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS decimal (\na DECIMAL(9,4) DEFAULT 0,\nb DECIMAL(18,4) DEFAULT a / 2,\nc DECIMAL(38,4) DEFAULT b / 3,\nd MATERIALIZED a + toDecimal32('0.2', 1),\ne ALIAS b * 2,\nf ALIAS c * 6\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00700_decimal_defaults.sql","errors":[]},{"query":"CREATE TABLE decimal (\na Array(Decimal32(3)),\nb Array(Decimal64(3)),\nc Array(Decimal128(3)),\nnest Nested\n(\na Decimal(9,2),\nb Decimal(18,2),\nc Decimal(38,2)\n),\ntup Tuple(Decimal32(1), Decimal64(1), Decimal128(1))\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00700_decimal_complex_types.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS decimal (\na DECIMAL(9,0),\nb DECIMAL(18,0),\nc DECIMAL(38,0),\nd DECIMAL(9, 9),\ne Decimal64(18),\nf Decimal128(38),\ng Decimal32(5),\nh Decimal64(9),\ni Decimal128(18),\nj dec(4,2)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00700_decimal_compare.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS decimal (x DECIMAL(10, -2)) ENGINE = Memory; -- { serverError ARGUMENT_OUT_OF_BOUND } CREATE TABLE IF NOT EXISTS decimal (x DECIMAL(10, 15)) ENGINE = Memory; -- { serverError ARGUMENT_OUT_OF_BOUND }\nCREATE TABLE IF NOT EXISTS decimal (x DECIMAL(0, 0)) ENGINE = Memory; -- { serverError ARGUMENT_OUT_OF_BOUND }\nCREATE TABLE IF NOT EXISTS decimal\n(\na DECIMAL(9,0),\nb DECIMAL(18,0),\nc DECIMAL(38,0),\nd DECIMAL(9, 9),\ne DECIMAL(18, 18),\nf DECIMAL(38, 38),\ng Decimal(9, 5),\nh decimal(18, 9),\ni deciMAL(38, 18),\nj DECIMAL(1,0)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00700_decimal_bounds.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS decimal (\na DECIMAL(9,0),\nb DECIMAL(18,0),\nc DECIMAL(38,0),\nd DECIMAL(9, 9),\ne DEC(18, 18),\nf dec(38, 38),\ng Decimal(9, 3),\nh decimal(18, 9),\ni deciMAL(38, 18),\nj dec(4, 2),\nk NumEriC(23, 4),\nl numeric(9, 3),\nm NUMEric(18, 9),\nn FixED(12, 6),\no fixed(8, 6)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00700_decimal_arithm.sql","errors":[]},{"query":"CREATE TABLE decimal (\na Decimal32(4),\nb Decimal64(8),\nc Decimal128(8)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00700_decimal_aggregates.sql","errors":[]},{"query":"CREATE TABLE Issue_2231_Invalid_Nested_Columns_Size ( Date Date,\nNestedColumn Nested(\nID    Int32,\nCount Int64\n)\n) Engine = MergeTree \nPARTITION BY tuple()\nORDER BY Date;","fileName":"../ClickHouse/tests/queries/0_stateless/00698_validate_array_sizes_for_nested_kshvakov.sql","errors":[]},{"query":"CREATE TABLE mergetree_00698 (k UInt32, \\`n.x\\` Array(UInt64), \\`n.y\\` Array(UInt64)) ENGINE = MergeTree ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/00698_validate_array_sizes_for_nested.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE mergetree_00698 (k UInt32, \\'","startColumn":40,"startLine":1,"endColumn":41,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE t_00693 (x UInt8);","fileName":"../ClickHouse/tests/queries/0_stateless/00693_max_block_size_system_tables_columns.sql","errors":[]},{"query":"create table lc_str_0 (str LowCardinality(String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_syntax.sql","errors":[]},{"query":"create table lc_null_str_0 (str LowCardinality(Nullable(String))) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_syntax.sql","errors":[]},{"query":"create table lc_int8_0 (val LowCardinality(Int8)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_syntax.sql","errors":[]},{"query":"create table lc_null_int8_0 (val LowCardinality(Nullable(Int8))) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_syntax.sql","errors":[]},{"query":"create table lc_fix_str_0 (str LowCardinality(FixedString(2))) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_syntax.sql","errors":[]},{"query":"create table lc_null_fix_str_0 (str LowCardinality(Nullable(FixedString(2)))) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_syntax.sql","errors":[]},{"query":"create table lc_str_uuid(str1 String, str2 LowCardinality(String), str3 LowCardinality(String)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_syntax.sql","errors":[]},{"query":"create table lc_small_dict (str LowCardinality(String)) engine = MergeTree order by str SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_serialization.sql","errors":[]},{"query":"create table lc_big_dict (str LowCardinality(String)) engine = MergeTree order by str SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_serialization.sql","errors":[]},{"query":"create table lc_prewhere (key UInt64, val UInt64, str LowCardinality(String), s String) engine = MergeTree order by key settings index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_prewhere.sql","errors":[]},{"query":"CREATE TABLE lc_null_int8_defnull (val LowCardinality(Nullable(Int8)) DEFAULT NULL) ENGINE = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_nullable_cast.sql","errors":[]},{"query":"create table lc_00688 (str LowCardinality(String), val LowCardinality(UInt8)) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_in.sql","errors":[]},{"query":"CREATE TABLE ary_lc_null (i int, v Array(LowCardinality(Nullable(String)))) ENGINE = MergeTree() ORDER BY i ;","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_in.sql","errors":[]},{"query":"create table lc_dict_reading (val UInt64, str LowCardinality(String), pat String) engine = MergeTree order by val SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_dictionary_deserialization.sql","errors":[]},{"query":"create table cardinality (x String) engine = MergeTree order by tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00688_low_cardinality_alter_add_column.sql","errors":[]},{"query":"CREATE TABLE test_00688 (a UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00688_case_without_else.sql","errors":[]},{"query":"CREATE TABLE retention_test(date Date, uid Int32)ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00688_aggregation_retention.sql","errors":[]},{"query":"CREATE TABLE test_00687 (x String) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00687_insert_into_mv.sql","errors":[]},{"query":"create MATERIALIZED VIEW mv_bad (x String) ENGINE = MergeTree Partition by tuple() order by tuple()\nAS SELECT DISTINCT x FROM test_00687;","fileName":"../ClickHouse/tests/queries/0_stateless/00687_insert_into_mv.sql","errors":[]},{"query":"create MATERIALIZED VIEW mv_good (x String) ENGINE = MergeTree Partition by tuple() order by tuple()\nAS SELECT x FROM test_00687;","fileName":"../ClickHouse/tests/queries/0_stateless/00687_insert_into_mv.sql","errors":[]},{"query":"create MATERIALIZED VIEW mv_group (x String) ENGINE = MergeTree Partition by tuple() order by tuple()\nAS SELECT x FROM test_00687 group by x;","fileName":"../ClickHouse/tests/queries/0_stateless/00687_insert_into_mv.sql","errors":[]},{"query":"CREATE TABLE test_00681(x Int32) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00681_duplicate_columns_inside_union_all_stas_sviridov.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS uuid (\ncreated_at DateTime,\nid UUID\n)\nENGINE = MergeTree\nPARTITION BY toDate(created_at)\nORDER BY (created_at, id);","fileName":"../ClickHouse/tests/queries/0_stateless/00679_uuid_in_key.sql","errors":[]},{"query":"CREATE TABLE remote_test(uid String, its UInt32,  action_code String, day Date) ENGINE = MergeTree(day, (uid, its), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00678_shard_funnel_window.sql","errors":[]},{"query":"CREATE TABLE remote_test(a1 UInt8) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00675_shard_remote_with_table_function.sql","errors":[]},{"query":"create table tab1 (a1 Int32, b1 Int32) engine = MergeTree order by a1;","fileName":"../ClickHouse/tests/queries/0_stateless/00674_join_on_syntax.sql","errors":[]},{"query":"create table tab2 (a2 Int32, b2 Int32) engine = MergeTree order by a2;","fileName":"../ClickHouse/tests/queries/0_stateless/00674_join_on_syntax.sql","errors":[]},{"query":"create table tab3 (a3 Int32, b3 Int32) engine = MergeTree order by a3;","fileName":"../ClickHouse/tests/queries/0_stateless/00674_join_on_syntax.sql","errors":[]},{"query":"create table tab1_copy (a1 Int32, b1 Int32) engine = MergeTree order by a1;","fileName":"../ClickHouse/tests/queries/0_stateless/00674_join_on_syntax.sql","errors":[]},{"query":"CREATE TABLE mergetree_00673 (x UInt64) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00673_subquery_prepared_set_performance.sql","errors":[]},{"query":"CREATE TABLE arrayDistinct_test(arr_int Array(UInt8), arr_string Array(String)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00672_arrayDistinct.sql","errors":[]},{"query":"CREATE TABLE test1_00671(start Integer, end Integer) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00671_max_intersections.sql","errors":[]},{"query":"CREATE TABLE test2_00671(start Integer, end Integer) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00671_max_intersections.sql","errors":[]},{"query":"create temporary table test_00670(id int);","fileName":"../ClickHouse/tests/queries/0_stateless/00670_truncate_temporary_table.sql","errors":[]},{"query":"CREATE TABLE array (arr Array(Nullable(Float64))) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00668_compare_arrays_silviucpp.sql","errors":[]},{"query":"CREATE TABLE alter_00665 (\\`boolean_false\\` Nullable(String)) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00665_alter_nullable_string_to_nullable_uint8.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE alter_00665 (\\'","startColumn":26,"startLine":1,"endColumn":27,"endLine":1}]},{"query":"CREATE TABLE empty (value Int8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00663_tiny_log_empty_insert.sql","errors":[]},{"query":"CREATE TABLE data (value Int8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00663_tiny_log_empty_insert.sql","errors":[]},{"query":"CREATE TABLE 00662_has_nullable(a Nullable(UInt64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00662_has_nullable.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 00662'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 00662_has_nullable(a UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00662_has_nullable.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 00662'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 00662_has_nullable(a Nullable(UInt64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00662_has_nullable.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 00662'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE 00662_has_nullable(a Nullable(UInt64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00662_has_nullable.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE 00662'","startColumn":13,"startLine":1,"endColumn":18,"endLine":1}]},{"query":"CREATE TABLE partitioned_by_tuple_replica1_00661(d Date, x UInt8, w String, y UInt8) ENGINE = ReplicatedSummingMergeTree('/clickhouse/tables/{database}/test/partitioned_by_tuple_00661', '1') PARTITION BY (d, x) ORDER BY (d, x, w);","fileName":"../ClickHouse/tests/queries/0_stateless/00661_optimize_final_replicated_without_partition_zookeeper.sql","errors":[]},{"query":"CREATE TABLE partitioned_by_tuple_replica2_00661(d Date, x UInt8, w String, y UInt8) ENGINE = ReplicatedSummingMergeTree('/clickhouse/tables/{database}/test/partitioned_by_tuple_00661', '2') PARTITION BY (d, x) ORDER BY (d, x, w);","fileName":"../ClickHouse/tests/queries/0_stateless/00661_optimize_final_replicated_without_partition_zookeeper.sql","errors":[]},{"query":"CREATE TABLE has_function(arr Array(Nullable(String))) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00661_array_has_silviucpp.sql","errors":[]},{"query":"CREATE TABLE partitioned_by_tuple (d Date, x UInt8, w String, y UInt8) ENGINE SummingMergeTree (y) PARTITION BY (d, x) ORDER BY (d, x, w);","fileName":"../ClickHouse/tests/queries/0_stateless/00660_optimize_final_without_partition.sql","errors":[]},{"query":"create table \\`table_00653\\` (val Int32) engine = MergeTree order by val;","fileName":"../ClickHouse/tests/queries/0_stateless/00653_monotonic_integer_cast.sql","errors":[{"message":"no viable alternative at input 'create table \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create table tab_00650 (val UInt32, n Nested(x UInt8, y String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00650_array_enumerate_uniq_with_tuples.sql","errors":[]},{"query":"create table tab_00650 (val UInt32, n Nested(x Nullable(UInt8), y String)) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00650_array_enumerate_uniq_with_tuples.sql","errors":[]},{"query":"CREATE TABLE final_test (id String, version Date) ENGINE = ReplacingMergeTree(version, id, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00648_replacing_empty_set_from_prewhere.sql","errors":[]},{"query":"CREATE TABLE mult_aggregation(a UInt32, b UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00647_multiply_aggregation_state.sql","errors":[]},{"query":"create table histogram(num Int64) engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00647_histogram_negative.sql","errors":[]},{"query":"CREATE TABLE weird_mmx (x Array(UInt64)) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00646_weird_mmx.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test_00645 (d DateTime) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00645_date_time_input_format.sql","errors":[]},{"query":"CREATE TABLE cast1 (\nx UInt8,\ne Enum8\n(\n'hello' = 1,\n'world' = 2\n)\nDEFAULT\nCAST\n(\nx\nAS\nEnum8\n(\n'hello' = 1,\n'world' = 2\n)\n)\n) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00643/cast', 'r1') ORDER BY e;","fileName":"../ClickHouse/tests/queries/0_stateless/00643_cast_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE cast2 AS cast1 ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00643/cast', 'r2') ORDER BY e;","fileName":"../ClickHouse/tests/queries/0_stateless/00643_cast_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE cast (\nx UInt8,\ne Enum8\n(\n'hello' = 1,\n'world' = 2\n)\nDEFAULT\nCAST\n(\nx\nAS\nEnum8\n(\n'hello' = 1,\n'world' = 2\n)\n)\n) ENGINE = MergeTree ORDER BY e;","fileName":"../ClickHouse/tests/queries/0_stateless/00642_cast.sql","errors":[]},{"query":"CREATE TABLE endsWith_test(S1 String, S2 String, S3 FixedString(2)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00640_endsWith.sql","errors":[]},{"query":"CREATE TABLE startsWith_test(S1 String, S2 String, S3 FixedString(2)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00639_startsWith.sql","errors":[]},{"query":"CREATE TABLE data (s String, x Int8, y Int8) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00635_shard_distinct_order_by.sql","errors":[]},{"query":"create table test1_00634 (id UInt8) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00634_rename_view.sql","errors":[]},{"query":"create table test2_00634 (id UInt8) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00634_rename_view.sql","errors":[]},{"query":"create view v_test1 as select id from test1_00634;","fileName":"../ClickHouse/tests/queries/0_stateless/00634_rename_view.sql","errors":[]},{"query":"create view v_test2 as select id from test2_00634;","fileName":"../ClickHouse/tests/queries/0_stateless/00634_rename_view.sql","errors":[]},{"query":"create table orin_test (c1 Int32) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00633_func_or_in.sql","errors":[]},{"query":"CREATE TABLE video_views (\nentityIri String,\ncourseId UInt64,\nlearnerId UInt64,\nactorId UInt64,\nduration UInt16,\nfullWatched UInt8,\nfullWatchedDate DateTime,\nfullWatchedDuration UInt16,\nfullWatchedTime UInt16,\nfullWatchedViews UInt16,\n\\`views.viewId\\` Array(String),\n\\`views.startedAt\\` Array(DateTime),\n\\`views.endedAt\\` Array(DateTime),\n\\`views.viewDuration\\` Array(UInt16),\n\\`views.watchedPart\\` Array(Float32),\n\\`views.fullWatched\\` Array(UInt8),\n\\`views.progress\\` Array(Float32),\n\\`views.reject\\` Array(UInt8),\n\\`views.viewNumber\\` Array(UInt16),\n\\`views.repeatingView\\` Array(UInt8),\n\\`views.ranges\\` Array(String),\nversion DateTime\n)\nENGINE = ReplacingMergeTree(version)\nPARTITION BY entityIri\nORDER BY (learnerId, entityIri)\nSETTINGS index_granularity = 8192;","fileName":"../ClickHouse/tests/queries/0_stateless/00632_get_sample_block_cache.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE video_views (\\nentityIri String,\\ncourseId UInt64,\\nlearnerId UInt64,\\nactorId UInt64,\\nduration UInt16,\\nfullWatched UInt8,\\nfullWatchedDate DateTime,\\nfullWatchedDuration UInt16,\\nfullWatchedTime UInt16,\\nfullWatchedViews UInt16,\\n\\'","startColumn":0,"startLine":12,"endColumn":1,"endLine":12}]},{"query":"CREATE TABLE dict_string (entityIri String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00632_get_sample_block_cache.sql","errors":[]},{"query":"CREATE TABLE dict_ui64 (learnerId UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00632_get_sample_block_cache.sql","errors":[]},{"query":"CREATE TABLE sample_00632 (d Date DEFAULT '2000-01-01', x UInt16) ENGINE = MergeTree(d, x, x, 10);","fileName":"../ClickHouse/tests/queries/0_stateless/00632_get_sample_block_cache.sql","errors":[]},{"query":"create table funnel_test (timestamp UInt32, event UInt32) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00632_aggregation_window_funnel.sql","errors":[]},{"query":"create table funnel_test2 (uid UInt32 default 1,timestamp DateTime, event UInt32) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00632_aggregation_window_funnel.sql","errors":[]},{"query":"create table funnel_test_u64 (uid UInt32 default 1,timestamp UInt64, event UInt32) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00632_aggregation_window_funnel.sql","errors":[]},{"query":"create table funnel_test_strict (timestamp UInt32, event UInt32) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00632_aggregation_window_funnel.sql","errors":[]},{"query":"create table funnel_test_strict_order (dt DateTime, user int, event String) engine = MergeTree() partition by dt order by user;","fileName":"../ClickHouse/tests/queries/0_stateless/00632_aggregation_window_funnel.sql","errors":[]},{"query":"create table strict_BiteTheDDDD (ts UInt64, event String) engine = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00632_aggregation_window_funnel.sql","errors":[]},{"query":"create table funnel_test_non_null (\\`dt\\` DateTime, \\`u\\` int, \\`a\\` Nullable(String), \\`b\\` Nullable(String)) engine = MergeTree() partition by dt order by u;","fileName":"../ClickHouse/tests/queries/0_stateless/00632_aggregation_window_funnel.sql","errors":[{"message":"no viable alternative at input 'create table funnel_test_non_null (\\'","startColumn":35,"startLine":1,"endColumn":36,"endLine":1}]},{"query":"create table funnel_test_strict_increase (timestamp UInt32, event UInt32) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00632_aggregation_window_funnel.sql","errors":[]},{"query":"create table test_in_tuple_1 (key Int32, key_2 Int32, x Array(Int32), y Array(Int32)) engine = MergeTree order by (key, key_2);","fileName":"../ClickHouse/tests/queries/0_stateless/00628_in_lambda_on_merge_table_bug.sql","errors":[]},{"query":"create table test_in_tuple_2 (key Int32, key_2 Int32, x Array(Int32), y Array(Int32)) engine = MergeTree order by (key, key_2);","fileName":"../ClickHouse/tests/queries/0_stateless/00628_in_lambda_on_merge_table_bug.sql","errors":[]},{"query":"create table test_in_tuple as test_in_tuple_1 engine = Merge(currentDatabase(), '^test_in_tuple_[0-9]+\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00628_in_lambda_on_merge_table_bug.sql","errors":[]},{"query":"CREATE TABLE src (p UInt64, k String, d UInt64) ENGINE = MergeTree PARTITION BY p ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/00626_replace_partition_from_table.sql","errors":[]},{"query":"CREATE TABLE dst (p UInt64, k String, d UInt64) ENGINE = MergeTree PARTITION BY p ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/00626_replace_partition_from_table.sql","errors":[]},{"query":"CREATE TEMPORARY table test_block_numbers (m UInt64);","fileName":"../ClickHouse/tests/queries/0_stateless/00626_replace_partition_from_table.sql","errors":[]},{"query":"CREATE TABLE src (p UInt64, k String, d UInt64) ENGINE = MergeTree PARTITION BY p ORDER BY k;","fileName":"../ClickHouse/tests/queries/0_stateless/00626_replace_partition_from_table.sql","errors":[]},{"query":"CREATE TABLE tab_00625 (\ndate Date,\nkey UInt32,\ntestMap Nested(\nk UInt16,\nv UInt64)\n)\nENGINE = SummingMergeTree(date, (date, key), 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00625_summing_merge_tree_merge.sql","errors":[]},{"query":"CREATE TABLE nested (\ncolumn Nested\n(\nname String,\nnames Array(String),\ntypes Array(Enum8('PU' = 1, 'US' = 2, 'OTHER' = 3))\n)\n) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00625_arrays_in_nested.sql","errors":[]},{"query":"CREATE TABLE nested (\ncolumn Nested\n(\nname String,\nnames Array(String),\ntypes Array(Enum8('PU' = 1, 'US' = 2, 'OTHER' = 3))\n)\n) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00625_arrays_in_nested.sql","errors":[]},{"query":"CREATE TABLE nested (\ncolumn Nested\n(\nname String,\nnames Array(String),\ntypes Array(Enum8('PU' = 1, 'US' = 2, 'OTHER' = 3))\n)\n) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00625_arrays_in_nested.sql","errors":[]},{"query":"CREATE TABLE nested (\ncolumn Nested\n(\nname String,\nnames Array(String),\ntypes Array(Enum8('PU' = 1, 'US' = 2, 'OTHER' = 3))\n)\n) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00625_arrays_in_nested.sql","errors":[]},{"query":"CREATE TABLE nested (\ncolumn Nested\n(\nname String,\nnames Array(String),\ntypes Array(Enum8('PU' = 1, 'US' = 2, 'OTHER' = 3))\n)\n) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00625_arrays_in_nested.sql","errors":[]},{"query":"CREATE TABLE truncate_test_set(id UInt64) ENGINE = Set;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_table.sql","errors":[]},{"query":"CREATE TABLE truncate_test_log(id UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_table.sql","errors":[]},{"query":"CREATE TABLE truncate_test_memory(id UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_table.sql","errors":[]},{"query":"CREATE TABLE truncate_test_tiny_log(id UInt64) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_table.sql","errors":[]},{"query":"CREATE TABLE truncate_test_stripe_log(id UInt64) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_table.sql","errors":[]},{"query":"CREATE TABLE truncate_test_merge_tree(p Date, k UInt64) ENGINE = MergeTree(p, k, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_table.sql","errors":[]},{"query":"CREATE TABLE truncate_test_materialized_depend(p Date, k UInt64) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_table.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW truncate_test_materialized_view ENGINE = MergeTree(p, k, 1) AS SELECT * FROM truncate_test_materialized_depend;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_table.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS truncate_test_set(id UInt64) ENGINE = Set;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_all_tables.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS truncate_test_log(id UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_all_tables.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS truncate_test_memory(id UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_all_tables.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS truncate_test_tiny_log(id UInt64) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_all_tables.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS truncate_test_stripe_log(id UInt64) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_all_tables.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS truncate_test_merge_tree(p Date, k UInt64) ENGINE = MergeTree ORDER BY p;","fileName":"../ClickHouse/tests/queries/0_stateless/00623_truncate_all_tables.sql","errors":[]},{"query":"CREATE TABLE replicated_truncate1 (d Date, k UInt64, i32 Int32) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/test_00623/truncate', 'r1') order by k partition by toYYYYMM(d);","fileName":"../ClickHouse/tests/queries/0_stateless/00623_replicated_truncate_table_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_truncate2 (d Date, k UInt64, i32 Int32) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/test_00623/truncate', 'r2') order by k partition by toYYYYMM(d);","fileName":"../ClickHouse/tests/queries/0_stateless/00623_replicated_truncate_table_zookeeper_long.sql","errors":[]},{"query":"create table test54378 (part_date Date, pk_date Date, date Date) Engine=MergeTree(part_date, pk_date, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00623_in_partition_key.sql","errors":[]},{"query":"CREATE TABLE regression_for_in_operator (d Date, v UInt32, g String) ENGINE=MergeTree(d, d, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00621_regression_for_in_operator.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW regression_for_in_operator_view ENGINE=AggregatingMergeTree(d, (d,g), 8192) AS SELECT d, g, maxState(v) FROM regression_for_in_operator GROUP BY d, g;","fileName":"../ClickHouse/tests/queries/0_stateless/00621_regression_for_in_operator.sql","errors":[]},{"query":"CREATE TABLE rename1 (p Int64, i Int64, v UInt64) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/{database}/rename', '1', v) PARTITION BY p ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/00620_optimize_on_nonleader_replica_zookeeper.sql","errors":[]},{"query":"CREATE TABLE rename2 (p Int64, i Int64, v UInt64) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/{database}/rename', '2', v) PARTITION BY p ORDER BY i;","fileName":"../ClickHouse/tests/queries/0_stateless/00620_optimize_on_nonleader_replica_zookeeper.sql","errors":[]},{"query":"create view union as select 1 as test union all select 2;","fileName":"../ClickHouse/tests/queries/0_stateless/00619_union_highlite.sql","errors":[]},{"query":"CREATE TABLE Orders (OrderId UInt64, OrderName String, OrderDate DateTime) engine = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00619_extract.sql","errors":[]},{"query":"CREATE TABLE test_array_ops(arr Array(Nullable(Int64))) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00617_array_in.sql","errors":[]},{"query":"CREATE TABLE test_00616 (\ndate Date,\nx Int32,\nver UInt64\n)\nENGINE = MergeTree(date, x, 4096);","fileName":"../ClickHouse/tests/queries/0_stateless/00616_final_single_part.sql","errors":[]},{"query":"CREATE TABLE replacing_00616 ENGINE = ReplacingMergeTree(date, x, 4096, ver) AS SELECT * FROM test_00616;","fileName":"../ClickHouse/tests/queries/0_stateless/00616_final_single_part.sql","errors":[]},{"query":"CREATE TABLE test_00615 (\ndt Date,\nid Int32,\nkey String,\ndata Nullable(Int8)\n) ENGINE = MergeTree(dt, (id, key, dt), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00615_nullable_alter_optimize.sql","errors":[]},{"query":"create table tab (date Date,  time DateTime, data String) ENGINE = MergeTree(date, (time, data), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00614_shard_same_header_for_local_and_remote_node_in_distributed_query.sql","errors":[]},{"query":"CREATE TABLE test(date Date, keys Array(Nullable(UInt8))) ENGINE = MergeTree(date, date, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00614_array_nullable.sql","errors":[]},{"query":"CREATE TABLE count (x UInt64) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00612_shard_count.sql","errors":[]},{"query":"create table tab_00612 (key UInt64, arr Array(UInt64)) Engine = MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/00612_pk_in_tuple.sql","errors":[]},{"query":"create table tab_00612 (key UInt64, n Nested(x UInt64)) Engine = MergeTree order by key;","fileName":"../ClickHouse/tests/queries/0_stateless/00612_pk_in_tuple.sql","errors":[]},{"query":"CREATE TABLE tab_00612 (key1 Int32, id1  Int64, c1 Int64) ENGINE = MergeTree  PARTITION BY id1 ORDER BY (key1);","fileName":"../ClickHouse/tests/queries/0_stateless/00612_pk_in_tuple.sql","errors":[]},{"query":"CREATE TABLE data_00612 (key UInt64, val UInt64) ENGINE = MergeTree ORDER BY key;","fileName":"../ClickHouse/tests/queries/0_stateless/00612_http_max_query_size_for_distributed.sql","errors":[]},{"query":"CREATE TABLE dist_00612 AS data_00612 ENGINE = Distributed(test_shard_localhost, currentDatabase(), data_00612, rand());","fileName":"../ClickHouse/tests/queries/0_stateless/00612_http_max_query_size_for_distributed.sql","errors":[]},{"query":"CREATE TABLE count (x UInt64) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00612_count.sql","errors":[]},{"query":"CREATE TABLE tab_00610(d Date, x UInt32) ENGINE MergeTree(d, x, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00610_materialized_view_forward_alter_partition_statements.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_00610(d Date, y UInt64) ENGINE MergeTree(d, y, 8192) AS SELECT d, x + 1 AS y FROM tab_00610;","fileName":"../ClickHouse/tests/queries/0_stateless/00610_materialized_view_forward_alter_partition_statements.sql","errors":[]},{"query":"create table \\`table_00609\\` (key UInt64, val UInt64) engine = MergeTree order by key settings index_granularity=8192;","fileName":"../ClickHouse/tests/queries/0_stateless/00609_prewhere_and_default.sql","errors":[{"message":"no viable alternative at input 'create table \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create table \\`table_00609\\` (key UInt64, val UInt64) engine = MergeTree order by key settings index_granularity=8192;","fileName":"../ClickHouse/tests/queries/0_stateless/00609_prewhere_and_default.sql","errors":[{"message":"no viable alternative at input 'create table \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create table test_00609 (a Int8) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00609_mv_index_in_in.sql","errors":[]},{"query":"create materialized view test_mv_00609 uuid '00000609-1000-4000-8000-000000000001' Engine=MergeTree(date, (a), 8192) populate as select a, toDate('2000-01-01') date from test_00609;","fileName":"../ClickHouse/tests/queries/0_stateless/00609_mv_index_in_in.sql","errors":[]},{"query":"CREATE TABLE mergetree_00609 (x UInt64, s String) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00609_distributed_with_case_when_then.sql","errors":[]},{"query":"CREATE TABLE distributed_00609 AS mergetree_00609 ENGINE = Distributed(test_shard_localhost, currentDatabase(), mergetree_00609);","fileName":"../ClickHouse/tests/queries/0_stateless/00609_distributed_with_case_when_then.sql","errors":[]},{"query":"CREATE TABLE merge_tree (x UInt32) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00607_index_in_in.sql","errors":[]},{"query":"CREATE TABLE test(start Integer, end Integer) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00605_intersections_aggregate_functions.sql","errors":[]},{"query":"CREATE TABLE t1(x UInt32, y UInt32) ENGINE TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00604_shard_remote_and_columns_with_defaults.sql","errors":[]},{"query":"CREATE TABLE t2(x UInt32, y UInt32 DEFAULT x + 1) ENGINE TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00604_shard_remote_and_columns_with_defaults.sql","errors":[]},{"query":"CREATE TABLE t3(x UInt32, y UInt32 MATERIALIZED x + 1) ENGINE TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00604_shard_remote_and_columns_with_defaults.sql","errors":[]},{"query":"CREATE TABLE t4(x UInt32, y UInt32 ALIAS x + 1) ENGINE TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00604_shard_remote_and_columns_with_defaults.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE IF NOT EXISTS temporary_table (column UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00600_create_temporary_table_if_not_exists.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE IF NOT EXISTS temporary_table (column UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00600_create_temporary_table_if_not_exists.sql","errors":[]},{"query":"CREATE TABLE test_00599(id UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00599_create_view_with_subquery.sql","errors":[]},{"query":"CREATE VIEW test_view_00599 AS SELECT * FROM test_00599 WHERE id = (SELECT 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00599_create_view_with_subquery.sql","errors":[]},{"query":"CREATE TABLE test_00597(date Date, id Int8, name String, value Int64) ENGINE = MergeTree(date, (id, date), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00597_push_down_predicate_long.sql","errors":[]},{"query":"CREATE VIEW test_view_00597 AS SELECT * FROM test_00597;","fileName":"../ClickHouse/tests/queries/0_stateless/00597_push_down_predicate_long.sql","errors":[]},{"query":"CREATE TABLE alias_local10 ( Id Int8,\nEventDate Date DEFAULT '2000-01-01',\nfield1 Int8,\nfield2 String,\nfield3 ALIAS CASE WHEN field1 = 1 THEN field2 ELSE '0' END\n) ENGINE = MergeTree(EventDate, (Id, EventDate), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00594_alias_in_distributed.sql","errors":[]},{"query":"CREATE TABLE alias10 AS alias_local10 ENGINE = Distributed(test_shard_localhost, currentDatabase(), alias_local10, cityHash64(Id));","fileName":"../ClickHouse/tests/queries/0_stateless/00594_alias_in_distributed.sql","errors":[]},{"query":"CREATE TABLE alias10 ( Id Int8,\nEventDate Date,\nfield1 Int8,\nfield2 String,\nfield3 String\n) ENGINE = Distributed(test_shard_localhost, currentDatabase(), alias_local10);","fileName":"../ClickHouse/tests/queries/0_stateless/00594_alias_in_distributed.sql","errors":[]},{"query":"CREATE TABLE columns (a UInt8, b UInt8, c UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00593_union_all_assert_columns_removed.sql","errors":[]},{"query":"CREATE TABLE mergetree_00588 (x UInt64, s String) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00588_shard_distributed_prewhere.sql","errors":[]},{"query":"CREATE TABLE distributed_00588 AS mergetree_00588 ENGINE = Distributed(test_shard_localhost, currentDatabase(), mergetree_00588);","fileName":"../ClickHouse/tests/queries/0_stateless/00588_shard_distributed_prewhere.sql","errors":[]},{"query":"CREATE TABLE local_statements ( statementId String, eventDate Date, eventHour DateTime, eventTime DateTime, verb String, objectId String, onCourse UInt8, courseId UInt16, contextRegistration String, resultScoreRaw Float64, resultScoreMin Float64, resultScoreMax Float64, resultSuccess UInt8, resultCompletition UInt8, resultDuration UInt32, resultResponse String, learnerId String, learnerHash String, contextId UInt16) ENGINE = MergeTree ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00586_removing_unused_columns_from_subquery.sql","errors":[]},{"query":"CREATE TABLE statements ( statementId String, eventDate Date, eventHour DateTime, eventTime DateTime, verb String, objectId String, onCourse UInt8, courseId UInt16, contextRegistration String, resultScoreRaw Float64, resultScoreMin Float64, resultScoreMax Float64, resultSuccess UInt8, resultCompletition UInt8, resultDuration UInt32, resultResponse String, learnerId String, learnerHash String, contextId UInt16) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 'local_statements', sipHash64(learnerHash));","fileName":"../ClickHouse/tests/queries/0_stateless/00586_removing_unused_columns_from_subquery.sql","errors":[]},{"query":"CREATE TABLE clicks (domain String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00585_union_all_subquery_aggregation_column_removal.sql","errors":[]},{"query":"CREATE TABLE transactions (domain String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00585_union_all_subquery_aggregation_column_removal.sql","errors":[]},{"query":"CREATE TABLE Test_00584 ( createdDate Date,\nstr String,\nkey Enum8('A' = 0, 'B' = 1, 'ALL' = 2),\na Int64\n)\nENGINE = MergeTree(createdDate, str, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00584_view_union_all.sql","errors":[]},{"query":"CREATE VIEW TestView AS SELECT str, key, sumIf(a, 0) AS sum\nFROM Test_00584\nGROUP BY str, key\nUNION ALL\nSELECT str AS str, CAST('ALL' AS Enum8('A' = 0, 'B' = 1, 'ALL' = 2)) AS key, sumIf(a, 0) AS sum\nFROM Test_00584\nGROUP BY str;","fileName":"../ClickHouse/tests/queries/0_stateless/00584_view_union_all.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t AS SELECT * FROM system.numbers LIMIT 11;","fileName":"../ClickHouse/tests/queries/0_stateless/00581_limit_on_result_and_subquery_and_insert.sql","errors":[]},{"query":"CREATE TABLE sample_00579_1 (x UInt64, d Date DEFAULT today()) ENGINE = MergeTree(d, intHash64(x), intHash64(x), 10);","fileName":"../ClickHouse/tests/queries/0_stateless/00579_virtual_column_and_lazy.sql","errors":[]},{"query":"CREATE TABLE sample_00579_2 (x UInt64, d Date DEFAULT today()) ENGINE = MergeTree(d, intHash64(x), intHash64(x), 10);","fileName":"../ClickHouse/tests/queries/0_stateless/00579_virtual_column_and_lazy.sql","errors":[]},{"query":"CREATE TABLE sample_merge_00579 AS sample_00579_1 ENGINE = Merge(currentDatabase(), '^sample_00579_\\\\\\\\d\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00579_virtual_column_and_lazy.sql","errors":[]},{"query":"CREATE TABLE partition_and_primary_keys_using_same_expression(dt DateTime) ENGINE MergeTree PARTITION BY toDate(dt) ORDER BY toDayOfWeek(toDate(dt));","fileName":"../ClickHouse/tests/queries/0_stateless/00579_merge_tree_partition_and_primary_keys_using_same_expression.sql","errors":[]},{"query":"CREATE TABLE unsorted (x UInt32, y String) ENGINE MergeTree ORDER BY tuple() SETTINGS vertical_merge_algorithm_min_rows_to_activate=0, vertical_merge_algorithm_min_columns_to_activate=0;","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_trees_without_primary_key.sql","errors":[]},{"query":"CREATE TABLE unsorted_replacing (x UInt32, s String, v UInt32) ENGINE ReplacingMergeTree(v) ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_trees_without_primary_key.sql","errors":[]},{"query":"CREATE TABLE unsorted_collapsing (x UInt32, s String, sign Int8) ENGINE CollapsingMergeTree(sign) ORDER BY tuple();","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_trees_without_primary_key.sql","errors":[]},{"query":"CREATE TABLE numbers1 ENGINE = Memory AS SELECT number as _table FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_table_shadow_virtual_column.sql","errors":[]},{"query":"CREATE TABLE numbers2 ENGINE = Memory AS SELECT number as _table FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_table_shadow_virtual_column.sql","errors":[]},{"query":"CREATE TABLE numbers1 ENGINE = Memory AS SELECT number FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_table_sampling.sql","errors":[]},{"query":"CREATE TABLE numbers2 ENGINE = Memory AS SELECT number FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_table_sampling.sql","errors":[]},{"query":"CREATE TABLE numbers1 ENGINE = MergeTree ORDER BY intHash32(number) SAMPLE BY intHash32(number) AS SELECT number FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_table_sampling.sql","errors":[]},{"query":"CREATE TABLE numbers2 ENGINE = MergeTree ORDER BY intHash32(number) SAMPLE BY intHash32(number) AS SELECT number FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_table_sampling.sql","errors":[]},{"query":"CREATE TABLE numbers1 ENGINE = StripeLog AS SELECT number FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_table_and_table_virtual_column.sql","errors":[]},{"query":"CREATE TABLE numbers2 ENGINE = TinyLog AS SELECT number FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_table_and_table_virtual_column.sql","errors":[]},{"query":"CREATE TABLE numbers3 ENGINE = Log AS SELECT number FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_table_and_table_virtual_column.sql","errors":[]},{"query":"CREATE TABLE numbers4 ENGINE = Memory AS SELECT number FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_table_and_table_virtual_column.sql","errors":[]},{"query":"CREATE TABLE numbers5 ENGINE = MergeTree ORDER BY number AS SELECT number FROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00578_merge_table_and_table_virtual_column.sql","errors":[]},{"query":"create table tab_00577 (date Date, version UInt64, val UInt64) engine = ReplacingMergeTree(version) partition by date order by date settings enable_vertical_merge_algorithm = 1, vertical_merge_algorithm_min_rows_to_activate = 0, vertical_merge_algorithm_min_columns_to_activate = 0, min_rows_for_wide_part = 0,\nmin_bytes_for_wide_part = 0, allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/00577_replacing_merge_tree_vertical_merge.sql","errors":[]},{"query":"CREATE TABLE testCleanupR1 (uid String, version UInt32, is_deleted UInt8) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/{database}/tables/test_cleanup/', 'r1', version, is_deleted)\nORDER BY uid SETTINGS enable_vertical_merge_algorithm = 1, vertical_merge_algorithm_min_rows_to_activate = 0, vertical_merge_algorithm_min_columns_to_activate = 0, min_rows_for_wide_part = 0,\nmin_bytes_for_wide_part = 0, allow_experimental_replacing_merge_with_cleanup=1;","fileName":"../ClickHouse/tests/queries/0_stateless/00577_replacing_merge_tree_vertical_merge.sql","errors":[]},{"query":"CREATE TABLE nested (x UInt64, filter UInt8, n Nested(a UInt64)) ENGINE = MergeTree ORDER BY x SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00576_nested_and_prewhere.sql","errors":[]},{"query":"create table t_00575(d Date) engine MergeTree(d, d, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00575_merge_and_index_with_function_in_in.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t_00573 (x UInt8);","fileName":"../ClickHouse/tests/queries/0_stateless/00573_shard_aggregation_by_empty_set.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t (x UInt8);","fileName":"../ClickHouse/tests/queries/0_stateless/00572_aggregation_by_empty_set.sql","errors":[]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE_1:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/00571_non_exist_database_when_create_materializ_view.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE test_00571 ( date Date, platform Enum8('a' = 0, 'b' = 1, 'c' = 2), app Enum8('a' = 0, 'b' = 1) ) ENGINE = MergeTree(date, (platform, app), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00571_non_exist_database_when_create_materializ_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_materialized_00571 ENGINE = MergeTree(date, (platform, app), 8192) POPULATE AS SELECT date, platform, app FROM (SELECT * FROM test_00571);","fileName":"../ClickHouse/tests/queries/0_stateless/00571_non_exist_database_when_create_materializ_view.sql","errors":[]},{"query":"CREATE TABLE nullable_00571 (x String) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00571_alter_nullable.sql","errors":[]},{"query":"CREATE TABLE defaulted (v6 FixedString(16)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00568_empty_function_with_fixed_string.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t (x DateTime('UTC'));","fileName":"../ClickHouse/tests/queries/0_stateless/00567_parse_datetime_as_unix_timestamp.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(date, (date), 8192, sign, version);","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(date, (date, value), 8192, sign, version);","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(date, (date, value), 8192, sign, version);","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(date, (date, value), 8192, sign, version);","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(date, (date, value), 8192, sign, version);","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(date, (date, value), 8192, sign, version);","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(date, (date, value), 8192, sign, version);","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value UInt64, key UInt64, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(date, (date), 8192, sign, version);","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(sign, version) order by (date) settings enable_vertical_merge_algorithm = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(sign, version) order by (date, value) settings enable_vertical_merge_algorithm = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(sign, version) order by (date, value) settings enable_vertical_merge_algorithm = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(sign, version) order by (date, value) settings enable_vertical_merge_algorithm = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(sign, version) order by (date, value) settings enable_vertical_merge_algorithm = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(sign, version) order by (date, value) settings enable_vertical_merge_algorithm = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value String, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(sign, version) order by (date, value) settings enable_vertical_merge_algorithm = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"create table mult_tab (date Date, value UInt64, key UInt64, version UInt64, sign Int8) engine = VersionedCollapsingMergeTree(sign, version) order by (date) settings enable_vertical_merge_algorithm = 1, vertical_merge_algorithm_min_rows_to_activate = 1, vertical_merge_algorithm_min_columns_to_activate = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00564_versioned_collapsing_merge_tree.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE temp_tab (number UInt64);","fileName":"../ClickHouse/tests/queries/0_stateless/00564_temporary_table_management.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS test( id UInt32, track UInt8, codec String, content String, rdate Date DEFAULT '2018-02-03', track_id String DEFAULT concat(concat(concat(toString(track), '-'), codec), content) ) ENGINE=MergeTree(rdate, (id, track_id), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00564_initial_column_values_with_default_expression.sql","errors":[]},{"query":"create table tab (val UInt8) engine = MergeTree order by val;","fileName":"../ClickHouse/tests/queries/0_stateless/00563_shard_insert_into_remote.sql","errors":[]},{"query":"CREATE TABLE simple (d Int8) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_00563/tables/simple', '1') ORDER BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/00563_insert_into_remote_and_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE test_00563 ( dt Date, site_id Int32, site_key String ) ENGINE = MergeTree(dt, (site_id, site_key, dt), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00563_complex_in_expression.sql","errors":[]},{"query":"CREATE TABLE join_with_index (key UInt32, data UInt64) ENGINE = MergeTree ORDER BY key SETTINGS index_granularity=1;","fileName":"../ClickHouse/tests/queries/0_stateless/00563_complex_in_expression.sql","errors":[]},{"query":"CREATE TABLE test_00562 ( s String,  i Int64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00562_rewrite_select_expression_with_union.sql","errors":[]},{"query":"CREATE TABLE merge_tree_in_subqueries (id UInt64, name String, num UInt64) ENGINE = MergeTree ORDER BY (id, name);","fileName":"../ClickHouse/tests/queries/0_stateless/00562_in_subquery_merge_tree.sql","errors":[]},{"query":"CREATE TABLE joinbug ( event_date Date MATERIALIZED toDate(created, 'Asia/Istanbul'),\nid UInt64,\nid2 UInt64,\nval UInt64,\nval2 Int32,\ncreated UInt64\n) ENGINE = MergeTree(event_date, (id, id2), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00561_storage_join.sql","errors":[]},{"query":"CREATE TABLE joinbug_join ( id UInt64,\nid2 UInt64,\nval UInt64,\nval2 Int32,\ncreated UInt64\n) ENGINE = Join(SEMI, LEFT, id2);","fileName":"../ClickHouse/tests/queries/0_stateless/00561_storage_join.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE test_float (x Float64);","fileName":"../ClickHouse/tests/queries/0_stateless/00560_float_leading_plus_in_exponent.sql","errors":[]},{"query":"CREATE TABLE null_00557 (x UInt8) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00557_alter_null_storage_tables.sql","errors":[]},{"query":"CREATE TABLE nested (x UInt8, n Nested(a UInt64, b String)) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00554_nested_and_table_engines.sql","errors":[]},{"query":"CREATE TABLE nested (x UInt8, n Nested(a UInt64, b String)) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00554_nested_and_table_engines.sql","errors":[]},{"query":"CREATE TABLE nested (x UInt8, n Nested(a UInt64, b String)) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00554_nested_and_table_engines.sql","errors":[]},{"query":"CREATE TABLE nested (x UInt8, n Nested(a UInt64, b String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00554_nested_and_table_engines.sql","errors":[]},{"query":"CREATE TABLE nested (x UInt8, n Nested(a UInt64, b String)) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00554_nested_and_table_engines.sql","errors":[]},{"query":"CREATE TABLE nums ( n UInt64, m UInt64 MATERIALIZED n+1 ) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00553_buff_exists_materlized_column.sql","errors":[]},{"query":"CREATE TABLE nums_buf AS nums ENGINE = Buffer(currentDatabase(), nums, 1, 10, 100, 1, 3, 10000000, 100000000);","fileName":"../ClickHouse/tests/queries/0_stateless/00553_buff_exists_materlized_column.sql","errors":[]},{"query":"CREATE TABLE test (\nx Nullable(Int32)\n) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00552_or_nullable.sql","errors":[]},{"query":"CREATE TABLE null_00549 (k UInt64, a String, b Nullable(String)) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00549_join_use_nulls.sql","errors":[]},{"query":"CREATE TABLE test(number UInt64, num2 UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00544_insert_with_select.sql","errors":[]},{"query":"CREATE TABLE test (\ndt Date,\nid UInt32,\nval Nullable(UInt32)\n)\nENGINE = MergeTree(dt, id, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00543_null_and_prewhere.sql","errors":[]},{"query":"CREATE TABLE x (d Date, t DateTime) ENGINE = MergeTree(d, (d, t), 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00542_materialized_view_and_time_zone_tag.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW m1 (d Date, t DateTime, c UInt64) ENGINE = SummingMergeTree(d, (d, t), 1) AS SELECT d, toStartOfMinute(x.t) as t, count() as c FROM x GROUP BY d, t;","fileName":"../ClickHouse/tests/queries/0_stateless/00542_materialized_view_and_time_zone_tag.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW m3 ENGINE = SummingMergeTree(d, (d, t), 1) AS SELECT d, toStartOfHour(m1.t) as t, c FROM m1;","fileName":"../ClickHouse/tests/queries/0_stateless/00542_materialized_view_and_time_zone_tag.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE readonly00542 ( ID Int\n) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00542_access_to_temporary_table_in_readonly_mode.sql","errors":[]},{"query":"CREATE TABLE float (x Float64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00535_parse_float_scientific.sql","errors":[]},{"query":"CREATE TABLE agg_over_nullable ( \tpartition Date,\n\ttimestamp DateTime,\n\tuser_id Nullable(UInt32),\n\tdescription Nullable(String)\n) ENGINE = MergeTree(partition, timestamp, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00531_aggregate_over_nullable.sql","errors":[]},{"query":"CREATE TABLE arr (x Array(String), y Nullable(String), z Array(Array(Nullable(String)))) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00530_arrays_of_nothing.sql","errors":[]},{"query":"CREATE TABLE multidimensional ENGINE = MergeTree ORDER BY number SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi' AS SELECT number, arrayMap(x -> (x, [x], [[x]], (x, toString(x))), arrayMap(x -> range(x), range(number % 10))) AS value FROM system.numbers LIMIT 100000;","fileName":"../ClickHouse/tests/queries/0_stateless/00522_multidimensional.sql","errors":[]},{"query":"CREATE TABLE multidimensional (x UInt64, arr Array(Array(String))) ENGINE = MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00521_multidimensional.sql","errors":[]},{"query":"CREATE TABLE multidimensional (x UInt64, arr Array(Array(String)), t Tuple(String, Array(Nullable(String)), Tuple(UInt32, Date))) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00521_multidimensional.sql","errors":[]},{"query":"CREATE TABLE multidimensional (x UInt64, arr Array(Array(String)), t Tuple(String, Array(Nullable(String)), Tuple(UInt32, Date))) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00521_multidimensional.sql","errors":[]},{"query":"CREATE TABLE multidimensional (x UInt64, arr Array(Array(String)), t Tuple(String, Array(Nullable(String)), Tuple(UInt32, Date))) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00521_multidimensional.sql","errors":[]},{"query":"CREATE TABLE multidimensional (x UInt64, arr Array(Array(String)), t Tuple(String, Array(Nullable(String)), Tuple(UInt32, Date))) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00521_multidimensional.sql","errors":[]},{"query":"CREATE TABLE tuple (t Tuple(Date, UInt32, UInt64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00520_tuple_values_interpreter.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t1_00519 AS SELECT 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00519_create_as_select_from_temporary_table.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t3_00519 AS SELECT * FROM t1_00519;","fileName":"../ClickHouse/tests/queries/0_stateless/00519_create_as_select_from_temporary_table.sql","errors":[]},{"query":"CREATE TABLE date (d Date) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00517_date_parsing.sql","errors":[]},{"query":"CREATE TABLE deduplication_by_partition(d Date, x UInt32) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00516/deduplication_by_partition', 'r1') order by x partition by toYYYYMM(d);","fileName":"../ClickHouse/tests/queries/0_stateless/00516_deduplication_after_drop_partition_zookeeper.sql","errors":[]},{"query":"create table tab (date Date, val UInt64, val2 UInt8 default 42, val3 UInt8 default val2 + 1, val4 UInt64 alias val) engine = MergeTree(date, (date, val), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00515_shard_desc_table_functions_and_subqueries.sql","errors":[]},{"query":"CREATE TABLE tab (val Int64, tz String) engine=Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00515_enhanced_time_zones.sql","errors":[]},{"query":"CREATE TABLE tab (\\`country\\` LowCardinality(FixedString(7)) DEFAULT 'unknown', \\`city\\` LowCardinality(String) DEFAULT 'unknown', \\`region\\` LowCardinality(String) DEFAULT 'unknown', \\`continent\\` LowCardinality(FixedString(7)) DEFAULT 'unknown', \\`is_eu_country\\` Bool, \\`date\\` DateTime CODEC(DoubleDelta, LZ4), \\`viewer_date\\` DateTime ALIAS toTimezone(date, timezone), \\`device_browser\\` LowCardinality(String) DEFAULT 'unknown', \\`metro_code\\` LowCardinality(String) DEFAULT 'unknown', \\`domain\\` String DEFAULT 'unknown', \\`device_platform\\` LowCardinality(String) DEFAULT 'unknown', \\`device_type\\` LowCardinality(String) DEFAULT 'unknown', \\`device_vendor\\` LowCardinality(String) DEFAULT 'unknown', \\`ip\\` FixedString(39) DEFAULT 'unknown', \\`lat\\` Decimal(8, 6) CODEC(T64), \\`lng\\` Decimal(9, 6) CODEC(T64), \\`asset_id\\` String DEFAULT 'unknown', \\`is_personalized\\` Bool, \\`metric\\` String, \\`origin\\` String DEFAULT 'unknown', \\`product_id\\` UInt64 CODEC(T64), \\`referer\\` String DEFAULT 'unknown', \\`server_side\\` Int8 CODEC(T64), \\`third_party_id\\` String DEFAULT 'unknown', \\`partner_slug\\` LowCardinality(FixedString(10)) DEFAULT 'unknown', \\`user_agent\\` String DEFAULT 'unknown', \\`user_id\\` UUID, \\`zip\\` FixedString(10) DEFAULT 'unknown', \\`timezone\\` LowCardinality(String), \\`as_organization\\` LowCardinality(String) DEFAULT 'unknown', \\`content_cat\\` Array(String), \\`playback_method\\` LowCardinality(String) DEFAULT 'unknown', \\`store_id\\` LowCardinality(String) DEFAULT 'unknown', \\`store_url\\` String DEFAULT 'unknown', \\`timestamp\\` Nullable(DateTime), \\`ad_count\\` Int8 CODEC(T64), \\`ad_type\\` LowCardinality(FixedString(10)) DEFAULT 'unknown', \\`ad_categories\\` Array(FixedString(8)), \\`blocked_ad_categories\\` Array(FixedString(8)), \\`break_max_ad_length\\` Int8 CODEC(T64), \\`break_max_ads\\` Int8 CODEC(T64), \\`break_max_duration\\` Int8 CODEC(T64), \\`break_min_ad_length\\` Int8 CODEC(T64), \\`break_position\\` LowCardinality(FixedString(18)) DEFAULT 'unknown', \\`media_playhead\\` String DEFAULT 'unknown', \\`placement_type\\` Int8 CODEC(T64), \\`transaction_id\\` String, \\`universal_ad_id\\` Array(String), \\`client_ua\\` LowCardinality(String) DEFAULT 'unknown', \\`device_ip\\` FixedString(39) DEFAULT 'unknown', \\`device_ua\\` LowCardinality(String) DEFAULT 'unknown', \\`ifa\\` String, \\`ifa_type\\` LowCardinality(String) DEFAULT 'unknown', \\`vast_lat\\` Decimal(8, 6) CODEC(T64), \\`vast_long\\` Decimal(9, 6) CODEC(T64), \\`server_ua\\` String DEFAULT 'unknown', \\`app_bundle\\` String DEFAULT 'unknown', \\`page_url\\` String DEFAULT 'unknown', \\`api_framework\\` Array(UInt8), \\`click_type\\` LowCardinality(String), \\`extensions\\` Array(String), \\`media_mime\\` Array(String), \\`om_id_partner\\` LowCardinality(String) DEFAULT 'unknown', \\`player_capabilities\\` Array(FixedString(12)), \\`vast_versions\\` Array(UInt8), \\`verification_vendors\\` Array(String), \\`ad_play_head\\` String DEFAULT 'unknown', \\`ad_serving_id\\` String DEFAULT 'unknown', \\`asset_uri\\` String DEFAULT 'unknown', \\`content_id\\` String DEFAULT 'unknown', \\`content_uri\\` String DEFAULT 'unknown', \\`inventory_state\\` Array(FixedString(14)), \\`player_size\\` Array(UInt8), \\`player_state\\` Array(FixedString(12)), \\`pod_sequence\\` Int8 CODEC(T64), \\`click_position\\` Array(UInt32), \\`error_code\\` Int16 CODEC(T64), \\`error_reason\\` Int8 CODEC(T64), \\`gdpr_consent\\` String DEFAULT 'unknown', \\`limited_tracking\\` Bool, \\`regulations\\` String DEFAULT 'unknown', \\`content_category\\` Array(String), PROJECTION projection_TPAG_VAST_date (SELECT * ORDER BY toYYYYMMDD(date), metric, product_id, asset_id)) ENGINE = MergeTree ORDER BY (product_id, metric, asset_id, toYYYYMMDD(date));","fileName":"../ClickHouse/tests/queries/0_stateless/00515_enhanced_time_zones.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE tab (\\'","startColumn":18,"startLine":1,"endColumn":19,"endLine":1}]},{"query":"CREATE TABLE with_deduplication(x UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00510/with_deduplication', 'r1') ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00510_materizlized_view_and_deduplication_zookeeper.sql","errors":[]},{"query":"CREATE TABLE without_deduplication(x UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00510/without_deduplication', 'r1') ORDER BY x SETTINGS replicated_deduplication_window = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00510_materizlized_view_and_deduplication_zookeeper.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW with_deduplication_mv UUID '00000510-1000-4000-8000-000000000001' ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{database}/test_00510/with_deduplication_mv', 'r1') ORDER BY dummy\nAS SELECT 0 AS dummy, countState(x) AS cnt FROM with_deduplication;","fileName":"../ClickHouse/tests/queries/0_stateless/00510_materizlized_view_and_deduplication_zookeeper.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW without_deduplication_mv UUID '00000510-1000-4000-8000-000000000002' ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{database}/test_00510/without_deduplication_mv', 'r1') ORDER BY dummy\nAS SELECT 0 AS dummy, countState(x) AS cnt FROM without_deduplication;","fileName":"../ClickHouse/tests/queries/0_stateless/00510_materizlized_view_and_deduplication_zookeeper.sql","errors":[]},{"query":"CREATE TABLE replicated_with_sampling(x UInt8) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00509/replicated_with_sampling', 'r1')\nORDER BY x\nSAMPLE BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00509_extended_storage_definition_syntax_zookeeper.sql","errors":[]},{"query":"CREATE TABLE replacing(d Date, x UInt32, s String) ENGINE = ReplacingMergeTree ORDER BY x PARTITION BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/00509_extended_storage_definition_syntax_zookeeper.sql","errors":[]},{"query":"CREATE TABLE replicated_collapsing(d Date, x UInt32, sign Int8) ENGINE = ReplicatedCollapsingMergeTree('/clickhouse/tables/{database}/test_00509/replicated_collapsing', 'r1', sign)\nPARTITION BY toYYYYMM(d) ORDER BY d;","fileName":"../ClickHouse/tests/queries/0_stateless/00509_extended_storage_definition_syntax_zookeeper.sql","errors":[]},{"query":"CREATE TABLE replicated_versioned_collapsing(d Date, x UInt32, sign Int8, version UInt8) ENGINE = ReplicatedVersionedCollapsingMergeTree('/clickhouse/tables/{database}/test_00509/replicated_versioned_collapsing', 'r1', sign, version)\nPARTITION BY toYYYYMM(d) ORDER BY (d, version);","fileName":"../ClickHouse/tests/queries/0_stateless/00509_extended_storage_definition_syntax_zookeeper.sql","errors":[]},{"query":"CREATE TABLE with_settings(x UInt32) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00509/with_settings', 'r1')\nORDER BY x\nSETTINGS replicated_can_become_leader = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00509_extended_storage_definition_syntax_zookeeper.sql","errors":[]},{"query":"CREATE TABLE src (x UInt8) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00508_materialized_view_to.sql","errors":[]},{"query":"CREATE TABLE dst (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00508_materialized_view_to.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_00508 TO dst AS SELECT * FROM src;","fileName":"../ClickHouse/tests/queries/0_stateless/00508_materialized_view_to.sql","errors":[]},{"query":"CREATE TABLE union1 ( date Date, a Int32, b Int32, c Int32, d Int32) ENGINE = MergeTree(date, (a, date), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00506_union_distributed.sql","errors":[]},{"query":"CREATE TABLE union2 ( date Date, a Int32, b Int32, c Int32, d Int32) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 'union1');","fileName":"../ClickHouse/tests/queries/0_stateless/00506_union_distributed.sql","errors":[]},{"query":"CREATE TABLE union3 ( date Date, a Int32, b Int32, c Int32, d Int32) ENGINE = Distributed(test_shard_localhost, currentDatabase(), 'union2');","fileName":"../ClickHouse/tests/queries/0_stateless/00506_union_distributed.sql","errors":[]},{"query":"CREATE TABLE globalin (CounterID UInt32, StartDate Date ) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00506_shard_global_in_union.sql","errors":[]},{"query":"CREATE TABLE union_bug ( Event String,\nDatetime DateTime('Asia/Istanbul')\n) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00506_shard_global_in_union.sql","errors":[]},{"query":"create table test_ins_arr (date Date, val Array(UInt64)) engine = MergeTree(date, (date), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00504_mergetree_arrays_rw.sql","errors":[]},{"query":"create table test_ins_null (date Date, val Nullable(UInt64)) engine = MergeTree(date, (date), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00504_mergetree_arrays_rw.sql","errors":[]},{"query":"create table test_ins_arr_null (date Date, val Array(Nullable(UInt64))) engine = MergeTree(date, (date), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00504_mergetree_arrays_rw.sql","errors":[]},{"query":"create table test_ins_arr_arr (date Date, val Array(Array(UInt64))) engine = MergeTree(date, (date), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00504_mergetree_arrays_rw.sql","errors":[]},{"query":"create table test_ins_arr_arr_null (date Date, val Array(Array(Nullable(UInt64)))) engine = MergeTree(date, (date), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00504_mergetree_arrays_rw.sql","errors":[]},{"query":"create table test_ins_arr_arr_arr (date Date, val Array(Array(Array(UInt64)))) engine = MergeTree(date, (date), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00504_mergetree_arrays_rw.sql","errors":[]},{"query":"CREATE TABLE sum_map(date Date, timeslot DateTime, statusMap Nested(status UInt16, requests UInt64)) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_sum_map.sql","errors":[]},{"query":"CREATE TABLE sum_map_overflow(events Array(UInt8), counts Array(UInt8)) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_sum_map.sql","errors":[]},{"query":"CREATE TABLE sum_map_decimal( statusMap Nested(\ngoal_id UInt16,\nrevenue Decimal32(5)\n)\n) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_sum_map.sql","errors":[]},{"query":"CREATE TABLE sum_map_decimal_nullable (\\`statusMap\\` Nested(goal_id UInt16, revenue Nullable(Decimal(9, 5)))) engine=Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_sum_map.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE sum_map_decimal_nullable (\\'","startColumn":39,"startLine":1,"endColumn":40,"endLine":1}]},{"query":"CREATE TABLE not_partitioned_replica1_00502(x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/not_partitioned_00502', '1') ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE not_partitioned_replica2_00502(x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/not_partitioned_00502', '2') ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE partitioned_by_week_replica1(d Date, x UInt8) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test/partitioned_by_week_00502', '1') PARTITION BY toMonday(d) ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE partitioned_by_week_replica2(d Date, x UInt8) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test/partitioned_by_week_00502', '2') PARTITION BY toMonday(d) ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE partitioned_by_tuple_replica1_00502(d Date, x UInt8, y UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/partitioned_by_tuple_00502', '1') ORDER BY x PARTITION BY (d, x);","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE partitioned_by_tuple_replica2_00502(d Date, x UInt8, y UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/partitioned_by_tuple_00502', '2') ORDER BY x PARTITION BY (d, x);","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE partitioned_by_string_replica1(s String, x UInt8) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test/partitioned_by_string_00502', '1') PARTITION BY s ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE partitioned_by_string_replica2(s String, x UInt8) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test/partitioned_by_string_00502', '2') PARTITION BY s ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE without_fixed_size_columns_replica1(s String) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test/without_fixed_size_columns_00502', '1') PARTITION BY length(s) ORDER BY s;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE without_fixed_size_columns_replica2(s String) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test/without_fixed_size_columns_00502', '2') PARTITION BY length(s) ORDER BY s;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_replicated_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE not_partitioned(x UInt8) ENGINE MergeTree ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_local.sql","errors":[]},{"query":"CREATE TABLE partitioned_by_week(d Date, x UInt8) ENGINE = MergeTree PARTITION BY toMonday(d) ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_local.sql","errors":[]},{"query":"CREATE TABLE partitioned_by_tuple(d Date, x UInt8, y UInt8) ENGINE MergeTree ORDER BY x PARTITION BY (d, x);","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_local.sql","errors":[]},{"query":"CREATE TABLE partitioned_by_string(s String, x UInt8) ENGINE = MergeTree PARTITION BY s ORDER BY x;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_local.sql","errors":[]},{"query":"CREATE TABLE without_fixed_size_columns(s String) ENGINE MergeTree PARTITION BY length(s) ORDER BY s;","fileName":"../ClickHouse/tests/queries/0_stateless/00502_custom_partitioning_local.sql","errors":[]},{"query":"create table polygons ( id Int32, poly Array(Tuple(Int32, Int32))) engine = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00500_point_in_polygon_non_const_poly.sql","errors":[]},{"query":"create table polygons ( id Int32, pt Tuple(Int32, Int32), poly Array(Tuple(Int32, Int32))) engine = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00500_point_in_polygon_non_const_poly.sql","errors":[]},{"query":"create table polygons ( id Int32, poly Array(Array(Tuple(Int32, Int32)))) engine = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00500_point_in_polygon_non_const_poly.sql","errors":[]},{"query":"create table polygons ( id Int32, pt Tuple(Int32, Int32), poly Array(Array(Tuple(Int32, Int32)))) engine = Log();","fileName":"../ClickHouse/tests/queries/0_stateless/00500_point_in_polygon_non_const_poly.sql","errors":[]},{"query":"create table coords (x Float32, y Float32) engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00500_point_in_polygon_bug.sql","errors":[]},{"query":"CREATE TABLE s (\\`id\\` String, \\`lng\\` Int64, \\`lat\\` Int64) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/00500_point_in_polygon_2d_const.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE s (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE p (\\`polygon_id\\` Int64, \\`polygon_name\\` String, \\`shape\\` Array(Array(Tuple(Float64, Float64))), \\`state\\` String) ENGINE = Memory();","fileName":"../ClickHouse/tests/queries/0_stateless/00500_point_in_polygon_2d_const.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE p (\\'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE json (x Enum8('browser' = 1, 'mobile' = 2), y String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00499_json_enum_insert.sql","errors":[]},{"query":"create table array_functions (arr1 Array(Int8), arr2 Array(Int8), o Int8, no Nullable(Int8), l Int8, nl Nullable(Int8)) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00498_array_functions_concat_slice_push_pop.sql","errors":[]},{"query":"create table array_functions (arr1 Array(Nullable(Int8)), arr2 Array(Nullable(Float32)), o Int8, no Nullable(Int8), l Int8, nl Nullable(Int8)) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00498_array_functions_concat_slice_push_pop.sql","errors":[]},{"query":"create table array_functions (arr1 Array(Nullable(Int8)), arr2 Array(UInt8), o Int8, no Nullable(Int8), l Int8, nl Nullable(Int8)) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00498_array_functions_concat_slice_push_pop.sql","errors":[]},{"query":"create table array_functions (arr1 Array(Nullable(String)), arr2 Array(String), val String, val2 Nullable(String), o Int8, no Nullable(Int8), l Int8, nl Nullable(Int8)) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00498_array_functions_concat_slice_push_pop.sql","errors":[]},{"query":"create table one_table (date Date, one UInt64) engine = MergeTree(date, (date, one), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00495_reading_const_zero_column.sql","errors":[]},{"query":"CREATE TABLE nested (n Nested(x UInt8)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00494_shard_alias_substitution_bug.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE temp_tab (number UInt64);","fileName":"../ClickHouse/tests/queries/0_stateless/00492_drop_temporary_table.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE temp_tab (number UInt64);","fileName":"../ClickHouse/tests/queries/0_stateless/00492_drop_temporary_table.sql","errors":[]},{"query":"CREATE TABLE pk (d Date DEFAULT '2000-01-01', x DateTime, y UInt64, z UInt64) ENGINE = MergeTree(d, (toStartOfMinute(x, 'UTC'), y, z), 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00489_pk_subexpression.sql","errors":[]},{"query":"CREATE TABLE non_ascii (\\`привет\\` String, \\`мир\\` String) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00488_non_ascii_column_names.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE non_ascii (\\'","startColumn":24,"startLine":1,"endColumn":25,"endLine":1}]},{"query":"CREATE TABLE primary (\n\\`primary\\` String\n)\nENGINE = MergeTree\nORDER BY primary\nsettings min_bytes_for_wide_part=0,min_bytes_for_wide_part=0\nAS\nSELECT *\nFROM numbers(1000);","fileName":"../ClickHouse/tests/queries/0_stateless/00488_column_name_primary.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE primary (\\n\\'","startColumn":0,"startLine":2,"endColumn":1,"endLine":2}]},{"query":"create table tab_00484 (date Date, x UInt64, s FixedString(128)) engine = MergeTree PARTITION BY date ORDER BY (date, x) SETTINGS min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00484_preferred_max_column_in_block_size_bytes.sql","errors":[]},{"query":"create table tab_00484 (date Date, x UInt64, s FixedString(128)) engine = MergeTree PARTITION BY date ORDER BY (date, x) SETTINGS min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00484_preferred_max_column_in_block_size_bytes.sql","errors":[]},{"query":"create table tab_00484 (date Date, x UInt64, s FixedString(128)) engine = MergeTree PARTITION BY date ORDER BY (date, x) SETTINGS min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00484_preferred_max_column_in_block_size_bytes.sql","errors":[]},{"query":"create table tab_00484 (date Date, x UInt64, s String) engine = MergeTree PARTITION BY date ORDER BY (date, x) SETTINGS min_bytes_for_wide_part = 0, ratio_of_defaults_for_sparse_serialization = 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00484_preferred_max_column_in_block_size_bytes.sql","errors":[]},{"query":"create table \\`table_00483\\` (date Date, \\`Struct.Key1\\` Array(UInt64), \\`Struct.Key2\\` Array(UInt64), padding FixedString(16)) engine = MergeTree(date, (date), 16);","fileName":"../ClickHouse/tests/queries/0_stateless/00483_reading_from_array_structure.sql","errors":[{"message":"no viable alternative at input 'create table \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create table \\`table_00483\\` (date Date, \\`Struct.Key1\\` Array(UInt64), \\`Struct.Key2\\` Array(UInt64), padding FixedString(16), x UInt64) engine = MergeTree(date, (date), 8);","fileName":"../ClickHouse/tests/queries/0_stateless/00483_reading_from_array_structure.sql","errors":[{"message":"no viable alternative at input 'create table \\'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE tab_00481 (date Date, value UInt64, s String, m FixedString(16)) ENGINE = MergeTree(date, (date, value), 8);","fileName":"../ClickHouse/tests/queries/0_stateless/00481_reading_from_last_granula.sql","errors":[]},{"query":"CREATE TABLE null_00481 (x UInt8) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00481_create_view_for_null.sql","errors":[]},{"query":"CREATE VIEW null_view AS SELECT * FROM null_00481;","fileName":"../ClickHouse/tests/queries/0_stateless/00481_create_view_for_null.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t_00477 (x Array(  )) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00477_parsing_data_types.sql","errors":[]},{"query":"CREATE TABLE set (x String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00475_in_join_db_table.sql","errors":[]},{"query":"CREATE TABLE set (x String) ENGINE = Set;","fileName":"../ClickHouse/tests/queries/0_stateless/00475_in_join_db_table.sql","errors":[]},{"query":"CREATE TABLE join (k UInt8, x String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00475_in_join_db_table.sql","errors":[]},{"query":"CREATE TABLE join (k UInt8, x String) ENGINE = Join(ANY, LEFT, k);","fileName":"../ClickHouse/tests/queries/0_stateless/00475_in_join_db_table.sql","errors":[]},{"query":"CREATE TABLE t_00472 (x UInt8) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00472_create_view_if_not_exists.sql","errors":[]},{"query":"CREATE VIEW IF NOT EXISTS mv_00472 AS SELECT * FROM t_00472;","fileName":"../ClickHouse/tests/queries/0_stateless/00472_create_view_if_not_exists.sql","errors":[]},{"query":"CREATE TABLE strings_00469(x String, y String) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00469_comparison_of_strings_containing_null_char.sql","errors":[]},{"query":"CREATE TABLE nested (nest Nested(x UInt8, y UInt8)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00468_array_join_multiple_arrays_and_use_original_column.sql","errors":[]},{"query":"CREATE TABLE nested (nest Nested(a UInt8, b String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00467_qualified_names.sql","errors":[]},{"query":"CREATE TABLE nullable_00465 (id Nullable(UInt32), cat String) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00465_nullable_default.sql","errors":[]},{"query":"CREATE TABLE json (x UInt8, title String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00462_json_true_false_literals.sql","errors":[]},{"query":"CREATE TABLE u32 (x UInt32, y UInt32 DEFAULT x) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE u64 (x UInt64, y UInt64 DEFAULT x) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE merge_32_64 (x UInt64) ENGINE = Merge(currentDatabase(), '^u32|u64\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE s64 (x Int64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE u64 (x UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE merge_s64_u64 (x UInt64) ENGINE = Merge(currentDatabase(), '^s64|u64\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE one_00458 (x Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE two_00458 (x UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE merge_one_two (x UInt64) ENGINE = Merge(currentDatabase(), '^one_00458\\$|^two_00458\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE one_00458 (x String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE two_00458 (x FixedString(16)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE merge_one_two (x String) ENGINE = Merge(currentDatabase(), '^one_00458\\$|^two_00458\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE one_00458 (x DateTime) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE two_00458 (x UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE merge_one_two (x UInt64) ENGINE = Merge(currentDatabase(), '^one_00458\\$|^two_00458\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE one_00458 (x Array(UInt32), z String DEFAULT '', y Array(UInt32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE two_00458 (x Array(UInt64), z String DEFAULT '', y Array(UInt64)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE merge_one_two (x Array(UInt64), z String, y Array(UInt64)) ENGINE = Merge(currentDatabase(), '^one_00458\\$|^two_00458\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00458_merge_type_cast.sql","errors":[]},{"query":"CREATE TABLE nullable_00457 (s String, ns Nullable(String), narr Array(Nullable(UInt64))) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00457_log_tinylog_stripelog_nullable.sql","errors":[]},{"query":"CREATE TABLE nullable_00457 (s String, ns Nullable(String), narr Array(Nullable(UInt64))) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00457_log_tinylog_stripelog_nullable.sql","errors":[]},{"query":"CREATE TABLE nullable_00457 (s String, ns Nullable(String), narr Array(Nullable(UInt64))) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00457_log_tinylog_stripelog_nullable.sql","errors":[]},{"query":"CREATE TABLE nullable_alter (d Date DEFAULT '2000-01-01', x String) ENGINE = MergeTree(d, d, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00456_alter_nullable.sql","errors":[]},{"query":"CREATE TABLE cast_enums (\ntype Enum8('session' = 1, 'pageview' = 2, 'click' = 3),\ndate Date,\nid UInt64\n) ENGINE = MergeTree(date, (type, date, id), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00453_cast_enum.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS data (sketch Array(Int8)) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00447_foreach_modifier.sql","errors":[]},{"query":"CREATE TABLE clear_column (d Date, num Int64, str String) ENGINE = MergeTree ORDER BY d PARTITION by toYYYYMM(d) SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00446_clear_column_in_partition_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE clear_column1 (d Date, i Int64) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_00446/tables/clear_column', '1') ORDER BY d PARTITION by toYYYYMM(d) SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00446_clear_column_in_partition_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE clear_column2 (d Date, i Int64) ENGINE = ReplicatedMergeTree('/clickhouse/{database}/test_00446/tables/clear_column', '2') ORDER BY d PARTITION by toYYYYMM(d) SETTINGS min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00446_clear_column_in_partition_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE nulls (d Date, x Nullable(UInt64)) ENGINE = MergeTree(d, d, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00440_nulls_merge_tree.sql","errors":[]},{"query":"CREATE TABLE agg_func_col (p Date, k UInt8, d AggregateFunction(sum, UInt64) DEFAULT arrayReduce('sumState', [toUInt64(200)])) ENGINE = AggregatingMergeTree(p, k, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00432_aggregate_function_scalars_and_constants.sql","errors":[]},{"query":"CREATE VIEW nullable_00431 AS SELECT\n1 AS constant_true,\n0 AS constant_false,\nNULL AS constant_null,\nnumber % 3 = 1 AS cond_non_constant,\nnumber % 3 = 2 ? NULL : (number % 3 = 1) AS cond_non_constant_nullable,\n'Hello' AS then_constant,\n'World' AS else_constant,\ntoString(number) AS then_non_constant,\ntoString(-number) AS else_non_constant,\nnullIf(toString(number), '5') AS then_non_constant_nullable,\nnullIf(toString(-number), '-5') AS else_non_constant_nullable\nFROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00431_if_nulls.sql","errors":[]},{"query":"CREATE TABLE log (s String) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00423_storage_log_single_thread.sql","errors":[]},{"query":"CREATE TABLE distinct (Num UInt32, Name String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00413_distinct.sql","errors":[]},{"query":"CREATE TABLE merge_tree (x UInt64, date Date) ENGINE = MergeTree(date, x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00412_logical_expressions_optimizer.sql","errors":[]},{"query":"CREATE TABLE const_in_const (id UInt64, date Date, uid UInt32, name String, Sign Int8) ENGINE = CollapsingMergeTree(date, intHash32(uid), (id, date, intHash32(uid)), 8192, Sign);","fileName":"../ClickHouse/tests/queries/0_stateless/00411_merge_tree_where_const_in_set.sql","errors":[]},{"query":"CREATE TABLE arena (k UInt8, d String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00410_aggregation_combinators_with_arenas.sql","errors":[]},{"query":"CREATE TABLE limit_by (Num UInt32, Name String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00409_shard_limit_by.sql","errors":[]},{"query":"CREATE TABLE stripe1 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00401_merge_and_stripelog.sql","errors":[]},{"query":"CREATE TABLE stripe2 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00401_merge_and_stripelog.sql","errors":[]},{"query":"CREATE TABLE stripe3 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00401_merge_and_stripelog.sql","errors":[]},{"query":"CREATE TABLE stripe4 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00401_merge_and_stripelog.sql","errors":[]},{"query":"CREATE TABLE stripe5 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00401_merge_and_stripelog.sql","errors":[]},{"query":"CREATE TABLE stripe6 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00401_merge_and_stripelog.sql","errors":[]},{"query":"CREATE TABLE stripe7 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00401_merge_and_stripelog.sql","errors":[]},{"query":"CREATE TABLE stripe8 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00401_merge_and_stripelog.sql","errors":[]},{"query":"CREATE TABLE stripe9 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00401_merge_and_stripelog.sql","errors":[]},{"query":"CREATE TABLE stripe10 ENGINE = StripeLog AS SELECT number AS x FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00401_merge_and_stripelog.sql","errors":[]},{"query":"CREATE TABLE merge_00401 AS stripe1 ENGINE = Merge(currentDatabase(), '^stripe\\\\\\\\d+');","fileName":"../ClickHouse/tests/queries/0_stateless/00401_merge_and_stripelog.sql","errors":[]},{"query":"CREATE TABLE grop_uniq_array_date (d Date, dt DateTime, id Integer) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00399_group_uniq_array_date_datetime.sql","errors":[]},{"query":"CREATE TABLE test1_00395( col1 UInt64, col2 Nullable(UInt64),\ncol3 String, col4 Nullable(String),\ncol5 Array(UInt64), col6 Array(Nullable(UInt64)),\ncol7 Array(String), col8 Array(Nullable(String)),\nd Date) Engine = MergeTree(d, (col1, d), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395( col1 UInt64, col2 Nullable(UInt64),\ncol3 String, col4 Nullable(String),\ncol5 Array(UInt64), col6 Array(Nullable(UInt64)),\ncol7 Array(String), col8 Array(Nullable(String)),\nd Date) Engine = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395( col1 UInt64, col2 Nullable(UInt64),\ncol3 String, col4 Nullable(String),\ncol5 Array(UInt64), col6 Array(Nullable(UInt64)),\ncol7 Array(String), col8 Array(Nullable(String)),\nd Date) Engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395( col1 UInt64, col2 Nullable(UInt64),\ncol3 String, col4 Nullable(String),\ncol5 Array(UInt64), col6 Array(Nullable(UInt64)),\ncol7 Array(String), col8 Array(Nullable(String)),\nd Date) Engine = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395( col1 UInt64, col2 Nullable(UInt64),\ncol3 String, col4 Nullable(String),\ncol5 Array(UInt64), col6 Array(Nullable(UInt64)),\ncol7 Array(String), col8 Array(Nullable(String)),\nd Date) Engine = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Array(Nullable(UInt64))) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Nullable(UInt64), col2 UInt64) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test2(col1 UInt64, col2 Nullable(UInt64)) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Nullable(UInt64), col2 Nullable(UInt64)) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395 (col1 Nullable(String)) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Nullable(Int8), col2 Nullable(UInt16), col3 Nullable(Float32)) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(cond1 Nullable(UInt8), then1 Int8, cond2 UInt8, then2 Nullable(UInt16), then3 Nullable(Float32)) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 UInt64) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Array(Nullable(UInt64))) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Array(Nullable(String))) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Array(Nullable(UInt64)), col2 UInt64) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Array(Nullable(String)), col2 UInt64) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 UInt64) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Nullable(UInt64)) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 String) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Nullable(String)) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Array(Nullable(UInt64))) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Array(Nullable(String))) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Array(Nullable(UInt64)), col2 UInt64) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Array(Nullable(UInt64)), col2 Nullable(UInt64)) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Array(Nullable(String)), col2 String) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Array(Nullable(String)), col2 Nullable(String)) Engine=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Nullable(String), col2 Nullable(UInt8), col3 String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 String, col2 Nullable(UInt8), col3 String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Nullable(String), col2 String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Nullable(UInt8), col2 String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Nullable(UInt64), col2 UInt64, col3 String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Nullable(UInt64), col2 UInt64, col3 Nullable(UInt64), col4 String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE test1_00395(col1 Array(Nullable(UInt8)), col2 String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00395_nullable.sql","errors":[]},{"query":"CREATE TABLE replaceall (str FixedString(3)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00394_replaceall_vector_fixed.sql","errors":[]},{"query":"CREATE TABLE replaceall (date Date DEFAULT today(), fs FixedString(16)) ENGINE = MergeTree(date, (date, fs), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00394_replaceall_vector_fixed.sql","errors":[]},{"query":"CREATE TABLE alter_00394 (d Date, k UInt64, i32 Int32, n Nested(ui8 UInt8, s String)) ENGINE=MergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00394_new_nested_column_keeps_offsets.sql","errors":[]},{"query":"CREATE TABLE enum_nested_alter (d Date DEFAULT '2000-01-01', x UInt64, n Nested(a String, e Enum8('Hello' = 1), b UInt8)) \nENGINE = MergeTree(d, x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00392_enum_nested_alter.sql","errors":[]},{"query":"CREATE TABLE enum_nested_alter (\nd Date DEFAULT '2000-01-01', \nx UInt64, \ntasks Nested(\nerrcategory Enum8(\n'undefined' = 0, 'system' = 1, 'generic' = 2, 'asio.netdb' = 3, 'asio.misc' = 4, \n'asio.addrinfo' = 5, 'rtb.client' = 6, 'rtb.logic' = 7, 'http.status' = 8), \nstatus Enum16('hello' = 1, 'world' = 2)))\nENGINE = MergeTree(d, x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00392_enum_nested_alter.sql","errors":[]},{"query":"CREATE TABLE enum_nested_alter (d Date DEFAULT '2000-01-01', x UInt64, n Nested(a String, e Enum8('Hello.world' = 1), b UInt8)) \nENGINE = MergeTree(d, x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00392_enum_nested_alter.sql","errors":[]},{"query":"CREATE TABLE enum_totals (e Enum8('hello' = 1, 'world' = 2)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00388_enum_with_totals.sql","errors":[]},{"query":"CREATE TABLE has_column_in_table (i Int64, s String, nest Nested(x UInt8, y UInt32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00386_has_column_in_table.sql","errors":[]},{"query":"CREATE TABLE enum_pk (date Date DEFAULT '0000-00-00', x Enum8('0' = 0, '1' = 1, '2' = 2), d Enum8('0' = 0, '1' = 1, '2' = 2)) ENGINE = MergeTree(date, x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00386_enum_in_pk.sql","errors":[]},{"query":"CREATE TABLE aggregates (d Date, s AggregateFunction(uniq, UInt64)) ENGINE = MergeTree(d, d, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00384_column_aggregate_function_insert_from.sql","errors":[]},{"query":"CREATE TABLE group_uniq_arr_str ENGINE = Memory AS SELECT hex(intHash32(g)) as id, if(c == 0, [hex(v)], if(c == 1, emptyArrayString(), [hex(v), hex(v)])) as v FROM\n(SELECT intDiv(number%1000000, 100) as v, intDiv(number%100, 10) as g, number%10 as c FROM system.numbers WHERE c < 3 LIMIT 10000000);","fileName":"../ClickHouse/tests/queries/0_stateless/00377_shard_group_uniq_array_of_string_array.sql","errors":[]},{"query":"CREATE TABLE group_uniq_arr_int ENGINE = Memory AS \tSELECT g as id, if(c == 0, [v], if(c == 1, emptyArrayInt64(), [v, v])) as v FROM\n\t\t(SELECT intDiv(number%1000000, 100) as v, intDiv(number%100, 10) as g, number%10 as c FROM system.numbers WHERE c < 3 LIMIT 10000000);","fileName":"../ClickHouse/tests/queries/0_stateless/00376_shard_group_uniq_array_of_int_array.sql","errors":[]},{"query":"CREATE TABLE group_uniq_str ENGINE = Memory AS SELECT number % 10 as id, toString(intDiv((number%10000), 10)) as v FROM system.numbers LIMIT 10000000;","fileName":"../ClickHouse/tests/queries/0_stateless/00375_shard_group_uniq_array_of_string.sql","errors":[]},{"query":"CREATE TABLE prewhere_defaults (d Date DEFAULT '2000-01-01', k UInt64 DEFAULT 0, x UInt16) ENGINE = MergeTree(d, k, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00363_defaults.sql","errors":[]},{"query":"CREATE TABLE nested1 (d Date DEFAULT '2000-01-01', x UInt64, n Nested(a String, b String)) ENGINE = MergeTree(d, x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00361_shared_array_offsets_and_squash_blocks.sql","errors":[]},{"query":"CREATE TABLE nested2 (d Date DEFAULT '2000-01-01', x UInt64, n Nested(a String, b String)) ENGINE = MergeTree(d, x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00361_shared_array_offsets_and_squash_blocks.sql","errors":[]},{"query":"CREATE TABLE index (\nkey Int32,\nname String,\nmerge_date Date\n) ENGINE = MergeTree(merge_date, key, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00345_index_accurate_comparison.sql","errors":[]},{"query":"CREATE TABLE numbers_squashed (number UInt8) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00341_squashing_insert_select2.sql","errors":[]},{"query":"CREATE TABLE numbers_squashed AS system.numbers ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00340_squashing_insert_select.sql","errors":[]},{"query":"CREATE TABLE bad_arrays (a Array(String), b Array(UInt8)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00338_replicate_array_of_strings.sql","errors":[]},{"query":"CREATE TABLE bad_arrays (a Array(String), b Array(String)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00338_replicate_array_of_strings.sql","errors":[]},{"query":"CREATE TABLE bad_arrays (a Array(String), b Array(UInt8)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00338_replicate_array_of_strings.sql","errors":[]},{"query":"CREATE TABLE ontime (FlightDate Date, Carrier String, FlightNum String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00334_column_aggregate_function_limit.sql","errors":[]},{"query":"CREATE TABLE myRMT( key Int64,\nsomeCol String,\nver DateTime\n) ENGINE = ReplacingMergeTree(ver)\nORDER BY key as SELECT 1, 'test', '2020-01-01';","fileName":"../ClickHouse/tests/queries/0_stateless/00331_final_and_prewhere_condition_ver_column.sql","errors":[]},{"query":"CREATE TABLE replace ( EventDate Date,  Id UInt64,  Data String,  Version UInt32) ENGINE = ReplacingMergeTree(EventDate, Id, 8192, Version);","fileName":"../ClickHouse/tests/queries/0_stateless/00331_final_and_prewhere.sql","errors":[]},{"query":"CREATE VIEW v1 AS SELECT 1 FROM (SELECT 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00330_view_subqueries.sql","errors":[]},{"query":"CREATE VIEW v2 AS SELECT number * number FROM (SELECT number FROM system.numbers LIMIT 10);","fileName":"../ClickHouse/tests/queries/0_stateless/00330_view_subqueries.sql","errors":[]},{"query":"CREATE TABLE summing_composite_key (d Date, k UInt64, FirstMap Nested(k1 UInt32, k2ID Int8, s Float64), SecondMap Nested(k1ID UInt64, k2Key String, k3Type Int32, s Int64)) ENGINE = SummingMergeTree(d, k, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00327_summing_composite_nested.sql","errors":[]},{"query":"CREATE TABLE multi_if_check(col1 UInt64, col2 String, col3 String, col4 String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00326_long_function_multi_if.sql","errors":[]},{"query":"CREATE TABLE multi_if_check(col1 UInt64, col2 String, col3 String, col4 String, col5 String, col6 String, col7 String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00326_long_function_multi_if.sql","errors":[]},{"query":"CREATE TABLE multi_if_check(col1 UInt64) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00326_long_function_multi_if.sql","errors":[]},{"query":"CREATE TABLE multi_if_check(value String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00326_long_function_multi_if.sql","errors":[]},{"query":"CREATE TABLE pk_set (d Date, n UInt64, host String, code UInt64) ENGINE = MergeTree(d, (n, host, code), 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00321_pk_set.sql","errors":[]},{"query":"CREATE TABLE index_for_like (s String, d Date DEFAULT today()) ENGINE = MergeTree(d, (s, d), 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00319_index_for_like.sql","errors":[]},{"query":"CREATE TABLE pk (d Date DEFAULT '2000-01-01', x UInt64, y UInt64, z UInt64) ENGINE = MergeTree(d, (x, y, z), 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00318_pk_tuple_order.sql","errors":[]},{"query":"CREATE TABLE sample_00314_1 (x UInt64, d Date DEFAULT today()) ENGINE = MergeTree(d, intHash64(x), intHash64(x), 10);","fileName":"../ClickHouse/tests/queries/0_stateless/00314_sample_factor_virtual_column.sql","errors":[]},{"query":"CREATE TABLE sample_00314_2 (x UInt64, d Date DEFAULT today()) ENGINE = MergeTree(d, intHash64(x), intHash64(x), 10);","fileName":"../ClickHouse/tests/queries/0_stateless/00314_sample_factor_virtual_column.sql","errors":[]},{"query":"CREATE TABLE sample_merge_00314 AS sample_00314_1 ENGINE = Merge(currentDatabase(), '^sample_00314_\\\\\\\\d\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00314_sample_factor_virtual_column.sql","errors":[]},{"query":"CREATE TABLE array_pk (key Array(UInt8), s String, n UInt64, d Date MATERIALIZED '2000-01-01') ENGINE = MergeTree(d, (key, s, n), 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00311_array_primary_key.sql","errors":[]},{"query":"CREATE TABLE test_00309_formats_case_insensitive(a Int64, b String) ENGINE=File(Csv);","fileName":"../ClickHouse/tests/queries/0_stateless/00309_formats_case_insensitive.sql","errors":[]},{"query":"CREATE TABLE insert (i UInt64, s String, u UUID, d Date, t DateTime, a Array(UInt32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00306_insert_values_and_expressions.sql","errors":[]},{"query":"create table if not exists t_306 (a int) engine Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00306_insert_values_and_expressions.sql","errors":[]},{"query":"CREATE TABLE log (x UInt8) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00299_stripe_log_multiple_inserts.sql","errors":[]},{"query":"CREATE TABLE log (x UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00299_stripe_log_multiple_inserts.sql","errors":[]},{"query":"CREATE TABLE log (x UInt8) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00299_stripe_log_multiple_inserts.sql","errors":[]},{"query":"CREATE TABLE enum (x Enum8('Hello' = -100, '\\\\\\\\' = 0, '\\\\t\\\\\\\\t' = 111), y UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00298_enum_width_and_cast.sql","errors":[]},{"query":"create table enums ( d Date default '2015-12-29', k default 0,\ne Enum8('world' = 2, 'hello' = 1), sign Enum8('minus' = -1, 'plus' = 1),\nletter Enum16('a' = 0, 'b' = 1, 'c' = 2, '*' = -256)\n) engine = MergeTree(d, k, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00294_shard_enums.sql","errors":[]},{"query":"create table enums (e Enum8('a' = 0, 'b' = 1, 'c' = 2, 'd' = 3)) engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00294_shard_enums.sql","errors":[]},{"query":"create table enums_copy engine = TinyLog as select * from enums;","fileName":"../ClickHouse/tests/queries/0_stateless/00294_shard_enums.sql","errors":[]},{"query":"create table enums_copy engine = TinyLog as select * from remote('127.0.0.2', currentDatabase(), enums);","fileName":"../ClickHouse/tests/queries/0_stateless/00294_shard_enums.sql","errors":[]},{"query":"CREATE TABLE numbers_10_00290 ENGINE = Log AS SELECT * FROM system.numbers LIMIT 10000;","fileName":"../ClickHouse/tests/queries/0_stateless/00290_shard_aggregation_memory_efficient.sql","errors":[]},{"query":"CREATE TABLE stripelog (x UInt8) ENGINE = StripeLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00288_empty_stripelog.sql","errors":[]},{"query":"CREATE TABLE t_00284_str(s String) ENGINE = MergeTree() ORDER BY tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00284_external_aggregation_2.sql","errors":[]},{"query":"CREATE TABLE t_00284_lc_str(s LowCardinality(String)) ENGINE = MergeTree() ORDER BY tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00284_external_aggregation_2.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS merge (d Date DEFAULT '2000-01-01', x UInt64) ENGINE = MergeTree(d, x, 5);","fileName":"../ClickHouse/tests/queries/0_stateless/00282_merging.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS merge (d Date DEFAULT '2000-01-01', x UInt64) ENGINE = MergeTree(d, x, 5);","fileName":"../ClickHouse/tests/queries/0_stateless/00282_merging.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS merge (d Date DEFAULT '2000-01-01', x UInt64) ENGINE = MergeTree(d, x, 5);","fileName":"../ClickHouse/tests/queries/0_stateless/00282_merging.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS merge (d Date DEFAULT '2000-01-01', x UInt64) ENGINE = MergeTree(d, x, 5);","fileName":"../ClickHouse/tests/queries/0_stateless/00282_merging.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS merge (d Date DEFAULT '2000-01-01', x UInt64) ENGINE = MergeTree(d, x, 5);","fileName":"../ClickHouse/tests/queries/0_stateless/00282_merging.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS merge (d Date DEFAULT '2000-01-01', x UInt64) ENGINE = MergeTree(d, x, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00282_merging.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS merge (d Date DEFAULT '2000-01-01', x UInt64) ENGINE = MergeTree(d, x, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00282_merging.sql","errors":[]},{"query":"CREATE TABLE sorted (d Date DEFAULT '2000-01-01', x UInt64) ENGINE = MergeTree(d, x, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00278_insert_already_sorted.sql","errors":[]},{"query":"CREATE TABLE sample_00276 (d Date DEFAULT '2000-01-01', x UInt8) ENGINE = MergeTree(d, x, x, 10);","fileName":"../ClickHouse/tests/queries/0_stateless/00276_sample.sql","errors":[]},{"query":"CREATE TABLE sample_00276 (d Date DEFAULT '2000-01-01', x UInt16) ENGINE = MergeTree(d, x, x, 10);","fileName":"../ClickHouse/tests/queries/0_stateless/00276_sample.sql","errors":[]},{"query":"CREATE TABLE numbers_1001 (number UInt64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00275_shard_quantiles_weighted.sql","errors":[]},{"query":"CREATE VIEW view1_00270 AS SELECT number FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00270_views_query_processing_stage.sql","errors":[]},{"query":"CREATE VIEW view2_00270 AS SELECT number FROM system.numbers LIMIT 10;","fileName":"../ClickHouse/tests/queries/0_stateless/00270_views_query_processing_stage.sql","errors":[]},{"query":"CREATE TABLE merge_view_00270 (number UInt64) ENGINE = Merge(currentDatabase(), '^view');","fileName":"../ClickHouse/tests/queries/0_stateless/00270_views_query_processing_stage.sql","errors":[]},{"query":"CREATE TABLE numbers_10k_log ENGINE = Log AS SELECT number FROM system.numbers LIMIT 10000;","fileName":"../ClickHouse/tests/queries/0_stateless/00263_merge_aggregates_and_overflow.sql","errors":[]},{"query":"create table aliases_test (date default today(), id default rand(), array default [0, 1, 2]) engine=MergeTree(date, id, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00262_alter_alias.sql","errors":[]},{"query":"create table aliases_test ( date Date, id UInt64,\narray default ['zero','one','two'],\nd1 default array,\na1 alias array, a2 alias a1, a3 alias a2,\na4 alias arrayMap(x -> toString(x), range(3)), a5 alias a4, a6 alias a5,\n\\`struct.d1\\` default array,\n\\`struct.a1\\` alias array, \\`struct.a2\\` alias struct.a1, \\`struct.a3\\` alias struct.a2,\n\\`struct.a4\\` alias arrayMap(x -> toString(x), range(3)), \\`struct.a5\\` alias struct.a4, \\`struct.a6\\` alias struct.a5\n) engine=MergeTree(date, id, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00261_storage_aliases_and_array_join.sql","errors":[{"message":"no viable alternative at input 'create table aliases_test ( date Date, id UInt64,\\narray default ['zero','one','two'],\\nd1 default array,\\na1 alias array, a2 alias a1, a3 alias a2,\\na4 alias arrayMap(x -> toString(x), range(3)), a5 alias a4, a6 alias a5,\\n\\'","startColumn":0,"startLine":6,"endColumn":1,"endLine":6}]},{"query":"create table numbers_10 (number UInt64) engine = MergeTree order by number;","fileName":"../ClickHouse/tests/queries/0_stateless/00254_tuple_extremes.sql","errors":[]},{"query":"CREATE TABLE defaults (a UInt8, b DEFAULT 0, c DEFAULT identity(b)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00253_insert_recursive_defaults.sql","errors":[]},{"query":"CREATE TABLE elog_cut (\ndate Date DEFAULT toDate(uts),\nuts DateTime,\npr UInt64,\nya_uid UInt64,\nadf_uid UInt64,\nowner_id UInt32,\neff_uid UInt64 DEFAULT if(adf_uid != 0, adf_uid, ya_uid),\npage_session UInt64 DEFAULT cityHash64(eff_uid, pr),\nsample_key UInt64 ALIAS page_session\n) ENGINE = MergeTree(date, cityHash64(adf_uid, ya_uid, pr), (owner_id, date, cityHash64(adf_uid, ya_uid, pr)), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00253_insert_recursive_defaults.sql","errors":[]},{"query":"CREATE TABLE storage(UserID UInt64) ENGINE=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00252_shard_global_in_aggregate_function.sql","errors":[]},{"query":"CREATE TABLE attach_r1 (d Date) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00236/01/attach', 'r1', d, d, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00236_replicated_drop_on_non_leader_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE attach_r2 (d Date) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00236/01/attach', 'r2', d, d, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00236_replicated_drop_on_non_leader_zookeeper_long.sql","errors":[]},{"query":"create temporary table one_0023 as select 1;","fileName":"../ClickHouse/tests/queries/0_stateless/00235_create_temporary_table_as.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS foo_00234(id UInt64) Engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00234_disjunctive_equality_chains_optimization.sql","errors":[]},{"query":"create table prewhere_column_missing (d Date default '2015-01-01', x UInt64) engine=MergeTree(d, x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00229_prewhere_column_missing.sql","errors":[]},{"query":"CREATE TABLE deduplication (d Date DEFAULT '2015-01-01', x Int8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00226/deduplication', 'r1', d, x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00226_zookeeper_deduplication_and_unexpected_parts_long.sql","errors":[]},{"query":"CREATE TABLE numbers_100k_log ENGINE = Log AS SELECT * FROM system.numbers LIMIT 100000;","fileName":"../ClickHouse/tests/queries/0_stateless/00224_shard_distributed_aggregation_memory_efficient_and_overflows.sql","errors":[]},{"query":"CREATE TABLE numbers_10_00223 ENGINE = Log AS SELECT * FROM system.numbers LIMIT 10000;","fileName":"../ClickHouse/tests/queries/0_stateless/00223_shard_distributed_aggregation_memory_efficient.sql","errors":[]},{"query":"create table sequence_test (time UInt32, data UInt8) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00222_sequence_aggregate_function_family.sql","errors":[]},{"query":"CREATE TABLE primary_key (d Date DEFAULT today(), x Int8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00215/primary_key', 'r1', d, -x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00215_primary_key_order_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE primary_key (d Date DEFAULT today(), x Int8) ENGINE = MergeTree(d, -x, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00214_primary_key_order.sql","errors":[]},{"query":"CREATE TABLE test_00209 (x UInt8) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00209_insert_select_extremes.sql","errors":[]},{"query":"create table t_q1ht4gq_5 (c_zeij INTEGER NOT NULL, c_fehk75l TEXT, c_jz TEXT, c_wynzuek TEXT, c_nkt INTEGER NOT NULL, c_g TEXT, c_mc2 TEXT, primary key(c_nkt)) engine = MergeTree();","fileName":"../ClickHouse/tests/queries/0_stateless/00205_emptyscalar_subquery_type_mismatch_bug.sql","errors":[{"message":"no viable alternative at input 'create table t_q1ht4gq_5 (c_zeij INTEGER NOT'","startColumn":41,"startLine":1,"endColumn":44,"endLine":1}]},{"query":"CREATE TABLE t1_00203 (k1 UInt32, k2 UInt32, k3 UInt32, val_t1 String) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00203_full_join.sql","errors":[]},{"query":"CREATE TABLE t2_00203 (val_t2 String, k3 UInt32, k2 UInt32, k1 UInt32) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00203_full_join.sql","errors":[]},{"query":"CREATE TABLE numbers_memory AS system.numbers ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00200_shard_distinct_order_by_limit_distributed.sql","errors":[]},{"query":"CREATE TABLE parallel_replicas (d Date DEFAULT today(), x UInt32, u UInt64, s String) ENGINE = MergeTree(d, cityHash64(u, s), (x, d, cityHash64(u, s)), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00193_parallel_replicas.sql","errors":[]},{"query":"CREATE TABLE aggregating_00191 (d Date DEFAULT '2000-01-01', k UInt64, u AggregateFunction(uniq, UInt64)) ENGINE = AggregatingMergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00191_aggregating_merge_tree_and_final.sql","errors":[]},{"query":"CREATE TABLE data_00184 Engine=Memory() AS SELECT * FROM numbers(2);","fileName":"../ClickHouse/tests/queries/0_stateless/00184_shard_distributed_group_by_no_merge.sql","errors":[]},{"query":"CREATE TABLE series(i UInt32, x_value Float64, y_value Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00181_aggregate_functions_statistics_stable.sql","errors":[]},{"query":"CREATE TABLE series(i UInt32, x_value Float64, y_value Float64) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00181_aggregate_functions_statistics.sql","errors":[]},{"query":"CREATE TABLE t_00180 (x UInt8) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00180_attach_materialized_view.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW mv_00180 ENGINE = Null AS SELECT * FROM t_00180;","fileName":"../ClickHouse/tests/queries/0_stateless/00180_attach_materialized_view.sql","errors":[]},{"query":"CREATE TABLE datetime64_index_tbl(ts DateTime64(3, 'UTC')) ENGINE=MergeTree ORDER BY ts;","fileName":"../ClickHouse/tests/queries/0_stateless/00178_query_datetime64_index.sql","errors":[]},{"query":"CREATE TABLE partition_by_ignore (ts DateTime, ts_2 DateTime) ENGINE=MergeTree PARTITION BY (toYYYYMM(ts), ignore(ts_2)) ORDER BY tuple() SETTINGS index_granularity = 8192, index_granularity_bytes = '10Mi';","fileName":"../ClickHouse/tests/queries/0_stateless/00175_partition_by_ignore.sql","errors":[]},{"query":"CREATE TABLE mt_00168 (EventDate Date, UTCEventTime DateTime, MoscowEventDate Date DEFAULT toDate(UTCEventTime)) ENGINE = MergeTree(EventDate, UTCEventTime, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00168_buffer_defaults.sql","errors":[]},{"query":"CREATE TABLE mt_00168_buffer AS mt_00168 ENGINE = Buffer(currentDatabase(), mt_00168, 16, 10, 100, 10000, 1000000, 10000000, 100000000);","fileName":"../ClickHouse/tests/queries/0_stateless/00168_buffer_defaults.sql","errors":[]},{"query":"CREATE TABLE mt_00160 (d Date DEFAULT toDate('2015-05-01'), x UInt64) ENGINE = MergeTree PARTITION BY d ORDER BY x SETTINGS index_granularity = 1, min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00160_merge_and_index_in_in.sql","errors":[]},{"query":"CREATE TABLE merge_00160 (d Date, x UInt64) ENGINE = Merge(currentDatabase(), '^mt_00160\\$');","fileName":"../ClickHouse/tests/queries/0_stateless/00160_merge_and_index_in_in.sql","errors":[]},{"query":"CREATE TABLE mt_00160 (d Date DEFAULT toDate('2015-05-01'), x UInt64, y UInt64, z UInt64) ENGINE = MergeTree PARTITION BY d ORDER BY (x, z) SETTINGS index_granularity = 1, min_bytes_for_wide_part = 0;","fileName":"../ClickHouse/tests/queries/0_stateless/00160_merge_and_index_in_in.sql","errors":[]},{"query":"CREATE TABLE memory (x UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00159_whitespace_in_columns_list.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS {CLICKHOUSE_DATABASE:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/00158_buffer_and_nonexistent_table.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS {'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.mt_buffer_00158 (d Date DEFAULT today(), x UInt64) ENGINE = Buffer({CLICKHOUSE_DATABASE:Identifier}, mt_00158, 16, 100, 100, 1000000, 1000000, 1000000000, 1000000000);","fileName":"../ClickHouse/tests/queries/0_stateless/00158_buffer_and_nonexistent_table.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create table nested_map_multiple_values (d materialized today(), k UInt64, payload materialized rand(), SomeMap Nested(ID UInt32, Num1 Int64, Num2 Float64)) engine=SummingMergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00148_summing_merge_tree_nested_map_multiple_values.sql","errors":[]},{"query":"create table nested_not_a_map (d materialized today(), k UInt64, payload materialized rand(), OnlyOneColumnMap Nested(ID UInt32), NonArithmeticValueMap Nested(ID UInt32, Date Date), Nested_ Nested(ID UInt32, Num Int64)) engine=SummingMergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00148_summing_merge_tree_nested_map_multiple_values.sql","errors":[]},{"query":"create table summing_merge_tree_aggregate_function ( d Date,\nk UInt64,\nu AggregateFunction(uniq, UInt64)\n) engine=SummingMergeTree(d, k, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00148_summing_merge_tree_aggregate_function.sql","errors":[]},{"query":"create table summing_merge_tree_aggregate_function ( d materialized today(),\nk UInt64,\nc UInt64,\nu AggregateFunction(uniq, UInt8),\nue AggregateFunction(uniqExact, UInt8)\n) engine=SummingMergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00148_summing_merge_tree_aggregate_function.sql","errors":[]},{"query":"create table summing_merge_tree_aggregate_function (d materialized today(), k UInt64, c UInt64, x AggregateFunction(topK(2), UInt8)) engine=SummingMergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00148_summing_merge_tree_aggregate_function.sql","errors":[]},{"query":"create table summing_merge_tree_aggregate_function (d materialized today(), k UInt64, c UInt64, x AggregateFunction(topKWeighted(2), UInt8, UInt8)) engine=SummingMergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00148_summing_merge_tree_aggregate_function.sql","errors":[]},{"query":"create table summing_merge_tree_aggregate_function (d materialized today(), k UInt64, x AggregateFunction(avg, Float64)) engine=SummingMergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00148_summing_merge_tree_aggregate_function.sql","errors":[]},{"query":"create table summing_merge_tree_aggregate_function (d materialized today(), k UInt64, x AggregateFunction(quantile(0.1), Float64)) engine=SummingMergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00148_summing_merge_tree_aggregate_function.sql","errors":[]},{"query":"create table summing_merge_tree_null ( d materialized today(),\nk UInt64,\nc UInt64,\nu UInt64\n) engine=Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00148_summing_merge_tree_aggregate_function.sql","errors":[]},{"query":"create materialized view summing_merge_tree_aggregate_function ( d Date,\nk UInt64,\nc UInt64,\nu AggregateFunction(uniq, UInt64)\n) engine=SummingMergeTree(d, k, 8192)\nas select d, k, sum(c) as c, uniqState(u) as u\nfrom summing_merge_tree_null\ngroup by d, k;","fileName":"../ClickHouse/tests/queries/0_stateless/00148_summing_merge_tree_aggregate_function.sql","errors":[]},{"query":"CREATE TABLE alter_00147 (d Date DEFAULT toDate('2015-01-01'), n Nested(x String)) ENGINE = MergeTree(d, d, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00147_alter_nested_default.sql","errors":[]},{"query":"create table nested_map (d default today(), k UInt64, payload default rand(), SomeMap Nested(ID UInt32, Num Int64)) engine=SummingMergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00146_summing_merge_tree_nested_map.sql","errors":[]},{"query":"create table nested_map (d default today(), k UInt64, payload default rand(), SomeMap Nested(ID String, Num Int64)) engine=SummingMergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00146_summing_merge_tree_nested_map.sql","errors":[]},{"query":"create table nested_map_explicit (d default today(), k UInt64, SomeIntExcluded UInt32, SomeMap Nested(ID UInt32, Num Int64)) engine=SummingMergeTree(d, k, 8192, (SomeMap));","fileName":"../ClickHouse/tests/queries/0_stateless/00146_summing_merge_tree_nested_map.sql","errors":[]},{"query":"CREATE TABLE default (d Date DEFAULT toDate(t), t DateTime) ENGINE = MergeTree(d, t, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00141_parse_timestamp_as_datetime.sql","errors":[]},{"query":"CREATE TABLE prewhere (d Date, a String, b String) ENGINE = MergeTree(d, d, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00140_prewhere_column_order.sql","errors":[]},{"query":"CREATE TABLE null_sink_00126 (a UInt8, b String, c Array(UInt32)) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00126_buffer.sql","errors":[]},{"query":"CREATE TABLE buffer_00126 (a UInt8, b String, c Array(UInt32)) ENGINE = Buffer(currentDatabase(), null_sink_00126, 1, 1000, 1000, 1000, 1000, 1000000, 1000000);","fileName":"../ClickHouse/tests/queries/0_stateless/00126_buffer.sql","errors":[]},{"query":"CREATE TABLE report(id UInt32, event_date Date, priority UInt32, description String) ENGINE = MergeTree(event_date, intHash32(id), (id, event_date, intHash32(id)), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00124_shard_distributed_with_many_replicas.sql","errors":[]},{"query":"CREATE TABLE alter_00121 (d Date, x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/alter_00121/t1', 'r1', d, (d), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00121_drop_column_zookeeper.sql","errors":[]},{"query":"CREATE TABLE alter_00121 (d Date) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test/alter_00121/t2', 'r1', d, (d), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00121_drop_column_zookeeper.sql","errors":[]},{"query":"CREATE TABLE t2 (s String, x Array(UInt8), k UInt64) ENGINE = Join(ANY, LEFT, k);","fileName":"../ClickHouse/tests/queries/0_stateless/00119_storage_join.sql","errors":[]},{"query":"CREATE TABLE t2 (k UInt64, s String) ENGINE = Join(ANY, LEFT, k);","fileName":"../ClickHouse/tests/queries/0_stateless/00118_storage_join.sql","errors":[]},{"query":"CREATE TABLE null_00117 (a Array(UInt64), b Array(String), c Array(Array(Date))) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00117_parsing_arrays.sql","errors":[]},{"query":"CREATE TABLE set (x String) ENGINE = Set;","fileName":"../ClickHouse/tests/queries/0_stateless/00116_storage_set.sql","errors":[]},{"query":"create table tab (x String) engine = MergeTree order by x as select 'Hello';","fileName":"../ClickHouse/tests/queries/0_stateless/00116_storage_set.sql","errors":[]},{"query":"CREATE TABLE numbers_mt (number UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00113_shard_group_array.sql","errors":[]},{"query":"CREATE TABLE numbers_mt (number UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00113_shard_group_array.sql","errors":[]},{"query":"CREATE VIEW numbers10m AS SELECT number FROM system.numbers LIMIT 5000000;","fileName":"../ClickHouse/tests/queries/0_stateless/00111_shard_external_sort_distributed.sql","errors":[]},{"query":"CREATE TABLE  numbers500k (number UInt32) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00109_shard_totals_after_having.sql","errors":[]},{"query":"CREATE TEMPORARY TABLE t (a UInt8);","fileName":"../ClickHouse/tests/queries/0_stateless/00102_insert_into_temporary_table.sql","errors":[]},{"query":"CREATE TABLE test_table (EventDate Date, CounterID UInt32,  UserID UInt64,  EventTime DateTime('America/Los_Angeles'), UTCEventTime DateTime('UTC')) ENGINE = MergeTree(EventDate, CounterID, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00101_materialized_views_and_insert_without_explicit_database.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_view (Rows UInt64,  MaxHitTime DateTime('America/Los_Angeles')) ENGINE = Memory AS SELECT count() AS Rows, max(UTCEventTime) AS MaxHitTime FROM test_table;","fileName":"../ClickHouse/tests/queries/0_stateless/00101_materialized_views_and_insert_without_explicit_database.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW test_view_filtered (EventDate Date, CounterID UInt32) ENGINE = Memory POPULATE AS SELECT CounterID, EventDate FROM test_table WHERE EventDate < '2013-01-01';","fileName":"../ClickHouse/tests/queries/0_stateless/00101_materialized_views_and_insert_without_explicit_database.sql","errors":[]},{"query":"CREATE DATABASE IF NOT EXISTS {CLICKHOUSE_DATABASE_1:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/00101_materialized_views_and_insert_without_explicit_database.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE IF NOT EXISTS {'","startColumn":30,"startLine":1,"endColumn":31,"endLine":1}]},{"query":"CREATE TABLE tmp (date Date, name String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00101_materialized_views_and_insert_without_explicit_database.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW tmp_mv ENGINE = AggregatingMergeTree(date, (date, name), 8192) AS SELECT date, name, countState() AS cc FROM tmp GROUP BY date, name;","fileName":"../ClickHouse/tests/queries/0_stateless/00101_materialized_views_and_insert_without_explicit_database.sql","errors":[]},{"query":"CREATE TABLE tmp_mv2 AS tmp_mv;","fileName":"../ClickHouse/tests/queries/0_stateless/00101_materialized_views_and_insert_without_explicit_database.sql","errors":[]},{"query":"CREATE TABLE tmp_mv3 AS tmp_mv ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00101_materialized_views_and_insert_without_explicit_database.sql","errors":[]},{"query":"CREATE MATERIALIZED VIEW tmp_mv4 ENGINE = AggregatingMergeTree(date, date, 8192) POPULATE AS SELECT DISTINCT * FROM tmp_mv;","fileName":"../ClickHouse/tests/queries/0_stateless/00101_materialized_views_and_insert_without_explicit_database.sql","errors":[]},{"query":"CREATE TABLE report1(id UInt32, event_date Date, priority UInt32, description String) ENGINE = MergeTree(event_date, intHash32(id), (id, event_date, intHash32(id)), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00098_shard_i_union_all.sql","errors":[]},{"query":"CREATE TABLE report2(id UInt32, event_date Date, priority UInt32, description String) ENGINE = MergeTree(event_date, intHash32(id), (id, event_date, intHash32(id)), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00098_shard_i_union_all.sql","errors":[]},{"query":"CREATE TABLE data2013 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_f_union_all.sql","errors":[]},{"query":"CREATE TABLE data2015 (data_name String, data_value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_f_union_all.sql","errors":[]},{"query":"CREATE TABLE data2013 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_e_union_all.sql","errors":[]},{"query":"CREATE TABLE data2015 (data_name String, data_value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_e_union_all.sql","errors":[]},{"query":"CREATE TABLE data2013 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_d_union_all.sql","errors":[]},{"query":"CREATE TABLE data2015 (data_name String, data_value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_d_union_all.sql","errors":[]},{"query":"CREATE TABLE data2013 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_5_union_all.sql","errors":[]},{"query":"CREATE TABLE data2014 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_5_union_all.sql","errors":[]},{"query":"CREATE TABLE data2013 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_4_union_all.sql","errors":[]},{"query":"CREATE TABLE data2014 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_4_union_all.sql","errors":[]},{"query":"CREATE TABLE data2013 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_3_union_all.sql","errors":[]},{"query":"CREATE TABLE data2014 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_3_union_all.sql","errors":[]},{"query":"CREATE TABLE data2013 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_2_union_all.sql","errors":[]},{"query":"CREATE TABLE data2014 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_2_union_all.sql","errors":[]},{"query":"CREATE TABLE data2013 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_1_union_all.sql","errors":[]},{"query":"CREATE TABLE data2014 (name String, value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_1_union_all.sql","errors":[]},{"query":"CREATE TABLE data2015 (data_name String, data_value UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00098_1_union_all.sql","errors":[]},{"query":"CREATE TABLE min_if (arr Array(UInt8), str String, int Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00096_aggregation_min_if.sql","errors":[]},{"query":"CREATE TABLE summing_merge_tree (d Date, a String, x UInt32, y UInt64, z Float64) ENGINE = SummingMergeTree(d, a, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00084_summing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE summing_merge_tree (d Date, a String, x UInt32, y UInt64, z Float64) ENGINE = SummingMergeTree(d, a, 8192, (y, z));","fileName":"../ClickHouse/tests/queries/0_stateless/00084_summing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE summing (p Date, k UInt64, s UInt64) ENGINE = SummingMergeTree(p, k, 1);","fileName":"../ClickHouse/tests/queries/0_stateless/00084_summing_merge_tree.sql","errors":[]},{"query":"CREATE TABLE merge_tree \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = MergeTree(d, (a, b), 111);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE collapsing_merge_tree \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = CollapsingMergeTree(d, (a, b), 111, y);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE versioned_collapsing_merge_tree \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = VersionedCollapsingMergeTree(d, (a, b), 111, y, b);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE summing_merge_tree \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = SummingMergeTree(d, (a, b), 111);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE summing_merge_tree_with_list_of_columns_to_sum \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = SummingMergeTree(d, (a, b), 111, (y, z));","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE aggregating_merge_tree \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = AggregatingMergeTree(d, (a, b), 111);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE merge_tree_with_sampling \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = MergeTree(d, sipHash64(a) + b, (a, sipHash64(a) + b), 111);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE collapsing_merge_tree_with_sampling \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = CollapsingMergeTree(d, sipHash64(a) + b, (a, sipHash64(a) + b), 111, y);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE versioned_collapsing_merge_tree_with_sampling \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = VersionedCollapsingMergeTree(d, sipHash64(a) + b, (a, sipHash64(a) + b, b), 111, y, b);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE summing_merge_tree_with_sampling \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = SummingMergeTree(d, sipHash64(a) + b, (a, sipHash64(a) + b), 111);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE summing_merge_tree_with_sampling_with_list_of_columns_to_sum \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = SummingMergeTree(d, sipHash64(a) + b, (a, sipHash64(a) + b), 111, (y, z));","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE aggregating_merge_tree_with_sampling \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = AggregatingMergeTree(d, sipHash64(a) + b, (a, sipHash64(a) + b), 111);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_merge_tree \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_merge_tree/', 'r1', d, (a, b), 111);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_collapsing_merge_tree \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedCollapsingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_collapsing_merge_tree/', 'r1', d, (a, b), 111, y);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_versioned_collapsing_merge_tree \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedVersionedCollapsingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_versioned_collapsing_merge_tree/', 'r1', d, (a, b), 111, y, b);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_summing_merge_tree \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedSummingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_summing_merge_tree/', 'r1', d, (a, b), 111);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_summing_merge_tree_with_list_of_columns_to_sum \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedSummingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_summing_merge_tree_with_list_of_columns_to_sum/', 'r1', d, (a, b), 111, (y, z));","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_aggregating_merge_tree \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_aggregating_merge_tree/', 'r1', d, (a, b), 111);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_merge_tree_with_sampling \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_merge_tree_with_sampling/', 'r1', d, sipHash64(a) + b, (a, sipHash64(a) + b), 111);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_collapsing_merge_tree_with_sampling \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedCollapsingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_collapsing_merge_tree_with_sampling/', 'r1', d, sipHash64(a) + b, (a, sipHash64(a) + b), 111, y);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_versioned_collapsing_merge_tree_with_sampling \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedVersionedCollapsingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_versioned_collapsing_merge_tree_with_sampling/', 'r1', d, sipHash64(a) + b, (a, sipHash64(a) + b, b), 111, y, b);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_summing_merge_tree_with_sampling \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedSummingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_summing_merge_tree_with_sampling/', 'r1', d, sipHash64(a) + b, (a, sipHash64(a) + b), 111);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_summing_merge_tree_with_sampling_with_list_of_columns_to_sum \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedSummingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_summing_merge_tree_with_sampling_with_list_of_columns_to_sum/', 'r1', d, sipHash64(a) + b, (a, sipHash64(a) + b), 111, (y, z));","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_aggregating_merge_tree_with_sampling \t(d Date, a String, b UInt8, x String, y Int8, z UInt32) ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{database}/test_00083/01/replicated_aggregating_merge_tree_with_sampling/', 'r1', d, sipHash64(a) + b, (a, sipHash64(a) + b), 111);","fileName":"../ClickHouse/tests/queries/0_stateless/00083_create_merge_tree_zookeeper_long.sql","errors":[]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE:Identifier};","fileName":"../ClickHouse/tests/queries/0_stateless/00080_show_tables_and_system_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.A (A UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00080_show_tables_and_system_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.B (A UInt8) ENGINE = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00080_show_tables_and_system_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE TEMPORARY TABLE test_temporary_table (id UInt64);","fileName":"../ClickHouse/tests/queries/0_stateless/00080_show_tables_and_system_tables.sql","errors":[]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.test_log(id UInt64) ENGINE = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00080_show_tables_and_system_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"CREATE MATERIALIZED VIEW {CLICKHOUSE_DATABASE:Identifier}.test_materialized ENGINE = Log AS SELECT * FROM {CLICKHOUSE_DATABASE:Identifier}.test_log;","fileName":"../ClickHouse/tests/queries/0_stateless/00080_show_tables_and_system_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE MATERIALIZED VIEW {'","startColumn":25,"startLine":1,"endColumn":26,"endLine":1}]},{"query":"CREATE DATABASE {CLICKHOUSE_DATABASE:Identifier} ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00080_show_tables_and_system_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE DATABASE {'","startColumn":16,"startLine":1,"endColumn":17,"endLine":1}]},{"query":"CREATE TABLE {CLICKHOUSE_DATABASE:Identifier}.A (A UInt8) ENGINE = Null;","fileName":"../ClickHouse/tests/queries/0_stateless/00080_show_tables_and_system_tables.sql","errors":[{"message":"no viable alternative at input 'CREATE TABLE {'","startColumn":13,"startLine":1,"endColumn":14,"endLine":1}]},{"query":"create table defaulted (col1 default 0) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00079_defaulted_columns.sql","errors":[]},{"query":"create table defaulted (col1 UInt32, col2 default col1 + 1, col3 materialized col1 + 2, col4 alias col1 + 3) engine=Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00079_defaulted_columns.sql","errors":[]},{"query":"create table defaulted (col1 Int8, col2 UInt64 default (SELECT dummy+99 from system.one)) engine=Memory; --{serverError THERE_IS_NO_DEFAULT_VALUE} set allow_deprecated_syntax_for_merge_tree=1;","fileName":"../ClickHouse/tests/queries/0_stateless/00079_defaulted_columns.sql","errors":[]},{"query":"create table defaulted (payload String, date materialized today(), key materialized 0 * rand()) engine=MergeTree(date, key, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00079_defaulted_columns.sql","errors":[]},{"query":"CREATE TABLE addresses(addr String) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00076_ip_coding_functions.sql","errors":[]},{"query":"CREATE TABLE insert_fewer_columns (a UInt8, b UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00071_insert_fewer_columns.sql","errors":[]},{"query":"CREATE TABLE insert_fewer_columns_2 (b UInt8, a UInt8) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00071_insert_fewer_columns.sql","errors":[]},{"query":"CREATE TABLE IF NOT EXISTS empty_tiny_log(A UInt8) Engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00068_empty_tiny_log.sql","errors":[]},{"query":"CREATE TABLE check_query_tiny_log (N UInt32, S String) Engine = TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00063_check_query.sql","errors":[]},{"query":"CREATE TABLE check_query_log (N UInt32,S String) Engine = Log;","fileName":"../ClickHouse/tests/queries/0_stateless/00063_check_query.sql","errors":[]},{"query":"CREATE TABLE replicated_alter1 (d Date, k UInt64, i32 Int32) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/test_00062/alter', 'r1', d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00062_replicated_merge_tree_alter_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE replicated_alter2 (d Date, k UInt64, i32 Int32) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/test_00062/alter', 'r2', d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00062_replicated_merge_tree_alter_zookeeper_long.sql","errors":[]},{"query":"CREATE TABLE alter_00061 (d Date, k UInt64, i32 Int32) ENGINE=MergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00061_merge_tree_alter.sql","errors":[]},{"query":"CREATE TABLE test_local (x Int64) ENGINE = MergeTree order by x as select * from numbers(10);","fileName":"../ClickHouse/tests/queries/0_stateless/00059_shard_global_in_mergetree.sql","errors":[]},{"query":"CREATE TABLE stored_aggregates (\n\td\tDate,\n\tUniq \t\tAggregateFunction(uniq, UInt64)\n)\nENGINE = AggregatingMergeTree(d, d, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00048_b_stored_aggregates_merge.sql","errors":[]},{"query":"CREATE TABLE stored_aggregates (\nd   Date,\nUniq        AggregateFunction(uniq, UInt64)\n)\nENGINE = AggregatingMergeTree(d, d, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00048_a_stored_aggregates_merge.sql","errors":[]},{"query":"CREATE TABLE stored_aggregates (\n\td\tDate,\n\tk1 \tUInt64,\n\tk2 \tString,\n\tSum \t\tAggregateFunction(sum, UInt64),\n\tAvg \t\tAggregateFunction(avg, UInt64),\n\tUniq \t\tAggregateFunction(uniq, UInt64),\n\tAny \t\tAggregateFunction(any, String),\n\tAnyIf \t\tAggregateFunction(anyIf, String, UInt8),\n\tQuantiles \tAggregateFunction(quantiles(0.5, 0.9), UInt64),\n\tGroupArray\tAggregateFunction(groupArray, String)\n)\nENGINE = AggregatingMergeTree(d, (d, k1, k2), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00047_stored_aggregates_complex.sql","errors":[]},{"query":"CREATE TABLE stored_aggregates (\nd Date,\nUniq AggregateFunction(uniq, UInt64)\n)\nENGINE = AggregatingMergeTree(d, d, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00046_stored_aggregates_simple.sql","errors":[]},{"query":"CREATE TABLE empty_summing (d Date, k UInt64, v Int8) ENGINE=SummingMergeTree(d, k, 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00043_summing_empty_part.sql","errors":[]},{"query":"CREATE TABLE big_array (x Array(UInt8)) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00041_big_array_join.sql","errors":[]},{"query":"CREATE TABLE array_element_test (arr Array(Int32), id Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00036_array_element.sql","errors":[]},{"query":"CREATE TABLE array_element_test (arr Array(Int32), id UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00036_array_element.sql","errors":[]},{"query":"CREATE TABLE array_element_test (arr Array(String), id Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00036_array_element.sql","errors":[]},{"query":"CREATE TABLE array_element_test (arr Array(String), id UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00036_array_element.sql","errors":[]},{"query":"CREATE TABLE array_element_test (id UInt32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00036_array_element.sql","errors":[]},{"query":"CREATE TABLE array_element_test (id Int32) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00036_array_element.sql","errors":[]},{"query":"CREATE TABLE alter_test (CounterID UInt32, StartDate Date, UserID UInt32, VisitID UInt32, NestedColumn Nested(A UInt8, S String), ToDrop UInt32) ENGINE = MergeTree(StartDate, intHash32(UserID), (CounterID, StartDate, intHash32(UserID), VisitID), 8192);","fileName":"../ClickHouse/tests/queries/0_stateless/00030_alter_table.sql","errors":[]},{"query":"CREATE TABLE big_array (x Array(UInt8)) ENGINE=TinyLog;","fileName":"../ClickHouse/tests/queries/0_stateless/00028_shard_big_agg_aj_distributed.sql","errors":[]},{"query":"CREATE TABLE nested_test (s String, nest Nested(x UInt8, y UInt32)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00014_select_from_table_with_nested.sql","errors":[]},{"query":"CREATE TABLE arrays_test (s String, arr Array(UInt8)) ENGINE = Memory;","fileName":"../ClickHouse/tests/queries/0_stateless/00013_create_table_with_arrays.sql","errors":[]},{"query":"create view logs as select * from system.text_log where now() - toIntervalMinute(120) < event_time;","fileName":"../ClickHouse/tests/queries/0_stateless/00002_log_and_exception_messages_formatting.sql","errors":[]},{"query":"create temporary table known_short_messages (s String) as select * from (select [ '',\n'({}) Keys: {}',\n'({}) {}',\n'Aggregating',\n'Attempt to read after EOF.',\n'Attempt to read after eof',\n'Bad SSH public key provided',\n'Became leader',\n'Bytes set to {}',\n'Cancelled merging parts',\n'Cancelled mutating parts',\n'Cannot parse date here: {}',\n'Cannot parse object',\n'Cannot parse uuid {}',\n'Cleaning queue',\n'Column \\\\'{}\\\\' is ambiguous',\n'Convert overflow',\n'Could not find table: {}',\n'Creating {}: {}',\n'Cyclic aliases',\n'Database {} does not exist',\n'Detaching {}',\n'Dictionary ({}) not found',\n'Division by zero',\n'Executing {}',\n'Expected end of line',\n'Expected function, got: {}',\n'Files set to {}',\n'Fire events: {}',\n'Found part {}',\n'Host is empty in S3 URI.',\n'INTO OUTFILE is not allowed',\n'Invalid cache key hex: {}',\n'Invalid date: {}',\n'Invalid mode: {}',\n'Invalid qualified name: {}',\n'Invalid replica name: {}',\n'Loaded queue',\n'Log pulling is cancelled',\n'New segment: {}',\n'No additional keys found.',\n'No part {} in table',\n'No sharding key',\n'No tables',\n'Numeric overflow',\n'Path to archive is empty',\n'Processed: {}%',\n'Query was cancelled',\n'Query: {}',\n'Read object: {}',\n'Removed part {}',\n'Removing parts.',\n'Replication was stopped',\n'Request URI: {}',\n'Sending part {}',\n'Sent handshake',\n'Starting {}',\n'Substitution {} is not set',\n'Table {} does not exist',\n'Table {} doesn\\\\'t exist',\n'Table {}.{} doesn\\\\'t exist',\n'Table {} doesn\\\\'t exist',\n'Table {} is not empty',\n'There are duplicate id {}',\n'There is no cache by name: {}',\n'Too large node state size',\n'Transaction was cancelled',\n'Unable to parse JSONPath',\n'Unexpected value {} in enum',\n'Unknown BSON type: {}',\n'Unknown explain kind \\\\'{}\\\\'',\n'Unknown format {}',\n'Unknown geometry type {}',\n'Unknown identifier: \\\\'{}\\\\'',\n'Unknown input format {}',\n'Unknown setting {}',\n'Unknown setting \\\\'{}\\\\'',\n'Unknown statistic column: {}',\n'Unknown table function {}',\n'User has been dropped',\n'User name is empty',\n'Will mimic {}',\n'Write file: {}',\n'Writing to {}',\n'\\`{}\\` should be a String',\n'brotli decode error{}',\n'dropIfEmpty',\n'inflate failed: {}{}',\n'loadAll {}',\n'{} ({})',\n'{} ({}:{})',\n'{} -> {}',\n'{} {}',\n'{}%',\n'{}: {}',\n'Unknown data type family: {}',\n'Cannot load time zone {}',\n'Unknown table engine {}'\n] as arr) array join arr;","fileName":"../ClickHouse/tests/queries/0_stateless/00002_log_and_exception_messages_formatting.sql","errors":[{"message":"no viable alternative at input 'create temporary table known_short_messages (s String) as select * from (select [ '',\\n'({}) Keys: {}',\\n'({}) {}',\\n'Aggregating',\\n'Attempt to read after EOF.',\\n'Attempt to read after eof',\\n'Bad SSH public key provided',\\n'Became leader',\\n'Bytes set to {}',\\n'Cancelled merging parts',\\n'Cancelled mutating parts',\\n'Cannot parse date here: {}',\\n'Cannot parse object',\\n'Cannot parse uuid {}',\\n'Cleaning queue',\\n'Column \\\\'{'","startColumn":11,"startLine":16,"endColumn":12,"endLine":16}]}]}