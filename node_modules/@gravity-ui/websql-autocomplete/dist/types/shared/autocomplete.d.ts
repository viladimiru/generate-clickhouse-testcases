import { AutocompleteResultBase, CursorPosition, EnrichAutocompleteResult, GetParseTree, LexerConstructor, ParserConstructor } from './autocomplete-types';
import { Lexer as LexerType, ParserRuleContext, Parser as ParserType } from 'antlr4ng';
export declare function parseQueryWithoutCursor<L extends LexerType, P extends ParserType>(Lexer: LexerConstructor<L>, Parser: ParserConstructor<P>, whitespaceToken: number, getParseTree: GetParseTree<P>, query: string): Pick<AutocompleteResultBase, 'errors'>;
export declare function parseQuery<A extends AutocompleteResultBase, L extends LexerType, P extends ParserType>(Lexer: LexerConstructor<L>, Parser: ParserConstructor<P>, whitespaceToken: number, ignoredTokens: Set<number>, rulesToVisit: Set<number>, getParseTree: GetParseTree<P>, enrichAutocompleteResult: EnrichAutocompleteResult<A>, query: string, cursor: CursorPosition, context?: ParserRuleContext): A;
