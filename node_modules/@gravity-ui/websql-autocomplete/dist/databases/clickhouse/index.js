import{a as Ve,b as jr,c as Zr,d as zr,f as Ge,g as qr,i as $r,j as _r,k as ti}from"../../chunk-BSN36S7D.js";import"../../chunk-TJF5S6KF.js";import{a as l}from"../../chunk-2HA4XQFN.js";import*as w from"antlr4-c3";import*as N from"antlr4ng";var et=class e extends N.Lexer{static{l(this,"ClickHouseLexer")}static{this.ADD=1}static{this.AFTER=2}static{this.ALIAS=3}static{this.ALL=4}static{this.ALTER=5}static{this.AND=6}static{this.ANTI=7}static{this.ANY=8}static{this.ARRAY=9}static{this.AS=10}static{this.ASCENDING=11}static{this.ASOF=12}static{this.AST=13}static{this.ASYNC=14}static{this.ATTACH=15}static{this.BETWEEN=16}static{this.BOTH=17}static{this.BY=18}static{this.CASE=19}static{this.CAST=20}static{this.CHECK=21}static{this.CLEAR=22}static{this.CLUSTER=23}static{this.CODEC=24}static{this.COLLATE=25}static{this.COLUMN=26}static{this.COMMENT=27}static{this.CONSTRAINT=28}static{this.CREATE=29}static{this.CROSS=30}static{this.CUBE=31}static{this.CURRENT=32}static{this.DATABASE=33}static{this.DATABASES=34}static{this.DATE=35}static{this.DAY=36}static{this.DEDUPLICATE=37}static{this.DEFAULT=38}static{this.DELAY=39}static{this.DELETE=40}static{this.DESC=41}static{this.DESCENDING=42}static{this.DESCRIBE=43}static{this.DETACH=44}static{this.DICTIONARIES=45}static{this.DICTIONARY=46}static{this.DISK=47}static{this.DISTINCT=48}static{this.DISTRIBUTED=49}static{this.DROP=50}static{this.ELSE=51}static{this.END=52}static{this.ENGINE=53}static{this.ESTIMATE=54}static{this.EVENTS=55}static{this.EXISTS=56}static{this.EXPLAIN=57}static{this.EXPRESSION=58}static{this.EXTRACT=59}static{this.FETCHES=60}static{this.FINAL=61}static{this.FIRST=62}static{this.FLUSH=63}static{this.FOLLOWING=64}static{this.FOR=65}static{this.FORMAT=66}static{this.FREEZE=67}static{this.FROM=68}static{this.FULL=69}static{this.FUNCTION=70}static{this.GLOBAL=71}static{this.GRANULARITY=72}static{this.GROUP=73}static{this.HAVING=74}static{this.HIERARCHICAL=75}static{this.HOUR=76}static{this.ID=77}static{this.IF=78}static{this.ILIKE=79}static{this.IN=80}static{this.INDEX=81}static{this.INF=82}static{this.INJECTIVE=83}static{this.INNER=84}static{this.INSERT=85}static{this.INTERVAL=86}static{this.INTO=87}static{this.IS=88}static{this.IS_OBJECT_ID=89}static{this.JOIN=90}static{this.KEY=91}static{this.KILL=92}static{this.LAST=93}static{this.LAYOUT=94}static{this.LEADING=95}static{this.LEFT=96}static{this.LIFETIME=97}static{this.LIKE=98}static{this.LIMIT=99}static{this.LIVE=100}static{this.LOCAL=101}static{this.LOGS=102}static{this.MATERIALIZE=103}static{this.MATERIALIZED=104}static{this.MAX=105}static{this.MERGES=106}static{this.MIN=107}static{this.MINUTE=108}static{this.MODIFY=109}static{this.MONTH=110}static{this.MOVE=111}static{this.MUTATION=112}static{this.NAN_SQL=113}static{this.NO=114}static{this.NOT=115}static{this.NULL_SQL=116}static{this.NULLS=117}static{this.OFFSET=118}static{this.ON=119}static{this.OPTIMIZE=120}static{this.OR=121}static{this.ORDER=122}static{this.OUTER=123}static{this.OUTFILE=124}static{this.OVER=125}static{this.PARTITION=126}static{this.PIPELINE=127}static{this.PLAN=128}static{this.POPULATE=129}static{this.PRECEDING=130}static{this.PREWHERE=131}static{this.PRIMARY=132}static{this.PROJECTION=133}static{this.QUARTER=134}static{this.QUERY=135}static{this.RANGE=136}static{this.RELOAD=137}static{this.REMOVE=138}static{this.RENAME=139}static{this.REPLACE=140}static{this.REPLICA=141}static{this.REPLICATED=142}static{this.RIGHT=143}static{this.ROLLUP=144}static{this.ROW=145}static{this.ROWS=146}static{this.SAMPLE=147}static{this.SECOND=148}static{this.SELECT=149}static{this.SEMI=150}static{this.SENDS=151}static{this.SET=152}static{this.SETTINGS=153}static{this.SHOW=154}static{this.SOURCE=155}static{this.START=156}static{this.STOP=157}static{this.SUBSTRING=158}static{this.SYNC=159}static{this.SYNTAX=160}static{this.SYSTEM=161}static{this.TABLE=162}static{this.TABLES=163}static{this.TEMPORARY=164}static{this.TEST=165}static{this.THEN=166}static{this.TIES=167}static{this.TIMEOUT=168}static{this.TIMESTAMP=169}static{this.TO=170}static{this.TOP=171}static{this.TOTALS=172}static{this.TRAILING=173}static{this.TRIM=174}static{this.TREE=175}static{this.TRUNCATE=176}static{this.TTL=177}static{this.TYPE=178}static{this.UNBOUNDED=179}static{this.UNION=180}static{this.UPDATE=181}static{this.USE=182}static{this.USING=183}static{this.UUID=184}static{this.VALUES=185}static{this.VIEW=186}static{this.VOLUME=187}static{this.WATCH=188}static{this.WEEK=189}static{this.WHEN=190}static{this.WHERE=191}static{this.WINDOW=192}static{this.WITH=193}static{this.YEAR=194}static{this.JSON_FALSE=195}static{this.JSON_TRUE=196}static{this.IDENTIFIER=197}static{this.FLOATING_LITERAL=198}static{this.OCTAL_LITERAL=199}static{this.DECIMAL_LITERAL=200}static{this.HEXADECIMAL_LITERAL=201}static{this.STRING_LITERAL=202}static{this.ARROW=203}static{this.ASTERISK=204}static{this.BACKQUOTE=205}static{this.BACKSLASH=206}static{this.COLON=207}static{this.COMMA=208}static{this.CONCAT=209}static{this.DASH=210}static{this.DOT=211}static{this.EQ_DOUBLE=212}static{this.EQ_SINGLE=213}static{this.GE=214}static{this.GT=215}static{this.LBRACE=216}static{this.LBRACKET=217}static{this.LE=218}static{this.LPAREN=219}static{this.LT=220}static{this.NOT_EQ=221}static{this.PERCENT=222}static{this.PLUS=223}static{this.QUESTIONMARK=224}static{this.QUOTE_DOUBLE=225}static{this.QUOTE_SINGLE=226}static{this.RBRACE=227}static{this.RBRACKET=228}static{this.RPAREN=229}static{this.SEMICOLON=230}static{this.SLASH=231}static{this.UNDERSCORE=232}static{this.MULTI_LINE_COMMENT=233}static{this.SINGLE_LINE_COMMENT=234}static{this.WHITESPACE=235}static{this.channelNames=["DEFAULT_TOKEN_CHANNEL","HIDDEN"]}static{this.literalNames=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"'false'","'true'",null,null,null,null,null,null,"'->'","'*'","'`'","''","':'","','","'||'","'-'","'.'","'=='","'='","'>='","'>'","'{'","'['","'<='","'('","'<'",null,"'%'","'+'","'?'",`'"'`,"'''","'}'","']'","')'","';'","'/'","'_'"]}static{this.symbolicNames=[null,"ADD","AFTER","ALIAS","ALL","ALTER","AND","ANTI","ANY","ARRAY","AS","ASCENDING","ASOF","AST","ASYNC","ATTACH","BETWEEN","BOTH","BY","CASE","CAST","CHECK","CLEAR","CLUSTER","CODEC","COLLATE","COLUMN","COMMENT","CONSTRAINT","CREATE","CROSS","CUBE","CURRENT","DATABASE","DATABASES","DATE","DAY","DEDUPLICATE","DEFAULT","DELAY","DELETE","DESC","DESCENDING","DESCRIBE","DETACH","DICTIONARIES","DICTIONARY","DISK","DISTINCT","DISTRIBUTED","DROP","ELSE","END","ENGINE","ESTIMATE","EVENTS","EXISTS","EXPLAIN","EXPRESSION","EXTRACT","FETCHES","FINAL","FIRST","FLUSH","FOLLOWING","FOR","FORMAT","FREEZE","FROM","FULL","FUNCTION","GLOBAL","GRANULARITY","GROUP","HAVING","HIERARCHICAL","HOUR","ID","IF","ILIKE","IN","INDEX","INF","INJECTIVE","INNER","INSERT","INTERVAL","INTO","IS","IS_OBJECT_ID","JOIN","KEY","KILL","LAST","LAYOUT","LEADING","LEFT","LIFETIME","LIKE","LIMIT","LIVE","LOCAL","LOGS","MATERIALIZE","MATERIALIZED","MAX","MERGES","MIN","MINUTE","MODIFY","MONTH","MOVE","MUTATION","NAN_SQL","NO","NOT","NULL_SQL","NULLS","OFFSET","ON","OPTIMIZE","OR","ORDER","OUTER","OUTFILE","OVER","PARTITION","PIPELINE","PLAN","POPULATE","PRECEDING","PREWHERE","PRIMARY","PROJECTION","QUARTER","QUERY","RANGE","RELOAD","REMOVE","RENAME","REPLACE","REPLICA","REPLICATED","RIGHT","ROLLUP","ROW","ROWS","SAMPLE","SECOND","SELECT","SEMI","SENDS","SET","SETTINGS","SHOW","SOURCE","START","STOP","SUBSTRING","SYNC","SYNTAX","SYSTEM","TABLE","TABLES","TEMPORARY","TEST","THEN","TIES","TIMEOUT","TIMESTAMP","TO","TOP","TOTALS","TRAILING","TRIM","TREE","TRUNCATE","TTL","TYPE","UNBOUNDED","UNION","UPDATE","USE","USING","UUID","VALUES","VIEW","VOLUME","WATCH","WEEK","WHEN","WHERE","WINDOW","WITH","YEAR","JSON_FALSE","JSON_TRUE","IDENTIFIER","FLOATING_LITERAL","OCTAL_LITERAL","DECIMAL_LITERAL","HEXADECIMAL_LITERAL","STRING_LITERAL","ARROW","ASTERISK","BACKQUOTE","BACKSLASH","COLON","COMMA","CONCAT","DASH","DOT","EQ_DOUBLE","EQ_SINGLE","GE","GT","LBRACE","LBRACKET","LE","LPAREN","LT","NOT_EQ","PERCENT","PLUS","QUESTIONMARK","QUOTE_DOUBLE","QUOTE_SINGLE","RBRACE","RBRACKET","RPAREN","SEMICOLON","SLASH","UNDERSCORE","MULTI_LINE_COMMENT","SINGLE_LINE_COMMENT","WHITESPACE"]}static{this.modeNames=["DEFAULT_MODE"]}static{this.ruleNames=["ADD","AFTER","ALIAS","ALL","ALTER","AND","ANTI","ANY","ARRAY","AS","ASCENDING","ASOF","AST","ASYNC","ATTACH","BETWEEN","BOTH","BY","CASE","CAST","CHECK","CLEAR","CLUSTER","CODEC","COLLATE","COLUMN","COMMENT","CONSTRAINT","CREATE","CROSS","CUBE","CURRENT","DATABASE","DATABASES","DATE","DAY","DEDUPLICATE","DEFAULT","DELAY","DELETE","DESC","DESCENDING","DESCRIBE","DETACH","DICTIONARIES","DICTIONARY","DISK","DISTINCT","DISTRIBUTED","DROP","ELSE","END","ENGINE","ESTIMATE","EVENTS","EXISTS","EXPLAIN","EXPRESSION","EXTRACT","FETCHES","FINAL","FIRST","FLUSH","FOLLOWING","FOR","FORMAT","FREEZE","FROM","FULL","FUNCTION","GLOBAL","GRANULARITY","GROUP","HAVING","HIERARCHICAL","HOUR","ID","IF","ILIKE","IN","INDEX","INF","INJECTIVE","INNER","INSERT","INTERVAL","INTO","IS","IS_OBJECT_ID","JOIN","KEY","KILL","LAST","LAYOUT","LEADING","LEFT","LIFETIME","LIKE","LIMIT","LIVE","LOCAL","LOGS","MATERIALIZE","MATERIALIZED","MAX","MERGES","MIN","MINUTE","MODIFY","MONTH","MOVE","MUTATION","NAN_SQL","NO","NOT","NULL_SQL","NULLS","OFFSET","ON","OPTIMIZE","OR","ORDER","OUTER","OUTFILE","OVER","PARTITION","PIPELINE","PLAN","POPULATE","PRECEDING","PREWHERE","PRIMARY","PROJECTION","QUARTER","QUERY","RANGE","RELOAD","REMOVE","RENAME","REPLACE","REPLICA","REPLICATED","RIGHT","ROLLUP","ROW","ROWS","SAMPLE","SECOND","SELECT","SEMI","SENDS","SET","SETTINGS","SHOW","SOURCE","START","STOP","SUBSTRING","SYNC","SYNTAX","SYSTEM","TABLE","TABLES","TEMPORARY","TEST","THEN","TIES","TIMEOUT","TIMESTAMP","TO","TOP","TOTALS","TRAILING","TRIM","TREE","TRUNCATE","TTL","TYPE","UNBOUNDED","UNION","UPDATE","USE","USING","UUID","VALUES","VIEW","VOLUME","WATCH","WEEK","WHEN","WHERE","WINDOW","WITH","YEAR","JSON_FALSE","JSON_TRUE","IDENTIFIER","FLOATING_LITERAL","OCTAL_LITERAL","DECIMAL_LITERAL","HEXADECIMAL_LITERAL","STRING_LITERAL","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","LETTER","OCT_DIGIT","DEC_DIGIT","HEX_DIGIT","ARROW","ASTERISK","BACKQUOTE","BACKSLASH","COLON","COMMA","CONCAT","DASH","DOT","EQ_DOUBLE","EQ_SINGLE","GE","GT","LBRACE","LBRACKET","LE","LPAREN","LT","NOT_EQ","PERCENT","PLUS","QUESTIONMARK","QUOTE_DOUBLE","QUOTE_SINGLE","RBRACE","RBRACKET","RPAREN","SEMICOLON","SLASH","UNDERSCORE","MULTI_LINE_COMMENT","SINGLE_LINE_COMMENT","WHITESPACE"]}constructor(t){super(t),this.interpreter=new N.LexerATNSimulator(this,e._ATN,e.decisionsToDFA,new N.PredictionContextCache)}get grammarFileName(){return"ClickHouseLexer.g4"}get literalNames(){return e.literalNames}get symbolicNames(){return e.symbolicNames}get ruleNames(){return e.ruleNames}get serializedATN(){return e._serializedATN}get channelNames(){return e.channelNames}get modeNames(){return e.modeNames}static{this._serializedATN=[4,0,235,2168,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,7,122,2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,2,128,7,128,2,129,7,129,2,130,7,130,2,131,7,131,2,132,7,132,2,133,7,133,2,134,7,134,2,135,7,135,2,136,7,136,2,137,7,137,2,138,7,138,2,139,7,139,2,140,7,140,2,141,7,141,2,142,7,142,2,143,7,143,2,144,7,144,2,145,7,145,2,146,7,146,2,147,7,147,2,148,7,148,2,149,7,149,2,150,7,150,2,151,7,151,2,152,7,152,2,153,7,153,2,154,7,154,2,155,7,155,2,156,7,156,2,157,7,157,2,158,7,158,2,159,7,159,2,160,7,160,2,161,7,161,2,162,7,162,2,163,7,163,2,164,7,164,2,165,7,165,2,166,7,166,2,167,7,167,2,168,7,168,2,169,7,169,2,170,7,170,2,171,7,171,2,172,7,172,2,173,7,173,2,174,7,174,2,175,7,175,2,176,7,176,2,177,7,177,2,178,7,178,2,179,7,179,2,180,7,180,2,181,7,181,2,182,7,182,2,183,7,183,2,184,7,184,2,185,7,185,2,186,7,186,2,187,7,187,2,188,7,188,2,189,7,189,2,190,7,190,2,191,7,191,2,192,7,192,2,193,7,193,2,194,7,194,2,195,7,195,2,196,7,196,2,197,7,197,2,198,7,198,2,199,7,199,2,200,7,200,2,201,7,201,2,202,7,202,2,203,7,203,2,204,7,204,2,205,7,205,2,206,7,206,2,207,7,207,2,208,7,208,2,209,7,209,2,210,7,210,2,211,7,211,2,212,7,212,2,213,7,213,2,214,7,214,2,215,7,215,2,216,7,216,2,217,7,217,2,218,7,218,2,219,7,219,2,220,7,220,2,221,7,221,2,222,7,222,2,223,7,223,2,224,7,224,2,225,7,225,2,226,7,226,2,227,7,227,2,228,7,228,2,229,7,229,2,230,7,230,2,231,7,231,2,232,7,232,2,233,7,233,2,234,7,234,2,235,7,235,2,236,7,236,2,237,7,237,2,238,7,238,2,239,7,239,2,240,7,240,2,241,7,241,2,242,7,242,2,243,7,243,2,244,7,244,2,245,7,245,2,246,7,246,2,247,7,247,2,248,7,248,2,249,7,249,2,250,7,250,2,251,7,251,2,252,7,252,2,253,7,253,2,254,7,254,2,255,7,255,2,256,7,256,2,257,7,257,2,258,7,258,2,259,7,259,2,260,7,260,2,261,7,261,2,262,7,262,2,263,7,263,2,264,7,264,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,3,10,594,8,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,1,78,1,79,1,79,1,79,1,80,1,80,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,81,3,81,1101,8,81,1,82,1,82,1,82,1,82,1,82,1,82,1,82,1,82,1,82,1,82,1,83,1,83,1,83,1,83,1,83,1,83,1,84,1,84,1,84,1,84,1,84,1,84,1,84,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,86,1,86,1,86,1,86,1,86,1,87,1,87,1,87,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,88,1,89,1,89,1,89,1,89,1,89,1,90,1,90,1,90,1,90,1,91,1,91,1,91,1,91,1,91,1,92,1,92,1,92,1,92,1,92,1,93,1,93,1,93,1,93,1,93,1,93,1,93,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,95,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,97,1,97,1,97,1,97,1,97,1,98,1,98,1,98,1,98,1,98,1,98,1,99,1,99,1,99,1,99,1,99,1,100,1,100,1,100,1,100,1,100,1,100,1,101,1,101,1,101,1,101,1,101,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,102,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,104,1,104,1,104,1,104,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,106,1,106,1,106,1,106,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,108,1,108,1,108,1,108,1,108,1,108,1,108,1,109,1,109,1,109,1,109,1,109,1,109,1,110,1,110,1,110,1,110,1,110,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,112,1,112,1,112,1,112,1,113,1,113,1,113,1,114,1,114,1,114,1,114,1,115,1,115,1,115,1,115,1,115,1,116,1,116,1,116,1,116,1,116,1,116,1,117,1,117,1,117,1,117,1,117,1,117,1,117,1,118,1,118,1,118,1,119,1,119,1,119,1,119,1,119,1,119,1,119,1,119,1,119,1,120,1,120,1,120,1,121,1,121,1,121,1,121,1,121,1,121,1,122,1,122,1,122,1,122,1,122,1,122,1,123,1,123,1,123,1,123,1,123,1,123,1,123,1,123,1,124,1,124,1,124,1,124,1,124,1,125,1,125,1,125,1,125,1,125,1,125,1,125,1,125,1,125,1,125,1,126,1,126,1,126,1,126,1,126,1,126,1,126,1,126,1,126,1,127,1,127,1,127,1,127,1,127,1,128,1,128,1,128,1,128,1,128,1,128,1,128,1,128,1,128,1,129,1,129,1,129,1,129,1,129,1,129,1,129,1,129,1,129,1,129,1,130,1,130,1,130,1,130,1,130,1,130,1,130,1,130,1,130,1,131,1,131,1,131,1,131,1,131,1,131,1,131,1,131,1,132,1,132,1,132,1,132,1,132,1,132,1,132,1,132,1,132,1,132,1,132,1,133,1,133,1,133,1,133,1,133,1,133,1,133,1,133,1,134,1,134,1,134,1,134,1,134,1,134,1,135,1,135,1,135,1,135,1,135,1,135,1,136,1,136,1,136,1,136,1,136,1,136,1,136,1,137,1,137,1,137,1,137,1,137,1,137,1,137,1,138,1,138,1,138,1,138,1,138,1,138,1,138,1,139,1,139,1,139,1,139,1,139,1,139,1,139,1,139,1,140,1,140,1,140,1,140,1,140,1,140,1,140,1,140,1,141,1,141,1,141,1,141,1,141,1,141,1,141,1,141,1,141,1,141,1,141,1,142,1,142,1,142,1,142,1,142,1,142,1,143,1,143,1,143,1,143,1,143,1,143,1,143,1,144,1,144,1,144,1,144,1,145,1,145,1,145,1,145,1,145,1,146,1,146,1,146,1,146,1,146,1,146,1,146,1,147,1,147,1,147,1,147,1,147,1,147,1,147,1,148,1,148,1,148,1,148,1,148,1,148,1,148,1,149,1,149,1,149,1,149,1,149,1,150,1,150,1,150,1,150,1,150,1,150,1,151,1,151,1,151,1,151,1,152,1,152,1,152,1,152,1,152,1,152,1,152,1,152,1,152,1,153,1,153,1,153,1,153,1,153,1,154,1,154,1,154,1,154,1,154,1,154,1,154,1,155,1,155,1,155,1,155,1,155,1,155,1,156,1,156,1,156,1,156,1,156,1,157,1,157,1,157,1,157,1,157,1,157,1,157,1,157,1,157,1,157,1,158,1,158,1,158,1,158,1,158,1,159,1,159,1,159,1,159,1,159,1,159,1,159,1,160,1,160,1,160,1,160,1,160,1,160,1,160,1,161,1,161,1,161,1,161,1,161,1,161,1,162,1,162,1,162,1,162,1,162,1,162,1,162,1,163,1,163,1,163,1,163,1,163,1,163,1,163,1,163,1,163,1,163,1,164,1,164,1,164,1,164,1,164,1,165,1,165,1,165,1,165,1,165,1,166,1,166,1,166,1,166,1,166,1,167,1,167,1,167,1,167,1,167,1,167,1,167,1,167,1,168,1,168,1,168,1,168,1,168,1,168,1,168,1,168,1,168,1,168,1,169,1,169,1,169,1,170,1,170,1,170,1,170,1,171,1,171,1,171,1,171,1,171,1,171,1,171,1,172,1,172,1,172,1,172,1,172,1,172,1,172,1,172,1,172,1,173,1,173,1,173,1,173,1,173,1,174,1,174,1,174,1,174,1,174,1,175,1,175,1,175,1,175,1,175,1,175,1,175,1,175,1,175,1,176,1,176,1,176,1,176,1,177,1,177,1,177,1,177,1,177,1,178,1,178,1,178,1,178,1,178,1,178,1,178,1,178,1,178,1,178,1,179,1,179,1,179,1,179,1,179,1,179,1,180,1,180,1,180,1,180,1,180,1,180,1,180,1,181,1,181,1,181,1,181,1,182,1,182,1,182,1,182,1,182,1,182,1,183,1,183,1,183,1,183,1,183,1,184,1,184,1,184,1,184,1,184,1,184,1,184,1,185,1,185,1,185,1,185,1,185,1,186,1,186,1,186,1,186,1,186,1,186,1,186,1,187,1,187,1,187,1,187,1,187,1,187,1,188,1,188,1,188,1,188,1,188,1,189,1,189,1,189,1,189,1,189,1,190,1,190,1,190,1,190,1,190,1,190,1,191,1,191,1,191,1,191,1,191,1,191,1,191,1,192,1,192,1,192,1,192,1,192,1,193,1,193,1,193,1,193,1,193,1,193,1,193,1,193,1,193,1,193,3,193,1840,8,193,1,194,1,194,1,194,1,194,1,194,1,194,1,195,1,195,1,195,1,195,1,195,1,196,1,196,3,196,1855,8,196,1,196,1,196,1,196,5,196,1860,8,196,10,196,12,196,1863,9,196,1,196,1,196,1,196,1,196,1,196,1,196,1,196,1,196,5,196,1873,8,196,10,196,12,196,1876,9,196,1,196,1,196,1,196,1,196,1,196,1,196,1,196,1,196,1,196,1,196,5,196,1888,8,196,10,196,12,196,1891,9,196,1,196,1,196,3,196,1895,8,196,1,197,1,197,1,197,5,197,1900,8,197,10,197,12,197,1903,9,197,1,197,1,197,3,197,1907,8,197,1,197,1,197,3,197,1911,8,197,1,197,4,197,1914,8,197,11,197,12,197,1915,1,197,1,197,1,197,3,197,1921,8,197,1,197,1,197,3,197,1925,8,197,1,197,4,197,1928,8,197,11,197,12,197,1929,1,197,1,197,1,197,5,197,1935,8,197,10,197,12,197,1938,9,197,1,197,1,197,1,197,3,197,1943,8,197,1,197,4,197,1946,8,197,11,197,12,197,1947,1,197,1,197,1,197,1,197,1,197,3,197,1955,8,197,1,197,4,197,1958,8,197,11,197,12,197,1959,1,197,1,197,1,197,1,197,3,197,1966,8,197,1,197,4,197,1969,8,197,11,197,12,197,1970,3,197,1973,8,197,1,198,1,198,4,198,1977,8,198,11,198,12,198,1978,1,199,4,199,1982,8,199,11,199,12,199,1983,1,200,1,200,1,200,4,200,1989,8,200,11,200,12,200,1990,1,201,1,201,1,201,1,201,1,201,1,201,1,201,1,201,5,201,2001,8,201,10,201,12,201,2004,9,201,1,201,1,201,1,202,1,202,1,203,1,203,1,204,1,204,1,205,1,205,1,206,1,206,1,207,1,207,1,208,1,208,1,209,1,209,1,210,1,210,1,211,1,211,1,212,1,212,1,213,1,213,1,214,1,214,1,215,1,215,1,216,1,216,1,217,1,217,1,218,1,218,1,219,1,219,1,220,1,220,1,221,1,221,1,222,1,222,1,223,1,223,1,224,1,224,1,225,1,225,1,226,1,226,1,227,1,227,1,228,1,228,1,229,1,229,1,230,1,230,1,231,1,231,1,232,1,232,1,232,1,233,1,233,1,234,1,234,1,235,1,235,1,236,1,236,1,237,1,237,1,238,1,238,1,238,1,239,1,239,1,240,1,240,1,241,1,241,1,241,1,242,1,242,1,243,1,243,1,243,1,244,1,244,1,245,1,245,1,246,1,246,1,247,1,247,1,247,1,248,1,248,1,249,1,249,1,250,1,250,1,250,1,250,3,250,2113,8,250,1,251,1,251,1,252,1,252,1,253,1,253,1,254,1,254,1,255,1,255,1,256,1,256,1,257,1,257,1,258,1,258,1,259,1,259,1,260,1,260,1,261,1,261,1,262,1,262,1,262,1,262,5,262,2141,8,262,10,262,12,262,2144,9,262,1,262,1,262,1,262,1,262,1,262,1,263,1,263,1,263,1,263,5,263,2155,8,263,10,263,12,263,2158,9,263,1,263,3,263,2161,8,263,1,263,1,263,1,264,1,264,1,264,1,264,1,2142,0,265,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,197,99,199,100,201,101,203,102,205,103,207,104,209,105,211,106,213,107,215,108,217,109,219,110,221,111,223,112,225,113,227,114,229,115,231,116,233,117,235,118,237,119,239,120,241,121,243,122,245,123,247,124,249,125,251,126,253,127,255,128,257,129,259,130,261,131,263,132,265,133,267,134,269,135,271,136,273,137,275,138,277,139,279,140,281,141,283,142,285,143,287,144,289,145,291,146,293,147,295,148,297,149,299,150,301,151,303,152,305,153,307,154,309,155,311,156,313,157,315,158,317,159,319,160,321,161,323,162,325,163,327,164,329,165,331,166,333,167,335,168,337,169,339,170,341,171,343,172,345,173,347,174,349,175,351,176,353,177,355,178,357,179,359,180,361,181,363,182,365,183,367,184,369,185,371,186,373,187,375,188,377,189,379,190,381,191,383,192,385,193,387,194,389,195,391,196,393,197,395,198,397,199,399,200,401,201,403,202,405,0,407,0,409,0,411,0,413,0,415,0,417,0,419,0,421,0,423,0,425,0,427,0,429,0,431,0,433,0,435,0,437,0,439,0,441,0,443,0,445,0,447,0,449,0,451,0,453,0,455,0,457,0,459,0,461,0,463,0,465,203,467,204,469,205,471,206,473,207,475,208,477,209,479,210,481,211,483,212,485,213,487,214,489,215,491,216,493,217,495,218,497,219,499,220,501,221,503,222,505,223,507,224,509,225,511,226,513,227,515,228,517,229,519,230,521,231,523,232,525,233,527,234,529,235,1,0,36,2,0,92,92,96,96,2,0,34,34,92,92,2,0,39,39,92,92,2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,121,2,0,90,90,122,122,2,0,65,90,97,122,1,0,48,55,1,0,48,57,3,0,48,57,65,70,97,102,2,0,10,10,13,13,2,1,10,10,13,13,2,0,9,13,32,32,2184,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,0,0,215,1,0,0,0,0,217,1,0,0,0,0,219,1,0,0,0,0,221,1,0,0,0,0,223,1,0,0,0,0,225,1,0,0,0,0,227,1,0,0,0,0,229,1,0,0,0,0,231,1,0,0,0,0,233,1,0,0,0,0,235,1,0,0,0,0,237,1,0,0,0,0,239,1,0,0,0,0,241,1,0,0,0,0,243,1,0,0,0,0,245,1,0,0,0,0,247,1,0,0,0,0,249,1,0,0,0,0,251,1,0,0,0,0,253,1,0,0,0,0,255,1,0,0,0,0,257,1,0,0,0,0,259,1,0,0,0,0,261,1,0,0,0,0,263,1,0,0,0,0,265,1,0,0,0,0,267,1,0,0,0,0,269,1,0,0,0,0,271,1,0,0,0,0,273,1,0,0,0,0,275,1,0,0,0,0,277,1,0,0,0,0,279,1,0,0,0,0,281,1,0,0,0,0,283,1,0,0,0,0,285,1,0,0,0,0,287,1,0,0,0,0,289,1,0,0,0,0,291,1,0,0,0,0,293,1,0,0,0,0,295,1,0,0,0,0,297,1,0,0,0,0,299,1,0,0,0,0,301,1,0,0,0,0,303,1,0,0,0,0,305,1,0,0,0,0,307,1,0,0,0,0,309,1,0,0,0,0,311,1,0,0,0,0,313,1,0,0,0,0,315,1,0,0,0,0,317,1,0,0,0,0,319,1,0,0,0,0,321,1,0,0,0,0,323,1,0,0,0,0,325,1,0,0,0,0,327,1,0,0,0,0,329,1,0,0,0,0,331,1,0,0,0,0,333,1,0,0,0,0,335,1,0,0,0,0,337,1,0,0,0,0,339,1,0,0,0,0,341,1,0,0,0,0,343,1,0,0,0,0,345,1,0,0,0,0,347,1,0,0,0,0,349,1,0,0,0,0,351,1,0,0,0,0,353,1,0,0,0,0,355,1,0,0,0,0,357,1,0,0,0,0,359,1,0,0,0,0,361,1,0,0,0,0,363,1,0,0,0,0,365,1,0,0,0,0,367,1,0,0,0,0,369,1,0,0,0,0,371,1,0,0,0,0,373,1,0,0,0,0,375,1,0,0,0,0,377,1,0,0,0,0,379,1,0,0,0,0,381,1,0,0,0,0,383,1,0,0,0,0,385,1,0,0,0,0,387,1,0,0,0,0,389,1,0,0,0,0,391,1,0,0,0,0,393,1,0,0,0,0,395,1,0,0,0,0,397,1,0,0,0,0,399,1,0,0,0,0,401,1,0,0,0,0,403,1,0,0,0,0,465,1,0,0,0,0,467,1,0,0,0,0,469,1,0,0,0,0,471,1,0,0,0,0,473,1,0,0,0,0,475,1,0,0,0,0,477,1,0,0,0,0,479,1,0,0,0,0,481,1,0,0,0,0,483,1,0,0,0,0,485,1,0,0,0,0,487,1,0,0,0,0,489,1,0,0,0,0,491,1,0,0,0,0,493,1,0,0,0,0,495,1,0,0,0,0,497,1,0,0,0,0,499,1,0,0,0,0,501,1,0,0,0,0,503,1,0,0,0,0,505,1,0,0,0,0,507,1,0,0,0,0,509,1,0,0,0,0,511,1,0,0,0,0,513,1,0,0,0,0,515,1,0,0,0,0,517,1,0,0,0,0,519,1,0,0,0,0,521,1,0,0,0,0,523,1,0,0,0,0,525,1,0,0,0,0,527,1,0,0,0,0,529,1,0,0,0,1,531,1,0,0,0,3,535,1,0,0,0,5,541,1,0,0,0,7,547,1,0,0,0,9,551,1,0,0,0,11,557,1,0,0,0,13,561,1,0,0,0,15,566,1,0,0,0,17,570,1,0,0,0,19,576,1,0,0,0,21,593,1,0,0,0,23,595,1,0,0,0,25,600,1,0,0,0,27,604,1,0,0,0,29,610,1,0,0,0,31,617,1,0,0,0,33,625,1,0,0,0,35,630,1,0,0,0,37,633,1,0,0,0,39,638,1,0,0,0,41,643,1,0,0,0,43,649,1,0,0,0,45,655,1,0,0,0,47,663,1,0,0,0,49,669,1,0,0,0,51,677,1,0,0,0,53,684,1,0,0,0,55,692,1,0,0,0,57,703,1,0,0,0,59,710,1,0,0,0,61,716,1,0,0,0,63,721,1,0,0,0,65,729,1,0,0,0,67,738,1,0,0,0,69,748,1,0,0,0,71,753,1,0,0,0,73,757,1,0,0,0,75,769,1,0,0,0,77,777,1,0,0,0,79,783,1,0,0,0,81,790,1,0,0,0,83,795,1,0,0,0,85,806,1,0,0,0,87,815,1,0,0,0,89,822,1,0,0,0,91,835,1,0,0,0,93,846,1,0,0,0,95,851,1,0,0,0,97,860,1,0,0,0,99,872,1,0,0,0,101,877,1,0,0,0,103,882,1,0,0,0,105,886,1,0,0,0,107,893,1,0,0,0,109,902,1,0,0,0,111,909,1,0,0,0,113,916,1,0,0,0,115,924,1,0,0,0,117,935,1,0,0,0,119,943,1,0,0,0,121,951,1,0,0,0,123,957,1,0,0,0,125,963,1,0,0,0,127,969,1,0,0,0,129,979,1,0,0,0,131,983,1,0,0,0,133,990,1,0,0,0,135,997,1,0,0,0,137,1002,1,0,0,0,139,1007,1,0,0,0,141,1016,1,0,0,0,143,1023,1,0,0,0,145,1035,1,0,0,0,147,1041,1,0,0,0,149,1048,1,0,0,0,151,1061,1,0,0,0,153,1066,1,0,0,0,155,1069,1,0,0,0,157,1072,1,0,0,0,159,1078,1,0,0,0,161,1081,1,0,0,0,163,1100,1,0,0,0,165,1102,1,0,0,0,167,1112,1,0,0,0,169,1118,1,0,0,0,171,1125,1,0,0,0,173,1134,1,0,0,0,175,1139,1,0,0,0,177,1142,1,0,0,0,179,1155,1,0,0,0,181,1160,1,0,0,0,183,1164,1,0,0,0,185,1169,1,0,0,0,187,1174,1,0,0,0,189,1181,1,0,0,0,191,1189,1,0,0,0,193,1194,1,0,0,0,195,1203,1,0,0,0,197,1208,1,0,0,0,199,1214,1,0,0,0,201,1219,1,0,0,0,203,1225,1,0,0,0,205,1230,1,0,0,0,207,1242,1,0,0,0,209,1255,1,0,0,0,211,1259,1,0,0,0,213,1266,1,0,0,0,215,1270,1,0,0,0,217,1277,1,0,0,0,219,1284,1,0,0,0,221,1290,1,0,0,0,223,1295,1,0,0,0,225,1304,1,0,0,0,227,1308,1,0,0,0,229,1311,1,0,0,0,231,1315,1,0,0,0,233,1320,1,0,0,0,235,1326,1,0,0,0,237,1333,1,0,0,0,239,1336,1,0,0,0,241,1345,1,0,0,0,243,1348,1,0,0,0,245,1354,1,0,0,0,247,1360,1,0,0,0,249,1368,1,0,0,0,251,1373,1,0,0,0,253,1383,1,0,0,0,255,1392,1,0,0,0,257,1397,1,0,0,0,259,1406,1,0,0,0,261,1416,1,0,0,0,263,1425,1,0,0,0,265,1433,1,0,0,0,267,1444,1,0,0,0,269,1452,1,0,0,0,271,1458,1,0,0,0,273,1464,1,0,0,0,275,1471,1,0,0,0,277,1478,1,0,0,0,279,1485,1,0,0,0,281,1493,1,0,0,0,283,1501,1,0,0,0,285,1512,1,0,0,0,287,1518,1,0,0,0,289,1525,1,0,0,0,291,1529,1,0,0,0,293,1534,1,0,0,0,295,1541,1,0,0,0,297,1548,1,0,0,0,299,1555,1,0,0,0,301,1560,1,0,0,0,303,1566,1,0,0,0,305,1570,1,0,0,0,307,1579,1,0,0,0,309,1584,1,0,0,0,311,1591,1,0,0,0,313,1597,1,0,0,0,315,1602,1,0,0,0,317,1612,1,0,0,0,319,1617,1,0,0,0,321,1624,1,0,0,0,323,1631,1,0,0,0,325,1637,1,0,0,0,327,1644,1,0,0,0,329,1654,1,0,0,0,331,1659,1,0,0,0,333,1664,1,0,0,0,335,1669,1,0,0,0,337,1677,1,0,0,0,339,1687,1,0,0,0,341,1690,1,0,0,0,343,1694,1,0,0,0,345,1701,1,0,0,0,347,1710,1,0,0,0,349,1715,1,0,0,0,351,1720,1,0,0,0,353,1729,1,0,0,0,355,1733,1,0,0,0,357,1738,1,0,0,0,359,1748,1,0,0,0,361,1754,1,0,0,0,363,1761,1,0,0,0,365,1765,1,0,0,0,367,1771,1,0,0,0,369,1776,1,0,0,0,371,1783,1,0,0,0,373,1788,1,0,0,0,375,1795,1,0,0,0,377,1801,1,0,0,0,379,1806,1,0,0,0,381,1811,1,0,0,0,383,1817,1,0,0,0,385,1824,1,0,0,0,387,1839,1,0,0,0,389,1841,1,0,0,0,391,1847,1,0,0,0,393,1894,1,0,0,0,395,1972,1,0,0,0,397,1974,1,0,0,0,399,1981,1,0,0,0,401,1985,1,0,0,0,403,1992,1,0,0,0,405,2007,1,0,0,0,407,2009,1,0,0,0,409,2011,1,0,0,0,411,2013,1,0,0,0,413,2015,1,0,0,0,415,2017,1,0,0,0,417,2019,1,0,0,0,419,2021,1,0,0,0,421,2023,1,0,0,0,423,2025,1,0,0,0,425,2027,1,0,0,0,427,2029,1,0,0,0,429,2031,1,0,0,0,431,2033,1,0,0,0,433,2035,1,0,0,0,435,2037,1,0,0,0,437,2039,1,0,0,0,439,2041,1,0,0,0,441,2043,1,0,0,0,443,2045,1,0,0,0,445,2047,1,0,0,0,447,2049,1,0,0,0,449,2051,1,0,0,0,451,2053,1,0,0,0,453,2055,1,0,0,0,455,2057,1,0,0,0,457,2059,1,0,0,0,459,2061,1,0,0,0,461,2063,1,0,0,0,463,2065,1,0,0,0,465,2067,1,0,0,0,467,2070,1,0,0,0,469,2072,1,0,0,0,471,2074,1,0,0,0,473,2076,1,0,0,0,475,2078,1,0,0,0,477,2080,1,0,0,0,479,2083,1,0,0,0,481,2085,1,0,0,0,483,2087,1,0,0,0,485,2090,1,0,0,0,487,2092,1,0,0,0,489,2095,1,0,0,0,491,2097,1,0,0,0,493,2099,1,0,0,0,495,2101,1,0,0,0,497,2104,1,0,0,0,499,2106,1,0,0,0,501,2112,1,0,0,0,503,2114,1,0,0,0,505,2116,1,0,0,0,507,2118,1,0,0,0,509,2120,1,0,0,0,511,2122,1,0,0,0,513,2124,1,0,0,0,515,2126,1,0,0,0,517,2128,1,0,0,0,519,2130,1,0,0,0,521,2132,1,0,0,0,523,2134,1,0,0,0,525,2136,1,0,0,0,527,2150,1,0,0,0,529,2164,1,0,0,0,531,532,3,405,202,0,532,533,3,411,205,0,533,534,3,411,205,0,534,2,1,0,0,0,535,536,3,405,202,0,536,537,3,415,207,0,537,538,3,443,221,0,538,539,3,413,206,0,539,540,3,439,219,0,540,4,1,0,0,0,541,542,3,405,202,0,542,543,3,427,213,0,543,544,3,421,210,0,544,545,3,405,202,0,545,546,3,441,220,0,546,6,1,0,0,0,547,548,3,405,202,0,548,549,3,427,213,0,549,550,3,427,213,0,550,8,1,0,0,0,551,552,3,405,202,0,552,553,3,427,213,0,553,554,3,443,221,0,554,555,3,413,206,0,555,556,3,439,219,0,556,10,1,0,0,0,557,558,3,405,202,0,558,559,3,431,215,0,559,560,3,411,205,0,560,12,1,0,0,0,561,562,3,405,202,0,562,563,3,431,215,0,563,564,3,443,221,0,564,565,3,421,210,0,565,14,1,0,0,0,566,567,3,405,202,0,567,568,3,431,215,0,568,569,3,453,226,0,569,16,1,0,0,0,570,571,3,405,202,0,571,572,3,439,219,0,572,573,3,439,219,0,573,574,3,405,202,0,574,575,3,453,226,0,575,18,1,0,0,0,576,577,3,405,202,0,577,578,3,441,220,0,578,20,1,0,0,0,579,580,3,405,202,0,580,581,3,441,220,0,581,582,3,409,204,0,582,594,1,0,0,0,583,584,3,405,202,0,584,585,3,441,220,0,585,586,3,409,204,0,586,587,3,413,206,0,587,588,3,431,215,0,588,589,3,411,205,0,589,590,3,421,210,0,590,591,3,431,215,0,591,592,3,417,208,0,592,594,1,0,0,0,593,579,1,0,0,0,593,583,1,0,0,0,594,22,1,0,0,0,595,596,3,405,202,0,596,597,3,441,220,0,597,598,3,433,216,0,598,599,3,415,207,0,599,24,1,0,0,0,600,601,3,405,202,0,601,602,3,441,220,0,602,603,3,443,221,0,603,26,1,0,0,0,604,605,3,405,202,0,605,606,3,441,220,0,606,607,3,453,226,0,607,608,3,431,215,0,608,609,3,409,204,0,609,28,1,0,0,0,610,611,3,405,202,0,611,612,3,443,221,0,612,613,3,443,221,0,613,614,3,405,202,0,614,615,3,409,204,0,615,616,3,419,209,0,616,30,1,0,0,0,617,618,3,407,203,0,618,619,3,413,206,0,619,620,3,443,221,0,620,621,3,449,224,0,621,622,3,413,206,0,622,623,3,413,206,0,623,624,3,431,215,0,624,32,1,0,0,0,625,626,3,407,203,0,626,627,3,433,216,0,627,628,3,443,221,0,628,629,3,419,209,0,629,34,1,0,0,0,630,631,3,407,203,0,631,632,3,453,226,0,632,36,1,0,0,0,633,634,3,409,204,0,634,635,3,405,202,0,635,636,3,441,220,0,636,637,3,413,206,0,637,38,1,0,0,0,638,639,3,409,204,0,639,640,3,405,202,0,640,641,3,441,220,0,641,642,3,443,221,0,642,40,1,0,0,0,643,644,3,409,204,0,644,645,3,419,209,0,645,646,3,413,206,0,646,647,3,409,204,0,647,648,3,425,212,0,648,42,1,0,0,0,649,650,3,409,204,0,650,651,3,427,213,0,651,652,3,413,206,0,652,653,3,405,202,0,653,654,3,439,219,0,654,44,1,0,0,0,655,656,3,409,204,0,656,657,3,427,213,0,657,658,3,445,222,0,658,659,3,441,220,0,659,660,3,443,221,0,660,661,3,413,206,0,661,662,3,439,219,0,662,46,1,0,0,0,663,664,3,409,204,0,664,665,3,433,216,0,665,666,3,411,205,0,666,667,3,413,206,0,667,668,3,409,204,0,668,48,1,0,0,0,669,670,3,409,204,0,670,671,3,433,216,0,671,672,3,427,213,0,672,673,3,427,213,0,673,674,3,405,202,0,674,675,3,443,221,0,675,676,3,413,206,0,676,50,1,0,0,0,677,678,3,409,204,0,678,679,3,433,216,0,679,680,3,427,213,0,680,681,3,445,222,0,681,682,3,429,214,0,682,683,3,431,215,0,683,52,1,0,0,0,684,685,3,409,204,0,685,686,3,433,216,0,686,687,3,429,214,0,687,688,3,429,214,0,688,689,3,413,206,0,689,690,3,431,215,0,690,691,3,443,221,0,691,54,1,0,0,0,692,693,3,409,204,0,693,694,3,433,216,0,694,695,3,431,215,0,695,696,3,441,220,0,696,697,3,443,221,0,697,698,3,439,219,0,698,699,3,405,202,0,699,700,3,421,210,0,700,701,3,431,215,0,701,702,3,443,221,0,702,56,1,0,0,0,703,704,3,409,204,0,704,705,3,439,219,0,705,706,3,413,206,0,706,707,3,405,202,0,707,708,3,443,221,0,708,709,3,413,206,0,709,58,1,0,0,0,710,711,3,409,204,0,711,712,3,439,219,0,712,713,3,433,216,0,713,714,3,441,220,0,714,715,3,441,220,0,715,60,1,0,0,0,716,717,3,409,204,0,717,718,3,445,222,0,718,719,3,407,203,0,719,720,3,413,206,0,720,62,1,0,0,0,721,722,3,409,204,0,722,723,3,445,222,0,723,724,3,439,219,0,724,725,3,439,219,0,725,726,3,413,206,0,726,727,3,431,215,0,727,728,3,443,221,0,728,64,1,0,0,0,729,730,3,411,205,0,730,731,3,405,202,0,731,732,3,443,221,0,732,733,3,405,202,0,733,734,3,407,203,0,734,735,3,405,202,0,735,736,3,441,220,0,736,737,3,413,206,0,737,66,1,0,0,0,738,739,3,411,205,0,739,740,3,405,202,0,740,741,3,443,221,0,741,742,3,405,202,0,742,743,3,407,203,0,743,744,3,405,202,0,744,745,3,441,220,0,745,746,3,413,206,0,746,747,3,441,220,0,747,68,1,0,0,0,748,749,3,411,205,0,749,750,3,405,202,0,750,751,3,443,221,0,751,752,3,413,206,0,752,70,1,0,0,0,753,754,3,411,205,0,754,755,3,405,202,0,755,756,3,453,226,0,756,72,1,0,0,0,757,758,3,411,205,0,758,759,3,413,206,0,759,760,3,411,205,0,760,761,3,445,222,0,761,762,3,435,217,0,762,763,3,427,213,0,763,764,3,421,210,0,764,765,3,409,204,0,765,766,3,405,202,0,766,767,3,443,221,0,767,768,3,413,206,0,768,74,1,0,0,0,769,770,3,411,205,0,770,771,3,413,206,0,771,772,3,415,207,0,772,773,3,405,202,0,773,774,3,445,222,0,774,775,3,427,213,0,775,776,3,443,221,0,776,76,1,0,0,0,777,778,3,411,205,0,778,779,3,413,206,0,779,780,3,427,213,0,780,781,3,405,202,0,781,782,3,453,226,0,782,78,1,0,0,0,783,784,3,411,205,0,784,785,3,413,206,0,785,786,3,427,213,0,786,787,3,413,206,0,787,788,3,443,221,0,788,789,3,413,206,0,789,80,1,0,0,0,790,791,3,411,205,0,791,792,3,413,206,0,792,793,3,441,220,0,793,794,3,409,204,0,794,82,1,0,0,0,795,796,3,411,205,0,796,797,3,413,206,0,797,798,3,441,220,0,798,799,3,409,204,0,799,800,3,413,206,0,800,801,3,431,215,0,801,802,3,411,205,0,802,803,3,421,210,0,803,804,3,431,215,0,804,805,3,417,208,0,805,84,1,0,0,0,806,807,3,411,205,0,807,808,3,413,206,0,808,809,3,441,220,0,809,810,3,409,204,0,810,811,3,439,219,0,811,812,3,421,210,0,812,813,3,407,203,0,813,814,3,413,206,0,814,86,1,0,0,0,815,816,3,411,205,0,816,817,3,413,206,0,817,818,3,443,221,0,818,819,3,405,202,0,819,820,3,409,204,0,820,821,3,419,209,0,821,88,1,0,0,0,822,823,3,411,205,0,823,824,3,421,210,0,824,825,3,409,204,0,825,826,3,443,221,0,826,827,3,421,210,0,827,828,3,433,216,0,828,829,3,431,215,0,829,830,3,405,202,0,830,831,3,439,219,0,831,832,3,421,210,0,832,833,3,413,206,0,833,834,3,441,220,0,834,90,1,0,0,0,835,836,3,411,205,0,836,837,3,421,210,0,837,838,3,409,204,0,838,839,3,443,221,0,839,840,3,421,210,0,840,841,3,433,216,0,841,842,3,431,215,0,842,843,3,405,202,0,843,844,3,439,219,0,844,845,3,453,226,0,845,92,1,0,0,0,846,847,3,411,205,0,847,848,3,421,210,0,848,849,3,441,220,0,849,850,3,425,212,0,850,94,1,0,0,0,851,852,3,411,205,0,852,853,3,421,210,0,853,854,3,441,220,0,854,855,3,443,221,0,855,856,3,421,210,0,856,857,3,431,215,0,857,858,3,409,204,0,858,859,3,443,221,0,859,96,1,0,0,0,860,861,3,411,205,0,861,862,3,421,210,0,862,863,3,441,220,0,863,864,3,443,221,0,864,865,3,439,219,0,865,866,3,421,210,0,866,867,3,407,203,0,867,868,3,445,222,0,868,869,3,443,221,0,869,870,3,413,206,0,870,871,3,411,205,0,871,98,1,0,0,0,872,873,3,411,205,0,873,874,3,439,219,0,874,875,3,433,216,0,875,876,3,435,217,0,876,100,1,0,0,0,877,878,3,413,206,0,878,879,3,427,213,0,879,880,3,441,220,0,880,881,3,413,206,0,881,102,1,0,0,0,882,883,3,413,206,0,883,884,3,431,215,0,884,885,3,411,205,0,885,104,1,0,0,0,886,887,3,413,206,0,887,888,3,431,215,0,888,889,3,417,208,0,889,890,3,421,210,0,890,891,3,431,215,0,891,892,3,413,206,0,892,106,1,0,0,0,893,894,3,413,206,0,894,895,3,441,220,0,895,896,3,443,221,0,896,897,3,421,210,0,897,898,3,429,214,0,898,899,3,405,202,0,899,900,3,443,221,0,900,901,3,413,206,0,901,108,1,0,0,0,902,903,3,413,206,0,903,904,3,447,223,0,904,905,3,413,206,0,905,906,3,431,215,0,906,907,3,443,221,0,907,908,3,441,220,0,908,110,1,0,0,0,909,910,3,413,206,0,910,911,3,451,225,0,911,912,3,421,210,0,912,913,3,441,220,0,913,914,3,443,221,0,914,915,3,441,220,0,915,112,1,0,0,0,916,917,3,413,206,0,917,918,3,451,225,0,918,919,3,435,217,0,919,920,3,427,213,0,920,921,3,405,202,0,921,922,3,421,210,0,922,923,3,431,215,0,923,114,1,0,0,0,924,925,3,413,206,0,925,926,3,451,225,0,926,927,3,435,217,0,927,928,3,439,219,0,928,929,3,413,206,0,929,930,3,441,220,0,930,931,3,441,220,0,931,932,3,421,210,0,932,933,3,433,216,0,933,934,3,431,215,0,934,116,1,0,0,0,935,936,3,413,206,0,936,937,3,451,225,0,937,938,3,443,221,0,938,939,3,439,219,0,939,940,3,405,202,0,940,941,3,409,204,0,941,942,3,443,221,0,942,118,1,0,0,0,943,944,3,415,207,0,944,945,3,413,206,0,945,946,3,443,221,0,946,947,3,409,204,0,947,948,3,419,209,0,948,949,3,413,206,0,949,950,3,441,220,0,950,120,1,0,0,0,951,952,3,415,207,0,952,953,3,421,210,0,953,954,3,431,215,0,954,955,3,405,202,0,955,956,3,427,213,0,956,122,1,0,0,0,957,958,3,415,207,0,958,959,3,421,210,0,959,960,3,439,219,0,960,961,3,441,220,0,961,962,3,443,221,0,962,124,1,0,0,0,963,964,3,415,207,0,964,965,3,427,213,0,965,966,3,445,222,0,966,967,3,441,220,0,967,968,3,419,209,0,968,126,1,0,0,0,969,970,3,415,207,0,970,971,3,433,216,0,971,972,3,427,213,0,972,973,3,427,213,0,973,974,3,433,216,0,974,975,3,449,224,0,975,976,3,421,210,0,976,977,3,431,215,0,977,978,3,417,208,0,978,128,1,0,0,0,979,980,3,415,207,0,980,981,3,433,216,0,981,982,3,439,219,0,982,130,1,0,0,0,983,984,3,415,207,0,984,985,3,433,216,0,985,986,3,439,219,0,986,987,3,429,214,0,987,988,3,405,202,0,988,989,3,443,221,0,989,132,1,0,0,0,990,991,3,415,207,0,991,992,3,439,219,0,992,993,3,413,206,0,993,994,3,413,206,0,994,995,3,455,227,0,995,996,3,413,206,0,996,134,1,0,0,0,997,998,3,415,207,0,998,999,3,439,219,0,999,1e3,3,433,216,0,1e3,1001,3,429,214,0,1001,136,1,0,0,0,1002,1003,3,415,207,0,1003,1004,3,445,222,0,1004,1005,3,427,213,0,1005,1006,3,427,213,0,1006,138,1,0,0,0,1007,1008,3,415,207,0,1008,1009,3,445,222,0,1009,1010,3,431,215,0,1010,1011,3,409,204,0,1011,1012,3,443,221,0,1012,1013,3,421,210,0,1013,1014,3,433,216,0,1014,1015,3,431,215,0,1015,140,1,0,0,0,1016,1017,3,417,208,0,1017,1018,3,427,213,0,1018,1019,3,433,216,0,1019,1020,3,407,203,0,1020,1021,3,405,202,0,1021,1022,3,427,213,0,1022,142,1,0,0,0,1023,1024,3,417,208,0,1024,1025,3,439,219,0,1025,1026,3,405,202,0,1026,1027,3,431,215,0,1027,1028,3,445,222,0,1028,1029,3,427,213,0,1029,1030,3,405,202,0,1030,1031,3,439,219,0,1031,1032,3,421,210,0,1032,1033,3,443,221,0,1033,1034,3,453,226,0,1034,144,1,0,0,0,1035,1036,3,417,208,0,1036,1037,3,439,219,0,1037,1038,3,433,216,0,1038,1039,3,445,222,0,1039,1040,3,435,217,0,1040,146,1,0,0,0,1041,1042,3,419,209,0,1042,1043,3,405,202,0,1043,1044,3,447,223,0,1044,1045,3,421,210,0,1045,1046,3,431,215,0,1046,1047,3,417,208,0,1047,148,1,0,0,0,1048,1049,3,419,209,0,1049,1050,3,421,210,0,1050,1051,3,413,206,0,1051,1052,3,439,219,0,1052,1053,3,405,202,0,1053,1054,3,439,219,0,1054,1055,3,409,204,0,1055,1056,3,419,209,0,1056,1057,3,421,210,0,1057,1058,3,409,204,0,1058,1059,3,405,202,0,1059,1060,3,427,213,0,1060,150,1,0,0,0,1061,1062,3,419,209,0,1062,1063,3,433,216,0,1063,1064,3,445,222,0,1064,1065,3,439,219,0,1065,152,1,0,0,0,1066,1067,3,421,210,0,1067,1068,3,411,205,0,1068,154,1,0,0,0,1069,1070,3,421,210,0,1070,1071,3,415,207,0,1071,156,1,0,0,0,1072,1073,3,421,210,0,1073,1074,3,427,213,0,1074,1075,3,421,210,0,1075,1076,3,425,212,0,1076,1077,3,413,206,0,1077,158,1,0,0,0,1078,1079,3,421,210,0,1079,1080,3,431,215,0,1080,160,1,0,0,0,1081,1082,3,421,210,0,1082,1083,3,431,215,0,1083,1084,3,411,205,0,1084,1085,3,413,206,0,1085,1086,3,451,225,0,1086,162,1,0,0,0,1087,1088,3,421,210,0,1088,1089,3,431,215,0,1089,1090,3,415,207,0,1090,1101,1,0,0,0,1091,1092,3,421,210,0,1092,1093,3,431,215,0,1093,1094,3,415,207,0,1094,1095,3,421,210,0,1095,1096,3,431,215,0,1096,1097,3,421,210,0,1097,1098,3,443,221,0,1098,1099,3,453,226,0,1099,1101,1,0,0,0,1100,1087,1,0,0,0,1100,1091,1,0,0,0,1101,164,1,0,0,0,1102,1103,3,421,210,0,1103,1104,3,431,215,0,1104,1105,3,423,211,0,1105,1106,3,413,206,0,1106,1107,3,409,204,0,1107,1108,3,443,221,0,1108,1109,3,421,210,0,1109,1110,3,447,223,0,1110,1111,3,413,206,0,1111,166,1,0,0,0,1112,1113,3,421,210,0,1113,1114,3,431,215,0,1114,1115,3,431,215,0,1115,1116,3,413,206,0,1116,1117,3,439,219,0,1117,168,1,0,0,0,1118,1119,3,421,210,0,1119,1120,3,431,215,0,1120,1121,3,441,220,0,1121,1122,3,413,206,0,1122,1123,3,439,219,0,1123,1124,3,443,221,0,1124,170,1,0,0,0,1125,1126,3,421,210,0,1126,1127,3,431,215,0,1127,1128,3,443,221,0,1128,1129,3,413,206,0,1129,1130,3,439,219,0,1130,1131,3,447,223,0,1131,1132,3,405,202,0,1132,1133,3,427,213,0,1133,172,1,0,0,0,1134,1135,3,421,210,0,1135,1136,3,431,215,0,1136,1137,3,443,221,0,1137,1138,3,433,216,0,1138,174,1,0,0,0,1139,1140,3,421,210,0,1140,1141,3,441,220,0,1141,176,1,0,0,0,1142,1143,3,421,210,0,1143,1144,3,441,220,0,1144,1145,3,523,261,0,1145,1146,3,433,216,0,1146,1147,3,407,203,0,1147,1148,3,423,211,0,1148,1149,3,413,206,0,1149,1150,3,409,204,0,1150,1151,3,443,221,0,1151,1152,3,523,261,0,1152,1153,3,421,210,0,1153,1154,3,411,205,0,1154,178,1,0,0,0,1155,1156,3,423,211,0,1156,1157,3,433,216,0,1157,1158,3,421,210,0,1158,1159,3,431,215,0,1159,180,1,0,0,0,1160,1161,3,425,212,0,1161,1162,3,413,206,0,1162,1163,3,453,226,0,1163,182,1,0,0,0,1164,1165,3,425,212,0,1165,1166,3,421,210,0,1166,1167,3,427,213,0,1167,1168,3,427,213,0,1168,184,1,0,0,0,1169,1170,3,427,213,0,1170,1171,3,405,202,0,1171,1172,3,441,220,0,1172,1173,3,443,221,0,1173,186,1,0,0,0,1174,1175,3,427,213,0,1175,1176,3,405,202,0,1176,1177,3,453,226,0,1177,1178,3,433,216,0,1178,1179,3,445,222,0,1179,1180,3,443,221,0,1180,188,1,0,0,0,1181,1182,3,427,213,0,1182,1183,3,413,206,0,1183,1184,3,405,202,0,1184,1185,3,411,205,0,1185,1186,3,421,210,0,1186,1187,3,431,215,0,1187,1188,3,417,208,0,1188,190,1,0,0,0,1189,1190,3,427,213,0,1190,1191,3,413,206,0,1191,1192,3,415,207,0,1192,1193,3,443,221,0,1193,192,1,0,0,0,1194,1195,3,427,213,0,1195,1196,3,421,210,0,1196,1197,3,415,207,0,1197,1198,3,413,206,0,1198,1199,3,443,221,0,1199,1200,3,421,210,0,1200,1201,3,429,214,0,1201,1202,3,413,206,0,1202,194,1,0,0,0,1203,1204,3,427,213,0,1204,1205,3,421,210,0,1205,1206,3,425,212,0,1206,1207,3,413,206,0,1207,196,1,0,0,0,1208,1209,3,427,213,0,1209,1210,3,421,210,0,1210,1211,3,429,214,0,1211,1212,3,421,210,0,1212,1213,3,443,221,0,1213,198,1,0,0,0,1214,1215,3,427,213,0,1215,1216,3,421,210,0,1216,1217,3,447,223,0,1217,1218,3,413,206,0,1218,200,1,0,0,0,1219,1220,3,427,213,0,1220,1221,3,433,216,0,1221,1222,3,409,204,0,1222,1223,3,405,202,0,1223,1224,3,427,213,0,1224,202,1,0,0,0,1225,1226,3,427,213,0,1226,1227,3,433,216,0,1227,1228,3,417,208,0,1228,1229,3,441,220,0,1229,204,1,0,0,0,1230,1231,3,429,214,0,1231,1232,3,405,202,0,1232,1233,3,443,221,0,1233,1234,3,413,206,0,1234,1235,3,439,219,0,1235,1236,3,421,210,0,1236,1237,3,405,202,0,1237,1238,3,427,213,0,1238,1239,3,421,210,0,1239,1240,3,455,227,0,1240,1241,3,413,206,0,1241,206,1,0,0,0,1242,1243,3,429,214,0,1243,1244,3,405,202,0,1244,1245,3,443,221,0,1245,1246,3,413,206,0,1246,1247,3,439,219,0,1247,1248,3,421,210,0,1248,1249,3,405,202,0,1249,1250,3,427,213,0,1250,1251,3,421,210,0,1251,1252,3,455,227,0,1252,1253,3,413,206,0,1253,1254,3,411,205,0,1254,208,1,0,0,0,1255,1256,3,429,214,0,1256,1257,3,405,202,0,1257,1258,3,451,225,0,1258,210,1,0,0,0,1259,1260,3,429,214,0,1260,1261,3,413,206,0,1261,1262,3,439,219,0,1262,1263,3,417,208,0,1263,1264,3,413,206,0,1264,1265,3,441,220,0,1265,212,1,0,0,0,1266,1267,3,429,214,0,1267,1268,3,421,210,0,1268,1269,3,431,215,0,1269,214,1,0,0,0,1270,1271,3,429,214,0,1271,1272,3,421,210,0,1272,1273,3,431,215,0,1273,1274,3,445,222,0,1274,1275,3,443,221,0,1275,1276,3,413,206,0,1276,216,1,0,0,0,1277,1278,3,429,214,0,1278,1279,3,433,216,0,1279,1280,3,411,205,0,1280,1281,3,421,210,0,1281,1282,3,415,207,0,1282,1283,3,453,226,0,1283,218,1,0,0,0,1284,1285,3,429,214,0,1285,1286,3,433,216,0,1286,1287,3,431,215,0,1287,1288,3,443,221,0,1288,1289,3,419,209,0,1289,220,1,0,0,0,1290,1291,3,429,214,0,1291,1292,3,433,216,0,1292,1293,3,447,223,0,1293,1294,3,413,206,0,1294,222,1,0,0,0,1295,1296,3,429,214,0,1296,1297,3,445,222,0,1297,1298,3,443,221,0,1298,1299,3,405,202,0,1299,1300,3,443,221,0,1300,1301,3,421,210,0,1301,1302,3,433,216,0,1302,1303,3,431,215,0,1303,224,1,0,0,0,1304,1305,3,431,215,0,1305,1306,3,405,202,0,1306,1307,3,431,215,0,1307,226,1,0,0,0,1308,1309,3,431,215,0,1309,1310,3,433,216,0,1310,228,1,0,0,0,1311,1312,3,431,215,0,1312,1313,3,433,216,0,1313,1314,3,443,221,0,1314,230,1,0,0,0,1315,1316,3,431,215,0,1316,1317,3,445,222,0,1317,1318,3,427,213,0,1318,1319,3,427,213,0,1319,232,1,0,0,0,1320,1321,3,431,215,0,1321,1322,3,445,222,0,1322,1323,3,427,213,0,1323,1324,3,427,213,0,1324,1325,3,441,220,0,1325,234,1,0,0,0,1326,1327,3,433,216,0,1327,1328,3,415,207,0,1328,1329,3,415,207,0,1329,1330,3,441,220,0,1330,1331,3,413,206,0,1331,1332,3,443,221,0,1332,236,1,0,0,0,1333,1334,3,433,216,0,1334,1335,3,431,215,0,1335,238,1,0,0,0,1336,1337,3,433,216,0,1337,1338,3,435,217,0,1338,1339,3,443,221,0,1339,1340,3,421,210,0,1340,1341,3,429,214,0,1341,1342,3,421,210,0,1342,1343,3,455,227,0,1343,1344,3,413,206,0,1344,240,1,0,0,0,1345,1346,3,433,216,0,1346,1347,3,439,219,0,1347,242,1,0,0,0,1348,1349,3,433,216,0,1349,1350,3,439,219,0,1350,1351,3,411,205,0,1351,1352,3,413,206,0,1352,1353,3,439,219,0,1353,244,1,0,0,0,1354,1355,3,433,216,0,1355,1356,3,445,222,0,1356,1357,3,443,221,0,1357,1358,3,413,206,0,1358,1359,3,439,219,0,1359,246,1,0,0,0,1360,1361,3,433,216,0,1361,1362,3,445,222,0,1362,1363,3,443,221,0,1363,1364,3,415,207,0,1364,1365,3,421,210,0,1365,1366,3,427,213,0,1366,1367,3,413,206,0,1367,248,1,0,0,0,1368,1369,3,433,216,0,1369,1370,3,447,223,0,1370,1371,3,413,206,0,1371,1372,3,439,219,0,1372,250,1,0,0,0,1373,1374,3,435,217,0,1374,1375,3,405,202,0,1375,1376,3,439,219,0,1376,1377,3,443,221,0,1377,1378,3,421,210,0,1378,1379,3,443,221,0,1379,1380,3,421,210,0,1380,1381,3,433,216,0,1381,1382,3,431,215,0,1382,252,1,0,0,0,1383,1384,3,435,217,0,1384,1385,3,421,210,0,1385,1386,3,435,217,0,1386,1387,3,413,206,0,1387,1388,3,427,213,0,1388,1389,3,421,210,0,1389,1390,3,431,215,0,1390,1391,3,413,206,0,1391,254,1,0,0,0,1392,1393,3,435,217,0,1393,1394,3,427,213,0,1394,1395,3,405,202,0,1395,1396,3,431,215,0,1396,256,1,0,0,0,1397,1398,3,435,217,0,1398,1399,3,433,216,0,1399,1400,3,435,217,0,1400,1401,3,445,222,0,1401,1402,3,427,213,0,1402,1403,3,405,202,0,1403,1404,3,443,221,0,1404,1405,3,413,206,0,1405,258,1,0,0,0,1406,1407,3,435,217,0,1407,1408,3,439,219,0,1408,1409,3,413,206,0,1409,1410,3,409,204,0,1410,1411,3,413,206,0,1411,1412,3,411,205,0,1412,1413,3,421,210,0,1413,1414,3,431,215,0,1414,1415,3,417,208,0,1415,260,1,0,0,0,1416,1417,3,435,217,0,1417,1418,3,439,219,0,1418,1419,3,413,206,0,1419,1420,3,449,224,0,1420,1421,3,419,209,0,1421,1422,3,413,206,0,1422,1423,3,439,219,0,1423,1424,3,413,206,0,1424,262,1,0,0,0,1425,1426,3,435,217,0,1426,1427,3,439,219,0,1427,1428,3,421,210,0,1428,1429,3,429,214,0,1429,1430,3,405,202,0,1430,1431,3,439,219,0,1431,1432,3,453,226,0,1432,264,1,0,0,0,1433,1434,3,435,217,0,1434,1435,3,439,219,0,1435,1436,3,433,216,0,1436,1437,3,423,211,0,1437,1438,3,413,206,0,1438,1439,3,409,204,0,1439,1440,3,443,221,0,1440,1441,3,421,210,0,1441,1442,3,433,216,0,1442,1443,3,431,215,0,1443,266,1,0,0,0,1444,1445,3,437,218,0,1445,1446,3,445,222,0,1446,1447,3,405,202,0,1447,1448,3,439,219,0,1448,1449,3,443,221,0,1449,1450,3,413,206,0,1450,1451,3,439,219,0,1451,268,1,0,0,0,1452,1453,3,437,218,0,1453,1454,3,445,222,0,1454,1455,3,413,206,0,1455,1456,3,439,219,0,1456,1457,3,453,226,0,1457,270,1,0,0,0,1458,1459,3,439,219,0,1459,1460,3,405,202,0,1460,1461,3,431,215,0,1461,1462,3,417,208,0,1462,1463,3,413,206,0,1463,272,1,0,0,0,1464,1465,3,439,219,0,1465,1466,3,413,206,0,1466,1467,3,427,213,0,1467,1468,3,433,216,0,1468,1469,3,405,202,0,1469,1470,3,411,205,0,1470,274,1,0,0,0,1471,1472,3,439,219,0,1472,1473,3,413,206,0,1473,1474,3,429,214,0,1474,1475,3,433,216,0,1475,1476,3,447,223,0,1476,1477,3,413,206,0,1477,276,1,0,0,0,1478,1479,3,439,219,0,1479,1480,3,413,206,0,1480,1481,3,431,215,0,1481,1482,3,405,202,0,1482,1483,3,429,214,0,1483,1484,3,413,206,0,1484,278,1,0,0,0,1485,1486,3,439,219,0,1486,1487,3,413,206,0,1487,1488,3,435,217,0,1488,1489,3,427,213,0,1489,1490,3,405,202,0,1490,1491,3,409,204,0,1491,1492,3,413,206,0,1492,280,1,0,0,0,1493,1494,3,439,219,0,1494,1495,3,413,206,0,1495,1496,3,435,217,0,1496,1497,3,427,213,0,1497,1498,3,421,210,0,1498,1499,3,409,204,0,1499,1500,3,405,202,0,1500,282,1,0,0,0,1501,1502,3,439,219,0,1502,1503,3,413,206,0,1503,1504,3,435,217,0,1504,1505,3,427,213,0,1505,1506,3,421,210,0,1506,1507,3,409,204,0,1507,1508,3,405,202,0,1508,1509,3,443,221,0,1509,1510,3,413,206,0,1510,1511,3,411,205,0,1511,284,1,0,0,0,1512,1513,3,439,219,0,1513,1514,3,421,210,0,1514,1515,3,417,208,0,1515,1516,3,419,209,0,1516,1517,3,443,221,0,1517,286,1,0,0,0,1518,1519,3,439,219,0,1519,1520,3,433,216,0,1520,1521,3,427,213,0,1521,1522,3,427,213,0,1522,1523,3,445,222,0,1523,1524,3,435,217,0,1524,288,1,0,0,0,1525,1526,3,439,219,0,1526,1527,3,433,216,0,1527,1528,3,449,224,0,1528,290,1,0,0,0,1529,1530,3,439,219,0,1530,1531,3,433,216,0,1531,1532,3,449,224,0,1532,1533,3,441,220,0,1533,292,1,0,0,0,1534,1535,3,441,220,0,1535,1536,3,405,202,0,1536,1537,3,429,214,0,1537,1538,3,435,217,0,1538,1539,3,427,213,0,1539,1540,3,413,206,0,1540,294,1,0,0,0,1541,1542,3,441,220,0,1542,1543,3,413,206,0,1543,1544,3,409,204,0,1544,1545,3,433,216,0,1545,1546,3,431,215,0,1546,1547,3,411,205,0,1547,296,1,0,0,0,1548,1549,3,441,220,0,1549,1550,3,413,206,0,1550,1551,3,427,213,0,1551,1552,3,413,206,0,1552,1553,3,409,204,0,1553,1554,3,443,221,0,1554,298,1,0,0,0,1555,1556,3,441,220,0,1556,1557,3,413,206,0,1557,1558,3,429,214,0,1558,1559,3,421,210,0,1559,300,1,0,0,0,1560,1561,3,441,220,0,1561,1562,3,413,206,0,1562,1563,3,431,215,0,1563,1564,3,411,205,0,1564,1565,3,441,220,0,1565,302,1,0,0,0,1566,1567,3,441,220,0,1567,1568,3,413,206,0,1568,1569,3,443,221,0,1569,304,1,0,0,0,1570,1571,3,441,220,0,1571,1572,3,413,206,0,1572,1573,3,443,221,0,1573,1574,3,443,221,0,1574,1575,3,421,210,0,1575,1576,3,431,215,0,1576,1577,3,417,208,0,1577,1578,3,441,220,0,1578,306,1,0,0,0,1579,1580,3,441,220,0,1580,1581,3,419,209,0,1581,1582,3,433,216,0,1582,1583,3,449,224,0,1583,308,1,0,0,0,1584,1585,3,441,220,0,1585,1586,3,433,216,0,1586,1587,3,445,222,0,1587,1588,3,439,219,0,1588,1589,3,409,204,0,1589,1590,3,413,206,0,1590,310,1,0,0,0,1591,1592,3,441,220,0,1592,1593,3,443,221,0,1593,1594,3,405,202,0,1594,1595,3,439,219,0,1595,1596,3,443,221,0,1596,312,1,0,0,0,1597,1598,3,441,220,0,1598,1599,3,443,221,0,1599,1600,3,433,216,0,1600,1601,3,435,217,0,1601,314,1,0,0,0,1602,1603,3,441,220,0,1603,1604,3,445,222,0,1604,1605,3,407,203,0,1605,1606,3,441,220,0,1606,1607,3,443,221,0,1607,1608,3,439,219,0,1608,1609,3,421,210,0,1609,1610,3,431,215,0,1610,1611,3,417,208,0,1611,316,1,0,0,0,1612,1613,3,441,220,0,1613,1614,3,453,226,0,1614,1615,3,431,215,0,1615,1616,3,409,204,0,1616,318,1,0,0,0,1617,1618,3,441,220,0,1618,1619,3,453,226,0,1619,1620,3,431,215,0,1620,1621,3,443,221,0,1621,1622,3,405,202,0,1622,1623,3,451,225,0,1623,320,1,0,0,0,1624,1625,3,441,220,0,1625,1626,3,453,226,0,1626,1627,3,441,220,0,1627,1628,3,443,221,0,1628,1629,3,413,206,0,1629,1630,3,429,214,0,1630,322,1,0,0,0,1631,1632,3,443,221,0,1632,1633,3,405,202,0,1633,1634,3,407,203,0,1634,1635,3,427,213,0,1635,1636,3,413,206,0,1636,324,1,0,0,0,1637,1638,3,443,221,0,1638,1639,3,405,202,0,1639,1640,3,407,203,0,1640,1641,3,427,213,0,1641,1642,3,413,206,0,1642,1643,3,441,220,0,1643,326,1,0,0,0,1644,1645,3,443,221,0,1645,1646,3,413,206,0,1646,1647,3,429,214,0,1647,1648,3,435,217,0,1648,1649,3,433,216,0,1649,1650,3,439,219,0,1650,1651,3,405,202,0,1651,1652,3,439,219,0,1652,1653,3,453,226,0,1653,328,1,0,0,0,1654,1655,3,443,221,0,1655,1656,3,413,206,0,1656,1657,3,441,220,0,1657,1658,3,443,221,0,1658,330,1,0,0,0,1659,1660,3,443,221,0,1660,1661,3,419,209,0,1661,1662,3,413,206,0,1662,1663,3,431,215,0,1663,332,1,0,0,0,1664,1665,3,443,221,0,1665,1666,3,421,210,0,1666,1667,3,413,206,0,1667,1668,3,441,220,0,1668,334,1,0,0,0,1669,1670,3,443,221,0,1670,1671,3,421,210,0,1671,1672,3,429,214,0,1672,1673,3,413,206,0,1673,1674,3,433,216,0,1674,1675,3,445,222,0,1675,1676,3,443,221,0,1676,336,1,0,0,0,1677,1678,3,443,221,0,1678,1679,3,421,210,0,1679,1680,3,429,214,0,1680,1681,3,413,206,0,1681,1682,3,441,220,0,1682,1683,3,443,221,0,1683,1684,3,405,202,0,1684,1685,3,429,214,0,1685,1686,3,435,217,0,1686,338,1,0,0,0,1687,1688,3,443,221,0,1688,1689,3,433,216,0,1689,340,1,0,0,0,1690,1691,3,443,221,0,1691,1692,3,433,216,0,1692,1693,3,435,217,0,1693,342,1,0,0,0,1694,1695,3,443,221,0,1695,1696,3,433,216,0,1696,1697,3,443,221,0,1697,1698,3,405,202,0,1698,1699,3,427,213,0,1699,1700,3,441,220,0,1700,344,1,0,0,0,1701,1702,3,443,221,0,1702,1703,3,439,219,0,1703,1704,3,405,202,0,1704,1705,3,421,210,0,1705,1706,3,427,213,0,1706,1707,3,421,210,0,1707,1708,3,431,215,0,1708,1709,3,417,208,0,1709,346,1,0,0,0,1710,1711,3,443,221,0,1711,1712,3,439,219,0,1712,1713,3,421,210,0,1713,1714,3,429,214,0,1714,348,1,0,0,0,1715,1716,3,443,221,0,1716,1717,3,439,219,0,1717,1718,3,413,206,0,1718,1719,3,413,206,0,1719,350,1,0,0,0,1720,1721,3,443,221,0,1721,1722,3,439,219,0,1722,1723,3,445,222,0,1723,1724,3,431,215,0,1724,1725,3,409,204,0,1725,1726,3,405,202,0,1726,1727,3,443,221,0,1727,1728,3,413,206,0,1728,352,1,0,0,0,1729,1730,3,443,221,0,1730,1731,3,443,221,0,1731,1732,3,427,213,0,1732,354,1,0,0,0,1733,1734,3,443,221,0,1734,1735,3,453,226,0,1735,1736,3,435,217,0,1736,1737,3,413,206,0,1737,356,1,0,0,0,1738,1739,3,445,222,0,1739,1740,3,431,215,0,1740,1741,3,407,203,0,1741,1742,3,433,216,0,1742,1743,3,445,222,0,1743,1744,3,431,215,0,1744,1745,3,411,205,0,1745,1746,3,413,206,0,1746,1747,3,411,205,0,1747,358,1,0,0,0,1748,1749,3,445,222,0,1749,1750,3,431,215,0,1750,1751,3,421,210,0,1751,1752,3,433,216,0,1752,1753,3,431,215,0,1753,360,1,0,0,0,1754,1755,3,445,222,0,1755,1756,3,435,217,0,1756,1757,3,411,205,0,1757,1758,3,405,202,0,1758,1759,3,443,221,0,1759,1760,3,413,206,0,1760,362,1,0,0,0,1761,1762,3,445,222,0,1762,1763,3,441,220,0,1763,1764,3,413,206,0,1764,364,1,0,0,0,1765,1766,3,445,222,0,1766,1767,3,441,220,0,1767,1768,3,421,210,0,1768,1769,3,431,215,0,1769,1770,3,417,208,0,1770,366,1,0,0,0,1771,1772,3,445,222,0,1772,1773,3,445,222,0,1773,1774,3,421,210,0,1774,1775,3,411,205,0,1775,368,1,0,0,0,1776,1777,3,447,223,0,1777,1778,3,405,202,0,1778,1779,3,427,213,0,1779,1780,3,445,222,0,1780,1781,3,413,206,0,1781,1782,3,441,220,0,1782,370,1,0,0,0,1783,1784,3,447,223,0,1784,1785,3,421,210,0,1785,1786,3,413,206,0,1786,1787,3,449,224,0,1787,372,1,0,0,0,1788,1789,3,447,223,0,1789,1790,3,433,216,0,1790,1791,3,427,213,0,1791,1792,3,445,222,0,1792,1793,3,429,214,0,1793,1794,3,413,206,0,1794,374,1,0,0,0,1795,1796,3,449,224,0,1796,1797,3,405,202,0,1797,1798,3,443,221,0,1798,1799,3,409,204,0,1799,1800,3,419,209,0,1800,376,1,0,0,0,1801,1802,3,449,224,0,1802,1803,3,413,206,0,1803,1804,3,413,206,0,1804,1805,3,425,212,0,1805,378,1,0,0,0,1806,1807,3,449,224,0,1807,1808,3,419,209,0,1808,1809,3,413,206,0,1809,1810,3,431,215,0,1810,380,1,0,0,0,1811,1812,3,449,224,0,1812,1813,3,419,209,0,1813,1814,3,413,206,0,1814,1815,3,439,219,0,1815,1816,3,413,206,0,1816,382,1,0,0,0,1817,1818,3,449,224,0,1818,1819,3,421,210,0,1819,1820,3,431,215,0,1820,1821,3,411,205,0,1821,1822,3,433,216,0,1822,1823,3,449,224,0,1823,384,1,0,0,0,1824,1825,3,449,224,0,1825,1826,3,421,210,0,1826,1827,3,443,221,0,1827,1828,3,419,209,0,1828,386,1,0,0,0,1829,1830,3,453,226,0,1830,1831,3,413,206,0,1831,1832,3,405,202,0,1832,1833,3,439,219,0,1833,1840,1,0,0,0,1834,1835,3,453,226,0,1835,1836,3,453,226,0,1836,1837,3,453,226,0,1837,1838,3,453,226,0,1838,1840,1,0,0,0,1839,1829,1,0,0,0,1839,1834,1,0,0,0,1840,388,1,0,0,0,1841,1842,5,102,0,0,1842,1843,5,97,0,0,1843,1844,5,108,0,0,1844,1845,5,115,0,0,1845,1846,5,101,0,0,1846,390,1,0,0,0,1847,1848,5,116,0,0,1848,1849,5,114,0,0,1849,1850,5,117,0,0,1850,1851,5,101,0,0,1851,392,1,0,0,0,1852,1855,3,457,228,0,1853,1855,3,523,261,0,1854,1852,1,0,0,0,1854,1853,1,0,0,0,1855,1861,1,0,0,0,1856,1860,3,457,228,0,1857,1860,3,523,261,0,1858,1860,3,461,230,0,1859,1856,1,0,0,0,1859,1857,1,0,0,0,1859,1858,1,0,0,0,1860,1863,1,0,0,0,1861,1859,1,0,0,0,1861,1862,1,0,0,0,1862,1895,1,0,0,0,1863,1861,1,0,0,0,1864,1874,3,469,234,0,1865,1873,8,0,0,0,1866,1867,3,471,235,0,1867,1868,9,0,0,0,1868,1873,1,0,0,0,1869,1870,3,469,234,0,1870,1871,3,469,234,0,1871,1873,1,0,0,0,1872,1865,1,0,0,0,1872,1866,1,0,0,0,1872,1869,1,0,0,0,1873,1876,1,0,0,0,1874,1872,1,0,0,0,1874,1875,1,0,0,0,1875,1877,1,0,0,0,1876,1874,1,0,0,0,1877,1878,3,469,234,0,1878,1895,1,0,0,0,1879,1889,3,509,254,0,1880,1888,8,1,0,0,1881,1882,3,471,235,0,1882,1883,9,0,0,0,1883,1888,1,0,0,0,1884,1885,3,509,254,0,1885,1886,3,509,254,0,1886,1888,1,0,0,0,1887,1880,1,0,0,0,1887,1881,1,0,0,0,1887,1884,1,0,0,0,1888,1891,1,0,0,0,1889,1887,1,0,0,0,1889,1890,1,0,0,0,1890,1892,1,0,0,0,1891,1889,1,0,0,0,1892,1893,3,509,254,0,1893,1895,1,0,0,0,1894,1854,1,0,0,0,1894,1864,1,0,0,0,1894,1879,1,0,0,0,1895,394,1,0,0,0,1896,1897,3,401,200,0,1897,1901,3,481,240,0,1898,1900,3,463,231,0,1899,1898,1,0,0,0,1900,1903,1,0,0,0,1901,1899,1,0,0,0,1901,1902,1,0,0,0,1902,1906,1,0,0,0,1903,1901,1,0,0,0,1904,1907,3,435,217,0,1905,1907,3,413,206,0,1906,1904,1,0,0,0,1906,1905,1,0,0,0,1907,1910,1,0,0,0,1908,1911,3,505,252,0,1909,1911,3,479,239,0,1910,1908,1,0,0,0,1910,1909,1,0,0,0,1910,1911,1,0,0,0,1911,1913,1,0,0,0,1912,1914,3,461,230,0,1913,1912,1,0,0,0,1914,1915,1,0,0,0,1915,1913,1,0,0,0,1915,1916,1,0,0,0,1916,1973,1,0,0,0,1917,1920,3,401,200,0,1918,1921,3,435,217,0,1919,1921,3,413,206,0,1920,1918,1,0,0,0,1920,1919,1,0,0,0,1921,1924,1,0,0,0,1922,1925,3,505,252,0,1923,1925,3,479,239,0,1924,1922,1,0,0,0,1924,1923,1,0,0,0,1924,1925,1,0,0,0,1925,1927,1,0,0,0,1926,1928,3,461,230,0,1927,1926,1,0,0,0,1928,1929,1,0,0,0,1929,1927,1,0,0,0,1929,1930,1,0,0,0,1930,1973,1,0,0,0,1931,1932,3,399,199,0,1932,1936,3,481,240,0,1933,1935,3,461,230,0,1934,1933,1,0,0,0,1935,1938,1,0,0,0,1936,1934,1,0,0,0,1936,1937,1,0,0,0,1937,1939,1,0,0,0,1938,1936,1,0,0,0,1939,1942,3,413,206,0,1940,1943,3,505,252,0,1941,1943,3,479,239,0,1942,1940,1,0,0,0,1942,1941,1,0,0,0,1942,1943,1,0,0,0,1943,1945,1,0,0,0,1944,1946,3,461,230,0,1945,1944,1,0,0,0,1946,1947,1,0,0,0,1947,1945,1,0,0,0,1947,1948,1,0,0,0,1948,1973,1,0,0,0,1949,1950,3,481,240,0,1950,1951,3,399,199,0,1951,1954,3,413,206,0,1952,1955,3,505,252,0,1953,1955,3,479,239,0,1954,1952,1,0,0,0,1954,1953,1,0,0,0,1954,1955,1,0,0,0,1955,1957,1,0,0,0,1956,1958,3,461,230,0,1957,1956,1,0,0,0,1958,1959,1,0,0,0,1959,1957,1,0,0,0,1959,1960,1,0,0,0,1960,1973,1,0,0,0,1961,1962,3,399,199,0,1962,1965,3,413,206,0,1963,1966,3,505,252,0,1964,1966,3,479,239,0,1965,1963,1,0,0,0,1965,1964,1,0,0,0,1965,1966,1,0,0,0,1966,1968,1,0,0,0,1967,1969,3,461,230,0,1968,1967,1,0,0,0,1969,1970,1,0,0,0,1970,1968,1,0,0,0,1970,1971,1,0,0,0,1971,1973,1,0,0,0,1972,1896,1,0,0,0,1972,1917,1,0,0,0,1972,1931,1,0,0,0,1972,1949,1,0,0,0,1972,1961,1,0,0,0,1973,396,1,0,0,0,1974,1976,5,48,0,0,1975,1977,3,459,229,0,1976,1975,1,0,0,0,1977,1978,1,0,0,0,1978,1976,1,0,0,0,1978,1979,1,0,0,0,1979,398,1,0,0,0,1980,1982,3,461,230,0,1981,1980,1,0,0,0,1982,1983,1,0,0,0,1983,1981,1,0,0,0,1983,1984,1,0,0,0,1984,400,1,0,0,0,1985,1986,5,48,0,0,1986,1988,3,451,225,0,1987,1989,3,463,231,0,1988,1987,1,0,0,0,1989,1990,1,0,0,0,1990,1988,1,0,0,0,1990,1991,1,0,0,0,1991,402,1,0,0,0,1992,2002,3,511,255,0,1993,2001,8,2,0,0,1994,1995,3,471,235,0,1995,1996,9,0,0,0,1996,2001,1,0,0,0,1997,1998,3,511,255,0,1998,1999,3,511,255,0,1999,2001,1,0,0,0,2e3,1993,1,0,0,0,2e3,1994,1,0,0,0,2e3,1997,1,0,0,0,2001,2004,1,0,0,0,2002,2e3,1,0,0,0,2002,2003,1,0,0,0,2003,2005,1,0,0,0,2004,2002,1,0,0,0,2005,2006,3,511,255,0,2006,404,1,0,0,0,2007,2008,7,3,0,0,2008,406,1,0,0,0,2009,2010,7,4,0,0,2010,408,1,0,0,0,2011,2012,7,5,0,0,2012,410,1,0,0,0,2013,2014,7,6,0,0,2014,412,1,0,0,0,2015,2016,7,7,0,0,2016,414,1,0,0,0,2017,2018,7,8,0,0,2018,416,1,0,0,0,2019,2020,7,9,0,0,2020,418,1,0,0,0,2021,2022,7,10,0,0,2022,420,1,0,0,0,2023,2024,7,11,0,0,2024,422,1,0,0,0,2025,2026,7,12,0,0,2026,424,1,0,0,0,2027,2028,7,13,0,0,2028,426,1,0,0,0,2029,2030,7,14,0,0,2030,428,1,0,0,0,2031,2032,7,15,0,0,2032,430,1,0,0,0,2033,2034,7,16,0,0,2034,432,1,0,0,0,2035,2036,7,17,0,0,2036,434,1,0,0,0,2037,2038,7,18,0,0,2038,436,1,0,0,0,2039,2040,7,19,0,0,2040,438,1,0,0,0,2041,2042,7,20,0,0,2042,440,1,0,0,0,2043,2044,7,21,0,0,2044,442,1,0,0,0,2045,2046,7,22,0,0,2046,444,1,0,0,0,2047,2048,7,23,0,0,2048,446,1,0,0,0,2049,2050,7,24,0,0,2050,448,1,0,0,0,2051,2052,7,25,0,0,2052,450,1,0,0,0,2053,2054,7,26,0,0,2054,452,1,0,0,0,2055,2056,7,27,0,0,2056,454,1,0,0,0,2057,2058,7,28,0,0,2058,456,1,0,0,0,2059,2060,7,29,0,0,2060,458,1,0,0,0,2061,2062,7,30,0,0,2062,460,1,0,0,0,2063,2064,7,31,0,0,2064,462,1,0,0,0,2065,2066,7,32,0,0,2066,464,1,0,0,0,2067,2068,5,45,0,0,2068,2069,5,62,0,0,2069,466,1,0,0,0,2070,2071,5,42,0,0,2071,468,1,0,0,0,2072,2073,5,96,0,0,2073,470,1,0,0,0,2074,2075,5,92,0,0,2075,472,1,0,0,0,2076,2077,5,58,0,0,2077,474,1,0,0,0,2078,2079,5,44,0,0,2079,476,1,0,0,0,2080,2081,5,124,0,0,2081,2082,5,124,0,0,2082,478,1,0,0,0,2083,2084,5,45,0,0,2084,480,1,0,0,0,2085,2086,5,46,0,0,2086,482,1,0,0,0,2087,2088,5,61,0,0,2088,2089,5,61,0,0,2089,484,1,0,0,0,2090,2091,5,61,0,0,2091,486,1,0,0,0,2092,2093,5,62,0,0,2093,2094,5,61,0,0,2094,488,1,0,0,0,2095,2096,5,62,0,0,2096,490,1,0,0,0,2097,2098,5,123,0,0,2098,492,1,0,0,0,2099,2100,5,91,0,0,2100,494,1,0,0,0,2101,2102,5,60,0,0,2102,2103,5,61,0,0,2103,496,1,0,0,0,2104,2105,5,40,0,0,2105,498,1,0,0,0,2106,2107,5,60,0,0,2107,500,1,0,0,0,2108,2109,5,33,0,0,2109,2113,5,61,0,0,2110,2111,5,60,0,0,2111,2113,5,62,0,0,2112,2108,1,0,0,0,2112,2110,1,0,0,0,2113,502,1,0,0,0,2114,2115,5,37,0,0,2115,504,1,0,0,0,2116,2117,5,43,0,0,2117,506,1,0,0,0,2118,2119,5,63,0,0,2119,508,1,0,0,0,2120,2121,5,34,0,0,2121,510,1,0,0,0,2122,2123,5,39,0,0,2123,512,1,0,0,0,2124,2125,5,125,0,0,2125,514,1,0,0,0,2126,2127,5,93,0,0,2127,516,1,0,0,0,2128,2129,5,41,0,0,2129,518,1,0,0,0,2130,2131,5,59,0,0,2131,520,1,0,0,0,2132,2133,5,47,0,0,2133,522,1,0,0,0,2134,2135,5,95,0,0,2135,524,1,0,0,0,2136,2137,5,47,0,0,2137,2138,5,42,0,0,2138,2142,1,0,0,0,2139,2141,9,0,0,0,2140,2139,1,0,0,0,2141,2144,1,0,0,0,2142,2143,1,0,0,0,2142,2140,1,0,0,0,2143,2145,1,0,0,0,2144,2142,1,0,0,0,2145,2146,5,42,0,0,2146,2147,5,47,0,0,2147,2148,1,0,0,0,2148,2149,6,262,0,0,2149,526,1,0,0,0,2150,2151,5,45,0,0,2151,2152,5,45,0,0,2152,2156,1,0,0,0,2153,2155,8,33,0,0,2154,2153,1,0,0,0,2155,2158,1,0,0,0,2156,2154,1,0,0,0,2156,2157,1,0,0,0,2157,2160,1,0,0,0,2158,2156,1,0,0,0,2159,2161,7,34,0,0,2160,2159,1,0,0,0,2161,2162,1,0,0,0,2162,2163,6,263,0,0,2163,528,1,0,0,0,2164,2165,7,35,0,0,2165,2166,1,0,0,0,2166,2167,6,264,1,0,2167,530,1,0,0,0,36,0,593,1100,1839,1854,1859,1861,1872,1874,1887,1889,1894,1901,1906,1910,1915,1920,1924,1929,1936,1942,1947,1954,1959,1965,1970,1972,1978,1983,1990,2e3,2002,2112,2142,2156,2160,2,6,0,0,0,1,0]}static get _ATN(){return e.__ATN||(e.__ATN=new N.ATNDeserializer().deserialize(e._serializedATN)),e.__ATN}static{this.vocabulary=new N.Vocabulary(e.literalNames,e.symbolicNames,[])}get vocabulary(){return e.vocabulary}static{this.decisionsToDFA=e._ATN.decisionToState.map((t,r)=>new N.DFA(t,r))}};import*as n from"antlr4ng";var i=class e extends n.Parser{static{l(this,"ClickHouseParser")}static{this.ADD=1}static{this.AFTER=2}static{this.ALIAS=3}static{this.ALL=4}static{this.ALTER=5}static{this.AND=6}static{this.ANTI=7}static{this.ANY=8}static{this.ARRAY=9}static{this.AS=10}static{this.ASCENDING=11}static{this.ASOF=12}static{this.AST=13}static{this.ASYNC=14}static{this.ATTACH=15}static{this.BETWEEN=16}static{this.BOTH=17}static{this.BY=18}static{this.CASE=19}static{this.CAST=20}static{this.CHECK=21}static{this.CLEAR=22}static{this.CLUSTER=23}static{this.CODEC=24}static{this.COLLATE=25}static{this.COLUMN=26}static{this.COMMENT=27}static{this.CONSTRAINT=28}static{this.CREATE=29}static{this.CROSS=30}static{this.CUBE=31}static{this.CURRENT=32}static{this.DATABASE=33}static{this.DATABASES=34}static{this.DATE=35}static{this.DAY=36}static{this.DEDUPLICATE=37}static{this.DEFAULT=38}static{this.DELAY=39}static{this.DELETE=40}static{this.DESC=41}static{this.DESCENDING=42}static{this.DESCRIBE=43}static{this.DETACH=44}static{this.DICTIONARIES=45}static{this.DICTIONARY=46}static{this.DISK=47}static{this.DISTINCT=48}static{this.DISTRIBUTED=49}static{this.DROP=50}static{this.ELSE=51}static{this.END=52}static{this.ENGINE=53}static{this.ESTIMATE=54}static{this.EVENTS=55}static{this.EXISTS=56}static{this.EXPLAIN=57}static{this.EXPRESSION=58}static{this.EXTRACT=59}static{this.FETCHES=60}static{this.FINAL=61}static{this.FIRST=62}static{this.FLUSH=63}static{this.FOLLOWING=64}static{this.FOR=65}static{this.FORMAT=66}static{this.FREEZE=67}static{this.FROM=68}static{this.FULL=69}static{this.FUNCTION=70}static{this.GLOBAL=71}static{this.GRANULARITY=72}static{this.GROUP=73}static{this.HAVING=74}static{this.HIERARCHICAL=75}static{this.HOUR=76}static{this.ID=77}static{this.IF=78}static{this.ILIKE=79}static{this.IN=80}static{this.INDEX=81}static{this.INF=82}static{this.INJECTIVE=83}static{this.INNER=84}static{this.INSERT=85}static{this.INTERVAL=86}static{this.INTO=87}static{this.IS=88}static{this.IS_OBJECT_ID=89}static{this.JOIN=90}static{this.KEY=91}static{this.KILL=92}static{this.LAST=93}static{this.LAYOUT=94}static{this.LEADING=95}static{this.LEFT=96}static{this.LIFETIME=97}static{this.LIKE=98}static{this.LIMIT=99}static{this.LIVE=100}static{this.LOCAL=101}static{this.LOGS=102}static{this.MATERIALIZE=103}static{this.MATERIALIZED=104}static{this.MAX=105}static{this.MERGES=106}static{this.MIN=107}static{this.MINUTE=108}static{this.MODIFY=109}static{this.MONTH=110}static{this.MOVE=111}static{this.MUTATION=112}static{this.NAN_SQL=113}static{this.NO=114}static{this.NOT=115}static{this.NULL_SQL=116}static{this.NULLS=117}static{this.OFFSET=118}static{this.ON=119}static{this.OPTIMIZE=120}static{this.OR=121}static{this.ORDER=122}static{this.OUTER=123}static{this.OUTFILE=124}static{this.OVER=125}static{this.PARTITION=126}static{this.PIPELINE=127}static{this.PLAN=128}static{this.POPULATE=129}static{this.PRECEDING=130}static{this.PREWHERE=131}static{this.PRIMARY=132}static{this.PROJECTION=133}static{this.QUARTER=134}static{this.QUERY=135}static{this.RANGE=136}static{this.RELOAD=137}static{this.REMOVE=138}static{this.RENAME=139}static{this.REPLACE=140}static{this.REPLICA=141}static{this.REPLICATED=142}static{this.RIGHT=143}static{this.ROLLUP=144}static{this.ROW=145}static{this.ROWS=146}static{this.SAMPLE=147}static{this.SECOND=148}static{this.SELECT=149}static{this.SEMI=150}static{this.SENDS=151}static{this.SET=152}static{this.SETTINGS=153}static{this.SHOW=154}static{this.SOURCE=155}static{this.START=156}static{this.STOP=157}static{this.SUBSTRING=158}static{this.SYNC=159}static{this.SYNTAX=160}static{this.SYSTEM=161}static{this.TABLE=162}static{this.TABLES=163}static{this.TEMPORARY=164}static{this.TEST=165}static{this.THEN=166}static{this.TIES=167}static{this.TIMEOUT=168}static{this.TIMESTAMP=169}static{this.TO=170}static{this.TOP=171}static{this.TOTALS=172}static{this.TRAILING=173}static{this.TRIM=174}static{this.TREE=175}static{this.TRUNCATE=176}static{this.TTL=177}static{this.TYPE=178}static{this.UNBOUNDED=179}static{this.UNION=180}static{this.UPDATE=181}static{this.USE=182}static{this.USING=183}static{this.UUID=184}static{this.VALUES=185}static{this.VIEW=186}static{this.VOLUME=187}static{this.WATCH=188}static{this.WEEK=189}static{this.WHEN=190}static{this.WHERE=191}static{this.WINDOW=192}static{this.WITH=193}static{this.YEAR=194}static{this.JSON_FALSE=195}static{this.JSON_TRUE=196}static{this.IDENTIFIER=197}static{this.FLOATING_LITERAL=198}static{this.OCTAL_LITERAL=199}static{this.DECIMAL_LITERAL=200}static{this.HEXADECIMAL_LITERAL=201}static{this.STRING_LITERAL=202}static{this.ARROW=203}static{this.ASTERISK=204}static{this.BACKQUOTE=205}static{this.BACKSLASH=206}static{this.COLON=207}static{this.COMMA=208}static{this.CONCAT=209}static{this.DASH=210}static{this.DOT=211}static{this.EQ_DOUBLE=212}static{this.EQ_SINGLE=213}static{this.GE=214}static{this.GT=215}static{this.LBRACE=216}static{this.LBRACKET=217}static{this.LE=218}static{this.LPAREN=219}static{this.LT=220}static{this.NOT_EQ=221}static{this.PERCENT=222}static{this.PLUS=223}static{this.QUESTIONMARK=224}static{this.QUOTE_DOUBLE=225}static{this.QUOTE_SINGLE=226}static{this.RBRACE=227}static{this.RBRACKET=228}static{this.RPAREN=229}static{this.SEMICOLON=230}static{this.SLASH=231}static{this.UNDERSCORE=232}static{this.MULTI_LINE_COMMENT=233}static{this.SINGLE_LINE_COMMENT=234}static{this.WHITESPACE=235}static{this.RULE_root=0}static{this.RULE_statements=1}static{this.RULE_statement=2}static{this.RULE_notInsertStatement=3}static{this.RULE_commonTableExpressionStatement=4}static{this.RULE_namedQuery=5}static{this.RULE_columnAliases=6}static{this.RULE_alterStatement=7}static{this.RULE_alterTableClause=8}static{this.RULE_assignmentExpressionList=9}static{this.RULE_assignmentExpression=10}static{this.RULE_tableColumnPropertyType=11}static{this.RULE_partitionClause=12}static{this.RULE_attachStatement=13}static{this.RULE_checkStatement=14}static{this.RULE_deleteStatement=15}static{this.RULE_createTableStatement=16}static{this.RULE_createDatabaseStatement=17}static{this.RULE_createDictionaryStatement=18}static{this.RULE_createLiveViewStatement=19}static{this.RULE_createMaterializedViewStatement=20}static{this.RULE_createViewStatement=21}static{this.RULE_createStatement=22}static{this.RULE_dictionarySchemaClause=23}static{this.RULE_dictionaryAttributeDefinition=24}static{this.RULE_dictionaryEngineClause=25}static{this.RULE_dictionaryPrimaryKeyClause=26}static{this.RULE_dictionaryArgumentExpression=27}static{this.RULE_sourceClause=28}static{this.RULE_lifetimeClause=29}static{this.RULE_layoutClause=30}static{this.RULE_rangeClause=31}static{this.RULE_dictionarySettingsClause=32}static{this.RULE_clusterClause=33}static{this.RULE_uuidClause=34}static{this.RULE_destinationClause=35}static{this.RULE_subqueryClause=36}static{this.RULE_tableSchemaClause=37}static{this.RULE_engineClause=38}static{this.RULE_partitionByClause=39}static{this.RULE_primaryKeyClause=40}static{this.RULE_sampleByClause=41}static{this.RULE_ttlClause=42}static{this.RULE_engineExpression=43}static{this.RULE_tableElementExpression=44}static{this.RULE_tableColumnDefinition=45}static{this.RULE_tableColumnPropertyExpression=46}static{this.RULE_tableIndexDefinition=47}static{this.RULE_tableProjectionDefinition=48}static{this.RULE_codecExpression=49}static{this.RULE_codecArgExpression=50}static{this.RULE_ttlExpression=51}static{this.RULE_describeStatement=52}static{this.RULE_dropStatement=53}static{this.RULE_existsStatement=54}static{this.RULE_explainStatement=55}static{this.RULE_insertStatement=56}static{this.RULE_columnsClause=57}static{this.RULE_dataClause=58}static{this.RULE_valuesStatement=59}static{this.RULE_killStatement=60}static{this.RULE_optimizeStatement=61}static{this.RULE_renameStatement=62}static{this.RULE_projectionSelectStatement=63}static{this.RULE_selectUnionStatement=64}static{this.RULE_selectStatementWithParentheses=65}static{this.RULE_selectStatement=66}static{this.RULE_withClause=67}static{this.RULE_topClause=68}static{this.RULE_fromClause=69}static{this.RULE_arrayJoinClause=70}static{this.RULE_windowClause=71}static{this.RULE_prewhereClause=72}static{this.RULE_whereClause=73}static{this.RULE_groupByClause=74}static{this.RULE_havingClause=75}static{this.RULE_orderByClause=76}static{this.RULE_projectionOrderByClause=77}static{this.RULE_limitByClause=78}static{this.RULE_limitClause=79}static{this.RULE_settingsClause=80}static{this.RULE_joinExpression=81}static{this.RULE_joinOperator=82}static{this.RULE_joinOperatorCross=83}static{this.RULE_joinConstraintClause=84}static{this.RULE_sampleClause=85}static{this.RULE_limitExpression=86}static{this.RULE_orderExpressionList=87}static{this.RULE_orderExpression=88}static{this.RULE_ratioExpression=89}static{this.RULE_settingExpressionList=90}static{this.RULE_settingExpression=91}static{this.RULE_windowExpression=92}static{this.RULE_windowPartitionByClause=93}static{this.RULE_windowOrderByClause=94}static{this.RULE_windowFrameClause=95}static{this.RULE_windowFrameExtend=96}static{this.RULE_windowFrameBound=97}static{this.RULE_setStatement=98}static{this.RULE_showStatement=99}static{this.RULE_systemStatement=100}static{this.RULE_truncateStatement=101}static{this.RULE_useStatement=102}static{this.RULE_watchStatement=103}static{this.RULE_columnTypeExpression=104}static{this.RULE_columnExpressionList=105}static{this.RULE_columnsExpression=106}static{this.RULE_columnExpression=107}static{this.RULE_columnArgumentList=108}static{this.RULE_columnArgumentExpression=109}static{this.RULE_columnLambdaExpression=110}static{this.RULE_columnIdentifier=111}static{this.RULE_tableExpression=112}static{this.RULE_tableFunctionExpression=113}static{this.RULE_tableIdentifier=114}static{this.RULE_tableArgList=115}static{this.RULE_tableArgExpression=116}static{this.RULE_databaseIdentifier=117}static{this.RULE_floatingLiteral=118}static{this.RULE_numberLiteral=119}static{this.RULE_literal=120}static{this.RULE_interval=121}static{this.RULE_keyword=122}static{this.RULE_keywordForAlias=123}static{this.RULE_alias=124}static{this.RULE_identifier=125}static{this.RULE_identifierOrNull=126}static{this.RULE_enumValue=127}static{this.literalNames=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"'false'","'true'",null,null,null,null,null,null,"'->'","'*'","'`'","''","':'","','","'||'","'-'","'.'","'=='","'='","'>='","'>'","'{'","'['","'<='","'('","'<'",null,"'%'","'+'","'?'",`'"'`,"'''","'}'","']'","')'","';'","'/'","'_'"]}static{this.symbolicNames=[null,"ADD","AFTER","ALIAS","ALL","ALTER","AND","ANTI","ANY","ARRAY","AS","ASCENDING","ASOF","AST","ASYNC","ATTACH","BETWEEN","BOTH","BY","CASE","CAST","CHECK","CLEAR","CLUSTER","CODEC","COLLATE","COLUMN","COMMENT","CONSTRAINT","CREATE","CROSS","CUBE","CURRENT","DATABASE","DATABASES","DATE","DAY","DEDUPLICATE","DEFAULT","DELAY","DELETE","DESC","DESCENDING","DESCRIBE","DETACH","DICTIONARIES","DICTIONARY","DISK","DISTINCT","DISTRIBUTED","DROP","ELSE","END","ENGINE","ESTIMATE","EVENTS","EXISTS","EXPLAIN","EXPRESSION","EXTRACT","FETCHES","FINAL","FIRST","FLUSH","FOLLOWING","FOR","FORMAT","FREEZE","FROM","FULL","FUNCTION","GLOBAL","GRANULARITY","GROUP","HAVING","HIERARCHICAL","HOUR","ID","IF","ILIKE","IN","INDEX","INF","INJECTIVE","INNER","INSERT","INTERVAL","INTO","IS","IS_OBJECT_ID","JOIN","KEY","KILL","LAST","LAYOUT","LEADING","LEFT","LIFETIME","LIKE","LIMIT","LIVE","LOCAL","LOGS","MATERIALIZE","MATERIALIZED","MAX","MERGES","MIN","MINUTE","MODIFY","MONTH","MOVE","MUTATION","NAN_SQL","NO","NOT","NULL_SQL","NULLS","OFFSET","ON","OPTIMIZE","OR","ORDER","OUTER","OUTFILE","OVER","PARTITION","PIPELINE","PLAN","POPULATE","PRECEDING","PREWHERE","PRIMARY","PROJECTION","QUARTER","QUERY","RANGE","RELOAD","REMOVE","RENAME","REPLACE","REPLICA","REPLICATED","RIGHT","ROLLUP","ROW","ROWS","SAMPLE","SECOND","SELECT","SEMI","SENDS","SET","SETTINGS","SHOW","SOURCE","START","STOP","SUBSTRING","SYNC","SYNTAX","SYSTEM","TABLE","TABLES","TEMPORARY","TEST","THEN","TIES","TIMEOUT","TIMESTAMP","TO","TOP","TOTALS","TRAILING","TRIM","TREE","TRUNCATE","TTL","TYPE","UNBOUNDED","UNION","UPDATE","USE","USING","UUID","VALUES","VIEW","VOLUME","WATCH","WEEK","WHEN","WHERE","WINDOW","WITH","YEAR","JSON_FALSE","JSON_TRUE","IDENTIFIER","FLOATING_LITERAL","OCTAL_LITERAL","DECIMAL_LITERAL","HEXADECIMAL_LITERAL","STRING_LITERAL","ARROW","ASTERISK","BACKQUOTE","BACKSLASH","COLON","COMMA","CONCAT","DASH","DOT","EQ_DOUBLE","EQ_SINGLE","GE","GT","LBRACE","LBRACKET","LE","LPAREN","LT","NOT_EQ","PERCENT","PLUS","QUESTIONMARK","QUOTE_DOUBLE","QUOTE_SINGLE","RBRACE","RBRACKET","RPAREN","SEMICOLON","SLASH","UNDERSCORE","MULTI_LINE_COMMENT","SINGLE_LINE_COMMENT","WHITESPACE"]}static{this.ruleNames=["root","statements","statement","notInsertStatement","commonTableExpressionStatement","namedQuery","columnAliases","alterStatement","alterTableClause","assignmentExpressionList","assignmentExpression","tableColumnPropertyType","partitionClause","attachStatement","checkStatement","deleteStatement","createTableStatement","createDatabaseStatement","createDictionaryStatement","createLiveViewStatement","createMaterializedViewStatement","createViewStatement","createStatement","dictionarySchemaClause","dictionaryAttributeDefinition","dictionaryEngineClause","dictionaryPrimaryKeyClause","dictionaryArgumentExpression","sourceClause","lifetimeClause","layoutClause","rangeClause","dictionarySettingsClause","clusterClause","uuidClause","destinationClause","subqueryClause","tableSchemaClause","engineClause","partitionByClause","primaryKeyClause","sampleByClause","ttlClause","engineExpression","tableElementExpression","tableColumnDefinition","tableColumnPropertyExpression","tableIndexDefinition","tableProjectionDefinition","codecExpression","codecArgExpression","ttlExpression","describeStatement","dropStatement","existsStatement","explainStatement","insertStatement","columnsClause","dataClause","valuesStatement","killStatement","optimizeStatement","renameStatement","projectionSelectStatement","selectUnionStatement","selectStatementWithParentheses","selectStatement","withClause","topClause","fromClause","arrayJoinClause","windowClause","prewhereClause","whereClause","groupByClause","havingClause","orderByClause","projectionOrderByClause","limitByClause","limitClause","settingsClause","joinExpression","joinOperator","joinOperatorCross","joinConstraintClause","sampleClause","limitExpression","orderExpressionList","orderExpression","ratioExpression","settingExpressionList","settingExpression","windowExpression","windowPartitionByClause","windowOrderByClause","windowFrameClause","windowFrameExtend","windowFrameBound","setStatement","showStatement","systemStatement","truncateStatement","useStatement","watchStatement","columnTypeExpression","columnExpressionList","columnsExpression","columnExpression","columnArgumentList","columnArgumentExpression","columnLambdaExpression","columnIdentifier","tableExpression","tableFunctionExpression","tableIdentifier","tableArgList","tableArgExpression","databaseIdentifier","floatingLiteral","numberLiteral","literal","interval","keyword","keywordForAlias","alias","identifier","identifierOrNull","enumValue"]}get grammarFileName(){return"ClickHouseParser.g4"}get literalNames(){return e.literalNames}get symbolicNames(){return e.symbolicNames}get ruleNames(){return e.ruleNames}get serializedATN(){return e._serializedATN}createFailedPredicateException(t,r){return new n.FailedPredicateException(this,t,r)}constructor(t){super(t),this.interpreter=new n.ParserATNSimulator(this,e._ATN,e.decisionsToDFA,new n.PredictionContextCache)}root(){let t=new We(this.context,this.state);this.enterRule(t,0,e.RULE_root);let r;try{this.enterOuterAlt(t,1),this.state=257,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(!(r&-32)&&1<<r&539000864||!(r-40&-32)&&1<<r-40&197659||r===85||r===92||!(r-120&-32)&&1<<r-120&538443777||!(r-152&-32)&&1<<r-152&1090519557||!(r-188&-32)&&1<<r-188&2147483681)&&(this.state=256,this.statements()),this.state=259,this.match(e.EOF)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}statements(){let t=new Gt(this.context,this.state);this.enterRule(t,2,e.RULE_statements);let r;try{switch(this.state=269,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,2,this.context)){case 1:this.enterOuterAlt(t,1),this.state=261,this.statement(),this.state=263,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===230&&(this.state=262,this.match(e.SEMICOLON));break;case 2:this.enterOuterAlt(t,2),this.state=265,this.statement(),this.state=266,this.match(e.SEMICOLON),this.state=267,this.statements();break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}statement(){let t=new Wt(this.context,this.state);this.enterRule(t,4,e.RULE_statement);let r;try{switch(this.state=285,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.ALTER:case e.ATTACH:case e.CHECK:case e.CREATE:case e.DELETE:case e.DESC:case e.DESCRIBE:case e.DETACH:case e.DROP:case e.EXISTS:case e.EXPLAIN:case e.KILL:case e.OPTIMIZE:case e.RENAME:case e.REPLACE:case e.SELECT:case e.SET:case e.SHOW:case e.SYSTEM:case e.TRUNCATE:case e.USE:case e.WATCH:case e.WITH:case e.LPAREN:switch(this.enterOuterAlt(t,1),this.state=271,this.notInsertStatement(),this.state=275,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===87&&(this.state=272,this.match(e.INTO),this.state=273,this.match(e.OUTFILE),this.state=274,this.match(e.STRING_LITERAL)),this.state=279,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===66&&(this.state=277,this.match(e.FORMAT),this.state=278,this.identifierOrNull()),this.state=282,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,5,this.context)){case 1:this.state=281,this.match(e.SEMICOLON);break}break;case e.INSERT:this.enterOuterAlt(t,2),this.state=284,this.insertStatement();break;default:throw new n.NoViableAltException(this)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}notInsertStatement(){let t=new S(this.context,this.state);this.enterRule(t,6,e.RULE_notInsertStatement);try{switch(this.state=310,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,8,this.context)){case 1:this.enterOuterAlt(t,1),this.state=287,this.alterStatement();break;case 2:this.enterOuterAlt(t,2),this.state=288,this.attachStatement();break;case 3:this.enterOuterAlt(t,3),this.state=289,this.checkStatement();break;case 4:this.enterOuterAlt(t,4),this.state=290,this.createStatement();break;case 5:this.enterOuterAlt(t,5),this.state=291,this.describeStatement();break;case 6:this.enterOuterAlt(t,6),this.state=292,this.deleteStatement();break;case 7:this.enterOuterAlt(t,7),this.state=293,this.dropStatement();break;case 8:this.enterOuterAlt(t,8),this.state=294,this.existsStatement();break;case 9:this.enterOuterAlt(t,9),this.state=295,this.explainStatement();break;case 10:this.enterOuterAlt(t,10),this.state=296,this.killStatement();break;case 11:this.enterOuterAlt(t,11),this.state=297,this.optimizeStatement();break;case 12:this.enterOuterAlt(t,12),this.state=298,this.renameStatement();break;case 13:this.enterOuterAlt(t,13),this.state=299,this.selectUnionStatement();break;case 14:this.enterOuterAlt(t,14),this.state=300,this.setStatement();break;case 15:this.enterOuterAlt(t,15),this.state=301,this.showStatement();break;case 16:this.enterOuterAlt(t,16),this.state=302,this.systemStatement();break;case 17:this.enterOuterAlt(t,17),this.state=303,this.truncateStatement();break;case 18:this.enterOuterAlt(t,18),this.state=304,this.useStatement();break;case 19:this.enterOuterAlt(t,19),this.state=305,this.watchStatement();break;case 20:this.enterOuterAlt(t,20);{switch(this.state=307,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,7,this.context)){case 1:this.state=306,this.commonTableExpressionStatement();break}this.state=309,this.selectStatement()}break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}commonTableExpressionStatement(){let t=new Yt(this.context,this.state);this.enterRule(t,8,e.RULE_commonTableExpressionStatement);let r;try{for(this.enterOuterAlt(t,1),this.state=312,this.match(e.WITH),this.state=313,this.namedQuery(),this.state=318,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=314,this.match(e.COMMA),this.state=315,this.namedQuery(),this.state=320,this.errorHandler.sync(this),r=this.tokenStream.LA(1)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}namedQuery(){let t=new rt(this.context,this.state);this.enterRule(t,10,e.RULE_namedQuery);let r;try{this.enterOuterAlt(t,1),this.state=321,t._name=this.identifier(),this.state=323,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===219&&(this.state=322,this.columnAliases()),this.state=325,this.match(e.AS),this.state=326,this.match(e.LPAREN),this.state=327,this.notInsertStatement(),this.state=328,this.match(e.RPAREN)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}columnAliases(){let t=new Xt(this.context,this.state);this.enterRule(t,12,e.RULE_columnAliases);let r;try{this.enterOuterAlt(t,1);{for(this.state=330,this.match(e.LPAREN),this.state=331,this.identifier(),this.state=336,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=332,this.match(e.COMMA),this.state=333,this.identifier(),this.state=338,this.errorHandler.sync(this),r=this.tokenStream.LA(1);this.state=339,this.match(e.RPAREN)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}alterStatement(){let t=new it(this.context,this.state);this.enterRule(t,14,e.RULE_alterStatement);let r;try{for(t=new Ye(t),this.enterOuterAlt(t,1),this.state=341,this.match(e.ALTER),this.state=342,this.match(e.TABLE),this.state=343,this.tableIdentifier(),this.state=345,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=344,this.clusterClause()),this.state=347,this.alterTableClause(),this.state=352,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=348,this.match(e.COMMA),this.state=349,this.alterTableClause(),this.state=354,this.errorHandler.sync(this),r=this.tokenStream.LA(1)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}alterTableClause(){let t=new p(this.context,this.state);this.enterRule(t,16,e.RULE_alterTableClause);let r;try{switch(this.state=569,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,42,this.context)){case 1:t=new T1(t),this.enterOuterAlt(t,1);{switch(this.state=355,this.match(e.ADD),this.state=356,this.match(e.COLUMN),this.state=360,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,14,this.context)){case 1:this.state=357,this.match(e.IF),this.state=358,this.match(e.NOT),this.state=359,this.match(e.EXISTS);break}this.state=362,this.tableColumnDefinition(),this.state=365,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===2&&(this.state=363,this.match(e.AFTER),this.state=364,this.columnIdentifier())}break;case 2:t=new _e(t),this.enterOuterAlt(t,2);{switch(this.state=367,this.match(e.ADD),this.state=368,this.match(e.INDEX),this.state=372,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,16,this.context)){case 1:this.state=369,this.match(e.IF),this.state=370,this.match(e.NOT),this.state=371,this.match(e.EXISTS);break}this.state=374,this.tableIndexDefinition(),this.state=377,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===2&&(this.state=375,this.match(e.AFTER),this.state=376,this.columnIdentifier())}break;case 3:t=new d1(t),this.enterOuterAlt(t,3);{switch(this.state=379,this.match(e.ADD),this.state=380,this.match(e.PROJECTION),this.state=384,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,18,this.context)){case 1:this.state=381,this.match(e.IF),this.state=382,this.match(e.NOT),this.state=383,this.match(e.EXISTS);break}this.state=386,this.tableProjectionDefinition(),this.state=389,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===2&&(this.state=387,this.match(e.AFTER),this.state=388,this.columnIdentifier())}break;case 4:t=new h1(t),this.enterOuterAlt(t,4),this.state=391,this.match(e.ATTACH),this.state=392,this.partitionClause(),this.state=395,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===68&&(this.state=393,this.match(e.FROM),this.state=394,this.tableIdentifier());break;case 5:t=new l1(t),this.enterOuterAlt(t,5);{switch(this.state=397,this.match(e.CLEAR),this.state=398,this.match(e.COLUMN),this.state=401,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,21,this.context)){case 1:this.state=399,this.match(e.IF),this.state=400,this.match(e.EXISTS);break}this.state=403,this.columnIdentifier(),this.state=406,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===80&&(this.state=404,this.match(e.IN),this.state=405,this.partitionClause())}break;case 6:t=new u1(t),this.enterOuterAlt(t,6);{switch(this.state=408,this.match(e.CLEAR),this.state=409,this.match(e.INDEX),this.state=412,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,23,this.context)){case 1:this.state=410,this.match(e.IF),this.state=411,this.match(e.EXISTS);break}this.state=414,this.columnIdentifier(),this.state=417,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===80&&(this.state=415,this.match(e.IN),this.state=416,this.partitionClause())}break;case 7:t=new Qe(t),this.enterOuterAlt(t,7);{switch(this.state=419,this.match(e.CLEAR),this.state=420,this.match(e.PROJECTION),this.state=423,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,25,this.context)){case 1:this.state=421,this.match(e.IF),this.state=422,this.match(e.EXISTS);break}this.state=425,this.columnIdentifier(),this.state=428,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===80&&(this.state=426,this.match(e.IN),this.state=427,this.partitionClause())}break;case 8:t=new ze(t),this.enterOuterAlt(t,8);{switch(this.state=430,this.match(e.COMMENT),this.state=431,this.match(e.COLUMN),this.state=434,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,27,this.context)){case 1:this.state=432,this.match(e.IF),this.state=433,this.match(e.EXISTS);break}this.state=436,this.columnIdentifier(),this.state=437,this.match(e.STRING_LITERAL)}break;case 9:t=new Ze(t),this.enterOuterAlt(t,9),this.state=439,this.match(e.DELETE),this.state=440,this.match(e.WHERE),this.state=441,this.columnExpression(0);break;case 10:t=new $e(t),this.enterOuterAlt(t,10),this.state=442,this.match(e.DETACH),this.state=443,this.partitionClause();break;case 11:t=new qe(t),this.enterOuterAlt(t,11);{switch(this.state=444,this.match(e.DROP),this.state=445,this.match(e.COLUMN),this.state=448,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,28,this.context)){case 1:this.state=446,this.match(e.IF),this.state=447,this.match(e.EXISTS);break}this.state=450,this.columnIdentifier()}break;case 12:t=new E1(t),this.enterOuterAlt(t,12);{switch(this.state=451,this.match(e.DROP),this.state=452,this.match(e.INDEX),this.state=455,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,29,this.context)){case 1:this.state=453,this.match(e.IF),this.state=454,this.match(e.EXISTS);break}this.state=457,this.columnIdentifier()}break;case 13:t=new p1(t),this.enterOuterAlt(t,13);{switch(this.state=458,this.match(e.DROP),this.state=459,this.match(e.PROJECTION),this.state=462,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,30,this.context)){case 1:this.state=460,this.match(e.IF),this.state=461,this.match(e.EXISTS);break}this.state=464,this.columnIdentifier()}break;case 14:t=new t1(t),this.enterOuterAlt(t,14),this.state=465,this.match(e.DROP),this.state=466,this.partitionClause();break;case 15:t=new n1(t),this.enterOuterAlt(t,15),this.state=467,this.match(e.FREEZE),this.state=469,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===126&&(this.state=468,this.partitionClause());break;case 16:t=new e1(t),this.enterOuterAlt(t,16);{switch(this.state=471,this.match(e.MATERIALIZE),this.state=472,this.match(e.INDEX),this.state=475,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,32,this.context)){case 1:this.state=473,this.match(e.IF),this.state=474,this.match(e.EXISTS);break}this.state=477,this.columnIdentifier(),this.state=480,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===80&&(this.state=478,this.match(e.IN),this.state=479,this.partitionClause())}break;case 17:t=new r1(t),this.enterOuterAlt(t,17);{switch(this.state=482,this.match(e.MATERIALIZE),this.state=483,this.match(e.PROJECTION),this.state=486,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,34,this.context)){case 1:this.state=484,this.match(e.IF),this.state=485,this.match(e.EXISTS);break}this.state=488,this.columnIdentifier(),this.state=491,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===80&&(this.state=489,this.match(e.IN),this.state=490,this.partitionClause())}break;case 18:t=new c1(t),this.enterOuterAlt(t,18);{switch(this.state=493,this.match(e.MODIFY),this.state=494,this.match(e.COLUMN),this.state=497,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,36,this.context)){case 1:this.state=495,this.match(e.IF),this.state=496,this.match(e.EXISTS);break}this.state=499,this.columnIdentifier(),this.state=500,this.codecExpression()}break;case 19:t=new m1(t),this.enterOuterAlt(t,19);{switch(this.state=502,this.match(e.MODIFY),this.state=503,this.match(e.COLUMN),this.state=506,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,37,this.context)){case 1:this.state=504,this.match(e.IF),this.state=505,this.match(e.EXISTS);break}this.state=508,this.columnIdentifier(),this.state=509,this.match(e.COMMENT),this.state=510,this.match(e.STRING_LITERAL)}break;case 20:t=new je(t),this.enterOuterAlt(t,20);{switch(this.state=512,this.match(e.MODIFY),this.state=513,this.match(e.COLUMN),this.state=516,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,38,this.context)){case 1:this.state=514,this.match(e.IF),this.state=515,this.match(e.EXISTS);break}this.state=518,this.columnIdentifier(),this.state=519,this.match(e.REMOVE),this.state=520,this.tableColumnPropertyType()}break;case 21:t=new a1(t),this.enterOuterAlt(t,21);{switch(this.state=522,this.match(e.MODIFY),this.state=523,this.match(e.COLUMN),this.state=526,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,39,this.context)){case 1:this.state=524,this.match(e.IF),this.state=525,this.match(e.EXISTS);break}this.state=528,this.tableColumnDefinition()}break;case 22:t=new Ke(t),this.enterOuterAlt(t,22),this.state=529,this.match(e.MODIFY),this.state=530,this.match(e.ORDER),this.state=531,this.match(e.BY),this.state=532,this.columnExpression(0);break;case 23:t=new C1(t),this.enterOuterAlt(t,23),this.state=533,this.match(e.MODIFY),this.state=534,this.ttlClause();break;case 24:switch(t=new i1(t),this.enterOuterAlt(t,24),this.state=535,this.match(e.MOVE),this.state=536,this.partitionClause(),this.state=546,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,40,this.context)){case 1:this.state=537,this.match(e.TO),this.state=538,this.match(e.DISK),this.state=539,this.match(e.STRING_LITERAL);break;case 2:this.state=540,this.match(e.TO),this.state=541,this.match(e.VOLUME),this.state=542,this.match(e.STRING_LITERAL);break;case 3:this.state=543,this.match(e.TO),this.state=544,this.match(e.TABLE),this.state=545,this.tableIdentifier();break}break;case 25:t=new o1(t),this.enterOuterAlt(t,25),this.state=548,this.match(e.REMOVE),this.state=549,this.match(e.TTL);break;case 26:t=new s1(t),this.enterOuterAlt(t,26);{switch(this.state=550,this.match(e.RENAME),this.state=551,this.match(e.COLUMN),this.state=554,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,41,this.context)){case 1:this.state=552,this.match(e.IF),this.state=553,this.match(e.EXISTS);break}this.state=556,this.columnIdentifier(),this.state=557,this.match(e.TO),this.state=558,this.columnIdentifier()}break;case 27:t=new Xe(t),this.enterOuterAlt(t,27),this.state=560,this.match(e.REPLACE),this.state=561,this.partitionClause(),this.state=562,this.match(e.FROM),this.state=563,this.tableIdentifier();break;case 28:t=new Je(t),this.enterOuterAlt(t,28),this.state=565,this.match(e.UPDATE),this.state=566,this.assignmentExpressionList(),this.state=567,this.whereClause();break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}assignmentExpressionList(){let t=new Kt(this.context,this.state);this.enterRule(t,18,e.RULE_assignmentExpressionList);let r;try{for(this.enterOuterAlt(t,1),this.state=571,this.assignmentExpression(),this.state=576,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=572,this.match(e.COMMA),this.state=573,this.assignmentExpression(),this.state=578,this.errorHandler.sync(this),r=this.tokenStream.LA(1)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}assignmentExpression(){let t=new st(this.context,this.state);this.enterRule(t,20,e.RULE_assignmentExpression);try{this.enterOuterAlt(t,1),this.state=579,this.columnIdentifier(),this.state=580,this.match(e.EQ_SINGLE),this.state=581,this.columnExpression(0)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}tableColumnPropertyType(){let t=new Jt(this.context,this.state);this.enterRule(t,22,e.RULE_tableColumnPropertyType);let r;try{this.enterOuterAlt(t,1),this.state=583,r=this.tokenStream.LA(1),!(r&-32)&&1<<r&150994952||r===38||r===104||r===177?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}partitionClause(){let t=new x(this.context,this.state);this.enterRule(t,24,e.RULE_partitionClause);try{switch(this.state=590,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,44,this.context)){case 1:this.enterOuterAlt(t,1),this.state=585,this.match(e.PARTITION),this.state=586,this.columnExpression(0);break;case 2:this.enterOuterAlt(t,2),this.state=587,this.match(e.PARTITION),this.state=588,this.match(e.ID),this.state=589,this.match(e.STRING_LITERAL);break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}attachStatement(){let t=new nt(this.context,this.state);this.enterRule(t,26,e.RULE_attachStatement);let r;try{t=new R1(t),this.enterOuterAlt(t,1),this.state=592,this.match(e.ATTACH),this.state=593,this.match(e.DICTIONARY),this.state=594,this.tableIdentifier(),this.state=596,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=595,this.clusterClause())}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}checkStatement(){let t=new Qt(this.context,this.state);this.enterRule(t,28,e.RULE_checkStatement);let r;try{this.enterOuterAlt(t,1),this.state=598,this.match(e.CHECK),this.state=599,this.match(e.TABLE),this.state=600,this.tableIdentifier(),this.state=602,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===126&&(this.state=601,this.partitionClause())}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}deleteStatement(){let t=new jt(this.context,this.state);this.enterRule(t,30,e.RULE_deleteStatement);let r;try{this.enterOuterAlt(t,1),this.state=604,this.match(e.DELETE),this.state=605,this.match(e.FROM),this.state=606,this.tableIdentifier(),this.state=608,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=607,this.clusterClause()),this.state=611,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===191&&(this.state=610,this.whereClause())}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}createTableStatement(){let t=new Zt(this.context,this.state);this.enterRule(t,32,e.RULE_createTableStatement);let r;try{this.enterOuterAlt(t,1);{switch(this.state=620,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.ATTACH:this.state=613,this.match(e.ATTACH);break;case e.CREATE:this.state=614,this.match(e.CREATE),this.state=617,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===121&&(this.state=615,this.match(e.OR),this.state=616,this.match(e.REPLACE));break;case e.REPLACE:this.state=619,this.match(e.REPLACE);break;default:throw new n.NoViableAltException(this)}switch(this.state=623,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===164&&(this.state=622,this.match(e.TEMPORARY)),this.state=625,this.match(e.TABLE),this.state=629,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,52,this.context)){case 1:this.state=626,this.match(e.IF),this.state=627,this.match(e.NOT),this.state=628,this.match(e.EXISTS);break}switch(this.state=631,this.tableIdentifier(),this.state=633,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===184&&(this.state=632,this.uuidClause()),this.state=636,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=635,this.clusterClause()),this.state=639,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,55,this.context)){case 1:this.state=638,this.tableSchemaClause();break}this.state=642,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===53&&(this.state=641,this.engineClause()),this.state=645,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===10&&(this.state=644,this.subqueryClause())}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}createDatabaseStatement(){let t=new zt(this.context,this.state);this.enterRule(t,34,e.RULE_createDatabaseStatement);let r;try{this.enterOuterAlt(t,1);{switch(this.state=647,r=this.tokenStream.LA(1),r===15||r===29?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=648,this.match(e.DATABASE),this.state=652,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,58,this.context)){case 1:this.state=649,this.match(e.IF),this.state=650,this.match(e.NOT),this.state=651,this.match(e.EXISTS);break}this.state=654,this.identifier(),this.state=656,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=655,this.clusterClause()),this.state=658,this.engineExpression()}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}createDictionaryStatement(){let t=new qt(this.context,this.state);this.enterRule(t,36,e.RULE_createDictionaryStatement);let r;try{this.enterOuterAlt(t,1);{switch(this.state=667,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.ATTACH:this.state=660,this.match(e.ATTACH);break;case e.CREATE:this.state=661,this.match(e.CREATE),this.state=664,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===121&&(this.state=662,this.match(e.OR),this.state=663,this.match(e.REPLACE));break;case e.REPLACE:this.state=666,this.match(e.REPLACE);break;default:throw new n.NoViableAltException(this)}switch(this.state=669,this.match(e.DICTIONARY),this.state=673,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,62,this.context)){case 1:this.state=670,this.match(e.IF),this.state=671,this.match(e.NOT),this.state=672,this.match(e.EXISTS);break}this.state=675,this.tableIdentifier(),this.state=677,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===184&&(this.state=676,this.uuidClause()),this.state=680,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=679,this.clusterClause()),this.state=682,this.dictionarySchemaClause(),this.state=683,this.dictionaryEngineClause()}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}createLiveViewStatement(){let t=new $t(this.context,this.state);this.enterRule(t,38,e.RULE_createLiveViewStatement);let r;try{this.enterOuterAlt(t,1);{switch(this.state=685,r=this.tokenStream.LA(1),r===15||r===29?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=686,this.match(e.LIVE),this.state=687,this.match(e.VIEW),this.state=691,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,65,this.context)){case 1:this.state=688,this.match(e.IF),this.state=689,this.match(e.NOT),this.state=690,this.match(e.EXISTS);break}switch(this.state=693,this.tableIdentifier(),this.state=695,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===184&&(this.state=694,this.uuidClause()),this.state=698,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=697,this.clusterClause()),this.state=705,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===193&&(this.state=700,this.match(e.WITH),this.state=701,this.match(e.TIMEOUT),this.state=703,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===200&&(this.state=702,this.match(e.DECIMAL_LITERAL))),this.state=708,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===170&&(this.state=707,this.destinationClause()),this.state=711,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,71,this.context)){case 1:this.state=710,this.tableSchemaClause();break}this.state=713,this.subqueryClause()}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}createMaterializedViewStatement(){let t=new _t(this.context,this.state);this.enterRule(t,40,e.RULE_createMaterializedViewStatement);let r;try{this.enterOuterAlt(t,1);{switch(this.state=715,r=this.tokenStream.LA(1),r===15||r===29?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=716,this.match(e.MATERIALIZED),this.state=717,this.match(e.VIEW),this.state=721,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,72,this.context)){case 1:this.state=718,this.match(e.IF),this.state=719,this.match(e.NOT),this.state=720,this.match(e.EXISTS);break}switch(this.state=723,this.tableIdentifier(),this.state=725,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===184&&(this.state=724,this.uuidClause()),this.state=728,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=727,this.clusterClause()),this.state=731,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===10||r===219)&&(this.state=730,this.tableSchemaClause()),this.state=738,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.TO:this.state=733,this.destinationClause();break;case e.ENGINE:this.state=734,this.engineClause(),this.state=736,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===129&&(this.state=735,this.match(e.POPULATE));break;default:throw new n.NoViableAltException(this)}this.state=740,this.subqueryClause()}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}createViewStatement(){let t=new te(this.context,this.state);this.enterRule(t,42,e.RULE_createViewStatement);let r;try{this.enterOuterAlt(t,1);{switch(this.state=742,r=this.tokenStream.LA(1),r===15||r===29?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=745,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===121&&(this.state=743,this.match(e.OR),this.state=744,this.match(e.REPLACE)),this.state=747,this.match(e.VIEW),this.state=751,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,79,this.context)){case 1:this.state=748,this.match(e.IF),this.state=749,this.match(e.NOT),this.state=750,this.match(e.EXISTS);break}switch(this.state=753,this.tableIdentifier(),this.state=755,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===184&&(this.state=754,this.uuidClause()),this.state=758,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=757,this.clusterClause()),this.state=761,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,82,this.context)){case 1:this.state=760,this.tableSchemaClause();break}this.state=763,this.subqueryClause()}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}createStatement(){let t=new ee(this.context,this.state);this.enterRule(t,44,e.RULE_createStatement);try{switch(this.state=771,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,83,this.context)){case 1:this.enterOuterAlt(t,1),this.state=765,this.createDatabaseStatement();break;case 2:this.enterOuterAlt(t,2),this.state=766,this.createDictionaryStatement();break;case 3:this.enterOuterAlt(t,3),this.state=767,this.createLiveViewStatement();break;case 4:this.enterOuterAlt(t,4),this.state=768,this.createMaterializedViewStatement();break;case 5:this.enterOuterAlt(t,5),this.state=769,this.createTableStatement();break;case 6:this.enterOuterAlt(t,6),this.state=770,this.createViewStatement();break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}dictionarySchemaClause(){let t=new re(this.context,this.state);this.enterRule(t,46,e.RULE_dictionarySchemaClause);let r;try{this.enterOuterAlt(t,1);{for(this.state=773,this.match(e.LPAREN),this.state=774,this.dictionaryAttributeDefinition(),this.state=779,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=775,this.match(e.COMMA),this.state=776,this.dictionaryAttributeDefinition(),this.state=781,this.errorHandler.sync(this),r=this.tokenStream.LA(1);this.state=782,this.match(e.RPAREN)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}dictionaryAttributeDefinition(){let t=new lt(this.context,this.state);this.enterRule(t,48,e.RULE_dictionaryAttributeDefinition);try{let r;for(this.enterOuterAlt(t,1),this.state=784,this.identifier(),this.state=785,this.columnTypeExpression(),this.state=807,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,86,this.context);r!==2&&r!==n.ATN.INVALID_ALT_NUMBER;){if(r===1)switch(this.state=805,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,85,this.context)){case 1:{if(this.state=786,t.attrs.has("default"))throw this.createFailedPredicateException('!$attrs.has("default")');this.state=787,this.match(e.DEFAULT),this.state=788,this.literal(),t.attrs.add("default")}break;case 2:{if(this.state=791,t.attrs.has("expression"))throw this.createFailedPredicateException('!$attrs.has("expression")');this.state=792,this.match(e.EXPRESSION),this.state=793,this.columnExpression(0),t.attrs.add("expression")}break;case 3:{if(this.state=796,t.attrs.has("hierarchical"))throw this.createFailedPredicateException('!$attrs.has("hierarchical")');this.state=797,this.match(e.HIERARCHICAL),t.attrs.add("hierarchical")}break;case 4:{if(this.state=799,t.attrs.has("injective"))throw this.createFailedPredicateException('!$attrs.has("injective")');this.state=800,this.match(e.INJECTIVE),t.attrs.add("injective")}break;case 5:{if(this.state=802,t.attrs.has("is_object_id"))throw this.createFailedPredicateException('!$attrs.has("is_object_id")');this.state=803,this.match(e.IS_OBJECT_ID),t.attrs.add("is_object_id")}break}this.state=809,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,86,this.context)}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}dictionaryEngineClause(){let t=new ie(this.context,this.state);this.enterRule(t,50,e.RULE_dictionaryEngineClause);try{let r;this.enterOuterAlt(t,1);{switch(this.state=811,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,87,this.context)){case 1:this.state=810,this.dictionaryPrimaryKeyClause();break}for(this.state=835,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,89,this.context);r!==2&&r!==n.ATN.INVALID_ALT_NUMBER;){if(r===1)switch(this.state=833,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,88,this.context)){case 1:{if(this.state=813,t.clauses.has("source"))throw this.createFailedPredicateException('!$clauses.has("source")');this.state=814,this.sourceClause(),t.clauses.add("source")}break;case 2:{if(this.state=817,t.clauses.has("lifetime"))throw this.createFailedPredicateException('!$clauses.has("lifetime")');this.state=818,this.lifetimeClause(),t.clauses.add("lifetime")}break;case 3:{if(this.state=821,t.clauses.has("layout"))throw this.createFailedPredicateException('!$clauses.has("layout")');this.state=822,this.layoutClause(),t.clauses.add("layout")}break;case 4:{if(this.state=825,t.clauses.has("range"))throw this.createFailedPredicateException('!$clauses.has("range")');this.state=826,this.rangeClause(),t.clauses.add("range")}break;case 5:{if(this.state=829,t.clauses.has("settings"))throw this.createFailedPredicateException('!$clauses.has("settings")');this.state=830,this.dictionarySettingsClause(),t.clauses.add("settings")}break}this.state=837,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,89,this.context)}}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}dictionaryPrimaryKeyClause(){let t=new se(this.context,this.state);this.enterRule(t,52,e.RULE_dictionaryPrimaryKeyClause);try{this.enterOuterAlt(t,1),this.state=838,this.match(e.PRIMARY),this.state=839,this.match(e.KEY),this.state=840,this.columnExpressionList()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}dictionaryArgumentExpression(){let t=new B(this.context,this.state);this.enterRule(t,54,e.RULE_dictionaryArgumentExpression);let r;try{switch(this.enterOuterAlt(t,1),this.state=842,this.identifier(),this.state=849,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.AFTER:case e.ALIAS:case e.ALL:case e.ALTER:case e.AND:case e.ANTI:case e.ANY:case e.ARRAY:case e.AS:case e.ASCENDING:case e.ASOF:case e.AST:case e.ASYNC:case e.ATTACH:case e.BETWEEN:case e.BOTH:case e.BY:case e.CASE:case e.CAST:case e.CHECK:case e.CLEAR:case e.CLUSTER:case e.CODEC:case e.COLLATE:case e.COLUMN:case e.COMMENT:case e.CONSTRAINT:case e.CREATE:case e.CROSS:case e.CUBE:case e.CURRENT:case e.DATABASE:case e.DATABASES:case e.DATE:case e.DAY:case e.DEDUPLICATE:case e.DEFAULT:case e.DELAY:case e.DELETE:case e.DESC:case e.DESCENDING:case e.DESCRIBE:case e.DETACH:case e.DICTIONARIES:case e.DICTIONARY:case e.DISK:case e.DISTINCT:case e.DISTRIBUTED:case e.DROP:case e.ELSE:case e.END:case e.ENGINE:case e.EVENTS:case e.EXISTS:case e.EXPLAIN:case e.EXPRESSION:case e.EXTRACT:case e.FETCHES:case e.FINAL:case e.FIRST:case e.FLUSH:case e.FOLLOWING:case e.FOR:case e.FORMAT:case e.FREEZE:case e.FROM:case e.FULL:case e.FUNCTION:case e.GLOBAL:case e.GRANULARITY:case e.GROUP:case e.HAVING:case e.HIERARCHICAL:case e.HOUR:case e.ID:case e.IF:case e.ILIKE:case e.IN:case e.INDEX:case e.INJECTIVE:case e.INNER:case e.INSERT:case e.INTERVAL:case e.INTO:case e.IS:case e.IS_OBJECT_ID:case e.JOIN:case e.KEY:case e.KILL:case e.LAST:case e.LAYOUT:case e.LEADING:case e.LEFT:case e.LIFETIME:case e.LIKE:case e.LIMIT:case e.LIVE:case e.LOCAL:case e.LOGS:case e.MATERIALIZE:case e.MATERIALIZED:case e.MAX:case e.MERGES:case e.MIN:case e.MINUTE:case e.MODIFY:case e.MONTH:case e.MOVE:case e.MUTATION:case e.NO:case e.NOT:case e.NULLS:case e.OFFSET:case e.ON:case e.OPTIMIZE:case e.OR:case e.ORDER:case e.OUTER:case e.OUTFILE:case e.OVER:case e.PARTITION:case e.POPULATE:case e.PRECEDING:case e.PREWHERE:case e.PRIMARY:case e.QUARTER:case e.RANGE:case e.RELOAD:case e.REMOVE:case e.RENAME:case e.REPLACE:case e.REPLICA:case e.REPLICATED:case e.RIGHT:case e.ROLLUP:case e.ROW:case e.ROWS:case e.SAMPLE:case e.SECOND:case e.SELECT:case e.SEMI:case e.SENDS:case e.SET:case e.SETTINGS:case e.SHOW:case e.SOURCE:case e.START:case e.STOP:case e.SUBSTRING:case e.SYNC:case e.SYNTAX:case e.SYSTEM:case e.TABLE:case e.TABLES:case e.TEMPORARY:case e.TEST:case e.THEN:case e.TIES:case e.TIMEOUT:case e.TIMESTAMP:case e.TO:case e.TOP:case e.TOTALS:case e.TRAILING:case e.TRIM:case e.TRUNCATE:case e.TTL:case e.TYPE:case e.UNBOUNDED:case e.UNION:case e.UPDATE:case e.USE:case e.USING:case e.UUID:case e.VALUES:case e.VIEW:case e.VOLUME:case e.WATCH:case e.WEEK:case e.WHEN:case e.WHERE:case e.WINDOW:case e.WITH:case e.YEAR:case e.JSON_FALSE:case e.JSON_TRUE:case e.IDENTIFIER:this.state=843,this.identifier(),this.state=846,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===219&&(this.state=844,this.match(e.LPAREN),this.state=845,this.match(e.RPAREN));break;case e.INF:case e.NAN_SQL:case e.NULL_SQL:case e.FLOATING_LITERAL:case e.OCTAL_LITERAL:case e.DECIMAL_LITERAL:case e.HEXADECIMAL_LITERAL:case e.STRING_LITERAL:case e.DASH:case e.DOT:case e.PLUS:this.state=848,this.literal();break;default:throw new n.NoViableAltException(this)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}sourceClause(){let t=new at(this.context,this.state);this.enterRule(t,56,e.RULE_sourceClause);let r;try{this.enterOuterAlt(t,1);{for(this.state=851,this.match(e.SOURCE),this.state=852,this.match(e.LPAREN),this.state=853,this.identifier(),this.state=854,this.match(e.LPAREN),this.state=858,this.errorHandler.sync(this),r=this.tokenStream.LA(1);!(r&-32)&&1<<r&4294967292||!(r-32&-32)&&1<<r-32&4290772991||!(r-64&-32)&&1<<r-64&4294705151||!(r-96&-32)&&1<<r-96&2146303999||!(r-129&-32)&&1<<r-129&4294967215||!(r-161&-32)&&1<<r-161&4294950911||!(r-193&-32)&&1<<r-193&31;)this.state=855,this.dictionaryArgumentExpression(),this.state=860,this.errorHandler.sync(this),r=this.tokenStream.LA(1);this.state=861,this.match(e.RPAREN),this.state=862,this.match(e.RPAREN)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}lifetimeClause(){let t=new ut(this.context,this.state);this.enterRule(t,58,e.RULE_lifetimeClause);try{this.enterOuterAlt(t,1);{switch(this.state=864,this.match(e.LIFETIME),this.state=865,this.match(e.LPAREN),this.state=875,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.DECIMAL_LITERAL:this.state=866,this.match(e.DECIMAL_LITERAL);break;case e.MIN:this.state=867,this.match(e.MIN),this.state=868,this.match(e.DECIMAL_LITERAL),this.state=869,this.match(e.MAX),this.state=870,this.match(e.DECIMAL_LITERAL);break;case e.MAX:this.state=871,this.match(e.MAX),this.state=872,this.match(e.DECIMAL_LITERAL),this.state=873,this.match(e.MIN),this.state=874,this.match(e.DECIMAL_LITERAL);break;default:throw new n.NoViableAltException(this)}this.state=877,this.match(e.RPAREN)}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}layoutClause(){let t=new ot(this.context,this.state);this.enterRule(t,60,e.RULE_layoutClause);let r;try{this.enterOuterAlt(t,1);{for(this.state=879,this.match(e.LAYOUT),this.state=880,this.match(e.LPAREN),this.state=881,this.identifier(),this.state=882,this.match(e.LPAREN),this.state=886,this.errorHandler.sync(this),r=this.tokenStream.LA(1);!(r&-32)&&1<<r&4294967292||!(r-32&-32)&&1<<r-32&4290772991||!(r-64&-32)&&1<<r-64&4294705151||!(r-96&-32)&&1<<r-96&2146303999||!(r-129&-32)&&1<<r-129&4294967215||!(r-161&-32)&&1<<r-161&4294950911||!(r-193&-32)&&1<<r-193&31;)this.state=883,this.dictionaryArgumentExpression(),this.state=888,this.errorHandler.sync(this),r=this.tokenStream.LA(1);this.state=889,this.match(e.RPAREN),this.state=890,this.match(e.RPAREN)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}rangeClause(){let t=new ct(this.context,this.state);this.enterRule(t,62,e.RULE_rangeClause);try{this.enterOuterAlt(t,1);{switch(this.state=892,this.match(e.RANGE),this.state=893,this.match(e.LPAREN),this.state=904,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.MIN:this.state=894,this.match(e.MIN),this.state=895,this.identifier(),this.state=896,this.match(e.MAX),this.state=897,this.identifier();break;case e.MAX:this.state=899,this.match(e.MAX),this.state=900,this.identifier(),this.state=901,this.match(e.MIN),this.state=902,this.identifier();break;default:throw new n.NoViableAltException(this)}this.state=906,this.match(e.RPAREN)}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}dictionarySettingsClause(){let t=new ht(this.context,this.state);this.enterRule(t,64,e.RULE_dictionarySettingsClause);try{this.enterOuterAlt(t,1),this.state=908,this.match(e.SETTINGS),this.state=909,this.match(e.LPAREN),this.state=910,this.settingExpressionList(),this.state=911,this.match(e.RPAREN)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}clusterClause(){let t=new R(this.context,this.state);this.enterRule(t,66,e.RULE_clusterClause);try{switch(this.enterOuterAlt(t,1),this.state=913,this.match(e.ON),this.state=914,this.match(e.CLUSTER),this.state=917,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.AFTER:case e.ALIAS:case e.ALL:case e.ALTER:case e.AND:case e.ANTI:case e.ANY:case e.ARRAY:case e.AS:case e.ASCENDING:case e.ASOF:case e.AST:case e.ASYNC:case e.ATTACH:case e.BETWEEN:case e.BOTH:case e.BY:case e.CASE:case e.CAST:case e.CHECK:case e.CLEAR:case e.CLUSTER:case e.CODEC:case e.COLLATE:case e.COLUMN:case e.COMMENT:case e.CONSTRAINT:case e.CREATE:case e.CROSS:case e.CUBE:case e.CURRENT:case e.DATABASE:case e.DATABASES:case e.DATE:case e.DAY:case e.DEDUPLICATE:case e.DEFAULT:case e.DELAY:case e.DELETE:case e.DESC:case e.DESCENDING:case e.DESCRIBE:case e.DETACH:case e.DICTIONARIES:case e.DICTIONARY:case e.DISK:case e.DISTINCT:case e.DISTRIBUTED:case e.DROP:case e.ELSE:case e.END:case e.ENGINE:case e.EVENTS:case e.EXISTS:case e.EXPLAIN:case e.EXPRESSION:case e.EXTRACT:case e.FETCHES:case e.FINAL:case e.FIRST:case e.FLUSH:case e.FOLLOWING:case e.FOR:case e.FORMAT:case e.FREEZE:case e.FROM:case e.FULL:case e.FUNCTION:case e.GLOBAL:case e.GRANULARITY:case e.GROUP:case e.HAVING:case e.HIERARCHICAL:case e.HOUR:case e.ID:case e.IF:case e.ILIKE:case e.IN:case e.INDEX:case e.INJECTIVE:case e.INNER:case e.INSERT:case e.INTERVAL:case e.INTO:case e.IS:case e.IS_OBJECT_ID:case e.JOIN:case e.KEY:case e.KILL:case e.LAST:case e.LAYOUT:case e.LEADING:case e.LEFT:case e.LIFETIME:case e.LIKE:case e.LIMIT:case e.LIVE:case e.LOCAL:case e.LOGS:case e.MATERIALIZE:case e.MATERIALIZED:case e.MAX:case e.MERGES:case e.MIN:case e.MINUTE:case e.MODIFY:case e.MONTH:case e.MOVE:case e.MUTATION:case e.NO:case e.NOT:case e.NULLS:case e.OFFSET:case e.ON:case e.OPTIMIZE:case e.OR:case e.ORDER:case e.OUTER:case e.OUTFILE:case e.OVER:case e.PARTITION:case e.POPULATE:case e.PRECEDING:case e.PREWHERE:case e.PRIMARY:case e.QUARTER:case e.RANGE:case e.RELOAD:case e.REMOVE:case e.RENAME:case e.REPLACE:case e.REPLICA:case e.REPLICATED:case e.RIGHT:case e.ROLLUP:case e.ROW:case e.ROWS:case e.SAMPLE:case e.SECOND:case e.SELECT:case e.SEMI:case e.SENDS:case e.SET:case e.SETTINGS:case e.SHOW:case e.SOURCE:case e.START:case e.STOP:case e.SUBSTRING:case e.SYNC:case e.SYNTAX:case e.SYSTEM:case e.TABLE:case e.TABLES:case e.TEMPORARY:case e.TEST:case e.THEN:case e.TIES:case e.TIMEOUT:case e.TIMESTAMP:case e.TO:case e.TOP:case e.TOTALS:case e.TRAILING:case e.TRIM:case e.TRUNCATE:case e.TTL:case e.TYPE:case e.UNBOUNDED:case e.UNION:case e.UPDATE:case e.USE:case e.USING:case e.UUID:case e.VALUES:case e.VIEW:case e.VOLUME:case e.WATCH:case e.WEEK:case e.WHEN:case e.WHERE:case e.WINDOW:case e.WITH:case e.YEAR:case e.JSON_FALSE:case e.JSON_TRUE:case e.IDENTIFIER:this.state=915,this.identifier();break;case e.STRING_LITERAL:this.state=916,this.match(e.STRING_LITERAL);break;default:throw new n.NoViableAltException(this)}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}uuidClause(){let t=new D(this.context,this.state);this.enterRule(t,68,e.RULE_uuidClause);try{this.enterOuterAlt(t,1),this.state=919,this.match(e.UUID),this.state=920,this.match(e.STRING_LITERAL)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}destinationClause(){let t=new pt(this.context,this.state);this.enterRule(t,70,e.RULE_destinationClause);try{this.enterOuterAlt(t,1),this.state=922,this.match(e.TO),this.state=923,this.tableIdentifier()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}subqueryClause(){let t=new V(this.context,this.state);this.enterRule(t,72,e.RULE_subqueryClause);try{this.enterOuterAlt(t,1),this.state=925,this.match(e.AS),this.state=926,this.selectUnionStatement()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}tableSchemaClause(){let t=new O(this.context,this.state);this.enterRule(t,74,e.RULE_tableSchemaClause);let r;try{switch(this.state=943,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,98,this.context)){case 1:t=new A1(t),this.enterOuterAlt(t,1);{for(this.state=928,this.match(e.LPAREN),this.state=929,this.tableElementExpression(),this.state=934,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=930,this.match(e.COMMA),this.state=931,this.tableElementExpression(),this.state=936,this.errorHandler.sync(this),r=this.tokenStream.LA(1);this.state=937,this.match(e.RPAREN)}break;case 2:t=new b1(t),this.enterOuterAlt(t,2),this.state=939,this.match(e.AS),this.state=940,this.tableIdentifier();break;case 3:t=new x1(t),this.enterOuterAlt(t,3),this.state=941,this.match(e.AS),this.state=942,this.tableFunctionExpression();break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}engineClause(){let t=new Et(this.context,this.state);this.enterRule(t,76,e.RULE_engineClause);try{let r;for(this.enterOuterAlt(t,1),this.state=945,this.engineExpression(),this.state=972,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,100,this.context);r!==2&&r!==n.ATN.INVALID_ALT_NUMBER;){if(r===1)switch(this.state=970,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,99,this.context)){case 1:{if(this.state=946,t.clauses.has("orderByClause"))throw this.createFailedPredicateException('!$clauses.has("orderByClause")');this.state=947,this.orderByClause(),t.clauses.add("orderByClause")}break;case 2:{if(this.state=950,t.clauses.has("partitionByClause"))throw this.createFailedPredicateException('!$clauses.has("partitionByClause")');this.state=951,this.partitionByClause(),t.clauses.add("partitionByClause")}break;case 3:{if(this.state=954,t.clauses.has("primaryKeyClause"))throw this.createFailedPredicateException('!$clauses.has("primaryKeyClause")');this.state=955,this.primaryKeyClause(),t.clauses.add("primaryKeyClause")}break;case 4:{if(this.state=958,t.clauses.has("sampleByClause"))throw this.createFailedPredicateException('!$clauses.has("sampleByClause")');this.state=959,this.sampleByClause(),t.clauses.add("sampleByClause")}break;case 5:{if(this.state=962,t.clauses.has("ttlClause"))throw this.createFailedPredicateException('!$clauses.has("ttlClause")');this.state=963,this.ttlClause(),t.clauses.add("ttlClause")}break;case 6:{if(this.state=966,t.clauses.has("settingsClause"))throw this.createFailedPredicateException('!$clauses.has("settingsClause")');this.state=967,this.settingsClause(),t.clauses.add("settingsClause")}break}this.state=974,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,100,this.context)}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}partitionByClause(){let t=new mt(this.context,this.state);this.enterRule(t,78,e.RULE_partitionByClause);try{this.enterOuterAlt(t,1),this.state=975,this.match(e.PARTITION),this.state=976,this.match(e.BY),this.state=977,this.columnExpression(0)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}primaryKeyClause(){let t=new Ct(this.context,this.state);this.enterRule(t,80,e.RULE_primaryKeyClause);try{this.enterOuterAlt(t,1),this.state=979,this.match(e.PRIMARY),this.state=980,this.match(e.KEY),this.state=981,this.columnExpression(0)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}sampleByClause(){let t=new dt(this.context,this.state);this.enterRule(t,82,e.RULE_sampleByClause);try{this.enterOuterAlt(t,1),this.state=983,this.match(e.SAMPLE),this.state=984,this.match(e.BY),this.state=985,this.columnExpression(0)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}ttlClause(){let t=new X(this.context,this.state);this.enterRule(t,84,e.RULE_ttlClause);try{let r;for(this.enterOuterAlt(t,1),this.state=987,this.match(e.TTL),this.state=988,this.ttlExpression(),this.state=993,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,101,this.context);r!==2&&r!==n.ATN.INVALID_ALT_NUMBER;)r===1&&(this.state=989,this.match(e.COMMA),this.state=990,this.ttlExpression()),this.state=995,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,101,this.context)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}engineExpression(){let t=new Tt(this.context,this.state);this.enterRule(t,86,e.RULE_engineExpression);let r;try{switch(this.enterOuterAlt(t,1),this.state=996,this.match(e.ENGINE),this.state=998,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===213&&(this.state=997,this.match(e.EQ_SINGLE)),this.state=1e3,this.identifierOrNull(),this.state=1006,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,104,this.context)){case 1:this.state=1001,this.match(e.LPAREN),this.state=1003,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(!(r&-32)&&1<<r&4294967292||!(r-32&-32)&&1<<r-32&4290772991||!(r-64&-32)&&1<<r-64&4294967295||!(r-96&-32)&&1<<r-96&2147483647||!(r-129&-32)&&1<<r-129&4294967215||!(r-161&-32)&&1<<r-161&4294950911||!(r-193&-32)&&1<<r-193&1158024191)&&(this.state=1002,this.columnExpressionList()),this.state=1005,this.match(e.RPAREN);break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}tableElementExpression(){let t=new H(this.context,this.state);this.enterRule(t,88,e.RULE_tableElementExpression);try{switch(this.state=1018,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,105,this.context)){case 1:t=new N1(t),this.enterOuterAlt(t,1),this.state=1008,this.tableColumnDefinition();break;case 2:t=new S1(t),this.enterOuterAlt(t,2),this.state=1009,this.match(e.CONSTRAINT),this.state=1010,this.identifier(),this.state=1011,this.match(e.CHECK),this.state=1012,this.columnExpression(0);break;case 3:t=new L1(t),this.enterOuterAlt(t,3),this.state=1014,this.match(e.INDEX),this.state=1015,this.tableIndexDefinition();break;case 4:t=new I1(t),this.enterOuterAlt(t,4),this.state=1016,this.match(e.PROJECTION),this.state=1017,this.tableProjectionDefinition();break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}tableColumnDefinition(){let t=new K(this.context,this.state);this.enterRule(t,90,e.RULE_tableColumnDefinition);let r;try{switch(this.state=1052,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,114,this.context)){case 1:this.enterOuterAlt(t,1),this.state=1020,this.columnIdentifier(),this.state=1021,this.columnTypeExpression(),this.state=1023,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===3||r===38||r===104)&&(this.state=1022,this.tableColumnPropertyExpression()),this.state=1027,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===27&&(this.state=1025,this.match(e.COMMENT),this.state=1026,this.match(e.STRING_LITERAL)),this.state=1030,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===24&&(this.state=1029,this.codecExpression()),this.state=1034,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===177&&(this.state=1032,this.match(e.TTL),this.state=1033,this.columnExpression(0));break;case 2:this.enterOuterAlt(t,2);{switch(this.state=1036,this.columnIdentifier(),this.state=1038,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,110,this.context)){case 1:this.state=1037,this.columnTypeExpression();break}this.state=1040,this.tableColumnPropertyExpression(),this.state=1043,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===27&&(this.state=1041,this.match(e.COMMENT),this.state=1042,this.match(e.STRING_LITERAL)),this.state=1046,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===24&&(this.state=1045,this.codecExpression()),this.state=1050,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===177&&(this.state=1048,this.match(e.TTL),this.state=1049,this.columnExpression(0))}break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}tableColumnPropertyExpression(){let t=new ne(this.context,this.state);this.enterRule(t,92,e.RULE_tableColumnPropertyExpression);let r;try{this.enterOuterAlt(t,1),this.state=1054,r=this.tokenStream.LA(1),r===3||r===38||r===104?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1055,this.columnExpression(0)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}tableIndexDefinition(){let t=new Rt(this.context,this.state);this.enterRule(t,94,e.RULE_tableIndexDefinition);try{this.enterOuterAlt(t,1),this.state=1057,this.columnIdentifier(),this.state=1058,this.columnExpression(0),this.state=1059,this.match(e.TYPE),this.state=1060,this.columnTypeExpression(),this.state=1061,this.match(e.GRANULARITY),this.state=1062,this.match(e.DECIMAL_LITERAL)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}tableProjectionDefinition(){let t=new bt(this.context,this.state);this.enterRule(t,96,e.RULE_tableProjectionDefinition);try{this.enterOuterAlt(t,1),this.state=1064,this.columnIdentifier(),this.state=1065,this.projectionSelectStatement()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}codecExpression(){let t=new xt(this.context,this.state);this.enterRule(t,98,e.RULE_codecExpression);let r;try{this.enterOuterAlt(t,1);{for(this.state=1067,this.match(e.CODEC),this.state=1068,this.match(e.LPAREN),this.state=1069,this.codecArgExpression(),this.state=1074,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=1070,this.match(e.COMMA),this.state=1071,this.codecArgExpression(),this.state=1076,this.errorHandler.sync(this),r=this.tokenStream.LA(1);this.state=1077,this.match(e.RPAREN)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}codecArgExpression(){let t=new At(this.context,this.state);this.enterRule(t,100,e.RULE_codecArgExpression);let r;try{this.enterOuterAlt(t,1),this.state=1079,this.identifier(),this.state=1085,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===219&&(this.state=1080,this.match(e.LPAREN),this.state=1082,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(!(r&-32)&&1<<r&4294967292||!(r-32&-32)&&1<<r-32&4290772991||!(r-64&-32)&&1<<r-64&4294967295||!(r-96&-32)&&1<<r-96&2147483647||!(r-129&-32)&&1<<r-129&4294967215||!(r-161&-32)&&1<<r-161&4294950911||!(r-193&-32)&&1<<r-193&1158024191)&&(this.state=1081,this.columnExpressionList()),this.state=1084,this.match(e.RPAREN))}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}ttlExpression(){let t=new Nt(this.context,this.state);this.enterRule(t,102,e.RULE_ttlExpression);try{switch(this.enterOuterAlt(t,1),this.state=1087,this.columnExpression(0),this.state=1095,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,118,this.context)){case 1:this.state=1088,this.match(e.DELETE);break;case 2:this.state=1089,this.match(e.TO),this.state=1090,this.match(e.DISK),this.state=1091,this.match(e.STRING_LITERAL);break;case 3:this.state=1092,this.match(e.TO),this.state=1093,this.match(e.VOLUME),this.state=1094,this.match(e.STRING_LITERAL);break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}describeStatement(){let t=new le(this.context,this.state);this.enterRule(t,104,e.RULE_describeStatement);let r;try{this.enterOuterAlt(t,1);{switch(this.state=1097,r=this.tokenStream.LA(1),r===41||r===43?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1099,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,119,this.context)){case 1:this.state=1098,this.match(e.TABLE);break}this.state=1101,this.tableExpression(0)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}dropStatement(){let t=new J(this.context,this.state);this.enterRule(t,106,e.RULE_dropStatement);let r;try{switch(this.state=1134,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,127,this.context)){case 1:t=new g1(t),this.enterOuterAlt(t,1);{switch(this.state=1103,r=this.tokenStream.LA(1),r===44||r===50?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1104,this.match(e.DATABASE),this.state=1107,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,120,this.context)){case 1:this.state=1105,this.match(e.IF),this.state=1106,this.match(e.EXISTS);break}this.state=1109,this.databaseIdentifier(),this.state=1111,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=1110,this.clusterClause())}break;case 2:t=new y1(t),this.enterOuterAlt(t,2);{switch(this.state=1113,r=this.tokenStream.LA(1),r===44||r===50?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1120,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.DICTIONARY:this.state=1114,this.match(e.DICTIONARY);break;case e.TABLE:case e.TEMPORARY:this.state=1116,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===164&&(this.state=1115,this.match(e.TEMPORARY)),this.state=1118,this.match(e.TABLE);break;case e.VIEW:this.state=1119,this.match(e.VIEW);break;default:throw new n.NoViableAltException(this)}switch(this.state=1124,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,124,this.context)){case 1:this.state=1122,this.match(e.IF),this.state=1123,this.match(e.EXISTS);break}this.state=1126,this.tableIdentifier(),this.state=1128,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=1127,this.clusterClause()),this.state=1132,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===114&&(this.state=1130,this.match(e.NO),this.state=1131,this.match(e.DELAY))}break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}existsStatement(){let t=new Q(this.context,this.state);this.enterRule(t,108,e.RULE_existsStatement);let r;try{switch(this.state=1149,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,130,this.context)){case 1:t=new O1(t),this.enterOuterAlt(t,1),this.state=1136,this.match(e.EXISTS),this.state=1137,this.match(e.DATABASE),this.state=1138,this.databaseIdentifier();break;case 2:t=new k1(t),this.enterOuterAlt(t,2);{switch(this.state=1139,this.match(e.EXISTS),this.state=1146,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,129,this.context)){case 1:this.state=1140,this.match(e.DICTIONARY);break;case 2:this.state=1142,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===164&&(this.state=1141,this.match(e.TEMPORARY)),this.state=1144,this.match(e.TABLE);break;case 3:this.state=1145,this.match(e.VIEW);break}this.state=1148,this.tableIdentifier()}break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}explainStatement(){let t=new I(this.context,this.state);this.enterRule(t,110,e.RULE_explainStatement);try{switch(this.state=1172,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,131,this.context)){case 1:t=new H1(t),this.enterOuterAlt(t,1),this.state=1151,this.match(e.EXPLAIN),this.state=1152,this.notInsertStatement();break;case 2:t=new f1(t),this.enterOuterAlt(t,2),this.state=1153,this.match(e.EXPLAIN),this.state=1154,this.match(e.AST),this.state=1155,this.notInsertStatement();break;case 3:t=new U1(t),this.enterOuterAlt(t,3),this.state=1156,this.match(e.EXPLAIN),this.state=1157,this.match(e.SYNTAX),this.state=1158,this.notInsertStatement();break;case 4:t=new M1(t),this.enterOuterAlt(t,4),this.state=1159,this.match(e.EXPLAIN),this.state=1160,this.match(e.PIPELINE),this.state=1161,this.notInsertStatement();break;case 5:t=new v1(t),this.enterOuterAlt(t,5),this.state=1162,this.match(e.EXPLAIN),this.state=1163,this.match(e.PLAN),this.state=1164,this.notInsertStatement();break;case 6:t=new P1(t),this.enterOuterAlt(t,6),this.state=1165,this.match(e.EXPLAIN),this.state=1166,this.match(e.QUERY),this.state=1167,this.match(e.TREE),this.state=1168,this.notInsertStatement();break;case 7:t=new D1(t),this.enterOuterAlt(t,7),this.state=1169,this.match(e.EXPLAIN),this.state=1170,this.match(e.ESTIMATE),this.state=1171,this.notInsertStatement();break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}insertStatement(){let t=new ae(this.context,this.state);this.enterRule(t,112,e.RULE_insertStatement);try{this.enterOuterAlt(t,1);{switch(this.state=1174,this.match(e.INSERT),this.state=1175,this.match(e.INTO),this.state=1177,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,132,this.context)){case 1:this.state=1176,this.match(e.TABLE);break}switch(this.state=1182,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,133,this.context)){case 1:this.state=1179,this.tableIdentifier();break;case 2:this.state=1180,this.match(e.FUNCTION),this.state=1181,this.tableFunctionExpression();break}switch(this.state=1185,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,134,this.context)){case 1:this.state=1184,this.columnsClause();break}this.state=1187,this.dataClause()}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}columnsClause(){let t=new ue(this.context,this.state);this.enterRule(t,114,e.RULE_columnsClause);let r;try{this.enterOuterAlt(t,1);{for(this.state=1189,this.match(e.LPAREN),this.state=1190,this.columnIdentifier(),this.state=1195,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=1191,this.match(e.COMMA),this.state=1192,this.columnIdentifier(),this.state=1197,this.errorHandler.sync(this),r=this.tokenStream.LA(1);this.state=1198,this.match(e.RPAREN)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}dataClause(){let t=new G(this.context,this.state);this.enterRule(t,116,e.RULE_dataClause);let r;try{switch(this.state=1209,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.FORMAT:t=new w1(t),this.enterOuterAlt(t,1),this.state=1200,this.match(e.FORMAT),this.state=1201,this.identifier();break;case e.VALUES:t=new F1(t),this.enterOuterAlt(t,2),this.state=1202,this.valuesStatement();break;case e.SELECT:case e.WITH:case e.LPAREN:t=new B1(t),this.enterOuterAlt(t,3),this.state=1203,this.selectUnionStatement(),this.state=1205,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===230&&(this.state=1204,this.match(e.SEMICOLON)),this.state=1207,this.match(e.EOF);break;default:throw new n.NoViableAltException(this)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}valuesStatement(){let t=new oe(this.context,this.state);this.enterRule(t,118,e.RULE_valuesStatement);let r;try{for(this.enterOuterAlt(t,1),this.state=1211,this.match(e.VALUES),this.state=1212,this.match(e.LPAREN),this.state=1214,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===82||r===113||r===116||!(r-198&-32)&&1<<r-198&33566751)&&(this.state=1213,this.literal()),this.state=1216,this.match(e.RPAREN),this.state=1225,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=1217,this.match(e.COMMA),this.state=1218,this.match(e.LPAREN),this.state=1220,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===82||r===113||r===116||!(r-198&-32)&&1<<r-198&33566751)&&(this.state=1219,this.literal()),this.state=1222,this.match(e.RPAREN),this.state=1227,this.errorHandler.sync(this),r=this.tokenStream.LA(1)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}killStatement(){let t=new St(this.context,this.state);this.enterRule(t,120,e.RULE_killStatement);let r;try{t=new V1(t),this.enterOuterAlt(t,1),this.state=1228,this.match(e.KILL),this.state=1229,this.match(e.MUTATION),this.state=1231,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=1230,this.clusterClause()),this.state=1233,this.whereClause(),this.state=1235,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===14||r===159||r===165)&&(this.state=1234,r=this.tokenStream.LA(1),r===14||r===159||r===165?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this))}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}optimizeStatement(){let t=new ce(this.context,this.state);this.enterRule(t,122,e.RULE_optimizeStatement);let r;try{this.enterOuterAlt(t,1),this.state=1237,this.match(e.OPTIMIZE),this.state=1238,this.match(e.TABLE),this.state=1239,this.tableIdentifier(),this.state=1241,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=1240,this.clusterClause()),this.state=1244,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===126&&(this.state=1243,this.partitionClause()),this.state=1247,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===61&&(this.state=1246,this.match(e.FINAL)),this.state=1250,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===37&&(this.state=1249,this.match(e.DEDUPLICATE))}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}renameStatement(){let t=new he(this.context,this.state);this.enterRule(t,124,e.RULE_renameStatement);let r;try{this.enterOuterAlt(t,1);{for(this.state=1252,this.match(e.RENAME),this.state=1253,this.match(e.TABLE),this.state=1254,this.tableIdentifier(),this.state=1255,this.match(e.TO),this.state=1256,this.tableIdentifier(),this.state=1264,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=1257,this.match(e.COMMA),this.state=1258,this.tableIdentifier(),this.state=1259,this.match(e.TO),this.state=1260,this.tableIdentifier(),this.state=1266,this.errorHandler.sync(this),r=this.tokenStream.LA(1);this.state=1268,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=1267,this.clusterClause())}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}projectionSelectStatement(){let t=new pe(this.context,this.state);this.enterRule(t,126,e.RULE_projectionSelectStatement);let r;try{this.enterOuterAlt(t,1),this.state=1270,this.match(e.LPAREN),this.state=1272,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===193&&(this.state=1271,this.withClause()),this.state=1274,this.match(e.SELECT),this.state=1275,this.columnExpressionList(),this.state=1277,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===73&&(this.state=1276,this.groupByClause()),this.state=1280,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===122&&(this.state=1279,this.projectionOrderByClause()),this.state=1282,this.match(e.RPAREN)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}selectUnionStatement(){let t=new k(this.context,this.state);this.enterRule(t,128,e.RULE_selectUnionStatement);let r;try{for(this.enterOuterAlt(t,1),this.state=1284,this.selectStatementWithParentheses(),this.state=1290,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===180;)this.state=1285,this.match(e.UNION),this.state=1286,this.match(e.ALL),this.state=1287,this.selectStatementWithParentheses(),this.state=1292,this.errorHandler.sync(this),r=this.tokenStream.LA(1)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}selectStatementWithParentheses(){let t=new Lt(this.context,this.state);this.enterRule(t,130,e.RULE_selectStatementWithParentheses);try{switch(this.state=1298,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.SELECT:case e.WITH:this.enterOuterAlt(t,1),this.state=1293,this.selectStatement();break;case e.LPAREN:this.enterOuterAlt(t,2),this.state=1294,this.match(e.LPAREN),this.state=1295,this.selectUnionStatement(),this.state=1296,this.match(e.RPAREN);break;default:throw new n.NoViableAltException(this)}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}selectStatement(){let t=new It(this.context,this.state);this.enterRule(t,132,e.RULE_selectStatement);let r;try{this.enterOuterAlt(t,1);{switch(this.state=1301,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===193&&(this.state=1300,this.withClause()),this.state=1303,this.match(e.SELECT),this.state=1305,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,155,this.context)){case 1:this.state=1304,this.match(e.DISTINCT);break}switch(this.state=1308,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,156,this.context)){case 1:this.state=1307,this.topClause();break}switch(this.state=1310,this.columnExpressionList(),this.state=1312,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===68&&(this.state=1311,this.fromClause()),this.state=1315,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===9||r===84||r===96)&&(this.state=1314,this.arrayJoinClause()),this.state=1318,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===192&&(this.state=1317,this.windowClause()),this.state=1321,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===131&&(this.state=1320,this.prewhereClause()),this.state=1324,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===191&&(this.state=1323,this.whereClause()),this.state=1327,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===73&&(this.state=1326,this.groupByClause()),this.state=1331,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,163,this.context)){case 1:this.state=1329,this.match(e.WITH),this.state=1330,r=this.tokenStream.LA(1),r===31||r===144?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this);break}switch(this.state=1335,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===193&&(this.state=1333,this.match(e.WITH),this.state=1334,this.match(e.TOTALS)),this.state=1338,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===74&&(this.state=1337,this.havingClause()),this.state=1341,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===122&&(this.state=1340,this.orderByClause()),this.state=1344,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,167,this.context)){case 1:this.state=1343,this.limitByClause();break}this.state=1347,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===99&&(this.state=1346,this.limitClause()),this.state=1350,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===153&&(this.state=1349,this.settingsClause())}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}withClause(){let t=new gt(this.context,this.state);this.enterRule(t,134,e.RULE_withClause);try{this.enterOuterAlt(t,1),this.state=1352,this.match(e.WITH),this.state=1353,this.columnExpressionList()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}topClause(){let t=new Ee(this.context,this.state);this.enterRule(t,136,e.RULE_topClause);try{switch(this.enterOuterAlt(t,1),this.state=1355,this.match(e.TOP),this.state=1356,this.match(e.DECIMAL_LITERAL),this.state=1359,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,170,this.context)){case 1:this.state=1357,this.match(e.WITH),this.state=1358,this.match(e.TIES);break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}fromClause(){let t=new me(this.context,this.state);this.enterRule(t,138,e.RULE_fromClause);try{this.enterOuterAlt(t,1),this.state=1361,this.match(e.FROM),this.state=1362,this.joinExpression(0)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}arrayJoinClause(){let t=new Ce(this.context,this.state);this.enterRule(t,140,e.RULE_arrayJoinClause);let r;try{this.enterOuterAlt(t,1),this.state=1365,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===84||r===96)&&(this.state=1364,r=this.tokenStream.LA(1),r===84||r===96?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this)),this.state=1367,this.match(e.ARRAY),this.state=1368,this.match(e.JOIN),this.state=1369,this.columnExpressionList()}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}windowClause(){let t=new de(this.context,this.state);this.enterRule(t,142,e.RULE_windowClause);try{this.enterOuterAlt(t,1),this.state=1371,this.match(e.WINDOW),this.state=1372,this.identifier(),this.state=1373,this.match(e.AS),this.state=1374,this.match(e.LPAREN),this.state=1375,this.windowExpression(),this.state=1376,this.match(e.RPAREN)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}prewhereClause(){let t=new Te(this.context,this.state);this.enterRule(t,144,e.RULE_prewhereClause);try{this.enterOuterAlt(t,1),this.state=1378,this.match(e.PREWHERE),this.state=1379,this.columnExpression(0)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}whereClause(){let t=new U(this.context,this.state);this.enterRule(t,146,e.RULE_whereClause);try{this.enterOuterAlt(t,1),this.state=1381,this.match(e.WHERE),this.state=1382,this.columnExpression(0)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}groupByClause(){let t=new yt(this.context,this.state);this.enterRule(t,148,e.RULE_groupByClause);let r;try{switch(this.enterOuterAlt(t,1),this.state=1384,this.match(e.GROUP),this.state=1385,this.match(e.BY),this.state=1392,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,172,this.context)){case 1:this.state=1386,r=this.tokenStream.LA(1),r===31||r===144?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1387,this.match(e.LPAREN),this.state=1388,this.columnExpressionList(),this.state=1389,this.match(e.RPAREN);break;case 2:this.state=1391,this.columnExpressionList();break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}havingClause(){let t=new Re(this.context,this.state);this.enterRule(t,150,e.RULE_havingClause);try{this.enterOuterAlt(t,1),this.state=1394,this.match(e.HAVING),this.state=1395,this.columnExpression(0)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}orderByClause(){let t=new j(this.context,this.state);this.enterRule(t,152,e.RULE_orderByClause);try{this.enterOuterAlt(t,1),this.state=1397,this.match(e.ORDER),this.state=1398,this.match(e.BY),this.state=1399,this.orderExpressionList()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}projectionOrderByClause(){let t=new be(this.context,this.state);this.enterRule(t,154,e.RULE_projectionOrderByClause);try{this.enterOuterAlt(t,1),this.state=1401,this.match(e.ORDER),this.state=1402,this.match(e.BY),this.state=1403,this.columnExpressionList()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}limitByClause(){let t=new xe(this.context,this.state);this.enterRule(t,156,e.RULE_limitByClause);try{this.enterOuterAlt(t,1),this.state=1405,this.match(e.LIMIT),this.state=1406,this.limitExpression(),this.state=1407,this.match(e.BY),this.state=1408,this.columnExpressionList()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}limitClause(){let t=new Ot(this.context,this.state);this.enterRule(t,158,e.RULE_limitClause);let r;try{this.enterOuterAlt(t,1),this.state=1410,this.match(e.LIMIT),this.state=1411,this.limitExpression(),this.state=1414,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===193&&(this.state=1412,this.match(e.WITH),this.state=1413,this.match(e.TIES))}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}settingsClause(){let t=new Z(this.context,this.state);this.enterRule(t,160,e.RULE_settingsClause);try{this.enterOuterAlt(t,1),this.state=1416,this.match(e.SETTINGS),this.state=1417,this.settingExpressionList()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}joinExpression(t){t===void 0&&(t=0);let r=this.context,s=this.state,u=new A(this.context,s),h=u,d=162;this.enterRecursionRule(u,162,e.RULE_joinExpression,t);let a;try{let C;this.enterOuterAlt(u,1);{switch(this.state=1431,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,176,this.context)){case 1:{switch(u=new W1(u),this.context=u,h=u,this.state=1420,this.tableExpression(0),this.state=1422,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,174,this.context)){case 1:this.state=1421,this.match(e.FINAL);break}switch(this.state=1425,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,175,this.context)){case 1:this.state=1424,this.sampleClause();break}}break;case 2:u=new G1(u),this.context=u,h=u,this.state=1427,this.match(e.LPAREN),this.state=1428,this.joinExpression(0),this.state=1429,this.match(e.RPAREN);break}for(this.context.stop=this.tokenStream.LT(-1),this.state=1450,this.errorHandler.sync(this),C=this.interpreter.adaptivePredict(this.tokenStream,180,this.context);C!==2&&C!==n.ATN.INVALID_ALT_NUMBER;){if(C===1)switch(this.parseListeners!=null&&this.triggerExitRuleEvent(),h=u,this.state=1448,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,179,this.context)){case 1:{if(u=new Y1(new A(r,s)),this.pushNewRecursionContext(u,d,e.RULE_joinExpression),this.state=1433,!this.precpred(this.context,3))throw this.createFailedPredicateException("this.precpred(this.context, 3)");this.state=1434,this.joinOperatorCross(),this.state=1435,this.joinExpression(4)}break;case 2:{if(u=new X1(new A(r,s)),this.pushNewRecursionContext(u,d,e.RULE_joinExpression),this.state=1437,!this.precpred(this.context,4))throw this.createFailedPredicateException("this.precpred(this.context, 4)");this.state=1439,this.errorHandler.sync(this),a=this.tokenStream.LA(1),(a===71||a===101)&&(this.state=1438,a=this.tokenStream.LA(1),a===71||a===101?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this)),this.state=1442,this.errorHandler.sync(this),a=this.tokenStream.LA(1),(!(a&-32)&&1<<a&4496||!(a-69&-32)&&1<<a-69&134250497||a===143||a===150)&&(this.state=1441,this.joinOperator()),this.state=1444,this.match(e.JOIN),this.state=1445,this.joinExpression(0),this.state=1446,this.joinConstraintClause()}break}this.state=1452,this.errorHandler.sync(this),C=this.interpreter.adaptivePredict(this.tokenStream,180,this.context)}}}catch(C){if(C instanceof n.RecognitionException)this.errorHandler.reportError(this,C),this.errorHandler.recover(this,C);else throw C}finally{this.unrollRecursionContexts(r)}return u}joinOperator(){let t=new W(this.context,this.state);this.enterRule(t,164,e.RULE_joinOperator);let r;try{switch(this.state=1496,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,194,this.context)){case 1:switch(t=new J1(t),this.enterOuterAlt(t,1),this.state=1462,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,183,this.context)){case 1:this.state=1454,this.errorHandler.sync(this),r=this.tokenStream.LA(1),!(r&-32)&&1<<r&4368&&(this.state=1453,r=this.tokenStream.LA(1),!(r&-32)&&1<<r&4368?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this)),this.state=1456,this.match(e.INNER);break;case 2:this.state=1457,this.match(e.INNER),this.state=1459,this.errorHandler.sync(this),r=this.tokenStream.LA(1),!(r&-32)&&1<<r&4368&&(this.state=1458,r=this.tokenStream.LA(1),!(r&-32)&&1<<r&4368?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this));break;case 3:this.state=1461,r=this.tokenStream.LA(1),!(r&-32)&&1<<r&4368?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this);break}break;case 2:switch(t=new Q1(t),this.enterOuterAlt(t,2),this.state=1478,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,188,this.context)){case 1:this.state=1465,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(!(r&-32)&&1<<r&4496||r===150)&&(this.state=1464,r=this.tokenStream.LA(1),!(r&-32)&&1<<r&4496||r===150?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this)),this.state=1467,r=this.tokenStream.LA(1),r===96||r===143?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1469,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===123&&(this.state=1468,this.match(e.OUTER));break;case 2:this.state=1471,r=this.tokenStream.LA(1),r===96||r===143?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1473,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===123&&(this.state=1472,this.match(e.OUTER)),this.state=1476,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(!(r&-32)&&1<<r&4496||r===150)&&(this.state=1475,r=this.tokenStream.LA(1),!(r&-32)&&1<<r&4496||r===150?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this));break}break;case 3:switch(t=new K1(t),this.enterOuterAlt(t,3),this.state=1494,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,193,this.context)){case 1:this.state=1481,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===4||r===8)&&(this.state=1480,r=this.tokenStream.LA(1),r===4||r===8?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this)),this.state=1483,this.match(e.FULL),this.state=1485,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===123&&(this.state=1484,this.match(e.OUTER));break;case 2:this.state=1487,this.match(e.FULL),this.state=1489,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===123&&(this.state=1488,this.match(e.OUTER)),this.state=1492,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===4||r===8)&&(this.state=1491,r=this.tokenStream.LA(1),r===4||r===8?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this));break}break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}joinOperatorCross(){let t=new Ae(this.context,this.state);this.enterRule(t,166,e.RULE_joinOperatorCross);let r;try{switch(this.state=1504,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.CROSS:case e.GLOBAL:case e.LOCAL:this.enterOuterAlt(t,1),this.state=1499,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===71||r===101)&&(this.state=1498,r=this.tokenStream.LA(1),r===71||r===101?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this)),this.state=1501,this.match(e.CROSS),this.state=1502,this.match(e.JOIN);break;case e.COMMA:this.enterOuterAlt(t,2),this.state=1503,this.match(e.COMMA);break;default:throw new n.NoViableAltException(this)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}joinConstraintClause(){let t=new Ne(this.context,this.state);this.enterRule(t,168,e.RULE_joinConstraintClause);try{switch(this.state=1515,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,197,this.context)){case 1:this.enterOuterAlt(t,1),this.state=1506,this.match(e.ON),this.state=1507,this.columnExpressionList();break;case 2:this.enterOuterAlt(t,2),this.state=1508,this.match(e.USING),this.state=1509,this.match(e.LPAREN),this.state=1510,this.columnExpressionList(),this.state=1511,this.match(e.RPAREN);break;case 3:this.enterOuterAlt(t,3),this.state=1513,this.match(e.USING),this.state=1514,this.columnExpressionList();break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}sampleClause(){let t=new Se(this.context,this.state);this.enterRule(t,170,e.RULE_sampleClause);try{switch(this.enterOuterAlt(t,1),this.state=1517,this.match(e.SAMPLE),this.state=1518,this.ratioExpression(),this.state=1521,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,198,this.context)){case 1:this.state=1519,this.match(e.OFFSET),this.state=1520,this.ratioExpression();break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}limitExpression(){let t=new kt(this.context,this.state);this.enterRule(t,172,e.RULE_limitExpression);let r;try{this.enterOuterAlt(t,1),this.state=1523,this.columnExpression(0),this.state=1526,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===118||r===208)&&(this.state=1524,r=this.tokenStream.LA(1),r===118||r===208?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1525,this.columnExpression(0))}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}orderExpressionList(){let t=new ft(this.context,this.state);this.enterRule(t,174,e.RULE_orderExpressionList);try{let r;for(this.enterOuterAlt(t,1),this.state=1528,this.orderExpression(),this.state=1533,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,200,this.context);r!==2&&r!==n.ATN.INVALID_ALT_NUMBER;)r===1&&(this.state=1529,this.match(e.COMMA),this.state=1530,this.orderExpression()),this.state=1535,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,200,this.context)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}orderExpression(){let t=new Pt(this.context,this.state);this.enterRule(t,176,e.RULE_orderExpression);let r;try{this.enterOuterAlt(t,1);{switch(this.state=1536,this.columnExpression(0),this.state=1538,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,201,this.context)){case 1:this.state=1537,r=this.tokenStream.LA(1),!(r-11&-32)&&1<<r-11&3221225473?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this);break}switch(this.state=1542,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,202,this.context)){case 1:this.state=1540,this.match(e.NULLS),this.state=1541,r=this.tokenStream.LA(1),r===62||r===93?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this);break}switch(this.state=1546,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,203,this.context)){case 1:this.state=1544,this.match(e.COLLATE),this.state=1545,this.match(e.STRING_LITERAL);break}}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}ratioExpression(){let t=new vt(this.context,this.state);this.enterRule(t,178,e.RULE_ratioExpression);try{switch(this.enterOuterAlt(t,1),this.state=1548,this.numberLiteral(),this.state=1551,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,204,this.context)){case 1:this.state=1549,this.match(e.SLASH),this.state=1550,this.numberLiteral();break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}settingExpressionList(){let t=new z(this.context,this.state);this.enterRule(t,180,e.RULE_settingExpressionList);try{let r;for(this.enterOuterAlt(t,1),this.state=1553,this.settingExpression(),this.state=1558,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,205,this.context);r!==2&&r!==n.ATN.INVALID_ALT_NUMBER;)r===1&&(this.state=1554,this.match(e.COMMA),this.state=1555,this.settingExpression()),this.state=1560,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,205,this.context)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}settingExpression(){let t=new Ht(this.context,this.state);this.enterRule(t,182,e.RULE_settingExpression);try{this.enterOuterAlt(t,1),this.state=1561,this.identifier(),this.state=1562,this.match(e.EQ_SINGLE),this.state=1563,this.literal()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}windowExpression(){let t=new Dt(this.context,this.state);this.enterRule(t,184,e.RULE_windowExpression);let r;try{this.enterOuterAlt(t,1),this.state=1566,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===126&&(this.state=1565,this.windowPartitionByClause()),this.state=1569,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===122&&(this.state=1568,this.windowOrderByClause()),this.state=1572,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===136||r===146)&&(this.state=1571,this.windowFrameClause())}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}windowPartitionByClause(){let t=new Le(this.context,this.state);this.enterRule(t,186,e.RULE_windowPartitionByClause);try{this.enterOuterAlt(t,1),this.state=1574,this.match(e.PARTITION),this.state=1575,this.match(e.BY),this.state=1576,this.columnExpressionList()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}windowOrderByClause(){let t=new Ie(this.context,this.state);this.enterRule(t,188,e.RULE_windowOrderByClause);try{this.enterOuterAlt(t,1),this.state=1578,this.match(e.ORDER),this.state=1579,this.match(e.BY),this.state=1580,this.orderExpressionList()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}windowFrameClause(){let t=new ge(this.context,this.state);this.enterRule(t,190,e.RULE_windowFrameClause);let r;try{this.enterOuterAlt(t,1),this.state=1582,r=this.tokenStream.LA(1),r===136||r===146?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1583,this.windowFrameExtend()}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}windowFrameExtend(){let t=new q(this.context,this.state);this.enterRule(t,192,e.RULE_windowFrameExtend);try{switch(this.state=1591,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.CURRENT:case e.INF:case e.NAN_SQL:case e.UNBOUNDED:case e.FLOATING_LITERAL:case e.OCTAL_LITERAL:case e.DECIMAL_LITERAL:case e.HEXADECIMAL_LITERAL:case e.DASH:case e.DOT:case e.PLUS:t=new j1(t),this.enterOuterAlt(t,1),this.state=1585,this.windowFrameBound();break;case e.BETWEEN:t=new Z1(t),this.enterOuterAlt(t,2),this.state=1586,this.match(e.BETWEEN),this.state=1587,this.windowFrameBound(),this.state=1588,this.match(e.AND),this.state=1589,this.windowFrameBound();break;default:throw new n.NoViableAltException(this)}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}windowFrameBound(){let t=new $(this.context,this.state);this.enterRule(t,194,e.RULE_windowFrameBound);try{switch(this.enterOuterAlt(t,1),this.state=1605,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,210,this.context)){case 1:this.state=1593,this.match(e.CURRENT),this.state=1594,this.match(e.ROW);break;case 2:this.state=1595,this.match(e.UNBOUNDED),this.state=1596,this.match(e.PRECEDING);break;case 3:this.state=1597,this.match(e.UNBOUNDED),this.state=1598,this.match(e.FOLLOWING);break;case 4:this.state=1599,this.numberLiteral(),this.state=1600,this.match(e.PRECEDING);break;case 5:this.state=1602,this.numberLiteral(),this.state=1603,this.match(e.FOLLOWING);break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}setStatement(){let t=new ye(this.context,this.state);this.enterRule(t,196,e.RULE_setStatement);try{this.enterOuterAlt(t,1),this.state=1607,this.match(e.SET),this.state=1608,this.settingExpressionList()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}showStatement(){let t=new f(this.context,this.state);this.enterRule(t,198,e.RULE_showStatement);let r;try{switch(this.state=1652,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,218,this.context)){case 1:t=new tr(t),this.enterOuterAlt(t,1),this.state=1610,this.match(e.SHOW),this.state=1611,this.match(e.CREATE),this.state=1612,this.match(e.DATABASE),this.state=1613,this.databaseIdentifier();break;case 2:t=new q1(t),this.enterOuterAlt(t,2),this.state=1614,this.match(e.SHOW),this.state=1615,this.match(e.CREATE),this.state=1616,this.match(e.DICTIONARY),this.state=1617,this.tableIdentifier();break;case 3:t=new z1(t),this.enterOuterAlt(t,3);{switch(this.state=1618,this.match(e.SHOW),this.state=1619,this.match(e.CREATE),this.state=1621,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,211,this.context)){case 1:this.state=1620,this.match(e.TEMPORARY);break}switch(this.state=1624,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,212,this.context)){case 1:this.state=1623,this.match(e.TABLE);break}this.state=1626,this.tableIdentifier()}break;case 4:t=new er(t),this.enterOuterAlt(t,4),this.state=1627,this.match(e.SHOW),this.state=1628,this.match(e.DATABASES);break;case 5:t=new _1(t),this.enterOuterAlt(t,5),this.state=1629,this.match(e.SHOW),this.state=1630,this.match(e.DICTIONARIES),this.state=1633,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===68&&(this.state=1631,this.match(e.FROM),this.state=1632,this.databaseIdentifier());break;case 6:t=new $1(t),this.enterOuterAlt(t,6);{switch(this.state=1635,this.match(e.SHOW),this.state=1637,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===164&&(this.state=1636,this.match(e.TEMPORARY)),this.state=1639,this.match(e.TABLES),this.state=1642,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===68||r===80)&&(this.state=1640,r=this.tokenStream.LA(1),r===68||r===80?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1641,this.databaseIdentifier()),this.state=1647,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.LIKE:this.state=1644,this.match(e.LIKE),this.state=1645,this.match(e.STRING_LITERAL);break;case e.WHERE:this.state=1646,this.whereClause();break;case e.EOF:case e.FORMAT:case e.INTO:case e.LIMIT:case e.RPAREN:case e.SEMICOLON:break;default:break}this.state=1650,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===99&&(this.state=1649,this.limitClause())}break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}systemStatement(){let t=new Oe(this.context,this.state);this.enterRule(t,200,e.RULE_systemStatement);let r;try{switch(this.state=1688,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,221,this.context)){case 1:this.enterOuterAlt(t,1),this.state=1654,this.match(e.SYSTEM),this.state=1655,this.match(e.FLUSH),this.state=1656,this.match(e.DISTRIBUTED),this.state=1657,this.tableIdentifier();break;case 2:this.enterOuterAlt(t,2),this.state=1658,this.match(e.SYSTEM),this.state=1659,this.match(e.FLUSH),this.state=1660,this.match(e.LOGS);break;case 3:this.enterOuterAlt(t,3),this.state=1661,this.match(e.SYSTEM),this.state=1662,this.match(e.RELOAD),this.state=1663,this.match(e.DICTIONARIES);break;case 4:this.enterOuterAlt(t,4),this.state=1664,this.match(e.SYSTEM),this.state=1665,this.match(e.RELOAD),this.state=1666,this.match(e.DICTIONARY),this.state=1667,this.tableIdentifier();break;case 5:this.enterOuterAlt(t,5);{switch(this.state=1668,this.match(e.SYSTEM),this.state=1669,r=this.tokenStream.LA(1),r===156||r===157?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1677,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.DISTRIBUTED:this.state=1670,this.match(e.DISTRIBUTED),this.state=1671,this.match(e.SENDS);break;case e.FETCHES:this.state=1672,this.match(e.FETCHES);break;case e.MERGES:case e.TTL:this.state=1674,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===177&&(this.state=1673,this.match(e.TTL)),this.state=1676,this.match(e.MERGES);break;default:throw new n.NoViableAltException(this)}this.state=1679,this.tableIdentifier()}break;case 6:this.enterOuterAlt(t,6),this.state=1680,this.match(e.SYSTEM),this.state=1681,r=this.tokenStream.LA(1),r===156||r===157?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1682,this.match(e.REPLICATED),this.state=1683,this.match(e.SENDS);break;case 7:this.enterOuterAlt(t,7),this.state=1684,this.match(e.SYSTEM),this.state=1685,this.match(e.SYNC),this.state=1686,this.match(e.REPLICA),this.state=1687,this.tableIdentifier();break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}truncateStatement(){let t=new ke(this.context,this.state);this.enterRule(t,202,e.RULE_truncateStatement);let r;try{this.enterOuterAlt(t,1);{switch(this.state=1690,this.match(e.TRUNCATE),this.state=1692,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,222,this.context)){case 1:this.state=1691,this.match(e.TEMPORARY);break}switch(this.state=1695,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,223,this.context)){case 1:this.state=1694,this.match(e.TABLE);break}switch(this.state=1699,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,224,this.context)){case 1:this.state=1697,this.match(e.IF),this.state=1698,this.match(e.EXISTS);break}this.state=1701,this.tableIdentifier(),this.state=1703,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===119&&(this.state=1702,this.clusterClause())}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}useStatement(){let t=new fe(this.context,this.state);this.enterRule(t,204,e.RULE_useStatement);try{this.enterOuterAlt(t,1),this.state=1705,this.match(e.USE),this.state=1706,this.databaseIdentifier()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}watchStatement(){let t=new Pe(this.context,this.state);this.enterRule(t,206,e.RULE_watchStatement);let r;try{this.enterOuterAlt(t,1),this.state=1708,this.match(e.WATCH),this.state=1709,this.tableIdentifier(),this.state=1711,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===55&&(this.state=1710,this.match(e.EVENTS)),this.state=1715,this.errorHandler.sync(this),r=this.tokenStream.LA(1),r===99&&(this.state=1713,this.match(e.LIMIT),this.state=1714,this.match(e.DECIMAL_LITERAL))}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}columnTypeExpression(){let t=new b(this.context,this.state);this.enterRule(t,208,e.RULE_columnTypeExpression);let r;try{switch(this.state=1764,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,232,this.context)){case 1:t=new lr(t),this.enterOuterAlt(t,1),this.state=1717,this.identifier();break;case 2:t=new sr(t),this.enterOuterAlt(t,2);{for(this.state=1718,this.identifier(),this.state=1719,this.match(e.LPAREN),this.state=1720,this.identifier(),this.state=1721,this.columnTypeExpression(),this.state=1728,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=1722,this.match(e.COMMA),this.state=1723,this.identifier(),this.state=1724,this.columnTypeExpression(),this.state=1730,this.errorHandler.sync(this),r=this.tokenStream.LA(1);this.state=1731,this.match(e.RPAREN)}break;case 3:t=new ir(t),this.enterOuterAlt(t,3);{for(this.state=1733,this.identifier(),this.state=1734,this.match(e.LPAREN),this.state=1735,this.enumValue(),this.state=1740,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=1736,this.match(e.COMMA),this.state=1737,this.enumValue(),this.state=1742,this.errorHandler.sync(this),r=this.tokenStream.LA(1);this.state=1743,this.match(e.RPAREN)}break;case 4:t=new rr(t),this.enterOuterAlt(t,4);{for(this.state=1745,this.identifier(),this.state=1746,this.match(e.LPAREN),this.state=1747,this.columnTypeExpression(),this.state=1752,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=1748,this.match(e.COMMA),this.state=1749,this.columnTypeExpression(),this.state=1754,this.errorHandler.sync(this),r=this.tokenStream.LA(1);this.state=1755,this.match(e.RPAREN)}break;case 5:t=new nr(t),this.enterOuterAlt(t,5),this.state=1757,this.identifier(),this.state=1758,this.match(e.LPAREN),this.state=1760,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(!(r&-32)&&1<<r&4294967292||!(r-32&-32)&&1<<r-32&4290772991||!(r-64&-32)&&1<<r-64&4294967295||!(r-96&-32)&&1<<r-96&2147483647||!(r-129&-32)&&1<<r-129&4294967215||!(r-161&-32)&&1<<r-161&4294950911||!(r-193&-32)&&1<<r-193&1158024191)&&(this.state=1759,this.columnExpressionList()),this.state=1762,this.match(e.RPAREN);break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}columnExpressionList(){let t=new T(this.context,this.state);this.enterRule(t,210,e.RULE_columnExpressionList);try{let r;for(this.enterOuterAlt(t,1),this.state=1766,this.columnsExpression(),this.state=1771,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,233,this.context);r!==2&&r!==n.ATN.INVALID_ALT_NUMBER;)r===1&&(this.state=1767,this.match(e.COMMA),this.state=1768,this.columnsExpression()),this.state=1773,this.errorHandler.sync(this),r=this.interpreter.adaptivePredict(this.tokenStream,233,this.context)}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}columnsExpression(){let t=new M(this.context,this.state);this.enterRule(t,212,e.RULE_columnsExpression);let r;try{switch(this.state=1785,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,235,this.context)){case 1:t=new ar(t),this.enterOuterAlt(t,1),this.state=1777,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(!(r&-32)&&1<<r&4294967292||!(r-32&-32)&&1<<r-32&4290772991||!(r-64&-32)&&1<<r-64&4294705151||!(r-96&-32)&&1<<r-96&2146303999||!(r-129&-32)&&1<<r-129&4294967215||!(r-161&-32)&&1<<r-161&4294950911||!(r-193&-32)&&1<<r-193&31)&&(this.state=1774,this.tableIdentifier(),this.state=1775,this.match(e.DOT)),this.state=1779,this.match(e.ASTERISK);break;case 2:t=new ur(t),this.enterOuterAlt(t,2),this.state=1780,this.match(e.LPAREN),this.state=1781,this.selectUnionStatement(),this.state=1782,this.match(e.RPAREN);break;case 3:t=new or(t),this.enterOuterAlt(t,3),this.state=1784,this.columnExpression(0);break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}columnExpression(t){t===void 0&&(t=0);let r=this.context,s=this.state,u=new o(this.context,s),h=u,d=214;this.enterRecursionRule(u,214,e.RULE_columnExpression,t);let a;try{let C;this.enterOuterAlt(u,1);{switch(this.state=1916,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,248,this.context)){case 1:{switch(u=new Rr(u),this.context=u,h=u,this.state=1788,this.match(e.CASE),this.state=1790,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,236,this.context)){case 1:this.state=1789,this.columnExpression(0);break}this.state=1797,this.errorHandler.sync(this),a=this.tokenStream.LA(1);do this.state=1792,this.match(e.WHEN),this.state=1793,this.columnExpression(0),this.state=1794,this.match(e.THEN),this.state=1795,this.columnExpression(0),this.state=1799,this.errorHandler.sync(this),a=this.tokenStream.LA(1);while(a===190);this.state=1803,this.errorHandler.sync(this),a=this.tokenStream.LA(1),a===51&&(this.state=1801,this.match(e.ELSE),this.state=1802,this.columnExpression(0)),this.state=1805,this.match(e.END)}break;case 2:u=new Br(u),this.context=u,h=u,this.state=1807,this.match(e.CAST),this.state=1808,this.match(e.LPAREN),this.state=1809,this.columnExpression(0),this.state=1810,this.match(e.AS),this.state=1811,this.columnTypeExpression(),this.state=1812,this.match(e.RPAREN);break;case 3:u=new Er(u),this.context=u,h=u,this.state=1814,this.match(e.DATE),this.state=1815,this.match(e.STRING_LITERAL);break;case 4:u=new wr(u),this.context=u,h=u,this.state=1816,this.match(e.EXTRACT),this.state=1817,this.match(e.LPAREN),this.state=1818,this.interval(),this.state=1819,this.match(e.FROM),this.state=1820,this.columnExpression(0),this.state=1821,this.match(e.RPAREN);break;case 5:u=new Ur(u),this.context=u,h=u,this.state=1823,this.match(e.INTERVAL),this.state=1824,this.columnExpression(0),this.state=1825,this.interval();break;case 6:u=new Tr(u),this.context=u,h=u,this.state=1827,this.match(e.SUBSTRING),this.state=1828,this.match(e.LPAREN),this.state=1829,this.columnExpression(0),this.state=1830,this.match(e.FROM),this.state=1831,this.columnExpression(0),this.state=1834,this.errorHandler.sync(this),a=this.tokenStream.LA(1),a===65&&(this.state=1832,this.match(e.FOR),this.state=1833,this.columnExpression(0)),this.state=1836,this.match(e.RPAREN);break;case 7:u=new vr(u),this.context=u,h=u,this.state=1838,this.match(e.TIMESTAMP),this.state=1839,this.match(e.STRING_LITERAL);break;case 8:u=new Cr(u),this.context=u,h=u,this.state=1840,this.match(e.TRIM),this.state=1841,this.match(e.LPAREN),this.state=1842,a=this.tokenStream.LA(1),a===17||a===95||a===173?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1843,this.match(e.STRING_LITERAL),this.state=1844,this.match(e.FROM),this.state=1845,this.columnExpression(0),this.state=1846,this.match(e.RPAREN);break;case 9:u=new Lr(u),this.context=u,h=u,this.state=1848,this.identifier(),this.state=1849,this.match(e.LPAREN),this.state=1851,this.errorHandler.sync(this),a=this.tokenStream.LA(1),(!(a&-32)&&1<<a&4294967292||!(a-32&-32)&&1<<a-32&4290772991||!(a-64&-32)&&1<<a-64&4294967295||!(a-96&-32)&&1<<a-96&2147483647||!(a-129&-32)&&1<<a-129&4294967215||!(a-161&-32)&&1<<a-161&4294950911||!(a-193&-32)&&1<<a-193&1158024191)&&(this.state=1850,this.columnExpressionList()),this.state=1853,this.match(e.RPAREN),this.state=1855,this.match(e.OVER),this.state=1856,this.match(e.LPAREN),this.state=1857,this.windowExpression(),this.state=1858,this.match(e.RPAREN);break;case 10:u=new kr(u),this.context=u,h=u,this.state=1860,this.identifier(),this.state=1861,this.match(e.LPAREN),this.state=1863,this.errorHandler.sync(this),a=this.tokenStream.LA(1),(!(a&-32)&&1<<a&4294967292||!(a-32&-32)&&1<<a-32&4290772991||!(a-64&-32)&&1<<a-64&4294967295||!(a-96&-32)&&1<<a-96&2147483647||!(a-129&-32)&&1<<a-129&4294967215||!(a-161&-32)&&1<<a-161&4294950911||!(a-193&-32)&&1<<a-193&1158024191)&&(this.state=1862,this.columnExpressionList()),this.state=1865,this.match(e.RPAREN),this.state=1867,this.match(e.OVER),this.state=1868,this.identifier();break;case 11:{switch(u=new Ar(u),this.context=u,h=u,this.state=1870,this.identifier(),this.state=1876,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,243,this.context)){case 1:this.state=1871,this.match(e.LPAREN),this.state=1873,this.errorHandler.sync(this),a=this.tokenStream.LA(1),(!(a&-32)&&1<<a&4294967292||!(a-32&-32)&&1<<a-32&4290772991||!(a-64&-32)&&1<<a-64&4294967295||!(a-96&-32)&&1<<a-96&2147483647||!(a-129&-32)&&1<<a-129&4294967215||!(a-161&-32)&&1<<a-161&4294950911||!(a-193&-32)&&1<<a-193&1158024191)&&(this.state=1872,this.columnExpressionList()),this.state=1875,this.match(e.RPAREN);break}switch(this.state=1878,this.match(e.LPAREN),this.state=1880,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,244,this.context)){case 1:this.state=1879,this.match(e.DISTINCT);break}this.state=1883,this.errorHandler.sync(this),a=this.tokenStream.LA(1),(!(a&-32)&&1<<a&4294967292||!(a-32&-32)&&1<<a-32&4290772991||!(a-64&-32)&&1<<a-64&4294967295||!(a-96&-32)&&1<<a-96&2147483647||!(a-129&-32)&&1<<a-129&4294967215||!(a-161&-32)&&1<<a-161&4294950911||!(a-193&-32)&&1<<a-193&1158024191)&&(this.state=1882,this.columnArgumentList()),this.state=1885,this.match(e.RPAREN)}break;case 12:u=new Sr(u),this.context=u,h=u,this.state=1887,this.literal();break;case 13:u=new Fr(u),this.context=u,h=u,this.state=1888,this.match(e.DASH),this.state=1889,this.columnExpression(17);break;case 14:u=new dr(u),this.context=u,h=u,this.state=1890,this.match(e.NOT),this.state=1891,this.columnExpression(12);break;case 15:u=new Nr(u),this.context=u,h=u,this.state=1895,this.errorHandler.sync(this),a=this.tokenStream.LA(1),(!(a&-32)&&1<<a&4294967292||!(a-32&-32)&&1<<a-32&4290772991||!(a-64&-32)&&1<<a-64&4294705151||!(a-96&-32)&&1<<a-96&2146303999||!(a-129&-32)&&1<<a-129&4294967215||!(a-161&-32)&&1<<a-161&4294950911||!(a-193&-32)&&1<<a-193&31)&&(this.state=1892,this.tableIdentifier(),this.state=1893,this.match(e.DOT)),this.state=1897,this.match(e.ASTERISK);break;case 16:u=new Mr(u),this.context=u,h=u,this.state=1898,this.match(e.LPAREN),this.state=1899,this.selectUnionStatement(),this.state=1900,this.match(e.RPAREN);break;case 17:u=new Or(u),this.context=u,h=u,this.state=1902,this.match(e.LPAREN),this.state=1903,this.columnExpression(0),this.state=1904,this.match(e.RPAREN);break;case 18:u=new hr(u),this.context=u,h=u,this.state=1906,this.match(e.LPAREN),this.state=1907,this.columnExpressionList(),this.state=1908,this.match(e.RPAREN);break;case 19:u=new gr(u),this.context=u,h=u,this.state=1910,this.match(e.LBRACKET),this.state=1912,this.errorHandler.sync(this),a=this.tokenStream.LA(1),(!(a&-32)&&1<<a&4294967292||!(a-32&-32)&&1<<a-32&4290772991||!(a-64&-32)&&1<<a-64&4294967295||!(a-96&-32)&&1<<a-96&2147483647||!(a-129&-32)&&1<<a-129&4294967215||!(a-161&-32)&&1<<a-161&4294950911||!(a-193&-32)&&1<<a-193&1158024191)&&(this.state=1911,this.columnExpressionList()),this.state=1914,this.match(e.RBRACKET);break;case 20:u=new br(u),this.context=u,h=u,this.state=1915,this.columnIdentifier();break}for(this.context.stop=this.tokenStream.LT(-1),this.state=1989,this.errorHandler.sync(this),C=this.interpreter.adaptivePredict(this.tokenStream,257,this.context);C!==2&&C!==n.ATN.INVALID_ALT_NUMBER;){if(C===1)switch(this.parseListeners!=null&&this.triggerExitRuleEvent(),h=u,this.state=1987,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,256,this.context)){case 1:{if(u=new Dr(new o(r,s)),this.pushNewRecursionContext(u,d,e.RULE_columnExpression),this.state=1918,!this.precpred(this.context,16))throw this.createFailedPredicateException("this.precpred(this.context, 16)");this.state=1919,a=this.tokenStream.LA(1),!(a-204&-32)&&1<<a-204&134479873?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1920,this.columnExpression(17)}break;case 2:{if(u=new Hr(new o(r,s)),this.pushNewRecursionContext(u,d,e.RULE_columnExpression),this.state=1921,!this.precpred(this.context,15))throw this.createFailedPredicateException("this.precpred(this.context, 15)");this.state=1922,a=this.tokenStream.LA(1),!(a-209&-32)&&1<<a-209&16387?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this),this.state=1923,this.columnExpression(16)}break;case 3:{if(u=new Pr(new o(r,s)),this.pushNewRecursionContext(u,d,e.RULE_columnExpression),this.state=1924,!this.precpred(this.context,14))throw this.createFailedPredicateException("this.precpred(this.context, 14)");switch(this.state=1943,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,252,this.context)){case 1:this.state=1925,this.match(e.EQ_DOUBLE);break;case 2:this.state=1926,this.match(e.EQ_SINGLE);break;case 3:this.state=1927,this.match(e.NOT_EQ);break;case 4:this.state=1928,this.match(e.LE);break;case 5:this.state=1929,this.match(e.GE);break;case 6:this.state=1930,this.match(e.LT);break;case 7:this.state=1931,this.match(e.GT);break;case 8:this.state=1933,this.errorHandler.sync(this),a=this.tokenStream.LA(1),a===71&&(this.state=1932,this.match(e.GLOBAL)),this.state=1936,this.errorHandler.sync(this),a=this.tokenStream.LA(1),a===115&&(this.state=1935,this.match(e.NOT)),this.state=1938,this.match(e.IN);break;case 9:this.state=1940,this.errorHandler.sync(this),a=this.tokenStream.LA(1),a===115&&(this.state=1939,this.match(e.NOT)),this.state=1942,a=this.tokenStream.LA(1),a===79||a===98?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this);break}this.state=1945,this.columnExpression(15)}break;case 4:{if(u=new pr(new o(r,s)),this.pushNewRecursionContext(u,d,e.RULE_columnExpression),this.state=1946,!this.precpred(this.context,11))throw this.createFailedPredicateException("this.precpred(this.context, 11)");this.state=1947,this.match(e.AND),this.state=1948,this.columnExpression(12)}break;case 5:{if(u=new Vr(new o(r,s)),this.pushNewRecursionContext(u,d,e.RULE_columnExpression),this.state=1949,!this.precpred(this.context,10))throw this.createFailedPredicateException("this.precpred(this.context, 10)");this.state=1950,this.match(e.OR),this.state=1951,this.columnExpression(11)}break;case 6:{if(u=new mr(new o(r,s)),this.pushNewRecursionContext(u,d,e.RULE_columnExpression),this.state=1952,!this.precpred(this.context,9))throw this.createFailedPredicateException("this.precpred(this.context, 9)");this.state=1954,this.errorHandler.sync(this),a=this.tokenStream.LA(1),a===115&&(this.state=1953,this.match(e.NOT)),this.state=1956,this.match(e.BETWEEN),this.state=1957,this.columnExpression(0),this.state=1958,this.match(e.AND),this.state=1959,this.columnExpression(10)}break;case 7:{if(u=new Ir(new o(r,s)),this.pushNewRecursionContext(u,d,e.RULE_columnExpression),this.state=1961,!this.precpred(this.context,8))throw this.createFailedPredicateException("this.precpred(this.context, 8)");this.state=1962,this.match(e.QUESTIONMARK),this.state=1963,this.columnExpression(0),this.state=1964,this.match(e.COLON),this.state=1965,this.columnExpression(8)}break;case 8:{if(u=new xr(new o(r,s)),this.pushNewRecursionContext(u,d,e.RULE_columnExpression),this.state=1967,!this.precpred(this.context,19))throw this.createFailedPredicateException("this.precpred(this.context, 19)");this.state=1968,this.match(e.LBRACKET),this.state=1969,this.columnExpression(0),this.state=1970,this.match(e.RBRACKET)}break;case 9:{if(u=new yr(new o(r,s)),this.pushNewRecursionContext(u,d,e.RULE_columnExpression),this.state=1972,!this.precpred(this.context,18))throw this.createFailedPredicateException("this.precpred(this.context, 18)");this.state=1973,this.match(e.DOT),this.state=1974,this.match(e.DECIMAL_LITERAL)}break;case 10:{if(u=new cr(new o(r,s)),this.pushNewRecursionContext(u,d,e.RULE_columnExpression),this.state=1975,!this.precpred(this.context,13))throw this.createFailedPredicateException("this.precpred(this.context, 13)");this.state=1976,this.match(e.IS),this.state=1978,this.errorHandler.sync(this),a=this.tokenStream.LA(1),a===115&&(this.state=1977,this.match(e.NOT)),this.state=1980,this.match(e.NULL_SQL)}break;case 11:{if(u=new fr(new o(r,s)),this.pushNewRecursionContext(u,d,e.RULE_columnExpression),this.state=1981,!this.precpred(this.context,7))throw this.createFailedPredicateException("this.precpred(this.context, 7)");switch(this.state=1985,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.DATE:case e.FIRST:case e.ID:case e.KEY:case e.IDENTIFIER:this.state=1982,this.alias();break;case e.AS:this.state=1983,this.match(e.AS),this.state=1984,this.identifier();break;default:throw new n.NoViableAltException(this)}}break}this.state=1991,this.errorHandler.sync(this),C=this.interpreter.adaptivePredict(this.tokenStream,257,this.context)}}}catch(C){if(C instanceof n.RecognitionException)this.errorHandler.reportError(this,C),this.errorHandler.recover(this,C);else throw C}finally{this.unrollRecursionContexts(r)}return u}columnArgumentList(){let t=new ve(this.context,this.state);this.enterRule(t,216,e.RULE_columnArgumentList);let r;try{for(this.enterOuterAlt(t,1),this.state=1992,this.columnArgumentExpression(),this.state=1997,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=1993,this.match(e.COMMA),this.state=1994,this.columnArgumentExpression(),this.state=1999,this.errorHandler.sync(this),r=this.tokenStream.LA(1)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}columnArgumentExpression(){let t=new Ut(this.context,this.state);this.enterRule(t,218,e.RULE_columnArgumentExpression);try{switch(this.state=2002,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,259,this.context)){case 1:this.enterOuterAlt(t,1),this.state=2e3,this.columnLambdaExpression();break;case 2:this.enterOuterAlt(t,2),this.state=2001,this.columnExpression(0);break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}columnLambdaExpression(){let t=new He(this.context,this.state);this.enterRule(t,220,e.RULE_columnLambdaExpression);let r;try{this.enterOuterAlt(t,1);{switch(this.state=2023,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.LPAREN:{for(this.state=2004,this.match(e.LPAREN),this.state=2005,this.identifier(),this.state=2010,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=2006,this.match(e.COMMA),this.state=2007,this.identifier(),this.state=2012,this.errorHandler.sync(this),r=this.tokenStream.LA(1);this.state=2013,this.match(e.RPAREN)}break;case e.AFTER:case e.ALIAS:case e.ALL:case e.ALTER:case e.AND:case e.ANTI:case e.ANY:case e.ARRAY:case e.AS:case e.ASCENDING:case e.ASOF:case e.AST:case e.ASYNC:case e.ATTACH:case e.BETWEEN:case e.BOTH:case e.BY:case e.CASE:case e.CAST:case e.CHECK:case e.CLEAR:case e.CLUSTER:case e.CODEC:case e.COLLATE:case e.COLUMN:case e.COMMENT:case e.CONSTRAINT:case e.CREATE:case e.CROSS:case e.CUBE:case e.CURRENT:case e.DATABASE:case e.DATABASES:case e.DATE:case e.DAY:case e.DEDUPLICATE:case e.DEFAULT:case e.DELAY:case e.DELETE:case e.DESC:case e.DESCENDING:case e.DESCRIBE:case e.DETACH:case e.DICTIONARIES:case e.DICTIONARY:case e.DISK:case e.DISTINCT:case e.DISTRIBUTED:case e.DROP:case e.ELSE:case e.END:case e.ENGINE:case e.EVENTS:case e.EXISTS:case e.EXPLAIN:case e.EXPRESSION:case e.EXTRACT:case e.FETCHES:case e.FINAL:case e.FIRST:case e.FLUSH:case e.FOLLOWING:case e.FOR:case e.FORMAT:case e.FREEZE:case e.FROM:case e.FULL:case e.FUNCTION:case e.GLOBAL:case e.GRANULARITY:case e.GROUP:case e.HAVING:case e.HIERARCHICAL:case e.HOUR:case e.ID:case e.IF:case e.ILIKE:case e.IN:case e.INDEX:case e.INJECTIVE:case e.INNER:case e.INSERT:case e.INTERVAL:case e.INTO:case e.IS:case e.IS_OBJECT_ID:case e.JOIN:case e.KEY:case e.KILL:case e.LAST:case e.LAYOUT:case e.LEADING:case e.LEFT:case e.LIFETIME:case e.LIKE:case e.LIMIT:case e.LIVE:case e.LOCAL:case e.LOGS:case e.MATERIALIZE:case e.MATERIALIZED:case e.MAX:case e.MERGES:case e.MIN:case e.MINUTE:case e.MODIFY:case e.MONTH:case e.MOVE:case e.MUTATION:case e.NO:case e.NOT:case e.NULLS:case e.OFFSET:case e.ON:case e.OPTIMIZE:case e.OR:case e.ORDER:case e.OUTER:case e.OUTFILE:case e.OVER:case e.PARTITION:case e.POPULATE:case e.PRECEDING:case e.PREWHERE:case e.PRIMARY:case e.QUARTER:case e.RANGE:case e.RELOAD:case e.REMOVE:case e.RENAME:case e.REPLACE:case e.REPLICA:case e.REPLICATED:case e.RIGHT:case e.ROLLUP:case e.ROW:case e.ROWS:case e.SAMPLE:case e.SECOND:case e.SELECT:case e.SEMI:case e.SENDS:case e.SET:case e.SETTINGS:case e.SHOW:case e.SOURCE:case e.START:case e.STOP:case e.SUBSTRING:case e.SYNC:case e.SYNTAX:case e.SYSTEM:case e.TABLE:case e.TABLES:case e.TEMPORARY:case e.TEST:case e.THEN:case e.TIES:case e.TIMEOUT:case e.TIMESTAMP:case e.TO:case e.TOP:case e.TOTALS:case e.TRAILING:case e.TRIM:case e.TRUNCATE:case e.TTL:case e.TYPE:case e.UNBOUNDED:case e.UNION:case e.UPDATE:case e.USE:case e.USING:case e.UUID:case e.VALUES:case e.VIEW:case e.VOLUME:case e.WATCH:case e.WEEK:case e.WHEN:case e.WHERE:case e.WINDOW:case e.WITH:case e.YEAR:case e.JSON_FALSE:case e.JSON_TRUE:case e.IDENTIFIER:for(this.state=2015,this.identifier(),this.state=2020,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=2016,this.match(e.COMMA),this.state=2017,this.identifier(),this.state=2022,this.errorHandler.sync(this),r=this.tokenStream.LA(1);break;default:throw new n.NoViableAltException(this)}this.state=2025,this.match(e.ARROW),this.state=2026,this.columnExpression(0)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}columnIdentifier(){let t=new m(this.context,this.state);this.enterRule(t,222,e.RULE_columnIdentifier);try{this.enterOuterAlt(t,1);{switch(this.state=2031,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,263,this.context)){case 1:this.state=2028,this.tableIdentifier(),this.state=2029,this.match(e.DOT);break}switch(this.state=2033,this.identifier(),this.state=2036,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,264,this.context)){case 1:this.state=2034,this.match(e.DOT),this.state=2035,this.identifier();break}}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}tableExpression(t){t===void 0&&(t=0);let r=this.context,s=this.state,u=new g(this.context,s),h=u,d=224;this.enterRecursionRule(u,224,e.RULE_tableExpression,t);try{let a;this.enterOuterAlt(u,1);{switch(this.state=2045,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,265,this.context)){case 1:u=new Wr(u),this.context=u,h=u,this.state=2039,this.tableIdentifier();break;case 2:u=new Gr(u),this.context=u,h=u,this.state=2040,this.tableFunctionExpression();break;case 3:u=new Xr(u),this.context=u,h=u,this.state=2041,this.match(e.LPAREN),this.state=2042,this.selectUnionStatement(),this.state=2043,this.match(e.RPAREN);break}for(this.context.stop=this.tokenStream.LT(-1),this.state=2055,this.errorHandler.sync(this),a=this.interpreter.adaptivePredict(this.tokenStream,267,this.context);a!==2&&a!==n.ATN.INVALID_ALT_NUMBER;){if(a===1){this.parseListeners!=null&&this.triggerExitRuleEvent(),h=u;{if(u=new Yr(new g(r,s)),this.pushNewRecursionContext(u,d,e.RULE_tableExpression),this.state=2047,!this.precpred(this.context,1))throw this.createFailedPredicateException("this.precpred(this.context, 1)");switch(this.state=2051,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.DATE:case e.FIRST:case e.ID:case e.KEY:case e.IDENTIFIER:this.state=2048,this.alias();break;case e.AS:this.state=2049,this.match(e.AS),this.state=2050,this.identifier();break;default:throw new n.NoViableAltException(this)}}}this.state=2057,this.errorHandler.sync(this),a=this.interpreter.adaptivePredict(this.tokenStream,267,this.context)}}}catch(a){if(a instanceof n.RecognitionException)this.errorHandler.reportError(this,a),this.errorHandler.recover(this,a);else throw a}finally{this.unrollRecursionContexts(r)}return u}tableFunctionExpression(){let t=new Y(this.context,this.state);this.enterRule(t,226,e.RULE_tableFunctionExpression);let r;try{this.enterOuterAlt(t,1),this.state=2058,this.identifier(),this.state=2059,this.match(e.LPAREN),this.state=2061,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(!(r&-32)&&1<<r&4294967292||!(r-32&-32)&&1<<r-32&4290772991||!(r-64&-32)&&1<<r-64&4294967295||!(r-96&-32)&&1<<r-96&2147483647||!(r-129&-32)&&1<<r-129&4294967215||!(r-161&-32)&&1<<r-161&4294950911||!(r-193&-32)&&1<<r-193&1074136063)&&(this.state=2060,this.tableArgList()),this.state=2063,this.match(e.RPAREN)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}tableIdentifier(){let t=new E(this.context,this.state);this.enterRule(t,228,e.RULE_tableIdentifier);try{this.enterOuterAlt(t,1);{switch(this.state=2068,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,269,this.context)){case 1:this.state=2065,this.databaseIdentifier(),this.state=2066,this.match(e.DOT);break}this.state=2070,this.identifier()}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}tableArgList(){let t=new De(this.context,this.state);this.enterRule(t,230,e.RULE_tableArgList);let r;try{for(this.enterOuterAlt(t,1),this.state=2072,this.tableArgExpression(),this.state=2077,this.errorHandler.sync(this),r=this.tokenStream.LA(1);r===208;)this.state=2073,this.match(e.COMMA),this.state=2074,this.tableArgExpression(),this.state=2079,this.errorHandler.sync(this),r=this.tokenStream.LA(1)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}tableArgExpression(){let t=new Mt(this.context,this.state);this.enterRule(t,232,e.RULE_tableArgExpression);try{switch(this.state=2083,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,271,this.context)){case 1:this.enterOuterAlt(t,1),this.state=2080,this.columnIdentifier();break;case 2:this.enterOuterAlt(t,2),this.state=2081,this.tableFunctionExpression();break;case 3:this.enterOuterAlt(t,3),this.state=2082,this.literal();break}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}databaseIdentifier(){let t=new P(this.context,this.state);this.enterRule(t,234,e.RULE_databaseIdentifier);try{this.enterOuterAlt(t,1),this.state=2085,this.identifier()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}floatingLiteral(){let t=new Ue(this.context,this.state);this.enterRule(t,236,e.RULE_floatingLiteral);let r;try{switch(this.state=2095,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.FLOATING_LITERAL:this.enterOuterAlt(t,1),this.state=2087,this.match(e.FLOATING_LITERAL);break;case e.DOT:this.enterOuterAlt(t,2),this.state=2088,this.match(e.DOT),this.state=2089,r=this.tokenStream.LA(1),r===199||r===200?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this);break;case e.DECIMAL_LITERAL:switch(this.enterOuterAlt(t,3),this.state=2090,this.match(e.DECIMAL_LITERAL),this.state=2091,this.match(e.DOT),this.state=2093,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,272,this.context)){case 1:this.state=2092,r=this.tokenStream.LA(1),r===199||r===200?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this);break}break;default:throw new n.NoViableAltException(this)}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}numberLiteral(){let t=new F(this.context,this.state);this.enterRule(t,238,e.RULE_numberLiteral);let r;try{switch(this.enterOuterAlt(t,1),this.state=2098,this.errorHandler.sync(this),r=this.tokenStream.LA(1),(r===210||r===223)&&(this.state=2097,r=this.tokenStream.LA(1),r===210||r===223?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this)),this.state=2106,this.errorHandler.sync(this),this.interpreter.adaptivePredict(this.tokenStream,275,this.context)){case 1:this.state=2100,this.floatingLiteral();break;case 2:this.state=2101,this.match(e.OCTAL_LITERAL);break;case 3:this.state=2102,this.match(e.DECIMAL_LITERAL);break;case 4:this.state=2103,this.match(e.HEXADECIMAL_LITERAL);break;case 5:this.state=2104,this.match(e.INF);break;case 6:this.state=2105,this.match(e.NAN_SQL);break}}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}literal(){let t=new y(this.context,this.state);this.enterRule(t,240,e.RULE_literal);try{switch(this.state=2111,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.INF:case e.NAN_SQL:case e.FLOATING_LITERAL:case e.OCTAL_LITERAL:case e.DECIMAL_LITERAL:case e.HEXADECIMAL_LITERAL:case e.DASH:case e.DOT:case e.PLUS:this.enterOuterAlt(t,1),this.state=2108,this.numberLiteral();break;case e.STRING_LITERAL:this.enterOuterAlt(t,2),this.state=2109,this.match(e.STRING_LITERAL);break;case e.NULL_SQL:this.enterOuterAlt(t,3),this.state=2110,this.match(e.NULL_SQL);break;default:throw new n.NoViableAltException(this)}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}interval(){let t=new _(this.context,this.state);this.enterRule(t,242,e.RULE_interval);let r;try{this.enterOuterAlt(t,1),this.state=2113,r=this.tokenStream.LA(1),r===36||r===76||!(r-108&-32)&&1<<r-108&67108869||r===148||r===189||r===194?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}keyword(){let t=new Me(this.context,this.state);this.enterRule(t,244,e.RULE_keyword);let r;try{this.enterOuterAlt(t,1),this.state=2115,r=this.tokenStream.LA(1),!(r&-32)&&1<<r&4294967292||!(r-32&-32)&&1<<r-32&4290772975||!(r-64&-32)&&1<<r-64&4294701055||!(r-96&-32)&&1<<r-96&2146283519||!(r-129&-32)&&1<<r-129&4294442895||!(r-161&-32)&&1<<r-161&4026515455||!(r-193&-32)&&1<<r-193&13?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}keywordForAlias(){let t=new Fe(this.context,this.state);this.enterRule(t,246,e.RULE_keywordForAlias);let r;try{this.enterOuterAlt(t,1),this.state=2117,r=this.tokenStream.LA(1),r===35||r===62||r===77||r===91?(this.errorHandler.reportMatch(this),this.consume()):this.errorHandler.recoverInline(this)}catch(s){if(s instanceof n.RecognitionException)this.errorHandler.reportError(this,s),this.errorHandler.recover(this,s);else throw s}finally{this.exitRule()}return t}alias(){let t=new Ft(this.context,this.state);this.enterRule(t,248,e.RULE_alias);try{switch(this.state=2121,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.IDENTIFIER:this.enterOuterAlt(t,1),this.state=2119,this.match(e.IDENTIFIER);break;case e.DATE:case e.FIRST:case e.ID:case e.KEY:this.enterOuterAlt(t,2),this.state=2120,this.keywordForAlias();break;default:throw new n.NoViableAltException(this)}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}identifier(){let t=new c(this.context,this.state);this.enterRule(t,250,e.RULE_identifier);try{switch(this.state=2126,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.IDENTIFIER:this.enterOuterAlt(t,1),this.state=2123,this.match(e.IDENTIFIER);break;case e.DAY:case e.HOUR:case e.MINUTE:case e.MONTH:case e.QUARTER:case e.SECOND:case e.WEEK:case e.YEAR:this.enterOuterAlt(t,2),this.state=2124,this.interval();break;case e.AFTER:case e.ALIAS:case e.ALL:case e.ALTER:case e.AND:case e.ANTI:case e.ANY:case e.ARRAY:case e.AS:case e.ASCENDING:case e.ASOF:case e.AST:case e.ASYNC:case e.ATTACH:case e.BETWEEN:case e.BOTH:case e.BY:case e.CASE:case e.CAST:case e.CHECK:case e.CLEAR:case e.CLUSTER:case e.CODEC:case e.COLLATE:case e.COLUMN:case e.COMMENT:case e.CONSTRAINT:case e.CREATE:case e.CROSS:case e.CUBE:case e.CURRENT:case e.DATABASE:case e.DATABASES:case e.DATE:case e.DEDUPLICATE:case e.DEFAULT:case e.DELAY:case e.DELETE:case e.DESC:case e.DESCENDING:case e.DESCRIBE:case e.DETACH:case e.DICTIONARIES:case e.DICTIONARY:case e.DISK:case e.DISTINCT:case e.DISTRIBUTED:case e.DROP:case e.ELSE:case e.END:case e.ENGINE:case e.EVENTS:case e.EXISTS:case e.EXPLAIN:case e.EXPRESSION:case e.EXTRACT:case e.FETCHES:case e.FINAL:case e.FIRST:case e.FLUSH:case e.FOLLOWING:case e.FOR:case e.FORMAT:case e.FREEZE:case e.FROM:case e.FULL:case e.FUNCTION:case e.GLOBAL:case e.GRANULARITY:case e.GROUP:case e.HAVING:case e.HIERARCHICAL:case e.ID:case e.IF:case e.ILIKE:case e.IN:case e.INDEX:case e.INJECTIVE:case e.INNER:case e.INSERT:case e.INTERVAL:case e.INTO:case e.IS:case e.IS_OBJECT_ID:case e.JOIN:case e.KEY:case e.KILL:case e.LAST:case e.LAYOUT:case e.LEADING:case e.LEFT:case e.LIFETIME:case e.LIKE:case e.LIMIT:case e.LIVE:case e.LOCAL:case e.LOGS:case e.MATERIALIZE:case e.MATERIALIZED:case e.MAX:case e.MERGES:case e.MIN:case e.MODIFY:case e.MOVE:case e.MUTATION:case e.NO:case e.NOT:case e.NULLS:case e.OFFSET:case e.ON:case e.OPTIMIZE:case e.OR:case e.ORDER:case e.OUTER:case e.OUTFILE:case e.OVER:case e.PARTITION:case e.POPULATE:case e.PRECEDING:case e.PREWHERE:case e.PRIMARY:case e.RANGE:case e.RELOAD:case e.REMOVE:case e.RENAME:case e.REPLACE:case e.REPLICA:case e.REPLICATED:case e.RIGHT:case e.ROLLUP:case e.ROW:case e.ROWS:case e.SAMPLE:case e.SELECT:case e.SEMI:case e.SENDS:case e.SET:case e.SETTINGS:case e.SHOW:case e.SOURCE:case e.START:case e.STOP:case e.SUBSTRING:case e.SYNC:case e.SYNTAX:case e.SYSTEM:case e.TABLE:case e.TABLES:case e.TEMPORARY:case e.TEST:case e.THEN:case e.TIES:case e.TIMEOUT:case e.TIMESTAMP:case e.TO:case e.TOP:case e.TOTALS:case e.TRAILING:case e.TRIM:case e.TRUNCATE:case e.TTL:case e.TYPE:case e.UNBOUNDED:case e.UNION:case e.UPDATE:case e.USE:case e.USING:case e.UUID:case e.VALUES:case e.VIEW:case e.VOLUME:case e.WATCH:case e.WHEN:case e.WHERE:case e.WINDOW:case e.WITH:case e.JSON_FALSE:case e.JSON_TRUE:this.enterOuterAlt(t,3),this.state=2125,this.keyword();break;default:throw new n.NoViableAltException(this)}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}identifierOrNull(){let t=new wt(this.context,this.state);this.enterRule(t,252,e.RULE_identifierOrNull);try{switch(this.state=2130,this.errorHandler.sync(this),this.tokenStream.LA(1)){case e.AFTER:case e.ALIAS:case e.ALL:case e.ALTER:case e.AND:case e.ANTI:case e.ANY:case e.ARRAY:case e.AS:case e.ASCENDING:case e.ASOF:case e.AST:case e.ASYNC:case e.ATTACH:case e.BETWEEN:case e.BOTH:case e.BY:case e.CASE:case e.CAST:case e.CHECK:case e.CLEAR:case e.CLUSTER:case e.CODEC:case e.COLLATE:case e.COLUMN:case e.COMMENT:case e.CONSTRAINT:case e.CREATE:case e.CROSS:case e.CUBE:case e.CURRENT:case e.DATABASE:case e.DATABASES:case e.DATE:case e.DAY:case e.DEDUPLICATE:case e.DEFAULT:case e.DELAY:case e.DELETE:case e.DESC:case e.DESCENDING:case e.DESCRIBE:case e.DETACH:case e.DICTIONARIES:case e.DICTIONARY:case e.DISK:case e.DISTINCT:case e.DISTRIBUTED:case e.DROP:case e.ELSE:case e.END:case e.ENGINE:case e.EVENTS:case e.EXISTS:case e.EXPLAIN:case e.EXPRESSION:case e.EXTRACT:case e.FETCHES:case e.FINAL:case e.FIRST:case e.FLUSH:case e.FOLLOWING:case e.FOR:case e.FORMAT:case e.FREEZE:case e.FROM:case e.FULL:case e.FUNCTION:case e.GLOBAL:case e.GRANULARITY:case e.GROUP:case e.HAVING:case e.HIERARCHICAL:case e.HOUR:case e.ID:case e.IF:case e.ILIKE:case e.IN:case e.INDEX:case e.INJECTIVE:case e.INNER:case e.INSERT:case e.INTERVAL:case e.INTO:case e.IS:case e.IS_OBJECT_ID:case e.JOIN:case e.KEY:case e.KILL:case e.LAST:case e.LAYOUT:case e.LEADING:case e.LEFT:case e.LIFETIME:case e.LIKE:case e.LIMIT:case e.LIVE:case e.LOCAL:case e.LOGS:case e.MATERIALIZE:case e.MATERIALIZED:case e.MAX:case e.MERGES:case e.MIN:case e.MINUTE:case e.MODIFY:case e.MONTH:case e.MOVE:case e.MUTATION:case e.NO:case e.NOT:case e.NULLS:case e.OFFSET:case e.ON:case e.OPTIMIZE:case e.OR:case e.ORDER:case e.OUTER:case e.OUTFILE:case e.OVER:case e.PARTITION:case e.POPULATE:case e.PRECEDING:case e.PREWHERE:case e.PRIMARY:case e.QUARTER:case e.RANGE:case e.RELOAD:case e.REMOVE:case e.RENAME:case e.REPLACE:case e.REPLICA:case e.REPLICATED:case e.RIGHT:case e.ROLLUP:case e.ROW:case e.ROWS:case e.SAMPLE:case e.SECOND:case e.SELECT:case e.SEMI:case e.SENDS:case e.SET:case e.SETTINGS:case e.SHOW:case e.SOURCE:case e.START:case e.STOP:case e.SUBSTRING:case e.SYNC:case e.SYNTAX:case e.SYSTEM:case e.TABLE:case e.TABLES:case e.TEMPORARY:case e.TEST:case e.THEN:case e.TIES:case e.TIMEOUT:case e.TIMESTAMP:case e.TO:case e.TOP:case e.TOTALS:case e.TRAILING:case e.TRIM:case e.TRUNCATE:case e.TTL:case e.TYPE:case e.UNBOUNDED:case e.UNION:case e.UPDATE:case e.USE:case e.USING:case e.UUID:case e.VALUES:case e.VIEW:case e.VOLUME:case e.WATCH:case e.WEEK:case e.WHEN:case e.WHERE:case e.WINDOW:case e.WITH:case e.YEAR:case e.JSON_FALSE:case e.JSON_TRUE:case e.IDENTIFIER:this.enterOuterAlt(t,1),this.state=2128,this.identifier();break;case e.NULL_SQL:this.enterOuterAlt(t,2),this.state=2129,this.match(e.NULL_SQL);break;default:throw new n.NoViableAltException(this)}}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}enumValue(){let t=new Bt(this.context,this.state);this.enterRule(t,254,e.RULE_enumValue);try{this.enterOuterAlt(t,1),this.state=2132,this.match(e.STRING_LITERAL),this.state=2133,this.match(e.EQ_SINGLE),this.state=2134,this.numberLiteral()}catch(r){if(r instanceof n.RecognitionException)this.errorHandler.reportError(this,r),this.errorHandler.recover(this,r);else throw r}finally{this.exitRule()}return t}sempred(t,r,s){switch(r){case 24:return this.dictionaryAttributeDefinition_sempred(t,s);case 25:return this.dictionaryEngineClause_sempred(t,s);case 38:return this.engineClause_sempred(t,s);case 81:return this.joinExpression_sempred(t,s);case 107:return this.columnExpression_sempred(t,s);case 112:return this.tableExpression_sempred(t,s)}return!0}dictionaryAttributeDefinition_sempred(t,r){switch(r){case 0:return!t.attrs.has("default");case 1:return!t.attrs.has("expression");case 2:return!t.attrs.has("hierarchical");case 3:return!t.attrs.has("injective");case 4:return!t.attrs.has("is_object_id")}return!0}dictionaryEngineClause_sempred(t,r){switch(r){case 5:return!t.clauses.has("source");case 6:return!t.clauses.has("lifetime");case 7:return!t.clauses.has("layout");case 8:return!t.clauses.has("range");case 9:return!t.clauses.has("settings")}return!0}engineClause_sempred(t,r){switch(r){case 10:return!t.clauses.has("orderByClause");case 11:return!t.clauses.has("partitionByClause");case 12:return!t.clauses.has("primaryKeyClause");case 13:return!t.clauses.has("sampleByClause");case 14:return!t.clauses.has("ttlClause");case 15:return!t.clauses.has("settingsClause")}return!0}joinExpression_sempred(t,r){switch(r){case 16:return this.precpred(this.context,3);case 17:return this.precpred(this.context,4)}return!0}columnExpression_sempred(t,r){switch(r){case 18:return this.precpred(this.context,16);case 19:return this.precpred(this.context,15);case 20:return this.precpred(this.context,14);case 21:return this.precpred(this.context,11);case 22:return this.precpred(this.context,10);case 23:return this.precpred(this.context,9);case 24:return this.precpred(this.context,8);case 25:return this.precpred(this.context,19);case 26:return this.precpred(this.context,18);case 27:return this.precpred(this.context,13);case 28:return this.precpred(this.context,7)}return!0}tableExpression_sempred(t,r){switch(r){case 29:return this.precpred(this.context,1)}return!0}static{this._serializedATN=[4,1,235,2137,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,7,122,2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,1,0,3,0,258,8,0,1,0,1,0,1,1,1,1,3,1,264,8,1,1,1,1,1,1,1,1,1,3,1,270,8,1,1,2,1,2,1,2,1,2,3,2,276,8,2,1,2,1,2,3,2,280,8,2,1,2,3,2,283,8,2,1,2,3,2,286,8,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,308,8,3,1,3,3,3,311,8,3,1,4,1,4,1,4,1,4,5,4,317,8,4,10,4,12,4,320,9,4,1,5,1,5,3,5,324,8,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,5,6,335,8,6,10,6,12,6,338,9,6,1,6,1,6,1,7,1,7,1,7,1,7,3,7,346,8,7,1,7,1,7,1,7,5,7,351,8,7,10,7,12,7,354,9,7,1,8,1,8,1,8,1,8,1,8,3,8,361,8,8,1,8,1,8,1,8,3,8,366,8,8,1,8,1,8,1,8,1,8,1,8,3,8,373,8,8,1,8,1,8,1,8,3,8,378,8,8,1,8,1,8,1,8,1,8,1,8,3,8,385,8,8,1,8,1,8,1,8,3,8,390,8,8,1,8,1,8,1,8,1,8,3,8,396,8,8,1,8,1,8,1,8,1,8,3,8,402,8,8,1,8,1,8,1,8,3,8,407,8,8,1,8,1,8,1,8,1,8,3,8,413,8,8,1,8,1,8,1,8,3,8,418,8,8,1,8,1,8,1,8,1,8,3,8,424,8,8,1,8,1,8,1,8,3,8,429,8,8,1,8,1,8,1,8,1,8,3,8,435,8,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,449,8,8,1,8,1,8,1,8,1,8,1,8,3,8,456,8,8,1,8,1,8,1,8,1,8,1,8,3,8,463,8,8,1,8,1,8,1,8,1,8,1,8,3,8,470,8,8,1,8,1,8,1,8,1,8,3,8,476,8,8,1,8,1,8,1,8,3,8,481,8,8,1,8,1,8,1,8,1,8,3,8,487,8,8,1,8,1,8,1,8,3,8,492,8,8,1,8,1,8,1,8,1,8,3,8,498,8,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,507,8,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,517,8,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,527,8,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,547,8,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,555,8,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,570,8,8,1,9,1,9,1,9,5,9,575,8,9,10,9,12,9,578,9,9,1,10,1,10,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,12,1,12,3,12,591,8,12,1,13,1,13,1,13,1,13,3,13,597,8,13,1,14,1,14,1,14,1,14,3,14,603,8,14,1,15,1,15,1,15,1,15,3,15,609,8,15,1,15,3,15,612,8,15,1,16,1,16,1,16,1,16,3,16,618,8,16,1,16,3,16,621,8,16,1,16,3,16,624,8,16,1,16,1,16,1,16,1,16,3,16,630,8,16,1,16,1,16,3,16,634,8,16,1,16,3,16,637,8,16,1,16,3,16,640,8,16,1,16,3,16,643,8,16,1,16,3,16,646,8,16,1,17,1,17,1,17,1,17,1,17,3,17,653,8,17,1,17,1,17,3,17,657,8,17,1,17,1,17,1,18,1,18,1,18,1,18,3,18,665,8,18,1,18,3,18,668,8,18,1,18,1,18,1,18,1,18,3,18,674,8,18,1,18,1,18,3,18,678,8,18,1,18,3,18,681,8,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,3,19,692,8,19,1,19,1,19,3,19,696,8,19,1,19,3,19,699,8,19,1,19,1,19,1,19,3,19,704,8,19,3,19,706,8,19,1,19,3,19,709,8,19,1,19,3,19,712,8,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,3,20,722,8,20,1,20,1,20,3,20,726,8,20,1,20,3,20,729,8,20,1,20,3,20,732,8,20,1,20,1,20,1,20,3,20,737,8,20,3,20,739,8,20,1,20,1,20,1,21,1,21,1,21,3,21,746,8,21,1,21,1,21,1,21,1,21,3,21,752,8,21,1,21,1,21,3,21,756,8,21,1,21,3,21,759,8,21,1,21,3,21,762,8,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,3,22,772,8,22,1,23,1,23,1,23,1,23,5,23,778,8,23,10,23,12,23,781,9,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,5,24,806,8,24,10,24,12,24,809,9,24,1,25,3,25,812,8,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,5,25,834,8,25,10,25,12,25,837,9,25,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,3,27,847,8,27,1,27,3,27,850,8,27,1,28,1,28,1,28,1,28,1,28,5,28,857,8,28,10,28,12,28,860,9,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,876,8,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,5,30,885,8,30,10,30,12,30,888,9,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,3,31,905,8,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,3,33,918,8,33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,37,5,37,933,8,37,10,37,12,37,936,9,37,1,37,1,37,1,37,1,37,1,37,1,37,3,37,944,8,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,5,38,971,8,38,10,38,12,38,974,9,38,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,5,42,992,8,42,10,42,12,42,995,9,42,1,43,1,43,3,43,999,8,43,1,43,1,43,1,43,3,43,1004,8,43,1,43,3,43,1007,8,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,3,44,1019,8,44,1,45,1,45,1,45,3,45,1024,8,45,1,45,1,45,3,45,1028,8,45,1,45,3,45,1031,8,45,1,45,1,45,3,45,1035,8,45,1,45,1,45,3,45,1039,8,45,1,45,1,45,1,45,3,45,1044,8,45,1,45,3,45,1047,8,45,1,45,1,45,3,45,1051,8,45,3,45,1053,8,45,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,5,49,1073,8,49,10,49,12,49,1076,9,49,1,49,1,49,1,50,1,50,1,50,3,50,1083,8,50,1,50,3,50,1086,8,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,3,51,1096,8,51,1,52,1,52,3,52,1100,8,52,1,52,1,52,1,53,1,53,1,53,1,53,3,53,1108,8,53,1,53,1,53,3,53,1112,8,53,1,53,1,53,1,53,3,53,1117,8,53,1,53,1,53,3,53,1121,8,53,1,53,1,53,3,53,1125,8,53,1,53,1,53,3,53,1129,8,53,1,53,1,53,3,53,1133,8,53,3,53,1135,8,53,1,54,1,54,1,54,1,54,1,54,1,54,3,54,1143,8,54,1,54,1,54,3,54,1147,8,54,1,54,3,54,1150,8,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,3,55,1173,8,55,1,56,1,56,1,56,3,56,1178,8,56,1,56,1,56,1,56,3,56,1183,8,56,1,56,3,56,1186,8,56,1,56,1,56,1,57,1,57,1,57,1,57,5,57,1194,8,57,10,57,12,57,1197,9,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,3,58,1206,8,58,1,58,1,58,3,58,1210,8,58,1,59,1,59,1,59,3,59,1215,8,59,1,59,1,59,1,59,1,59,3,59,1221,8,59,1,59,5,59,1224,8,59,10,59,12,59,1227,9,59,1,60,1,60,1,60,3,60,1232,8,60,1,60,1,60,3,60,1236,8,60,1,61,1,61,1,61,1,61,3,61,1242,8,61,1,61,3,61,1245,8,61,1,61,3,61,1248,8,61,1,61,3,61,1251,8,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,5,62,1263,8,62,10,62,12,62,1266,9,62,1,62,3,62,1269,8,62,1,63,1,63,3,63,1273,8,63,1,63,1,63,1,63,3,63,1278,8,63,1,63,3,63,1281,8,63,1,63,1,63,1,64,1,64,1,64,1,64,5,64,1289,8,64,10,64,12,64,1292,9,64,1,65,1,65,1,65,1,65,1,65,3,65,1299,8,65,1,66,3,66,1302,8,66,1,66,1,66,3,66,1306,8,66,1,66,3,66,1309,8,66,1,66,1,66,3,66,1313,8,66,1,66,3,66,1316,8,66,1,66,3,66,1319,8,66,1,66,3,66,1322,8,66,1,66,3,66,1325,8,66,1,66,3,66,1328,8,66,1,66,1,66,3,66,1332,8,66,1,66,1,66,3,66,1336,8,66,1,66,3,66,1339,8,66,1,66,3,66,1342,8,66,1,66,3,66,1345,8,66,1,66,3,66,1348,8,66,1,66,3,66,1351,8,66,1,67,1,67,1,67,1,68,1,68,1,68,1,68,3,68,1360,8,68,1,69,1,69,1,69,1,70,3,70,1366,8,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,3,74,1393,8,74,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,1,79,1,79,1,79,1,79,3,79,1415,8,79,1,80,1,80,1,80,1,81,1,81,1,81,3,81,1423,8,81,1,81,3,81,1426,8,81,1,81,1,81,1,81,1,81,3,81,1432,8,81,1,81,1,81,1,81,1,81,1,81,1,81,3,81,1440,8,81,1,81,3,81,1443,8,81,1,81,1,81,1,81,1,81,5,81,1449,8,81,10,81,12,81,1452,9,81,1,82,3,82,1455,8,82,1,82,1,82,1,82,3,82,1460,8,82,1,82,3,82,1463,8,82,1,82,3,82,1466,8,82,1,82,1,82,3,82,1470,8,82,1,82,1,82,3,82,1474,8,82,1,82,3,82,1477,8,82,3,82,1479,8,82,1,82,3,82,1482,8,82,1,82,1,82,3,82,1486,8,82,1,82,1,82,3,82,1490,8,82,1,82,3,82,1493,8,82,3,82,1495,8,82,3,82,1497,8,82,1,83,3,83,1500,8,83,1,83,1,83,1,83,3,83,1505,8,83,1,84,1,84,1,84,1,84,1,84,1,84,1,84,1,84,1,84,3,84,1516,8,84,1,85,1,85,1,85,1,85,3,85,1522,8,85,1,86,1,86,1,86,3,86,1527,8,86,1,87,1,87,1,87,5,87,1532,8,87,10,87,12,87,1535,9,87,1,88,1,88,3,88,1539,8,88,1,88,1,88,3,88,1543,8,88,1,88,1,88,3,88,1547,8,88,1,89,1,89,1,89,3,89,1552,8,89,1,90,1,90,1,90,5,90,1557,8,90,10,90,12,90,1560,9,90,1,91,1,91,1,91,1,91,1,92,3,92,1567,8,92,1,92,3,92,1570,8,92,1,92,3,92,1573,8,92,1,93,1,93,1,93,1,93,1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,96,1,96,1,96,1,96,1,96,1,96,3,96,1592,8,96,1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,97,1,97,3,97,1606,8,97,1,98,1,98,1,98,1,99,1,99,1,99,1,99,1,99,1,99,1,99,1,99,1,99,1,99,1,99,3,99,1622,8,99,1,99,3,99,1625,8,99,1,99,1,99,1,99,1,99,1,99,1,99,1,99,3,99,1634,8,99,1,99,1,99,3,99,1638,8,99,1,99,1,99,1,99,3,99,1643,8,99,1,99,1,99,1,99,3,99,1648,8,99,1,99,3,99,1651,8,99,3,99,1653,8,99,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,3,100,1675,8,100,1,100,3,100,1678,8,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,1,100,3,100,1689,8,100,1,101,1,101,3,101,1693,8,101,1,101,3,101,1696,8,101,1,101,1,101,3,101,1700,8,101,1,101,1,101,3,101,1704,8,101,1,102,1,102,1,102,1,103,1,103,1,103,3,103,1712,8,103,1,103,1,103,3,103,1716,8,103,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,5,104,1727,8,104,10,104,12,104,1730,9,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,5,104,1739,8,104,10,104,12,104,1742,9,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,5,104,1751,8,104,10,104,12,104,1754,9,104,1,104,1,104,1,104,1,104,1,104,3,104,1761,8,104,1,104,1,104,3,104,1765,8,104,1,105,1,105,1,105,5,105,1770,8,105,10,105,12,105,1773,9,105,1,106,1,106,1,106,3,106,1778,8,106,1,106,1,106,1,106,1,106,1,106,1,106,3,106,1786,8,106,1,107,1,107,1,107,3,107,1791,8,107,1,107,1,107,1,107,1,107,1,107,4,107,1798,8,107,11,107,12,107,1799,1,107,1,107,3,107,1804,8,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,3,107,1835,8,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,3,107,1852,8,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,3,107,1864,8,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,3,107,1874,8,107,1,107,3,107,1877,8,107,1,107,1,107,3,107,1881,8,107,1,107,3,107,1884,8,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,3,107,1896,8,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,3,107,1913,8,107,1,107,1,107,3,107,1917,8,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,3,107,1934,8,107,1,107,3,107,1937,8,107,1,107,1,107,3,107,1941,8,107,1,107,3,107,1944,8,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,3,107,1955,8,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,1,107,3,107,1979,8,107,1,107,1,107,1,107,1,107,1,107,3,107,1986,8,107,5,107,1988,8,107,10,107,12,107,1991,9,107,1,108,1,108,1,108,5,108,1996,8,108,10,108,12,108,1999,9,108,1,109,1,109,3,109,2003,8,109,1,110,1,110,1,110,1,110,5,110,2009,8,110,10,110,12,110,2012,9,110,1,110,1,110,1,110,1,110,1,110,5,110,2019,8,110,10,110,12,110,2022,9,110,3,110,2024,8,110,1,110,1,110,1,110,1,111,1,111,1,111,3,111,2032,8,111,1,111,1,111,1,111,3,111,2037,8,111,1,112,1,112,1,112,1,112,1,112,1,112,1,112,3,112,2046,8,112,1,112,1,112,1,112,1,112,3,112,2052,8,112,5,112,2054,8,112,10,112,12,112,2057,9,112,1,113,1,113,1,113,3,113,2062,8,113,1,113,1,113,1,114,1,114,1,114,3,114,2069,8,114,1,114,1,114,1,115,1,115,1,115,5,115,2076,8,115,10,115,12,115,2079,9,115,1,116,1,116,1,116,3,116,2084,8,116,1,117,1,117,1,118,1,118,1,118,1,118,1,118,1,118,3,118,2094,8,118,3,118,2096,8,118,1,119,3,119,2099,8,119,1,119,1,119,1,119,1,119,1,119,1,119,3,119,2107,8,119,1,120,1,120,1,120,3,120,2112,8,120,1,121,1,121,1,122,1,122,1,123,1,123,1,124,1,124,3,124,2122,8,124,1,125,1,125,1,125,3,125,2127,8,125,1,126,1,126,3,126,2131,8,126,1,127,1,127,1,127,1,127,1,127,0,3,162,214,224,128,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,254,0,28,6,0,3,3,24,24,27,27,38,38,104,104,177,177,2,0,15,15,29,29,3,0,3,3,38,38,104,104,2,0,41,41,43,43,2,0,44,44,50,50,3,0,14,14,159,159,165,165,2,0,31,31,144,144,2,0,84,84,96,96,2,0,71,71,101,101,3,0,4,4,8,8,12,12,4,0,4,4,7,8,12,12,150,150,2,0,96,96,143,143,2,0,4,4,8,8,2,0,118,118,208,208,2,0,11,11,41,42,2,0,62,62,93,93,2,0,136,136,146,146,2,0,68,68,80,80,1,0,156,157,3,0,17,17,95,95,173,173,3,0,204,204,222,222,231,231,2,0,209,210,223,223,2,0,79,79,98,98,1,0,199,200,2,0,210,210,223,223,8,0,36,36,76,76,108,108,110,110,134,134,148,148,189,189,194,194,15,0,2,35,37,53,55,75,77,81,83,107,109,109,111,112,114,115,117,126,129,132,136,147,149,174,176,188,190,193,195,196,4,0,35,35,62,62,77,77,91,91,2428,0,257,1,0,0,0,2,269,1,0,0,0,4,285,1,0,0,0,6,310,1,0,0,0,8,312,1,0,0,0,10,321,1,0,0,0,12,330,1,0,0,0,14,341,1,0,0,0,16,569,1,0,0,0,18,571,1,0,0,0,20,579,1,0,0,0,22,583,1,0,0,0,24,590,1,0,0,0,26,592,1,0,0,0,28,598,1,0,0,0,30,604,1,0,0,0,32,620,1,0,0,0,34,647,1,0,0,0,36,667,1,0,0,0,38,685,1,0,0,0,40,715,1,0,0,0,42,742,1,0,0,0,44,771,1,0,0,0,46,773,1,0,0,0,48,784,1,0,0,0,50,811,1,0,0,0,52,838,1,0,0,0,54,842,1,0,0,0,56,851,1,0,0,0,58,864,1,0,0,0,60,879,1,0,0,0,62,892,1,0,0,0,64,908,1,0,0,0,66,913,1,0,0,0,68,919,1,0,0,0,70,922,1,0,0,0,72,925,1,0,0,0,74,943,1,0,0,0,76,945,1,0,0,0,78,975,1,0,0,0,80,979,1,0,0,0,82,983,1,0,0,0,84,987,1,0,0,0,86,996,1,0,0,0,88,1018,1,0,0,0,90,1052,1,0,0,0,92,1054,1,0,0,0,94,1057,1,0,0,0,96,1064,1,0,0,0,98,1067,1,0,0,0,100,1079,1,0,0,0,102,1087,1,0,0,0,104,1097,1,0,0,0,106,1134,1,0,0,0,108,1149,1,0,0,0,110,1172,1,0,0,0,112,1174,1,0,0,0,114,1189,1,0,0,0,116,1209,1,0,0,0,118,1211,1,0,0,0,120,1228,1,0,0,0,122,1237,1,0,0,0,124,1252,1,0,0,0,126,1270,1,0,0,0,128,1284,1,0,0,0,130,1298,1,0,0,0,132,1301,1,0,0,0,134,1352,1,0,0,0,136,1355,1,0,0,0,138,1361,1,0,0,0,140,1365,1,0,0,0,142,1371,1,0,0,0,144,1378,1,0,0,0,146,1381,1,0,0,0,148,1384,1,0,0,0,150,1394,1,0,0,0,152,1397,1,0,0,0,154,1401,1,0,0,0,156,1405,1,0,0,0,158,1410,1,0,0,0,160,1416,1,0,0,0,162,1431,1,0,0,0,164,1496,1,0,0,0,166,1504,1,0,0,0,168,1515,1,0,0,0,170,1517,1,0,0,0,172,1523,1,0,0,0,174,1528,1,0,0,0,176,1536,1,0,0,0,178,1548,1,0,0,0,180,1553,1,0,0,0,182,1561,1,0,0,0,184,1566,1,0,0,0,186,1574,1,0,0,0,188,1578,1,0,0,0,190,1582,1,0,0,0,192,1591,1,0,0,0,194,1605,1,0,0,0,196,1607,1,0,0,0,198,1652,1,0,0,0,200,1688,1,0,0,0,202,1690,1,0,0,0,204,1705,1,0,0,0,206,1708,1,0,0,0,208,1764,1,0,0,0,210,1766,1,0,0,0,212,1785,1,0,0,0,214,1916,1,0,0,0,216,1992,1,0,0,0,218,2002,1,0,0,0,220,2023,1,0,0,0,222,2031,1,0,0,0,224,2045,1,0,0,0,226,2058,1,0,0,0,228,2068,1,0,0,0,230,2072,1,0,0,0,232,2083,1,0,0,0,234,2085,1,0,0,0,236,2095,1,0,0,0,238,2098,1,0,0,0,240,2111,1,0,0,0,242,2113,1,0,0,0,244,2115,1,0,0,0,246,2117,1,0,0,0,248,2121,1,0,0,0,250,2126,1,0,0,0,252,2130,1,0,0,0,254,2132,1,0,0,0,256,258,3,2,1,0,257,256,1,0,0,0,257,258,1,0,0,0,258,259,1,0,0,0,259,260,5,0,0,1,260,1,1,0,0,0,261,263,3,4,2,0,262,264,5,230,0,0,263,262,1,0,0,0,263,264,1,0,0,0,264,270,1,0,0,0,265,266,3,4,2,0,266,267,5,230,0,0,267,268,3,2,1,0,268,270,1,0,0,0,269,261,1,0,0,0,269,265,1,0,0,0,270,3,1,0,0,0,271,275,3,6,3,0,272,273,5,87,0,0,273,274,5,124,0,0,274,276,5,202,0,0,275,272,1,0,0,0,275,276,1,0,0,0,276,279,1,0,0,0,277,278,5,66,0,0,278,280,3,252,126,0,279,277,1,0,0,0,279,280,1,0,0,0,280,282,1,0,0,0,281,283,5,230,0,0,282,281,1,0,0,0,282,283,1,0,0,0,283,286,1,0,0,0,284,286,3,112,56,0,285,271,1,0,0,0,285,284,1,0,0,0,286,5,1,0,0,0,287,311,3,14,7,0,288,311,3,26,13,0,289,311,3,28,14,0,290,311,3,44,22,0,291,311,3,104,52,0,292,311,3,30,15,0,293,311,3,106,53,0,294,311,3,108,54,0,295,311,3,110,55,0,296,311,3,120,60,0,297,311,3,122,61,0,298,311,3,124,62,0,299,311,3,128,64,0,300,311,3,196,98,0,301,311,3,198,99,0,302,311,3,200,100,0,303,311,3,202,101,0,304,311,3,204,102,0,305,311,3,206,103,0,306,308,3,8,4,0,307,306,1,0,0,0,307,308,1,0,0,0,308,309,1,0,0,0,309,311,3,132,66,0,310,287,1,0,0,0,310,288,1,0,0,0,310,289,1,0,0,0,310,290,1,0,0,0,310,291,1,0,0,0,310,292,1,0,0,0,310,293,1,0,0,0,310,294,1,0,0,0,310,295,1,0,0,0,310,296,1,0,0,0,310,297,1,0,0,0,310,298,1,0,0,0,310,299,1,0,0,0,310,300,1,0,0,0,310,301,1,0,0,0,310,302,1,0,0,0,310,303,1,0,0,0,310,304,1,0,0,0,310,305,1,0,0,0,310,307,1,0,0,0,311,7,1,0,0,0,312,313,5,193,0,0,313,318,3,10,5,0,314,315,5,208,0,0,315,317,3,10,5,0,316,314,1,0,0,0,317,320,1,0,0,0,318,316,1,0,0,0,318,319,1,0,0,0,319,9,1,0,0,0,320,318,1,0,0,0,321,323,3,250,125,0,322,324,3,12,6,0,323,322,1,0,0,0,323,324,1,0,0,0,324,325,1,0,0,0,325,326,5,10,0,0,326,327,5,219,0,0,327,328,3,6,3,0,328,329,5,229,0,0,329,11,1,0,0,0,330,331,5,219,0,0,331,336,3,250,125,0,332,333,5,208,0,0,333,335,3,250,125,0,334,332,1,0,0,0,335,338,1,0,0,0,336,334,1,0,0,0,336,337,1,0,0,0,337,339,1,0,0,0,338,336,1,0,0,0,339,340,5,229,0,0,340,13,1,0,0,0,341,342,5,5,0,0,342,343,5,162,0,0,343,345,3,228,114,0,344,346,3,66,33,0,345,344,1,0,0,0,345,346,1,0,0,0,346,347,1,0,0,0,347,352,3,16,8,0,348,349,5,208,0,0,349,351,3,16,8,0,350,348,1,0,0,0,351,354,1,0,0,0,352,350,1,0,0,0,352,353,1,0,0,0,353,15,1,0,0,0,354,352,1,0,0,0,355,356,5,1,0,0,356,360,5,26,0,0,357,358,5,78,0,0,358,359,5,115,0,0,359,361,5,56,0,0,360,357,1,0,0,0,360,361,1,0,0,0,361,362,1,0,0,0,362,365,3,90,45,0,363,364,5,2,0,0,364,366,3,222,111,0,365,363,1,0,0,0,365,366,1,0,0,0,366,570,1,0,0,0,367,368,5,1,0,0,368,372,5,81,0,0,369,370,5,78,0,0,370,371,5,115,0,0,371,373,5,56,0,0,372,369,1,0,0,0,372,373,1,0,0,0,373,374,1,0,0,0,374,377,3,94,47,0,375,376,5,2,0,0,376,378,3,222,111,0,377,375,1,0,0,0,377,378,1,0,0,0,378,570,1,0,0,0,379,380,5,1,0,0,380,384,5,133,0,0,381,382,5,78,0,0,382,383,5,115,0,0,383,385,5,56,0,0,384,381,1,0,0,0,384,385,1,0,0,0,385,386,1,0,0,0,386,389,3,96,48,0,387,388,5,2,0,0,388,390,3,222,111,0,389,387,1,0,0,0,389,390,1,0,0,0,390,570,1,0,0,0,391,392,5,15,0,0,392,395,3,24,12,0,393,394,5,68,0,0,394,396,3,228,114,0,395,393,1,0,0,0,395,396,1,0,0,0,396,570,1,0,0,0,397,398,5,22,0,0,398,401,5,26,0,0,399,400,5,78,0,0,400,402,5,56,0,0,401,399,1,0,0,0,401,402,1,0,0,0,402,403,1,0,0,0,403,406,3,222,111,0,404,405,5,80,0,0,405,407,3,24,12,0,406,404,1,0,0,0,406,407,1,0,0,0,407,570,1,0,0,0,408,409,5,22,0,0,409,412,5,81,0,0,410,411,5,78,0,0,411,413,5,56,0,0,412,410,1,0,0,0,412,413,1,0,0,0,413,414,1,0,0,0,414,417,3,222,111,0,415,416,5,80,0,0,416,418,3,24,12,0,417,415,1,0,0,0,417,418,1,0,0,0,418,570,1,0,0,0,419,420,5,22,0,0,420,423,5,133,0,0,421,422,5,78,0,0,422,424,5,56,0,0,423,421,1,0,0,0,423,424,1,0,0,0,424,425,1,0,0,0,425,428,3,222,111,0,426,427,5,80,0,0,427,429,3,24,12,0,428,426,1,0,0,0,428,429,1,0,0,0,429,570,1,0,0,0,430,431,5,27,0,0,431,434,5,26,0,0,432,433,5,78,0,0,433,435,5,56,0,0,434,432,1,0,0,0,434,435,1,0,0,0,435,436,1,0,0,0,436,437,3,222,111,0,437,438,5,202,0,0,438,570,1,0,0,0,439,440,5,40,0,0,440,441,5,191,0,0,441,570,3,214,107,0,442,443,5,44,0,0,443,570,3,24,12,0,444,445,5,50,0,0,445,448,5,26,0,0,446,447,5,78,0,0,447,449,5,56,0,0,448,446,1,0,0,0,448,449,1,0,0,0,449,450,1,0,0,0,450,570,3,222,111,0,451,452,5,50,0,0,452,455,5,81,0,0,453,454,5,78,0,0,454,456,5,56,0,0,455,453,1,0,0,0,455,456,1,0,0,0,456,457,1,0,0,0,457,570,3,222,111,0,458,459,5,50,0,0,459,462,5,133,0,0,460,461,5,78,0,0,461,463,5,56,0,0,462,460,1,0,0,0,462,463,1,0,0,0,463,464,1,0,0,0,464,570,3,222,111,0,465,466,5,50,0,0,466,570,3,24,12,0,467,469,5,67,0,0,468,470,3,24,12,0,469,468,1,0,0,0,469,470,1,0,0,0,470,570,1,0,0,0,471,472,5,103,0,0,472,475,5,81,0,0,473,474,5,78,0,0,474,476,5,56,0,0,475,473,1,0,0,0,475,476,1,0,0,0,476,477,1,0,0,0,477,480,3,222,111,0,478,479,5,80,0,0,479,481,3,24,12,0,480,478,1,0,0,0,480,481,1,0,0,0,481,570,1,0,0,0,482,483,5,103,0,0,483,486,5,133,0,0,484,485,5,78,0,0,485,487,5,56,0,0,486,484,1,0,0,0,486,487,1,0,0,0,487,488,1,0,0,0,488,491,3,222,111,0,489,490,5,80,0,0,490,492,3,24,12,0,491,489,1,0,0,0,491,492,1,0,0,0,492,570,1,0,0,0,493,494,5,109,0,0,494,497,5,26,0,0,495,496,5,78,0,0,496,498,5,56,0,0,497,495,1,0,0,0,497,498,1,0,0,0,498,499,1,0,0,0,499,500,3,222,111,0,500,501,3,98,49,0,501,570,1,0,0,0,502,503,5,109,0,0,503,506,5,26,0,0,504,505,5,78,0,0,505,507,5,56,0,0,506,504,1,0,0,0,506,507,1,0,0,0,507,508,1,0,0,0,508,509,3,222,111,0,509,510,5,27,0,0,510,511,5,202,0,0,511,570,1,0,0,0,512,513,5,109,0,0,513,516,5,26,0,0,514,515,5,78,0,0,515,517,5,56,0,0,516,514,1,0,0,0,516,517,1,0,0,0,517,518,1,0,0,0,518,519,3,222,111,0,519,520,5,138,0,0,520,521,3,22,11,0,521,570,1,0,0,0,522,523,5,109,0,0,523,526,5,26,0,0,524,525,5,78,0,0,525,527,5,56,0,0,526,524,1,0,0,0,526,527,1,0,0,0,527,528,1,0,0,0,528,570,3,90,45,0,529,530,5,109,0,0,530,531,5,122,0,0,531,532,5,18,0,0,532,570,3,214,107,0,533,534,5,109,0,0,534,570,3,84,42,0,535,536,5,111,0,0,536,546,3,24,12,0,537,538,5,170,0,0,538,539,5,47,0,0,539,547,5,202,0,0,540,541,5,170,0,0,541,542,5,187,0,0,542,547,5,202,0,0,543,544,5,170,0,0,544,545,5,162,0,0,545,547,3,228,114,0,546,537,1,0,0,0,546,540,1,0,0,0,546,543,1,0,0,0,547,570,1,0,0,0,548,549,5,138,0,0,549,570,5,177,0,0,550,551,5,139,0,0,551,554,5,26,0,0,552,553,5,78,0,0,553,555,5,56,0,0,554,552,1,0,0,0,554,555,1,0,0,0,555,556,1,0,0,0,556,557,3,222,111,0,557,558,5,170,0,0,558,559,3,222,111,0,559,570,1,0,0,0,560,561,5,140,0,0,561,562,3,24,12,0,562,563,5,68,0,0,563,564,3,228,114,0,564,570,1,0,0,0,565,566,5,181,0,0,566,567,3,18,9,0,567,568,3,146,73,0,568,570,1,0,0,0,569,355,1,0,0,0,569,367,1,0,0,0,569,379,1,0,0,0,569,391,1,0,0,0,569,397,1,0,0,0,569,408,1,0,0,0,569,419,1,0,0,0,569,430,1,0,0,0,569,439,1,0,0,0,569,442,1,0,0,0,569,444,1,0,0,0,569,451,1,0,0,0,569,458,1,0,0,0,569,465,1,0,0,0,569,467,1,0,0,0,569,471,1,0,0,0,569,482,1,0,0,0,569,493,1,0,0,0,569,502,1,0,0,0,569,512,1,0,0,0,569,522,1,0,0,0,569,529,1,0,0,0,569,533,1,0,0,0,569,535,1,0,0,0,569,548,1,0,0,0,569,550,1,0,0,0,569,560,1,0,0,0,569,565,1,0,0,0,570,17,1,0,0,0,571,576,3,20,10,0,572,573,5,208,0,0,573,575,3,20,10,0,574,572,1,0,0,0,575,578,1,0,0,0,576,574,1,0,0,0,576,577,1,0,0,0,577,19,1,0,0,0,578,576,1,0,0,0,579,580,3,222,111,0,580,581,5,213,0,0,581,582,3,214,107,0,582,21,1,0,0,0,583,584,7,0,0,0,584,23,1,0,0,0,585,586,5,126,0,0,586,591,3,214,107,0,587,588,5,126,0,0,588,589,5,77,0,0,589,591,5,202,0,0,590,585,1,0,0,0,590,587,1,0,0,0,591,25,1,0,0,0,592,593,5,15,0,0,593,594,5,46,0,0,594,596,3,228,114,0,595,597,3,66,33,0,596,595,1,0,0,0,596,597,1,0,0,0,597,27,1,0,0,0,598,599,5,21,0,0,599,600,5,162,0,0,600,602,3,228,114,0,601,603,3,24,12,0,602,601,1,0,0,0,602,603,1,0,0,0,603,29,1,0,0,0,604,605,5,40,0,0,605,606,5,68,0,0,606,608,3,228,114,0,607,609,3,66,33,0,608,607,1,0,0,0,608,609,1,0,0,0,609,611,1,0,0,0,610,612,3,146,73,0,611,610,1,0,0,0,611,612,1,0,0,0,612,31,1,0,0,0,613,621,5,15,0,0,614,617,5,29,0,0,615,616,5,121,0,0,616,618,5,140,0,0,617,615,1,0,0,0,617,618,1,0,0,0,618,621,1,0,0,0,619,621,5,140,0,0,620,613,1,0,0,0,620,614,1,0,0,0,620,619,1,0,0,0,621,623,1,0,0,0,622,624,5,164,0,0,623,622,1,0,0,0,623,624,1,0,0,0,624,625,1,0,0,0,625,629,5,162,0,0,626,627,5,78,0,0,627,628,5,115,0,0,628,630,5,56,0,0,629,626,1,0,0,0,629,630,1,0,0,0,630,631,1,0,0,0,631,633,3,228,114,0,632,634,3,68,34,0,633,632,1,0,0,0,633,634,1,0,0,0,634,636,1,0,0,0,635,637,3,66,33,0,636,635,1,0,0,0,636,637,1,0,0,0,637,639,1,0,0,0,638,640,3,74,37,0,639,638,1,0,0,0,639,640,1,0,0,0,640,642,1,0,0,0,641,643,3,76,38,0,642,641,1,0,0,0,642,643,1,0,0,0,643,645,1,0,0,0,644,646,3,72,36,0,645,644,1,0,0,0,645,646,1,0,0,0,646,33,1,0,0,0,647,648,7,1,0,0,648,652,5,33,0,0,649,650,5,78,0,0,650,651,5,115,0,0,651,653,5,56,0,0,652,649,1,0,0,0,652,653,1,0,0,0,653,654,1,0,0,0,654,656,3,250,125,0,655,657,3,66,33,0,656,655,1,0,0,0,656,657,1,0,0,0,657,658,1,0,0,0,658,659,3,86,43,0,659,35,1,0,0,0,660,668,5,15,0,0,661,664,5,29,0,0,662,663,5,121,0,0,663,665,5,140,0,0,664,662,1,0,0,0,664,665,1,0,0,0,665,668,1,0,0,0,666,668,5,140,0,0,667,660,1,0,0,0,667,661,1,0,0,0,667,666,1,0,0,0,668,669,1,0,0,0,669,673,5,46,0,0,670,671,5,78,0,0,671,672,5,115,0,0,672,674,5,56,0,0,673,670,1,0,0,0,673,674,1,0,0,0,674,675,1,0,0,0,675,677,3,228,114,0,676,678,3,68,34,0,677,676,1,0,0,0,677,678,1,0,0,0,678,680,1,0,0,0,679,681,3,66,33,0,680,679,1,0,0,0,680,681,1,0,0,0,681,682,1,0,0,0,682,683,3,46,23,0,683,684,3,50,25,0,684,37,1,0,0,0,685,686,7,1,0,0,686,687,5,100,0,0,687,691,5,186,0,0,688,689,5,78,0,0,689,690,5,115,0,0,690,692,5,56,0,0,691,688,1,0,0,0,691,692,1,0,0,0,692,693,1,0,0,0,693,695,3,228,114,0,694,696,3,68,34,0,695,694,1,0,0,0,695,696,1,0,0,0,696,698,1,0,0,0,697,699,3,66,33,0,698,697,1,0,0,0,698,699,1,0,0,0,699,705,1,0,0,0,700,701,5,193,0,0,701,703,5,168,0,0,702,704,5,200,0,0,703,702,1,0,0,0,703,704,1,0,0,0,704,706,1,0,0,0,705,700,1,0,0,0,705,706,1,0,0,0,706,708,1,0,0,0,707,709,3,70,35,0,708,707,1,0,0,0,708,709,1,0,0,0,709,711,1,0,0,0,710,712,3,74,37,0,711,710,1,0,0,0,711,712,1,0,0,0,712,713,1,0,0,0,713,714,3,72,36,0,714,39,1,0,0,0,715,716,7,1,0,0,716,717,5,104,0,0,717,721,5,186,0,0,718,719,5,78,0,0,719,720,5,115,0,0,720,722,5,56,0,0,721,718,1,0,0,0,721,722,1,0,0,0,722,723,1,0,0,0,723,725,3,228,114,0,724,726,3,68,34,0,725,724,1,0,0,0,725,726,1,0,0,0,726,728,1,0,0,0,727,729,3,66,33,0,728,727,1,0,0,0,728,729,1,0,0,0,729,731,1,0,0,0,730,732,3,74,37,0,731,730,1,0,0,0,731,732,1,0,0,0,732,738,1,0,0,0,733,739,3,70,35,0,734,736,3,76,38,0,735,737,5,129,0,0,736,735,1,0,0,0,736,737,1,0,0,0,737,739,1,0,0,0,738,733,1,0,0,0,738,734,1,0,0,0,739,740,1,0,0,0,740,741,3,72,36,0,741,41,1,0,0,0,742,745,7,1,0,0,743,744,5,121,0,0,744,746,5,140,0,0,745,743,1,0,0,0,745,746,1,0,0,0,746,747,1,0,0,0,747,751,5,186,0,0,748,749,5,78,0,0,749,750,5,115,0,0,750,752,5,56,0,0,751,748,1,0,0,0,751,752,1,0,0,0,752,753,1,0,0,0,753,755,3,228,114,0,754,756,3,68,34,0,755,754,1,0,0,0,755,756,1,0,0,0,756,758,1,0,0,0,757,759,3,66,33,0,758,757,1,0,0,0,758,759,1,0,0,0,759,761,1,0,0,0,760,762,3,74,37,0,761,760,1,0,0,0,761,762,1,0,0,0,762,763,1,0,0,0,763,764,3,72,36,0,764,43,1,0,0,0,765,772,3,34,17,0,766,772,3,36,18,0,767,772,3,38,19,0,768,772,3,40,20,0,769,772,3,32,16,0,770,772,3,42,21,0,771,765,1,0,0,0,771,766,1,0,0,0,771,767,1,0,0,0,771,768,1,0,0,0,771,769,1,0,0,0,771,770,1,0,0,0,772,45,1,0,0,0,773,774,5,219,0,0,774,779,3,48,24,0,775,776,5,208,0,0,776,778,3,48,24,0,777,775,1,0,0,0,778,781,1,0,0,0,779,777,1,0,0,0,779,780,1,0,0,0,780,782,1,0,0,0,781,779,1,0,0,0,782,783,5,229,0,0,783,47,1,0,0,0,784,785,3,250,125,0,785,807,3,208,104,0,786,787,4,24,0,1,787,788,5,38,0,0,788,789,3,240,120,0,789,790,6,24,-1,0,790,806,1,0,0,0,791,792,4,24,1,1,792,793,5,58,0,0,793,794,3,214,107,0,794,795,6,24,-1,0,795,806,1,0,0,0,796,797,4,24,2,1,797,798,5,75,0,0,798,806,6,24,-1,0,799,800,4,24,3,1,800,801,5,83,0,0,801,806,6,24,-1,0,802,803,4,24,4,1,803,804,5,89,0,0,804,806,6,24,-1,0,805,786,1,0,0,0,805,791,1,0,0,0,805,796,1,0,0,0,805,799,1,0,0,0,805,802,1,0,0,0,806,809,1,0,0,0,807,805,1,0,0,0,807,808,1,0,0,0,808,49,1,0,0,0,809,807,1,0,0,0,810,812,3,52,26,0,811,810,1,0,0,0,811,812,1,0,0,0,812,835,1,0,0,0,813,814,4,25,5,1,814,815,3,56,28,0,815,816,6,25,-1,0,816,834,1,0,0,0,817,818,4,25,6,1,818,819,3,58,29,0,819,820,6,25,-1,0,820,834,1,0,0,0,821,822,4,25,7,1,822,823,3,60,30,0,823,824,6,25,-1,0,824,834,1,0,0,0,825,826,4,25,8,1,826,827,3,62,31,0,827,828,6,25,-1,0,828,834,1,0,0,0,829,830,4,25,9,1,830,831,3,64,32,0,831,832,6,25,-1,0,832,834,1,0,0,0,833,813,1,0,0,0,833,817,1,0,0,0,833,821,1,0,0,0,833,825,1,0,0,0,833,829,1,0,0,0,834,837,1,0,0,0,835,833,1,0,0,0,835,836,1,0,0,0,836,51,1,0,0,0,837,835,1,0,0,0,838,839,5,132,0,0,839,840,5,91,0,0,840,841,3,210,105,0,841,53,1,0,0,0,842,849,3,250,125,0,843,846,3,250,125,0,844,845,5,219,0,0,845,847,5,229,0,0,846,844,1,0,0,0,846,847,1,0,0,0,847,850,1,0,0,0,848,850,3,240,120,0,849,843,1,0,0,0,849,848,1,0,0,0,850,55,1,0,0,0,851,852,5,155,0,0,852,853,5,219,0,0,853,854,3,250,125,0,854,858,5,219,0,0,855,857,3,54,27,0,856,855,1,0,0,0,857,860,1,0,0,0,858,856,1,0,0,0,858,859,1,0,0,0,859,861,1,0,0,0,860,858,1,0,0,0,861,862,5,229,0,0,862,863,5,229,0,0,863,57,1,0,0,0,864,865,5,97,0,0,865,875,5,219,0,0,866,876,5,200,0,0,867,868,5,107,0,0,868,869,5,200,0,0,869,870,5,105,0,0,870,876,5,200,0,0,871,872,5,105,0,0,872,873,5,200,0,0,873,874,5,107,0,0,874,876,5,200,0,0,875,866,1,0,0,0,875,867,1,0,0,0,875,871,1,0,0,0,876,877,1,0,0,0,877,878,5,229,0,0,878,59,1,0,0,0,879,880,5,94,0,0,880,881,5,219,0,0,881,882,3,250,125,0,882,886,5,219,0,0,883,885,3,54,27,0,884,883,1,0,0,0,885,888,1,0,0,0,886,884,1,0,0,0,886,887,1,0,0,0,887,889,1,0,0,0,888,886,1,0,0,0,889,890,5,229,0,0,890,891,5,229,0,0,891,61,1,0,0,0,892,893,5,136,0,0,893,904,5,219,0,0,894,895,5,107,0,0,895,896,3,250,125,0,896,897,5,105,0,0,897,898,3,250,125,0,898,905,1,0,0,0,899,900,5,105,0,0,900,901,3,250,125,0,901,902,5,107,0,0,902,903,3,250,125,0,903,905,1,0,0,0,904,894,1,0,0,0,904,899,1,0,0,0,905,906,1,0,0,0,906,907,5,229,0,0,907,63,1,0,0,0,908,909,5,153,0,0,909,910,5,219,0,0,910,911,3,180,90,0,911,912,5,229,0,0,912,65,1,0,0,0,913,914,5,119,0,0,914,917,5,23,0,0,915,918,3,250,125,0,916,918,5,202,0,0,917,915,1,0,0,0,917,916,1,0,0,0,918,67,1,0,0,0,919,920,5,184,0,0,920,921,5,202,0,0,921,69,1,0,0,0,922,923,5,170,0,0,923,924,3,228,114,0,924,71,1,0,0,0,925,926,5,10,0,0,926,927,3,128,64,0,927,73,1,0,0,0,928,929,5,219,0,0,929,934,3,88,44,0,930,931,5,208,0,0,931,933,3,88,44,0,932,930,1,0,0,0,933,936,1,0,0,0,934,932,1,0,0,0,934,935,1,0,0,0,935,937,1,0,0,0,936,934,1,0,0,0,937,938,5,229,0,0,938,944,1,0,0,0,939,940,5,10,0,0,940,944,3,228,114,0,941,942,5,10,0,0,942,944,3,226,113,0,943,928,1,0,0,0,943,939,1,0,0,0,943,941,1,0,0,0,944,75,1,0,0,0,945,972,3,86,43,0,946,947,4,38,10,1,947,948,3,152,76,0,948,949,6,38,-1,0,949,971,1,0,0,0,950,951,4,38,11,1,951,952,3,78,39,0,952,953,6,38,-1,0,953,971,1,0,0,0,954,955,4,38,12,1,955,956,3,80,40,0,956,957,6,38,-1,0,957,971,1,0,0,0,958,959,4,38,13,1,959,960,3,82,41,0,960,961,6,38,-1,0,961,971,1,0,0,0,962,963,4,38,14,1,963,964,3,84,42,0,964,965,6,38,-1,0,965,971,1,0,0,0,966,967,4,38,15,1,967,968,3,160,80,0,968,969,6,38,-1,0,969,971,1,0,0,0,970,946,1,0,0,0,970,950,1,0,0,0,970,954,1,0,0,0,970,958,1,0,0,0,970,962,1,0,0,0,970,966,1,0,0,0,971,974,1,0,0,0,972,970,1,0,0,0,972,973,1,0,0,0,973,77,1,0,0,0,974,972,1,0,0,0,975,976,5,126,0,0,976,977,5,18,0,0,977,978,3,214,107,0,978,79,1,0,0,0,979,980,5,132,0,0,980,981,5,91,0,0,981,982,3,214,107,0,982,81,1,0,0,0,983,984,5,147,0,0,984,985,5,18,0,0,985,986,3,214,107,0,986,83,1,0,0,0,987,988,5,177,0,0,988,993,3,102,51,0,989,990,5,208,0,0,990,992,3,102,51,0,991,989,1,0,0,0,992,995,1,0,0,0,993,991,1,0,0,0,993,994,1,0,0,0,994,85,1,0,0,0,995,993,1,0,0,0,996,998,5,53,0,0,997,999,5,213,0,0,998,997,1,0,0,0,998,999,1,0,0,0,999,1e3,1,0,0,0,1e3,1006,3,252,126,0,1001,1003,5,219,0,0,1002,1004,3,210,105,0,1003,1002,1,0,0,0,1003,1004,1,0,0,0,1004,1005,1,0,0,0,1005,1007,5,229,0,0,1006,1001,1,0,0,0,1006,1007,1,0,0,0,1007,87,1,0,0,0,1008,1019,3,90,45,0,1009,1010,5,28,0,0,1010,1011,3,250,125,0,1011,1012,5,21,0,0,1012,1013,3,214,107,0,1013,1019,1,0,0,0,1014,1015,5,81,0,0,1015,1019,3,94,47,0,1016,1017,5,133,0,0,1017,1019,3,96,48,0,1018,1008,1,0,0,0,1018,1009,1,0,0,0,1018,1014,1,0,0,0,1018,1016,1,0,0,0,1019,89,1,0,0,0,1020,1021,3,222,111,0,1021,1023,3,208,104,0,1022,1024,3,92,46,0,1023,1022,1,0,0,0,1023,1024,1,0,0,0,1024,1027,1,0,0,0,1025,1026,5,27,0,0,1026,1028,5,202,0,0,1027,1025,1,0,0,0,1027,1028,1,0,0,0,1028,1030,1,0,0,0,1029,1031,3,98,49,0,1030,1029,1,0,0,0,1030,1031,1,0,0,0,1031,1034,1,0,0,0,1032,1033,5,177,0,0,1033,1035,3,214,107,0,1034,1032,1,0,0,0,1034,1035,1,0,0,0,1035,1053,1,0,0,0,1036,1038,3,222,111,0,1037,1039,3,208,104,0,1038,1037,1,0,0,0,1038,1039,1,0,0,0,1039,1040,1,0,0,0,1040,1043,3,92,46,0,1041,1042,5,27,0,0,1042,1044,5,202,0,0,1043,1041,1,0,0,0,1043,1044,1,0,0,0,1044,1046,1,0,0,0,1045,1047,3,98,49,0,1046,1045,1,0,0,0,1046,1047,1,0,0,0,1047,1050,1,0,0,0,1048,1049,5,177,0,0,1049,1051,3,214,107,0,1050,1048,1,0,0,0,1050,1051,1,0,0,0,1051,1053,1,0,0,0,1052,1020,1,0,0,0,1052,1036,1,0,0,0,1053,91,1,0,0,0,1054,1055,7,2,0,0,1055,1056,3,214,107,0,1056,93,1,0,0,0,1057,1058,3,222,111,0,1058,1059,3,214,107,0,1059,1060,5,178,0,0,1060,1061,3,208,104,0,1061,1062,5,72,0,0,1062,1063,5,200,0,0,1063,95,1,0,0,0,1064,1065,3,222,111,0,1065,1066,3,126,63,0,1066,97,1,0,0,0,1067,1068,5,24,0,0,1068,1069,5,219,0,0,1069,1074,3,100,50,0,1070,1071,5,208,0,0,1071,1073,3,100,50,0,1072,1070,1,0,0,0,1073,1076,1,0,0,0,1074,1072,1,0,0,0,1074,1075,1,0,0,0,1075,1077,1,0,0,0,1076,1074,1,0,0,0,1077,1078,5,229,0,0,1078,99,1,0,0,0,1079,1085,3,250,125,0,1080,1082,5,219,0,0,1081,1083,3,210,105,0,1082,1081,1,0,0,0,1082,1083,1,0,0,0,1083,1084,1,0,0,0,1084,1086,5,229,0,0,1085,1080,1,0,0,0,1085,1086,1,0,0,0,1086,101,1,0,0,0,1087,1095,3,214,107,0,1088,1096,5,40,0,0,1089,1090,5,170,0,0,1090,1091,5,47,0,0,1091,1096,5,202,0,0,1092,1093,5,170,0,0,1093,1094,5,187,0,0,1094,1096,5,202,0,0,1095,1088,1,0,0,0,1095,1089,1,0,0,0,1095,1092,1,0,0,0,1095,1096,1,0,0,0,1096,103,1,0,0,0,1097,1099,7,3,0,0,1098,1100,5,162,0,0,1099,1098,1,0,0,0,1099,1100,1,0,0,0,1100,1101,1,0,0,0,1101,1102,3,224,112,0,1102,105,1,0,0,0,1103,1104,7,4,0,0,1104,1107,5,33,0,0,1105,1106,5,78,0,0,1106,1108,5,56,0,0,1107,1105,1,0,0,0,1107,1108,1,0,0,0,1108,1109,1,0,0,0,1109,1111,3,234,117,0,1110,1112,3,66,33,0,1111,1110,1,0,0,0,1111,1112,1,0,0,0,1112,1135,1,0,0,0,1113,1120,7,4,0,0,1114,1121,5,46,0,0,1115,1117,5,164,0,0,1116,1115,1,0,0,0,1116,1117,1,0,0,0,1117,1118,1,0,0,0,1118,1121,5,162,0,0,1119,1121,5,186,0,0,1120,1114,1,0,0,0,1120,1116,1,0,0,0,1120,1119,1,0,0,0,1121,1124,1,0,0,0,1122,1123,5,78,0,0,1123,1125,5,56,0,0,1124,1122,1,0,0,0,1124,1125,1,0,0,0,1125,1126,1,0,0,0,1126,1128,3,228,114,0,1127,1129,3,66,33,0,1128,1127,1,0,0,0,1128,1129,1,0,0,0,1129,1132,1,0,0,0,1130,1131,5,114,0,0,1131,1133,5,39,0,0,1132,1130,1,0,0,0,1132,1133,1,0,0,0,1133,1135,1,0,0,0,1134,1103,1,0,0,0,1134,1113,1,0,0,0,1135,107,1,0,0,0,1136,1137,5,56,0,0,1137,1138,5,33,0,0,1138,1150,3,234,117,0,1139,1146,5,56,0,0,1140,1147,5,46,0,0,1141,1143,5,164,0,0,1142,1141,1,0,0,0,1142,1143,1,0,0,0,1143,1144,1,0,0,0,1144,1147,5,162,0,0,1145,1147,5,186,0,0,1146,1140,1,0,0,0,1146,1142,1,0,0,0,1146,1145,1,0,0,0,1146,1147,1,0,0,0,1147,1148,1,0,0,0,1148,1150,3,228,114,0,1149,1136,1,0,0,0,1149,1139,1,0,0,0,1150,109,1,0,0,0,1151,1152,5,57,0,0,1152,1173,3,6,3,0,1153,1154,5,57,0,0,1154,1155,5,13,0,0,1155,1173,3,6,3,0,1156,1157,5,57,0,0,1157,1158,5,160,0,0,1158,1173,3,6,3,0,1159,1160,5,57,0,0,1160,1161,5,127,0,0,1161,1173,3,6,3,0,1162,1163,5,57,0,0,1163,1164,5,128,0,0,1164,1173,3,6,3,0,1165,1166,5,57,0,0,1166,1167,5,135,0,0,1167,1168,5,175,0,0,1168,1173,3,6,3,0,1169,1170,5,57,0,0,1170,1171,5,54,0,0,1171,1173,3,6,3,0,1172,1151,1,0,0,0,1172,1153,1,0,0,0,1172,1156,1,0,0,0,1172,1159,1,0,0,0,1172,1162,1,0,0,0,1172,1165,1,0,0,0,1172,1169,1,0,0,0,1173,111,1,0,0,0,1174,1175,5,85,0,0,1175,1177,5,87,0,0,1176,1178,5,162,0,0,1177,1176,1,0,0,0,1177,1178,1,0,0,0,1178,1182,1,0,0,0,1179,1183,3,228,114,0,1180,1181,5,70,0,0,1181,1183,3,226,113,0,1182,1179,1,0,0,0,1182,1180,1,0,0,0,1183,1185,1,0,0,0,1184,1186,3,114,57,0,1185,1184,1,0,0,0,1185,1186,1,0,0,0,1186,1187,1,0,0,0,1187,1188,3,116,58,0,1188,113,1,0,0,0,1189,1190,5,219,0,0,1190,1195,3,222,111,0,1191,1192,5,208,0,0,1192,1194,3,222,111,0,1193,1191,1,0,0,0,1194,1197,1,0,0,0,1195,1193,1,0,0,0,1195,1196,1,0,0,0,1196,1198,1,0,0,0,1197,1195,1,0,0,0,1198,1199,5,229,0,0,1199,115,1,0,0,0,1200,1201,5,66,0,0,1201,1210,3,250,125,0,1202,1210,3,118,59,0,1203,1205,3,128,64,0,1204,1206,5,230,0,0,1205,1204,1,0,0,0,1205,1206,1,0,0,0,1206,1207,1,0,0,0,1207,1208,5,0,0,1,1208,1210,1,0,0,0,1209,1200,1,0,0,0,1209,1202,1,0,0,0,1209,1203,1,0,0,0,1210,117,1,0,0,0,1211,1212,5,185,0,0,1212,1214,5,219,0,0,1213,1215,3,240,120,0,1214,1213,1,0,0,0,1214,1215,1,0,0,0,1215,1216,1,0,0,0,1216,1225,5,229,0,0,1217,1218,5,208,0,0,1218,1220,5,219,0,0,1219,1221,3,240,120,0,1220,1219,1,0,0,0,1220,1221,1,0,0,0,1221,1222,1,0,0,0,1222,1224,5,229,0,0,1223,1217,1,0,0,0,1224,1227,1,0,0,0,1225,1223,1,0,0,0,1225,1226,1,0,0,0,1226,119,1,0,0,0,1227,1225,1,0,0,0,1228,1229,5,92,0,0,1229,1231,5,112,0,0,1230,1232,3,66,33,0,1231,1230,1,0,0,0,1231,1232,1,0,0,0,1232,1233,1,0,0,0,1233,1235,3,146,73,0,1234,1236,7,5,0,0,1235,1234,1,0,0,0,1235,1236,1,0,0,0,1236,121,1,0,0,0,1237,1238,5,120,0,0,1238,1239,5,162,0,0,1239,1241,3,228,114,0,1240,1242,3,66,33,0,1241,1240,1,0,0,0,1241,1242,1,0,0,0,1242,1244,1,0,0,0,1243,1245,3,24,12,0,1244,1243,1,0,0,0,1244,1245,1,0,0,0,1245,1247,1,0,0,0,1246,1248,5,61,0,0,1247,1246,1,0,0,0,1247,1248,1,0,0,0,1248,1250,1,0,0,0,1249,1251,5,37,0,0,1250,1249,1,0,0,0,1250,1251,1,0,0,0,1251,123,1,0,0,0,1252,1253,5,139,0,0,1253,1254,5,162,0,0,1254,1255,3,228,114,0,1255,1256,5,170,0,0,1256,1264,3,228,114,0,1257,1258,5,208,0,0,1258,1259,3,228,114,0,1259,1260,5,170,0,0,1260,1261,3,228,114,0,1261,1263,1,0,0,0,1262,1257,1,0,0,0,1263,1266,1,0,0,0,1264,1262,1,0,0,0,1264,1265,1,0,0,0,1265,1268,1,0,0,0,1266,1264,1,0,0,0,1267,1269,3,66,33,0,1268,1267,1,0,0,0,1268,1269,1,0,0,0,1269,125,1,0,0,0,1270,1272,5,219,0,0,1271,1273,3,134,67,0,1272,1271,1,0,0,0,1272,1273,1,0,0,0,1273,1274,1,0,0,0,1274,1275,5,149,0,0,1275,1277,3,210,105,0,1276,1278,3,148,74,0,1277,1276,1,0,0,0,1277,1278,1,0,0,0,1278,1280,1,0,0,0,1279,1281,3,154,77,0,1280,1279,1,0,0,0,1280,1281,1,0,0,0,1281,1282,1,0,0,0,1282,1283,5,229,0,0,1283,127,1,0,0,0,1284,1290,3,130,65,0,1285,1286,5,180,0,0,1286,1287,5,4,0,0,1287,1289,3,130,65,0,1288,1285,1,0,0,0,1289,1292,1,0,0,0,1290,1288,1,0,0,0,1290,1291,1,0,0,0,1291,129,1,0,0,0,1292,1290,1,0,0,0,1293,1299,3,132,66,0,1294,1295,5,219,0,0,1295,1296,3,128,64,0,1296,1297,5,229,0,0,1297,1299,1,0,0,0,1298,1293,1,0,0,0,1298,1294,1,0,0,0,1299,131,1,0,0,0,1300,1302,3,134,67,0,1301,1300,1,0,0,0,1301,1302,1,0,0,0,1302,1303,1,0,0,0,1303,1305,5,149,0,0,1304,1306,5,48,0,0,1305,1304,1,0,0,0,1305,1306,1,0,0,0,1306,1308,1,0,0,0,1307,1309,3,136,68,0,1308,1307,1,0,0,0,1308,1309,1,0,0,0,1309,1310,1,0,0,0,1310,1312,3,210,105,0,1311,1313,3,138,69,0,1312,1311,1,0,0,0,1312,1313,1,0,0,0,1313,1315,1,0,0,0,1314,1316,3,140,70,0,1315,1314,1,0,0,0,1315,1316,1,0,0,0,1316,1318,1,0,0,0,1317,1319,3,142,71,0,1318,1317,1,0,0,0,1318,1319,1,0,0,0,1319,1321,1,0,0,0,1320,1322,3,144,72,0,1321,1320,1,0,0,0,1321,1322,1,0,0,0,1322,1324,1,0,0,0,1323,1325,3,146,73,0,1324,1323,1,0,0,0,1324,1325,1,0,0,0,1325,1327,1,0,0,0,1326,1328,3,148,74,0,1327,1326,1,0,0,0,1327,1328,1,0,0,0,1328,1331,1,0,0,0,1329,1330,5,193,0,0,1330,1332,7,6,0,0,1331,1329,1,0,0,0,1331,1332,1,0,0,0,1332,1335,1,0,0,0,1333,1334,5,193,0,0,1334,1336,5,172,0,0,1335,1333,1,0,0,0,1335,1336,1,0,0,0,1336,1338,1,0,0,0,1337,1339,3,150,75,0,1338,1337,1,0,0,0,1338,1339,1,0,0,0,1339,1341,1,0,0,0,1340,1342,3,152,76,0,1341,1340,1,0,0,0,1341,1342,1,0,0,0,1342,1344,1,0,0,0,1343,1345,3,156,78,0,1344,1343,1,0,0,0,1344,1345,1,0,0,0,1345,1347,1,0,0,0,1346,1348,3,158,79,0,1347,1346,1,0,0,0,1347,1348,1,0,0,0,1348,1350,1,0,0,0,1349,1351,3,160,80,0,1350,1349,1,0,0,0,1350,1351,1,0,0,0,1351,133,1,0,0,0,1352,1353,5,193,0,0,1353,1354,3,210,105,0,1354,135,1,0,0,0,1355,1356,5,171,0,0,1356,1359,5,200,0,0,1357,1358,5,193,0,0,1358,1360,5,167,0,0,1359,1357,1,0,0,0,1359,1360,1,0,0,0,1360,137,1,0,0,0,1361,1362,5,68,0,0,1362,1363,3,162,81,0,1363,139,1,0,0,0,1364,1366,7,7,0,0,1365,1364,1,0,0,0,1365,1366,1,0,0,0,1366,1367,1,0,0,0,1367,1368,5,9,0,0,1368,1369,5,90,0,0,1369,1370,3,210,105,0,1370,141,1,0,0,0,1371,1372,5,192,0,0,1372,1373,3,250,125,0,1373,1374,5,10,0,0,1374,1375,5,219,0,0,1375,1376,3,184,92,0,1376,1377,5,229,0,0,1377,143,1,0,0,0,1378,1379,5,131,0,0,1379,1380,3,214,107,0,1380,145,1,0,0,0,1381,1382,5,191,0,0,1382,1383,3,214,107,0,1383,147,1,0,0,0,1384,1385,5,73,0,0,1385,1392,5,18,0,0,1386,1387,7,6,0,0,1387,1388,5,219,0,0,1388,1389,3,210,105,0,1389,1390,5,229,0,0,1390,1393,1,0,0,0,1391,1393,3,210,105,0,1392,1386,1,0,0,0,1392,1391,1,0,0,0,1393,149,1,0,0,0,1394,1395,5,74,0,0,1395,1396,3,214,107,0,1396,151,1,0,0,0,1397,1398,5,122,0,0,1398,1399,5,18,0,0,1399,1400,3,174,87,0,1400,153,1,0,0,0,1401,1402,5,122,0,0,1402,1403,5,18,0,0,1403,1404,3,210,105,0,1404,155,1,0,0,0,1405,1406,5,99,0,0,1406,1407,3,172,86,0,1407,1408,5,18,0,0,1408,1409,3,210,105,0,1409,157,1,0,0,0,1410,1411,5,99,0,0,1411,1414,3,172,86,0,1412,1413,5,193,0,0,1413,1415,5,167,0,0,1414,1412,1,0,0,0,1414,1415,1,0,0,0,1415,159,1,0,0,0,1416,1417,5,153,0,0,1417,1418,3,180,90,0,1418,161,1,0,0,0,1419,1420,6,81,-1,0,1420,1422,3,224,112,0,1421,1423,5,61,0,0,1422,1421,1,0,0,0,1422,1423,1,0,0,0,1423,1425,1,0,0,0,1424,1426,3,170,85,0,1425,1424,1,0,0,0,1425,1426,1,0,0,0,1426,1432,1,0,0,0,1427,1428,5,219,0,0,1428,1429,3,162,81,0,1429,1430,5,229,0,0,1430,1432,1,0,0,0,1431,1419,1,0,0,0,1431,1427,1,0,0,0,1432,1450,1,0,0,0,1433,1434,10,3,0,0,1434,1435,3,166,83,0,1435,1436,3,162,81,4,1436,1449,1,0,0,0,1437,1439,10,4,0,0,1438,1440,7,8,0,0,1439,1438,1,0,0,0,1439,1440,1,0,0,0,1440,1442,1,0,0,0,1441,1443,3,164,82,0,1442,1441,1,0,0,0,1442,1443,1,0,0,0,1443,1444,1,0,0,0,1444,1445,5,90,0,0,1445,1446,3,162,81,0,1446,1447,3,168,84,0,1447,1449,1,0,0,0,1448,1433,1,0,0,0,1448,1437,1,0,0,0,1449,1452,1,0,0,0,1450,1448,1,0,0,0,1450,1451,1,0,0,0,1451,163,1,0,0,0,1452,1450,1,0,0,0,1453,1455,7,9,0,0,1454,1453,1,0,0,0,1454,1455,1,0,0,0,1455,1456,1,0,0,0,1456,1463,5,84,0,0,1457,1459,5,84,0,0,1458,1460,7,9,0,0,1459,1458,1,0,0,0,1459,1460,1,0,0,0,1460,1463,1,0,0,0,1461,1463,7,9,0,0,1462,1454,1,0,0,0,1462,1457,1,0,0,0,1462,1461,1,0,0,0,1463,1497,1,0,0,0,1464,1466,7,10,0,0,1465,1464,1,0,0,0,1465,1466,1,0,0,0,1466,1467,1,0,0,0,1467,1469,7,11,0,0,1468,1470,5,123,0,0,1469,1468,1,0,0,0,1469,1470,1,0,0,0,1470,1479,1,0,0,0,1471,1473,7,11,0,0,1472,1474,5,123,0,0,1473,1472,1,0,0,0,1473,1474,1,0,0,0,1474,1476,1,0,0,0,1475,1477,7,10,0,0,1476,1475,1,0,0,0,1476,1477,1,0,0,0,1477,1479,1,0,0,0,1478,1465,1,0,0,0,1478,1471,1,0,0,0,1479,1497,1,0,0,0,1480,1482,7,12,0,0,1481,1480,1,0,0,0,1481,1482,1,0,0,0,1482,1483,1,0,0,0,1483,1485,5,69,0,0,1484,1486,5,123,0,0,1485,1484,1,0,0,0,1485,1486,1,0,0,0,1486,1495,1,0,0,0,1487,1489,5,69,0,0,1488,1490,5,123,0,0,1489,1488,1,0,0,0,1489,1490,1,0,0,0,1490,1492,1,0,0,0,1491,1493,7,12,0,0,1492,1491,1,0,0,0,1492,1493,1,0,0,0,1493,1495,1,0,0,0,1494,1481,1,0,0,0,1494,1487,1,0,0,0,1495,1497,1,0,0,0,1496,1462,1,0,0,0,1496,1478,1,0,0,0,1496,1494,1,0,0,0,1497,165,1,0,0,0,1498,1500,7,8,0,0,1499,1498,1,0,0,0,1499,1500,1,0,0,0,1500,1501,1,0,0,0,1501,1502,5,30,0,0,1502,1505,5,90,0,0,1503,1505,5,208,0,0,1504,1499,1,0,0,0,1504,1503,1,0,0,0,1505,167,1,0,0,0,1506,1507,5,119,0,0,1507,1516,3,210,105,0,1508,1509,5,183,0,0,1509,1510,5,219,0,0,1510,1511,3,210,105,0,1511,1512,5,229,0,0,1512,1516,1,0,0,0,1513,1514,5,183,0,0,1514,1516,3,210,105,0,1515,1506,1,0,0,0,1515,1508,1,0,0,0,1515,1513,1,0,0,0,1516,169,1,0,0,0,1517,1518,5,147,0,0,1518,1521,3,178,89,0,1519,1520,5,118,0,0,1520,1522,3,178,89,0,1521,1519,1,0,0,0,1521,1522,1,0,0,0,1522,171,1,0,0,0,1523,1526,3,214,107,0,1524,1525,7,13,0,0,1525,1527,3,214,107,0,1526,1524,1,0,0,0,1526,1527,1,0,0,0,1527,173,1,0,0,0,1528,1533,3,176,88,0,1529,1530,5,208,0,0,1530,1532,3,176,88,0,1531,1529,1,0,0,0,1532,1535,1,0,0,0,1533,1531,1,0,0,0,1533,1534,1,0,0,0,1534,175,1,0,0,0,1535,1533,1,0,0,0,1536,1538,3,214,107,0,1537,1539,7,14,0,0,1538,1537,1,0,0,0,1538,1539,1,0,0,0,1539,1542,1,0,0,0,1540,1541,5,117,0,0,1541,1543,7,15,0,0,1542,1540,1,0,0,0,1542,1543,1,0,0,0,1543,1546,1,0,0,0,1544,1545,5,25,0,0,1545,1547,5,202,0,0,1546,1544,1,0,0,0,1546,1547,1,0,0,0,1547,177,1,0,0,0,1548,1551,3,238,119,0,1549,1550,5,231,0,0,1550,1552,3,238,119,0,1551,1549,1,0,0,0,1551,1552,1,0,0,0,1552,179,1,0,0,0,1553,1558,3,182,91,0,1554,1555,5,208,0,0,1555,1557,3,182,91,0,1556,1554,1,0,0,0,1557,1560,1,0,0,0,1558,1556,1,0,0,0,1558,1559,1,0,0,0,1559,181,1,0,0,0,1560,1558,1,0,0,0,1561,1562,3,250,125,0,1562,1563,5,213,0,0,1563,1564,3,240,120,0,1564,183,1,0,0,0,1565,1567,3,186,93,0,1566,1565,1,0,0,0,1566,1567,1,0,0,0,1567,1569,1,0,0,0,1568,1570,3,188,94,0,1569,1568,1,0,0,0,1569,1570,1,0,0,0,1570,1572,1,0,0,0,1571,1573,3,190,95,0,1572,1571,1,0,0,0,1572,1573,1,0,0,0,1573,185,1,0,0,0,1574,1575,5,126,0,0,1575,1576,5,18,0,0,1576,1577,3,210,105,0,1577,187,1,0,0,0,1578,1579,5,122,0,0,1579,1580,5,18,0,0,1580,1581,3,174,87,0,1581,189,1,0,0,0,1582,1583,7,16,0,0,1583,1584,3,192,96,0,1584,191,1,0,0,0,1585,1592,3,194,97,0,1586,1587,5,16,0,0,1587,1588,3,194,97,0,1588,1589,5,6,0,0,1589,1590,3,194,97,0,1590,1592,1,0,0,0,1591,1585,1,0,0,0,1591,1586,1,0,0,0,1592,193,1,0,0,0,1593,1594,5,32,0,0,1594,1606,5,145,0,0,1595,1596,5,179,0,0,1596,1606,5,130,0,0,1597,1598,5,179,0,0,1598,1606,5,64,0,0,1599,1600,3,238,119,0,1600,1601,5,130,0,0,1601,1606,1,0,0,0,1602,1603,3,238,119,0,1603,1604,5,64,0,0,1604,1606,1,0,0,0,1605,1593,1,0,0,0,1605,1595,1,0,0,0,1605,1597,1,0,0,0,1605,1599,1,0,0,0,1605,1602,1,0,0,0,1606,195,1,0,0,0,1607,1608,5,152,0,0,1608,1609,3,180,90,0,1609,197,1,0,0,0,1610,1611,5,154,0,0,1611,1612,5,29,0,0,1612,1613,5,33,0,0,1613,1653,3,234,117,0,1614,1615,5,154,0,0,1615,1616,5,29,0,0,1616,1617,5,46,0,0,1617,1653,3,228,114,0,1618,1619,5,154,0,0,1619,1621,5,29,0,0,1620,1622,5,164,0,0,1621,1620,1,0,0,0,1621,1622,1,0,0,0,1622,1624,1,0,0,0,1623,1625,5,162,0,0,1624,1623,1,0,0,0,1624,1625,1,0,0,0,1625,1626,1,0,0,0,1626,1653,3,228,114,0,1627,1628,5,154,0,0,1628,1653,5,34,0,0,1629,1630,5,154,0,0,1630,1633,5,45,0,0,1631,1632,5,68,0,0,1632,1634,3,234,117,0,1633,1631,1,0,0,0,1633,1634,1,0,0,0,1634,1653,1,0,0,0,1635,1637,5,154,0,0,1636,1638,5,164,0,0,1637,1636,1,0,0,0,1637,1638,1,0,0,0,1638,1639,1,0,0,0,1639,1642,5,163,0,0,1640,1641,7,17,0,0,1641,1643,3,234,117,0,1642,1640,1,0,0,0,1642,1643,1,0,0,0,1643,1647,1,0,0,0,1644,1645,5,98,0,0,1645,1648,5,202,0,0,1646,1648,3,146,73,0,1647,1644,1,0,0,0,1647,1646,1,0,0,0,1647,1648,1,0,0,0,1648,1650,1,0,0,0,1649,1651,3,158,79,0,1650,1649,1,0,0,0,1650,1651,1,0,0,0,1651,1653,1,0,0,0,1652,1610,1,0,0,0,1652,1614,1,0,0,0,1652,1618,1,0,0,0,1652,1627,1,0,0,0,1652,1629,1,0,0,0,1652,1635,1,0,0,0,1653,199,1,0,0,0,1654,1655,5,161,0,0,1655,1656,5,63,0,0,1656,1657,5,49,0,0,1657,1689,3,228,114,0,1658,1659,5,161,0,0,1659,1660,5,63,0,0,1660,1689,5,102,0,0,1661,1662,5,161,0,0,1662,1663,5,137,0,0,1663,1689,5,45,0,0,1664,1665,5,161,0,0,1665,1666,5,137,0,0,1666,1667,5,46,0,0,1667,1689,3,228,114,0,1668,1669,5,161,0,0,1669,1677,7,18,0,0,1670,1671,5,49,0,0,1671,1678,5,151,0,0,1672,1678,5,60,0,0,1673,1675,5,177,0,0,1674,1673,1,0,0,0,1674,1675,1,0,0,0,1675,1676,1,0,0,0,1676,1678,5,106,0,0,1677,1670,1,0,0,0,1677,1672,1,0,0,0,1677,1674,1,0,0,0,1678,1679,1,0,0,0,1679,1689,3,228,114,0,1680,1681,5,161,0,0,1681,1682,7,18,0,0,1682,1683,5,142,0,0,1683,1689,5,151,0,0,1684,1685,5,161,0,0,1685,1686,5,159,0,0,1686,1687,5,141,0,0,1687,1689,3,228,114,0,1688,1654,1,0,0,0,1688,1658,1,0,0,0,1688,1661,1,0,0,0,1688,1664,1,0,0,0,1688,1668,1,0,0,0,1688,1680,1,0,0,0,1688,1684,1,0,0,0,1689,201,1,0,0,0,1690,1692,5,176,0,0,1691,1693,5,164,0,0,1692,1691,1,0,0,0,1692,1693,1,0,0,0,1693,1695,1,0,0,0,1694,1696,5,162,0,0,1695,1694,1,0,0,0,1695,1696,1,0,0,0,1696,1699,1,0,0,0,1697,1698,5,78,0,0,1698,1700,5,56,0,0,1699,1697,1,0,0,0,1699,1700,1,0,0,0,1700,1701,1,0,0,0,1701,1703,3,228,114,0,1702,1704,3,66,33,0,1703,1702,1,0,0,0,1703,1704,1,0,0,0,1704,203,1,0,0,0,1705,1706,5,182,0,0,1706,1707,3,234,117,0,1707,205,1,0,0,0,1708,1709,5,188,0,0,1709,1711,3,228,114,0,1710,1712,5,55,0,0,1711,1710,1,0,0,0,1711,1712,1,0,0,0,1712,1715,1,0,0,0,1713,1714,5,99,0,0,1714,1716,5,200,0,0,1715,1713,1,0,0,0,1715,1716,1,0,0,0,1716,207,1,0,0,0,1717,1765,3,250,125,0,1718,1719,3,250,125,0,1719,1720,5,219,0,0,1720,1721,3,250,125,0,1721,1728,3,208,104,0,1722,1723,5,208,0,0,1723,1724,3,250,125,0,1724,1725,3,208,104,0,1725,1727,1,0,0,0,1726,1722,1,0,0,0,1727,1730,1,0,0,0,1728,1726,1,0,0,0,1728,1729,1,0,0,0,1729,1731,1,0,0,0,1730,1728,1,0,0,0,1731,1732,5,229,0,0,1732,1765,1,0,0,0,1733,1734,3,250,125,0,1734,1735,5,219,0,0,1735,1740,3,254,127,0,1736,1737,5,208,0,0,1737,1739,3,254,127,0,1738,1736,1,0,0,0,1739,1742,1,0,0,0,1740,1738,1,0,0,0,1740,1741,1,0,0,0,1741,1743,1,0,0,0,1742,1740,1,0,0,0,1743,1744,5,229,0,0,1744,1765,1,0,0,0,1745,1746,3,250,125,0,1746,1747,5,219,0,0,1747,1752,3,208,104,0,1748,1749,5,208,0,0,1749,1751,3,208,104,0,1750,1748,1,0,0,0,1751,1754,1,0,0,0,1752,1750,1,0,0,0,1752,1753,1,0,0,0,1753,1755,1,0,0,0,1754,1752,1,0,0,0,1755,1756,5,229,0,0,1756,1765,1,0,0,0,1757,1758,3,250,125,0,1758,1760,5,219,0,0,1759,1761,3,210,105,0,1760,1759,1,0,0,0,1760,1761,1,0,0,0,1761,1762,1,0,0,0,1762,1763,5,229,0,0,1763,1765,1,0,0,0,1764,1717,1,0,0,0,1764,1718,1,0,0,0,1764,1733,1,0,0,0,1764,1745,1,0,0,0,1764,1757,1,0,0,0,1765,209,1,0,0,0,1766,1771,3,212,106,0,1767,1768,5,208,0,0,1768,1770,3,212,106,0,1769,1767,1,0,0,0,1770,1773,1,0,0,0,1771,1769,1,0,0,0,1771,1772,1,0,0,0,1772,211,1,0,0,0,1773,1771,1,0,0,0,1774,1775,3,228,114,0,1775,1776,5,211,0,0,1776,1778,1,0,0,0,1777,1774,1,0,0,0,1777,1778,1,0,0,0,1778,1779,1,0,0,0,1779,1786,5,204,0,0,1780,1781,5,219,0,0,1781,1782,3,128,64,0,1782,1783,5,229,0,0,1783,1786,1,0,0,0,1784,1786,3,214,107,0,1785,1777,1,0,0,0,1785,1780,1,0,0,0,1785,1784,1,0,0,0,1786,213,1,0,0,0,1787,1788,6,107,-1,0,1788,1790,5,19,0,0,1789,1791,3,214,107,0,1790,1789,1,0,0,0,1790,1791,1,0,0,0,1791,1797,1,0,0,0,1792,1793,5,190,0,0,1793,1794,3,214,107,0,1794,1795,5,166,0,0,1795,1796,3,214,107,0,1796,1798,1,0,0,0,1797,1792,1,0,0,0,1798,1799,1,0,0,0,1799,1797,1,0,0,0,1799,1800,1,0,0,0,1800,1803,1,0,0,0,1801,1802,5,51,0,0,1802,1804,3,214,107,0,1803,1801,1,0,0,0,1803,1804,1,0,0,0,1804,1805,1,0,0,0,1805,1806,5,52,0,0,1806,1917,1,0,0,0,1807,1808,5,20,0,0,1808,1809,5,219,0,0,1809,1810,3,214,107,0,1810,1811,5,10,0,0,1811,1812,3,208,104,0,1812,1813,5,229,0,0,1813,1917,1,0,0,0,1814,1815,5,35,0,0,1815,1917,5,202,0,0,1816,1817,5,59,0,0,1817,1818,5,219,0,0,1818,1819,3,242,121,0,1819,1820,5,68,0,0,1820,1821,3,214,107,0,1821,1822,5,229,0,0,1822,1917,1,0,0,0,1823,1824,5,86,0,0,1824,1825,3,214,107,0,1825,1826,3,242,121,0,1826,1917,1,0,0,0,1827,1828,5,158,0,0,1828,1829,5,219,0,0,1829,1830,3,214,107,0,1830,1831,5,68,0,0,1831,1834,3,214,107,0,1832,1833,5,65,0,0,1833,1835,3,214,107,0,1834,1832,1,0,0,0,1834,1835,1,0,0,0,1835,1836,1,0,0,0,1836,1837,5,229,0,0,1837,1917,1,0,0,0,1838,1839,5,169,0,0,1839,1917,5,202,0,0,1840,1841,5,174,0,0,1841,1842,5,219,0,0,1842,1843,7,19,0,0,1843,1844,5,202,0,0,1844,1845,5,68,0,0,1845,1846,3,214,107,0,1846,1847,5,229,0,0,1847,1917,1,0,0,0,1848,1849,3,250,125,0,1849,1851,5,219,0,0,1850,1852,3,210,105,0,1851,1850,1,0,0,0,1851,1852,1,0,0,0,1852,1853,1,0,0,0,1853,1854,5,229,0,0,1854,1855,1,0,0,0,1855,1856,5,125,0,0,1856,1857,5,219,0,0,1857,1858,3,184,92,0,1858,1859,5,229,0,0,1859,1917,1,0,0,0,1860,1861,3,250,125,0,1861,1863,5,219,0,0,1862,1864,3,210,105,0,1863,1862,1,0,0,0,1863,1864,1,0,0,0,1864,1865,1,0,0,0,1865,1866,5,229,0,0,1866,1867,1,0,0,0,1867,1868,5,125,0,0,1868,1869,3,250,125,0,1869,1917,1,0,0,0,1870,1876,3,250,125,0,1871,1873,5,219,0,0,1872,1874,3,210,105,0,1873,1872,1,0,0,0,1873,1874,1,0,0,0,1874,1875,1,0,0,0,1875,1877,5,229,0,0,1876,1871,1,0,0,0,1876,1877,1,0,0,0,1877,1878,1,0,0,0,1878,1880,5,219,0,0,1879,1881,5,48,0,0,1880,1879,1,0,0,0,1880,1881,1,0,0,0,1881,1883,1,0,0,0,1882,1884,3,216,108,0,1883,1882,1,0,0,0,1883,1884,1,0,0,0,1884,1885,1,0,0,0,1885,1886,5,229,0,0,1886,1917,1,0,0,0,1887,1917,3,240,120,0,1888,1889,5,210,0,0,1889,1917,3,214,107,17,1890,1891,5,115,0,0,1891,1917,3,214,107,12,1892,1893,3,228,114,0,1893,1894,5,211,0,0,1894,1896,1,0,0,0,1895,1892,1,0,0,0,1895,1896,1,0,0,0,1896,1897,1,0,0,0,1897,1917,5,204,0,0,1898,1899,5,219,0,0,1899,1900,3,128,64,0,1900,1901,5,229,0,0,1901,1917,1,0,0,0,1902,1903,5,219,0,0,1903,1904,3,214,107,0,1904,1905,5,229,0,0,1905,1917,1,0,0,0,1906,1907,5,219,0,0,1907,1908,3,210,105,0,1908,1909,5,229,0,0,1909,1917,1,0,0,0,1910,1912,5,217,0,0,1911,1913,3,210,105,0,1912,1911,1,0,0,0,1912,1913,1,0,0,0,1913,1914,1,0,0,0,1914,1917,5,228,0,0,1915,1917,3,222,111,0,1916,1787,1,0,0,0,1916,1807,1,0,0,0,1916,1814,1,0,0,0,1916,1816,1,0,0,0,1916,1823,1,0,0,0,1916,1827,1,0,0,0,1916,1838,1,0,0,0,1916,1840,1,0,0,0,1916,1848,1,0,0,0,1916,1860,1,0,0,0,1916,1870,1,0,0,0,1916,1887,1,0,0,0,1916,1888,1,0,0,0,1916,1890,1,0,0,0,1916,1895,1,0,0,0,1916,1898,1,0,0,0,1916,1902,1,0,0,0,1916,1906,1,0,0,0,1916,1910,1,0,0,0,1916,1915,1,0,0,0,1917,1989,1,0,0,0,1918,1919,10,16,0,0,1919,1920,7,20,0,0,1920,1988,3,214,107,17,1921,1922,10,15,0,0,1922,1923,7,21,0,0,1923,1988,3,214,107,16,1924,1943,10,14,0,0,1925,1944,5,212,0,0,1926,1944,5,213,0,0,1927,1944,5,221,0,0,1928,1944,5,218,0,0,1929,1944,5,214,0,0,1930,1944,5,220,0,0,1931,1944,5,215,0,0,1932,1934,5,71,0,0,1933,1932,1,0,0,0,1933,1934,1,0,0,0,1934,1936,1,0,0,0,1935,1937,5,115,0,0,1936,1935,1,0,0,0,1936,1937,1,0,0,0,1937,1938,1,0,0,0,1938,1944,5,80,0,0,1939,1941,5,115,0,0,1940,1939,1,0,0,0,1940,1941,1,0,0,0,1941,1942,1,0,0,0,1942,1944,7,22,0,0,1943,1925,1,0,0,0,1943,1926,1,0,0,0,1943,1927,1,0,0,0,1943,1928,1,0,0,0,1943,1929,1,0,0,0,1943,1930,1,0,0,0,1943,1931,1,0,0,0,1943,1933,1,0,0,0,1943,1940,1,0,0,0,1944,1945,1,0,0,0,1945,1988,3,214,107,15,1946,1947,10,11,0,0,1947,1948,5,6,0,0,1948,1988,3,214,107,12,1949,1950,10,10,0,0,1950,1951,5,121,0,0,1951,1988,3,214,107,11,1952,1954,10,9,0,0,1953,1955,5,115,0,0,1954,1953,1,0,0,0,1954,1955,1,0,0,0,1955,1956,1,0,0,0,1956,1957,5,16,0,0,1957,1958,3,214,107,0,1958,1959,5,6,0,0,1959,1960,3,214,107,10,1960,1988,1,0,0,0,1961,1962,10,8,0,0,1962,1963,5,224,0,0,1963,1964,3,214,107,0,1964,1965,5,207,0,0,1965,1966,3,214,107,8,1966,1988,1,0,0,0,1967,1968,10,19,0,0,1968,1969,5,217,0,0,1969,1970,3,214,107,0,1970,1971,5,228,0,0,1971,1988,1,0,0,0,1972,1973,10,18,0,0,1973,1974,5,211,0,0,1974,1988,5,200,0,0,1975,1976,10,13,0,0,1976,1978,5,88,0,0,1977,1979,5,115,0,0,1978,1977,1,0,0,0,1978,1979,1,0,0,0,1979,1980,1,0,0,0,1980,1988,5,116,0,0,1981,1985,10,7,0,0,1982,1986,3,248,124,0,1983,1984,5,10,0,0,1984,1986,3,250,125,0,1985,1982,1,0,0,0,1985,1983,1,0,0,0,1986,1988,1,0,0,0,1987,1918,1,0,0,0,1987,1921,1,0,0,0,1987,1924,1,0,0,0,1987,1946,1,0,0,0,1987,1949,1,0,0,0,1987,1952,1,0,0,0,1987,1961,1,0,0,0,1987,1967,1,0,0,0,1987,1972,1,0,0,0,1987,1975,1,0,0,0,1987,1981,1,0,0,0,1988,1991,1,0,0,0,1989,1987,1,0,0,0,1989,1990,1,0,0,0,1990,215,1,0,0,0,1991,1989,1,0,0,0,1992,1997,3,218,109,0,1993,1994,5,208,0,0,1994,1996,3,218,109,0,1995,1993,1,0,0,0,1996,1999,1,0,0,0,1997,1995,1,0,0,0,1997,1998,1,0,0,0,1998,217,1,0,0,0,1999,1997,1,0,0,0,2e3,2003,3,220,110,0,2001,2003,3,214,107,0,2002,2e3,1,0,0,0,2002,2001,1,0,0,0,2003,219,1,0,0,0,2004,2005,5,219,0,0,2005,2010,3,250,125,0,2006,2007,5,208,0,0,2007,2009,3,250,125,0,2008,2006,1,0,0,0,2009,2012,1,0,0,0,2010,2008,1,0,0,0,2010,2011,1,0,0,0,2011,2013,1,0,0,0,2012,2010,1,0,0,0,2013,2014,5,229,0,0,2014,2024,1,0,0,0,2015,2020,3,250,125,0,2016,2017,5,208,0,0,2017,2019,3,250,125,0,2018,2016,1,0,0,0,2019,2022,1,0,0,0,2020,2018,1,0,0,0,2020,2021,1,0,0,0,2021,2024,1,0,0,0,2022,2020,1,0,0,0,2023,2004,1,0,0,0,2023,2015,1,0,0,0,2024,2025,1,0,0,0,2025,2026,5,203,0,0,2026,2027,3,214,107,0,2027,221,1,0,0,0,2028,2029,3,228,114,0,2029,2030,5,211,0,0,2030,2032,1,0,0,0,2031,2028,1,0,0,0,2031,2032,1,0,0,0,2032,2033,1,0,0,0,2033,2036,3,250,125,0,2034,2035,5,211,0,0,2035,2037,3,250,125,0,2036,2034,1,0,0,0,2036,2037,1,0,0,0,2037,223,1,0,0,0,2038,2039,6,112,-1,0,2039,2046,3,228,114,0,2040,2046,3,226,113,0,2041,2042,5,219,0,0,2042,2043,3,128,64,0,2043,2044,5,229,0,0,2044,2046,1,0,0,0,2045,2038,1,0,0,0,2045,2040,1,0,0,0,2045,2041,1,0,0,0,2046,2055,1,0,0,0,2047,2051,10,1,0,0,2048,2052,3,248,124,0,2049,2050,5,10,0,0,2050,2052,3,250,125,0,2051,2048,1,0,0,0,2051,2049,1,0,0,0,2052,2054,1,0,0,0,2053,2047,1,0,0,0,2054,2057,1,0,0,0,2055,2053,1,0,0,0,2055,2056,1,0,0,0,2056,225,1,0,0,0,2057,2055,1,0,0,0,2058,2059,3,250,125,0,2059,2061,5,219,0,0,2060,2062,3,230,115,0,2061,2060,1,0,0,0,2061,2062,1,0,0,0,2062,2063,1,0,0,0,2063,2064,5,229,0,0,2064,227,1,0,0,0,2065,2066,3,234,117,0,2066,2067,5,211,0,0,2067,2069,1,0,0,0,2068,2065,1,0,0,0,2068,2069,1,0,0,0,2069,2070,1,0,0,0,2070,2071,3,250,125,0,2071,229,1,0,0,0,2072,2077,3,232,116,0,2073,2074,5,208,0,0,2074,2076,3,232,116,0,2075,2073,1,0,0,0,2076,2079,1,0,0,0,2077,2075,1,0,0,0,2077,2078,1,0,0,0,2078,231,1,0,0,0,2079,2077,1,0,0,0,2080,2084,3,222,111,0,2081,2084,3,226,113,0,2082,2084,3,240,120,0,2083,2080,1,0,0,0,2083,2081,1,0,0,0,2083,2082,1,0,0,0,2084,233,1,0,0,0,2085,2086,3,250,125,0,2086,235,1,0,0,0,2087,2096,5,198,0,0,2088,2089,5,211,0,0,2089,2096,7,23,0,0,2090,2091,5,200,0,0,2091,2093,5,211,0,0,2092,2094,7,23,0,0,2093,2092,1,0,0,0,2093,2094,1,0,0,0,2094,2096,1,0,0,0,2095,2087,1,0,0,0,2095,2088,1,0,0,0,2095,2090,1,0,0,0,2096,237,1,0,0,0,2097,2099,7,24,0,0,2098,2097,1,0,0,0,2098,2099,1,0,0,0,2099,2106,1,0,0,0,2100,2107,3,236,118,0,2101,2107,5,199,0,0,2102,2107,5,200,0,0,2103,2107,5,201,0,0,2104,2107,5,82,0,0,2105,2107,5,113,0,0,2106,2100,1,0,0,0,2106,2101,1,0,0,0,2106,2102,1,0,0,0,2106,2103,1,0,0,0,2106,2104,1,0,0,0,2106,2105,1,0,0,0,2107,239,1,0,0,0,2108,2112,3,238,119,0,2109,2112,5,202,0,0,2110,2112,5,116,0,0,2111,2108,1,0,0,0,2111,2109,1,0,0,0,2111,2110,1,0,0,0,2112,241,1,0,0,0,2113,2114,7,25,0,0,2114,243,1,0,0,0,2115,2116,7,26,0,0,2116,245,1,0,0,0,2117,2118,7,27,0,0,2118,247,1,0,0,0,2119,2122,5,197,0,0,2120,2122,3,246,123,0,2121,2119,1,0,0,0,2121,2120,1,0,0,0,2122,249,1,0,0,0,2123,2127,5,197,0,0,2124,2127,3,242,121,0,2125,2127,3,244,122,0,2126,2123,1,0,0,0,2126,2124,1,0,0,0,2126,2125,1,0,0,0,2127,251,1,0,0,0,2128,2131,3,250,125,0,2129,2131,5,116,0,0,2130,2128,1,0,0,0,2130,2129,1,0,0,0,2131,253,1,0,0,0,2132,2133,5,202,0,0,2133,2134,5,213,0,0,2134,2135,3,238,119,0,2135,255,1,0,0,0,280,257,263,269,275,279,282,285,307,310,318,323,336,345,352,360,365,372,377,384,389,395,401,406,412,417,423,428,434,448,455,462,469,475,480,486,491,497,506,516,526,546,554,569,576,590,596,602,608,611,617,620,623,629,633,636,639,642,645,652,656,664,667,673,677,680,691,695,698,703,705,708,711,721,725,728,731,736,738,745,751,755,758,761,771,779,805,807,811,833,835,846,849,858,875,886,904,917,934,943,970,972,993,998,1003,1006,1018,1023,1027,1030,1034,1038,1043,1046,1050,1052,1074,1082,1085,1095,1099,1107,1111,1116,1120,1124,1128,1132,1134,1142,1146,1149,1172,1177,1182,1185,1195,1205,1209,1214,1220,1225,1231,1235,1241,1244,1247,1250,1264,1268,1272,1277,1280,1290,1298,1301,1305,1308,1312,1315,1318,1321,1324,1327,1331,1335,1338,1341,1344,1347,1350,1359,1365,1392,1414,1422,1425,1431,1439,1442,1448,1450,1454,1459,1462,1465,1469,1473,1476,1478,1481,1485,1489,1492,1494,1496,1499,1504,1515,1521,1526,1533,1538,1542,1546,1551,1558,1566,1569,1572,1591,1605,1621,1624,1633,1637,1642,1647,1650,1652,1674,1677,1688,1692,1695,1699,1703,1711,1715,1728,1740,1752,1760,1764,1771,1777,1785,1790,1799,1803,1834,1851,1863,1873,1876,1880,1883,1895,1912,1916,1933,1936,1940,1943,1954,1978,1985,1987,1989,1997,2002,2010,2020,2023,2031,2036,2045,2051,2055,2061,2068,2077,2083,2093,2095,2098,2106,2111,2121,2126,2130]}static get _ATN(){return e.__ATN||(e.__ATN=new n.ATNDeserializer().deserialize(e._serializedATN)),e.__ATN}static{this.vocabulary=new n.Vocabulary(e.literalNames,e.symbolicNames,[])}get vocabulary(){return e.vocabulary}static{this.decisionsToDFA=e._ATN.decisionToState.map((t,r)=>new n.DFA(t,r))}},We=class extends n.ParserRuleContext{static{l(this,"RootContext")}constructor(t,r){super(t,r)}EOF(){return this.getToken(i.EOF,0)}statements(){return this.getRuleContext(0,Gt)}get ruleIndex(){return i.RULE_root}accept(t){return t.visitRoot?t.visitRoot(this):t.visitChildren(this)}},Gt=class e extends n.ParserRuleContext{static{l(this,"StatementsContext")}constructor(t,r){super(t,r)}statement(){return this.getRuleContext(0,Wt)}SEMICOLON(){return this.getToken(i.SEMICOLON,0)}statements(){return this.getRuleContext(0,e)}get ruleIndex(){return i.RULE_statements}accept(t){return t.visitStatements?t.visitStatements(this):t.visitChildren(this)}},Wt=class extends n.ParserRuleContext{static{l(this,"StatementContext")}constructor(t,r){super(t,r)}notInsertStatement(){return this.getRuleContext(0,S)}INTO(){return this.getToken(i.INTO,0)}OUTFILE(){return this.getToken(i.OUTFILE,0)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}FORMAT(){return this.getToken(i.FORMAT,0)}identifierOrNull(){return this.getRuleContext(0,wt)}SEMICOLON(){return this.getToken(i.SEMICOLON,0)}insertStatement(){return this.getRuleContext(0,ae)}get ruleIndex(){return i.RULE_statement}accept(t){return t.visitStatement?t.visitStatement(this):t.visitChildren(this)}},S=class extends n.ParserRuleContext{static{l(this,"NotInsertStatementContext")}constructor(t,r){super(t,r)}alterStatement(){return this.getRuleContext(0,it)}attachStatement(){return this.getRuleContext(0,nt)}checkStatement(){return this.getRuleContext(0,Qt)}createStatement(){return this.getRuleContext(0,ee)}describeStatement(){return this.getRuleContext(0,le)}deleteStatement(){return this.getRuleContext(0,jt)}dropStatement(){return this.getRuleContext(0,J)}existsStatement(){return this.getRuleContext(0,Q)}explainStatement(){return this.getRuleContext(0,I)}killStatement(){return this.getRuleContext(0,St)}optimizeStatement(){return this.getRuleContext(0,ce)}renameStatement(){return this.getRuleContext(0,he)}selectUnionStatement(){return this.getRuleContext(0,k)}setStatement(){return this.getRuleContext(0,ye)}showStatement(){return this.getRuleContext(0,f)}systemStatement(){return this.getRuleContext(0,Oe)}truncateStatement(){return this.getRuleContext(0,ke)}useStatement(){return this.getRuleContext(0,fe)}watchStatement(){return this.getRuleContext(0,Pe)}selectStatement(){return this.getRuleContext(0,It)}commonTableExpressionStatement(){return this.getRuleContext(0,Yt)}get ruleIndex(){return i.RULE_notInsertStatement}accept(t){return t.visitNotInsertStatement?t.visitNotInsertStatement(this):t.visitChildren(this)}},Yt=class extends n.ParserRuleContext{static{l(this,"CommonTableExpressionStatementContext")}constructor(t,r){super(t,r)}WITH(){return this.getToken(i.WITH,0)}namedQuery(t){return t===void 0?this.getRuleContexts(rt):this.getRuleContext(t,rt)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_commonTableExpressionStatement}accept(t){return t.visitCommonTableExpressionStatement?t.visitCommonTableExpressionStatement(this):t.visitChildren(this)}},rt=class extends n.ParserRuleContext{static{l(this,"NamedQueryContext")}constructor(t,r){super(t,r)}AS(){return this.getToken(i.AS,0)}LPAREN(){return this.getToken(i.LPAREN,0)}notInsertStatement(){return this.getRuleContext(0,S)}RPAREN(){return this.getToken(i.RPAREN,0)}identifier(){return this.getRuleContext(0,c)}columnAliases(){return this.getRuleContext(0,Xt)}get ruleIndex(){return i.RULE_namedQuery}accept(t){return t.visitNamedQuery?t.visitNamedQuery(this):t.visitChildren(this)}},Xt=class extends n.ParserRuleContext{static{l(this,"ColumnAliasesContext")}constructor(t,r){super(t,r)}LPAREN(){return this.getToken(i.LPAREN,0)}identifier(t){return t===void 0?this.getRuleContexts(c):this.getRuleContext(t,c)}RPAREN(){return this.getToken(i.RPAREN,0)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_columnAliases}accept(t){return t.visitColumnAliases?t.visitColumnAliases(this):t.visitChildren(this)}},it=class extends n.ParserRuleContext{static{l(this,"AlterStatementContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_alterStatement}copyFrom(t){super.copyFrom(t)}},Ye=class extends it{static{l(this,"AlterTableStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}ALTER(){return this.getToken(i.ALTER,0)}TABLE(){return this.getToken(i.TABLE,0)}tableIdentifier(){return this.getRuleContext(0,E)}alterTableClause(t){return t===void 0?this.getRuleContexts(p):this.getRuleContext(t,p)}clusterClause(){return this.getRuleContext(0,R)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}accept(t){return t.visitAlterTableStatement?t.visitAlterTableStatement(this):t.visitChildren(this)}},p=class extends n.ParserRuleContext{static{l(this,"AlterTableClauseContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_alterTableClause}copyFrom(t){super.copyFrom(t)}},Xe=class extends p{static{l(this,"AlterTableClauseReplaceContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}REPLACE(){return this.getToken(i.REPLACE,0)}partitionClause(){return this.getRuleContext(0,x)}FROM(){return this.getToken(i.FROM,0)}tableIdentifier(){return this.getRuleContext(0,E)}accept(t){return t.visitAlterTableClauseReplace?t.visitAlterTableClauseReplace(this):t.visitChildren(this)}},Ke=class extends p{static{l(this,"AlterTableClauseModifyOrderByContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}MODIFY(){return this.getToken(i.MODIFY,0)}ORDER(){return this.getToken(i.ORDER,0)}BY(){return this.getToken(i.BY,0)}columnExpression(){return this.getRuleContext(0,o)}accept(t){return t.visitAlterTableClauseModifyOrderBy?t.visitAlterTableClauseModifyOrderBy(this):t.visitChildren(this)}},Je=class extends p{static{l(this,"AlterTableClauseUpdateContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}UPDATE(){return this.getToken(i.UPDATE,0)}assignmentExpressionList(){return this.getRuleContext(0,Kt)}whereClause(){return this.getRuleContext(0,U)}accept(t){return t.visitAlterTableClauseUpdate?t.visitAlterTableClauseUpdate(this):t.visitChildren(this)}},Qe=class extends p{static{l(this,"AlterTableClauseClearProjectionContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}CLEAR(){return this.getToken(i.CLEAR,0)}PROJECTION(){return this.getToken(i.PROJECTION,0)}columnIdentifier(){return this.getRuleContext(0,m)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}IN(){return this.getToken(i.IN,0)}partitionClause(){return this.getRuleContext(0,x)}accept(t){return t.visitAlterTableClauseClearProjection?t.visitAlterTableClauseClearProjection(this):t.visitChildren(this)}},je=class extends p{static{l(this,"AlterTableClauseModifyRemoveContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}MODIFY(){return this.getToken(i.MODIFY,0)}COLUMN(){return this.getToken(i.COLUMN,0)}columnIdentifier(){return this.getRuleContext(0,m)}REMOVE(){return this.getToken(i.REMOVE,0)}tableColumnPropertyType(){return this.getRuleContext(0,Jt)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}accept(t){return t.visitAlterTableClauseModifyRemove?t.visitAlterTableClauseModifyRemove(this):t.visitChildren(this)}},Ze=class extends p{static{l(this,"AlterTableClauseDeleteContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}DELETE(){return this.getToken(i.DELETE,0)}WHERE(){return this.getToken(i.WHERE,0)}columnExpression(){return this.getRuleContext(0,o)}accept(t){return t.visitAlterTableClauseDelete?t.visitAlterTableClauseDelete(this):t.visitChildren(this)}},ze=class extends p{static{l(this,"AlterTableClauseCommentContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}COMMENT(){return this.getToken(i.COMMENT,0)}COLUMN(){return this.getToken(i.COLUMN,0)}columnIdentifier(){return this.getRuleContext(0,m)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}accept(t){return t.visitAlterTableClauseComment?t.visitAlterTableClauseComment(this):t.visitChildren(this)}},qe=class extends p{static{l(this,"AlterTableClauseDropColumnContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}DROP(){return this.getToken(i.DROP,0)}COLUMN(){return this.getToken(i.COLUMN,0)}columnIdentifier(){return this.getRuleContext(0,m)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}accept(t){return t.visitAlterTableClauseDropColumn?t.visitAlterTableClauseDropColumn(this):t.visitChildren(this)}},$e=class extends p{static{l(this,"AlterTableClauseDetachContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}DETACH(){return this.getToken(i.DETACH,0)}partitionClause(){return this.getRuleContext(0,x)}accept(t){return t.visitAlterTableClauseDetach?t.visitAlterTableClauseDetach(this):t.visitChildren(this)}},_e=class extends p{static{l(this,"AlterTableClauseAddIndexContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}ADD(){return this.getToken(i.ADD,0)}INDEX(){return this.getToken(i.INDEX,0)}tableIndexDefinition(){return this.getRuleContext(0,Rt)}IF(){return this.getToken(i.IF,0)}NOT(){return this.getToken(i.NOT,0)}EXISTS(){return this.getToken(i.EXISTS,0)}AFTER(){return this.getToken(i.AFTER,0)}columnIdentifier(){return this.getRuleContext(0,m)}accept(t){return t.visitAlterTableClauseAddIndex?t.visitAlterTableClauseAddIndex(this):t.visitChildren(this)}},t1=class extends p{static{l(this,"AlterTableClauseDropPartitionContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}DROP(){return this.getToken(i.DROP,0)}partitionClause(){return this.getRuleContext(0,x)}accept(t){return t.visitAlterTableClauseDropPartition?t.visitAlterTableClauseDropPartition(this):t.visitChildren(this)}},e1=class extends p{static{l(this,"AlterTableClauseMaterializeIndexContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}MATERIALIZE(){return this.getToken(i.MATERIALIZE,0)}INDEX(){return this.getToken(i.INDEX,0)}columnIdentifier(){return this.getRuleContext(0,m)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}IN(){return this.getToken(i.IN,0)}partitionClause(){return this.getRuleContext(0,x)}accept(t){return t.visitAlterTableClauseMaterializeIndex?t.visitAlterTableClauseMaterializeIndex(this):t.visitChildren(this)}},r1=class extends p{static{l(this,"AlterTableClauseMaterializeProjectionContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}MATERIALIZE(){return this.getToken(i.MATERIALIZE,0)}PROJECTION(){return this.getToken(i.PROJECTION,0)}columnIdentifier(){return this.getRuleContext(0,m)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}IN(){return this.getToken(i.IN,0)}partitionClause(){return this.getRuleContext(0,x)}accept(t){return t.visitAlterTableClauseMaterializeProjection?t.visitAlterTableClauseMaterializeProjection(this):t.visitChildren(this)}},i1=class extends p{static{l(this,"AlterTableClauseMovePartitionContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}MOVE(){return this.getToken(i.MOVE,0)}partitionClause(){return this.getRuleContext(0,x)}TO(){return this.getToken(i.TO,0)}DISK(){return this.getToken(i.DISK,0)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}VOLUME(){return this.getToken(i.VOLUME,0)}TABLE(){return this.getToken(i.TABLE,0)}tableIdentifier(){return this.getRuleContext(0,E)}accept(t){return t.visitAlterTableClauseMovePartition?t.visitAlterTableClauseMovePartition(this):t.visitChildren(this)}},s1=class extends p{static{l(this,"AlterTableClauseRenameContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}RENAME(){return this.getToken(i.RENAME,0)}COLUMN(){return this.getToken(i.COLUMN,0)}columnIdentifier(t){return t===void 0?this.getRuleContexts(m):this.getRuleContext(t,m)}TO(){return this.getToken(i.TO,0)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}accept(t){return t.visitAlterTableClauseRename?t.visitAlterTableClauseRename(this):t.visitChildren(this)}},n1=class extends p{static{l(this,"AlterTableClauseFreezePartitionContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}FREEZE(){return this.getToken(i.FREEZE,0)}partitionClause(){return this.getRuleContext(0,x)}accept(t){return t.visitAlterTableClauseFreezePartition?t.visitAlterTableClauseFreezePartition(this):t.visitChildren(this)}},l1=class extends p{static{l(this,"AlterTableClauseClearColumnContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}CLEAR(){return this.getToken(i.CLEAR,0)}COLUMN(){return this.getToken(i.COLUMN,0)}columnIdentifier(){return this.getRuleContext(0,m)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}IN(){return this.getToken(i.IN,0)}partitionClause(){return this.getRuleContext(0,x)}accept(t){return t.visitAlterTableClauseClearColumn?t.visitAlterTableClauseClearColumn(this):t.visitChildren(this)}},a1=class extends p{static{l(this,"AlterTableClauseModifyContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}MODIFY(){return this.getToken(i.MODIFY,0)}COLUMN(){return this.getToken(i.COLUMN,0)}tableColumnDefinition(){return this.getRuleContext(0,K)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}accept(t){return t.visitAlterTableClauseModify?t.visitAlterTableClauseModify(this):t.visitChildren(this)}},u1=class extends p{static{l(this,"AlterTableClauseClearIndexContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}CLEAR(){return this.getToken(i.CLEAR,0)}INDEX(){return this.getToken(i.INDEX,0)}columnIdentifier(){return this.getRuleContext(0,m)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}IN(){return this.getToken(i.IN,0)}partitionClause(){return this.getRuleContext(0,x)}accept(t){return t.visitAlterTableClauseClearIndex?t.visitAlterTableClauseClearIndex(this):t.visitChildren(this)}},o1=class extends p{static{l(this,"AlterTableClauseRemoveTTLContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}REMOVE(){return this.getToken(i.REMOVE,0)}TTL(){return this.getToken(i.TTL,0)}accept(t){return t.visitAlterTableClauseRemoveTTL?t.visitAlterTableClauseRemoveTTL(this):t.visitChildren(this)}},c1=class extends p{static{l(this,"AlterTableClauseModifyCodecContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}MODIFY(){return this.getToken(i.MODIFY,0)}COLUMN(){return this.getToken(i.COLUMN,0)}columnIdentifier(){return this.getRuleContext(0,m)}codecExpression(){return this.getRuleContext(0,xt)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}accept(t){return t.visitAlterTableClauseModifyCodec?t.visitAlterTableClauseModifyCodec(this):t.visitChildren(this)}},h1=class extends p{static{l(this,"AlterTableClauseAttachContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}ATTACH(){return this.getToken(i.ATTACH,0)}partitionClause(){return this.getRuleContext(0,x)}FROM(){return this.getToken(i.FROM,0)}tableIdentifier(){return this.getRuleContext(0,E)}accept(t){return t.visitAlterTableClauseAttach?t.visitAlterTableClauseAttach(this):t.visitChildren(this)}},p1=class extends p{static{l(this,"AlterTableClauseDropProjectionContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}DROP(){return this.getToken(i.DROP,0)}PROJECTION(){return this.getToken(i.PROJECTION,0)}columnIdentifier(){return this.getRuleContext(0,m)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}accept(t){return t.visitAlterTableClauseDropProjection?t.visitAlterTableClauseDropProjection(this):t.visitChildren(this)}},E1=class extends p{static{l(this,"AlterTableClauseDropIndexContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}DROP(){return this.getToken(i.DROP,0)}INDEX(){return this.getToken(i.INDEX,0)}columnIdentifier(){return this.getRuleContext(0,m)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}accept(t){return t.visitAlterTableClauseDropIndex?t.visitAlterTableClauseDropIndex(this):t.visitChildren(this)}},m1=class extends p{static{l(this,"AlterTableClauseModifyCommentContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}MODIFY(){return this.getToken(i.MODIFY,0)}COLUMN(){return this.getToken(i.COLUMN,0)}columnIdentifier(){return this.getRuleContext(0,m)}COMMENT(){return this.getToken(i.COMMENT,0)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}accept(t){return t.visitAlterTableClauseModifyComment?t.visitAlterTableClauseModifyComment(this):t.visitChildren(this)}},C1=class extends p{static{l(this,"AlterTableClauseModifyTTLContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}MODIFY(){return this.getToken(i.MODIFY,0)}ttlClause(){return this.getRuleContext(0,X)}accept(t){return t.visitAlterTableClauseModifyTTL?t.visitAlterTableClauseModifyTTL(this):t.visitChildren(this)}},d1=class extends p{static{l(this,"AlterTableClauseAddProjectionContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}ADD(){return this.getToken(i.ADD,0)}PROJECTION(){return this.getToken(i.PROJECTION,0)}tableProjectionDefinition(){return this.getRuleContext(0,bt)}IF(){return this.getToken(i.IF,0)}NOT(){return this.getToken(i.NOT,0)}EXISTS(){return this.getToken(i.EXISTS,0)}AFTER(){return this.getToken(i.AFTER,0)}columnIdentifier(){return this.getRuleContext(0,m)}accept(t){return t.visitAlterTableClauseAddProjection?t.visitAlterTableClauseAddProjection(this):t.visitChildren(this)}},T1=class extends p{static{l(this,"AlterTableClauseAddColumnContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}ADD(){return this.getToken(i.ADD,0)}COLUMN(){return this.getToken(i.COLUMN,0)}tableColumnDefinition(){return this.getRuleContext(0,K)}IF(){return this.getToken(i.IF,0)}NOT(){return this.getToken(i.NOT,0)}EXISTS(){return this.getToken(i.EXISTS,0)}AFTER(){return this.getToken(i.AFTER,0)}columnIdentifier(){return this.getRuleContext(0,m)}accept(t){return t.visitAlterTableClauseAddColumn?t.visitAlterTableClauseAddColumn(this):t.visitChildren(this)}},Kt=class extends n.ParserRuleContext{static{l(this,"AssignmentExpressionListContext")}constructor(t,r){super(t,r)}assignmentExpression(t){return t===void 0?this.getRuleContexts(st):this.getRuleContext(t,st)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_assignmentExpressionList}accept(t){return t.visitAssignmentExpressionList?t.visitAssignmentExpressionList(this):t.visitChildren(this)}},st=class extends n.ParserRuleContext{static{l(this,"AssignmentExpressionContext")}constructor(t,r){super(t,r)}columnIdentifier(){return this.getRuleContext(0,m)}EQ_SINGLE(){return this.getToken(i.EQ_SINGLE,0)}columnExpression(){return this.getRuleContext(0,o)}get ruleIndex(){return i.RULE_assignmentExpression}accept(t){return t.visitAssignmentExpression?t.visitAssignmentExpression(this):t.visitChildren(this)}},Jt=class extends n.ParserRuleContext{static{l(this,"TableColumnPropertyTypeContext")}constructor(t,r){super(t,r)}ALIAS(){return this.getToken(i.ALIAS,0)}CODEC(){return this.getToken(i.CODEC,0)}COMMENT(){return this.getToken(i.COMMENT,0)}DEFAULT(){return this.getToken(i.DEFAULT,0)}MATERIALIZED(){return this.getToken(i.MATERIALIZED,0)}TTL(){return this.getToken(i.TTL,0)}get ruleIndex(){return i.RULE_tableColumnPropertyType}accept(t){return t.visitTableColumnPropertyType?t.visitTableColumnPropertyType(this):t.visitChildren(this)}},x=class extends n.ParserRuleContext{static{l(this,"PartitionClauseContext")}constructor(t,r){super(t,r)}PARTITION(){return this.getToken(i.PARTITION,0)}columnExpression(){return this.getRuleContext(0,o)}ID(){return this.getToken(i.ID,0)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}get ruleIndex(){return i.RULE_partitionClause}accept(t){return t.visitPartitionClause?t.visitPartitionClause(this):t.visitChildren(this)}},nt=class extends n.ParserRuleContext{static{l(this,"AttachStatementContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_attachStatement}copyFrom(t){super.copyFrom(t)}},R1=class extends nt{static{l(this,"AttachDictionaryStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}ATTACH(){return this.getToken(i.ATTACH,0)}DICTIONARY(){return this.getToken(i.DICTIONARY,0)}tableIdentifier(){return this.getRuleContext(0,E)}clusterClause(){return this.getRuleContext(0,R)}accept(t){return t.visitAttachDictionaryStatement?t.visitAttachDictionaryStatement(this):t.visitChildren(this)}},Qt=class extends n.ParserRuleContext{static{l(this,"CheckStatementContext")}constructor(t,r){super(t,r)}CHECK(){return this.getToken(i.CHECK,0)}TABLE(){return this.getToken(i.TABLE,0)}tableIdentifier(){return this.getRuleContext(0,E)}partitionClause(){return this.getRuleContext(0,x)}get ruleIndex(){return i.RULE_checkStatement}accept(t){return t.visitCheckStatement?t.visitCheckStatement(this):t.visitChildren(this)}},jt=class extends n.ParserRuleContext{static{l(this,"DeleteStatementContext")}constructor(t,r){super(t,r)}DELETE(){return this.getToken(i.DELETE,0)}FROM(){return this.getToken(i.FROM,0)}tableIdentifier(){return this.getRuleContext(0,E)}clusterClause(){return this.getRuleContext(0,R)}whereClause(){return this.getRuleContext(0,U)}get ruleIndex(){return i.RULE_deleteStatement}accept(t){return t.visitDeleteStatement?t.visitDeleteStatement(this):t.visitChildren(this)}},Zt=class extends n.ParserRuleContext{static{l(this,"CreateTableStatementContext")}constructor(t,r){super(t,r)}TABLE(){return this.getToken(i.TABLE,0)}tableIdentifier(){return this.getRuleContext(0,E)}ATTACH(){return this.getToken(i.ATTACH,0)}CREATE(){return this.getToken(i.CREATE,0)}REPLACE(){return this.getToken(i.REPLACE,0)}TEMPORARY(){return this.getToken(i.TEMPORARY,0)}IF(){return this.getToken(i.IF,0)}NOT(){return this.getToken(i.NOT,0)}EXISTS(){return this.getToken(i.EXISTS,0)}uuidClause(){return this.getRuleContext(0,D)}clusterClause(){return this.getRuleContext(0,R)}tableSchemaClause(){return this.getRuleContext(0,O)}engineClause(){return this.getRuleContext(0,Et)}subqueryClause(){return this.getRuleContext(0,V)}OR(){return this.getToken(i.OR,0)}get ruleIndex(){return i.RULE_createTableStatement}accept(t){return t.visitCreateTableStatement?t.visitCreateTableStatement(this):t.visitChildren(this)}},zt=class extends n.ParserRuleContext{static{l(this,"CreateDatabaseStatementContext")}constructor(t,r){super(t,r)}DATABASE(){return this.getToken(i.DATABASE,0)}identifier(){return this.getRuleContext(0,c)}engineExpression(){return this.getRuleContext(0,Tt)}ATTACH(){return this.getToken(i.ATTACH,0)}CREATE(){return this.getToken(i.CREATE,0)}IF(){return this.getToken(i.IF,0)}NOT(){return this.getToken(i.NOT,0)}EXISTS(){return this.getToken(i.EXISTS,0)}clusterClause(){return this.getRuleContext(0,R)}get ruleIndex(){return i.RULE_createDatabaseStatement}accept(t){return t.visitCreateDatabaseStatement?t.visitCreateDatabaseStatement(this):t.visitChildren(this)}},qt=class extends n.ParserRuleContext{static{l(this,"CreateDictionaryStatementContext")}constructor(t,r){super(t,r)}DICTIONARY(){return this.getToken(i.DICTIONARY,0)}tableIdentifier(){return this.getRuleContext(0,E)}dictionarySchemaClause(){return this.getRuleContext(0,re)}dictionaryEngineClause(){return this.getRuleContext(0,ie)}ATTACH(){return this.getToken(i.ATTACH,0)}CREATE(){return this.getToken(i.CREATE,0)}REPLACE(){return this.getToken(i.REPLACE,0)}IF(){return this.getToken(i.IF,0)}NOT(){return this.getToken(i.NOT,0)}EXISTS(){return this.getToken(i.EXISTS,0)}uuidClause(){return this.getRuleContext(0,D)}clusterClause(){return this.getRuleContext(0,R)}OR(){return this.getToken(i.OR,0)}get ruleIndex(){return i.RULE_createDictionaryStatement}accept(t){return t.visitCreateDictionaryStatement?t.visitCreateDictionaryStatement(this):t.visitChildren(this)}},$t=class extends n.ParserRuleContext{static{l(this,"CreateLiveViewStatementContext")}constructor(t,r){super(t,r)}LIVE(){return this.getToken(i.LIVE,0)}VIEW(){return this.getToken(i.VIEW,0)}tableIdentifier(){return this.getRuleContext(0,E)}subqueryClause(){return this.getRuleContext(0,V)}ATTACH(){return this.getToken(i.ATTACH,0)}CREATE(){return this.getToken(i.CREATE,0)}IF(){return this.getToken(i.IF,0)}NOT(){return this.getToken(i.NOT,0)}EXISTS(){return this.getToken(i.EXISTS,0)}uuidClause(){return this.getRuleContext(0,D)}clusterClause(){return this.getRuleContext(0,R)}WITH(){return this.getToken(i.WITH,0)}TIMEOUT(){return this.getToken(i.TIMEOUT,0)}destinationClause(){return this.getRuleContext(0,pt)}tableSchemaClause(){return this.getRuleContext(0,O)}DECIMAL_LITERAL(){return this.getToken(i.DECIMAL_LITERAL,0)}get ruleIndex(){return i.RULE_createLiveViewStatement}accept(t){return t.visitCreateLiveViewStatement?t.visitCreateLiveViewStatement(this):t.visitChildren(this)}},_t=class extends n.ParserRuleContext{static{l(this,"CreateMaterializedViewStatementContext")}constructor(t,r){super(t,r)}MATERIALIZED(){return this.getToken(i.MATERIALIZED,0)}VIEW(){return this.getToken(i.VIEW,0)}tableIdentifier(){return this.getRuleContext(0,E)}subqueryClause(){return this.getRuleContext(0,V)}ATTACH(){return this.getToken(i.ATTACH,0)}CREATE(){return this.getToken(i.CREATE,0)}destinationClause(){return this.getRuleContext(0,pt)}engineClause(){return this.getRuleContext(0,Et)}IF(){return this.getToken(i.IF,0)}NOT(){return this.getToken(i.NOT,0)}EXISTS(){return this.getToken(i.EXISTS,0)}uuidClause(){return this.getRuleContext(0,D)}clusterClause(){return this.getRuleContext(0,R)}tableSchemaClause(){return this.getRuleContext(0,O)}POPULATE(){return this.getToken(i.POPULATE,0)}get ruleIndex(){return i.RULE_createMaterializedViewStatement}accept(t){return t.visitCreateMaterializedViewStatement?t.visitCreateMaterializedViewStatement(this):t.visitChildren(this)}},te=class extends n.ParserRuleContext{static{l(this,"CreateViewStatementContext")}constructor(t,r){super(t,r)}VIEW(){return this.getToken(i.VIEW,0)}tableIdentifier(){return this.getRuleContext(0,E)}subqueryClause(){return this.getRuleContext(0,V)}ATTACH(){return this.getToken(i.ATTACH,0)}CREATE(){return this.getToken(i.CREATE,0)}OR(){return this.getToken(i.OR,0)}REPLACE(){return this.getToken(i.REPLACE,0)}IF(){return this.getToken(i.IF,0)}NOT(){return this.getToken(i.NOT,0)}EXISTS(){return this.getToken(i.EXISTS,0)}uuidClause(){return this.getRuleContext(0,D)}clusterClause(){return this.getRuleContext(0,R)}tableSchemaClause(){return this.getRuleContext(0,O)}get ruleIndex(){return i.RULE_createViewStatement}accept(t){return t.visitCreateViewStatement?t.visitCreateViewStatement(this):t.visitChildren(this)}},ee=class extends n.ParserRuleContext{static{l(this,"CreateStatementContext")}constructor(t,r){super(t,r)}createDatabaseStatement(){return this.getRuleContext(0,zt)}createDictionaryStatement(){return this.getRuleContext(0,qt)}createLiveViewStatement(){return this.getRuleContext(0,$t)}createMaterializedViewStatement(){return this.getRuleContext(0,_t)}createTableStatement(){return this.getRuleContext(0,Zt)}createViewStatement(){return this.getRuleContext(0,te)}get ruleIndex(){return i.RULE_createStatement}accept(t){return t.visitCreateStatement?t.visitCreateStatement(this):t.visitChildren(this)}},re=class extends n.ParserRuleContext{static{l(this,"DictionarySchemaClauseContext")}constructor(t,r){super(t,r)}LPAREN(){return this.getToken(i.LPAREN,0)}dictionaryAttributeDefinition(t){return t===void 0?this.getRuleContexts(lt):this.getRuleContext(t,lt)}RPAREN(){return this.getToken(i.RPAREN,0)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_dictionarySchemaClause}accept(t){return t.visitDictionarySchemaClause?t.visitDictionarySchemaClause(this):t.visitChildren(this)}},lt=class extends n.ParserRuleContext{constructor(r,s){super(r,s);this.attrs=new Set}static{l(this,"DictionaryAttributeDefinitionContext")}identifier(){return this.getRuleContext(0,c)}columnTypeExpression(){return this.getRuleContext(0,b)}DEFAULT(r){return r===void 0?this.getTokens(i.DEFAULT):this.getToken(i.DEFAULT,r)}literal(r){return r===void 0?this.getRuleContexts(y):this.getRuleContext(r,y)}EXPRESSION(r){return r===void 0?this.getTokens(i.EXPRESSION):this.getToken(i.EXPRESSION,r)}columnExpression(r){return r===void 0?this.getRuleContexts(o):this.getRuleContext(r,o)}HIERARCHICAL(r){return r===void 0?this.getTokens(i.HIERARCHICAL):this.getToken(i.HIERARCHICAL,r)}INJECTIVE(r){return r===void 0?this.getTokens(i.INJECTIVE):this.getToken(i.INJECTIVE,r)}IS_OBJECT_ID(r){return r===void 0?this.getTokens(i.IS_OBJECT_ID):this.getToken(i.IS_OBJECT_ID,r)}get ruleIndex(){return i.RULE_dictionaryAttributeDefinition}accept(r){return r.visitDictionaryAttributeDefinition?r.visitDictionaryAttributeDefinition(this):r.visitChildren(this)}},ie=class extends n.ParserRuleContext{constructor(r,s){super(r,s);this.clauses=new Set}static{l(this,"DictionaryEngineClauseContext")}dictionaryPrimaryKeyClause(){return this.getRuleContext(0,se)}sourceClause(r){return r===void 0?this.getRuleContexts(at):this.getRuleContext(r,at)}lifetimeClause(r){return r===void 0?this.getRuleContexts(ut):this.getRuleContext(r,ut)}layoutClause(r){return r===void 0?this.getRuleContexts(ot):this.getRuleContext(r,ot)}rangeClause(r){return r===void 0?this.getRuleContexts(ct):this.getRuleContext(r,ct)}dictionarySettingsClause(r){return r===void 0?this.getRuleContexts(ht):this.getRuleContext(r,ht)}get ruleIndex(){return i.RULE_dictionaryEngineClause}accept(r){return r.visitDictionaryEngineClause?r.visitDictionaryEngineClause(this):r.visitChildren(this)}},se=class extends n.ParserRuleContext{static{l(this,"DictionaryPrimaryKeyClauseContext")}constructor(t,r){super(t,r)}PRIMARY(){return this.getToken(i.PRIMARY,0)}KEY(){return this.getToken(i.KEY,0)}columnExpressionList(){return this.getRuleContext(0,T)}get ruleIndex(){return i.RULE_dictionaryPrimaryKeyClause}accept(t){return t.visitDictionaryPrimaryKeyClause?t.visitDictionaryPrimaryKeyClause(this):t.visitChildren(this)}},B=class extends n.ParserRuleContext{static{l(this,"DictionaryArgumentExpressionContext")}constructor(t,r){super(t,r)}identifier(t){return t===void 0?this.getRuleContexts(c):this.getRuleContext(t,c)}literal(){return this.getRuleContext(0,y)}LPAREN(){return this.getToken(i.LPAREN,0)}RPAREN(){return this.getToken(i.RPAREN,0)}get ruleIndex(){return i.RULE_dictionaryArgumentExpression}accept(t){return t.visitDictionaryArgumentExpression?t.visitDictionaryArgumentExpression(this):t.visitChildren(this)}},at=class extends n.ParserRuleContext{static{l(this,"SourceClauseContext")}constructor(t,r){super(t,r)}SOURCE(){return this.getToken(i.SOURCE,0)}LPAREN(t){return t===void 0?this.getTokens(i.LPAREN):this.getToken(i.LPAREN,t)}identifier(){return this.getRuleContext(0,c)}RPAREN(t){return t===void 0?this.getTokens(i.RPAREN):this.getToken(i.RPAREN,t)}dictionaryArgumentExpression(t){return t===void 0?this.getRuleContexts(B):this.getRuleContext(t,B)}get ruleIndex(){return i.RULE_sourceClause}accept(t){return t.visitSourceClause?t.visitSourceClause(this):t.visitChildren(this)}},ut=class extends n.ParserRuleContext{static{l(this,"LifetimeClauseContext")}constructor(t,r){super(t,r)}LIFETIME(){return this.getToken(i.LIFETIME,0)}LPAREN(){return this.getToken(i.LPAREN,0)}RPAREN(){return this.getToken(i.RPAREN,0)}DECIMAL_LITERAL(t){return t===void 0?this.getTokens(i.DECIMAL_LITERAL):this.getToken(i.DECIMAL_LITERAL,t)}MIN(){return this.getToken(i.MIN,0)}MAX(){return this.getToken(i.MAX,0)}get ruleIndex(){return i.RULE_lifetimeClause}accept(t){return t.visitLifetimeClause?t.visitLifetimeClause(this):t.visitChildren(this)}},ot=class extends n.ParserRuleContext{static{l(this,"LayoutClauseContext")}constructor(t,r){super(t,r)}LAYOUT(){return this.getToken(i.LAYOUT,0)}LPAREN(t){return t===void 0?this.getTokens(i.LPAREN):this.getToken(i.LPAREN,t)}identifier(){return this.getRuleContext(0,c)}RPAREN(t){return t===void 0?this.getTokens(i.RPAREN):this.getToken(i.RPAREN,t)}dictionaryArgumentExpression(t){return t===void 0?this.getRuleContexts(B):this.getRuleContext(t,B)}get ruleIndex(){return i.RULE_layoutClause}accept(t){return t.visitLayoutClause?t.visitLayoutClause(this):t.visitChildren(this)}},ct=class extends n.ParserRuleContext{static{l(this,"RangeClauseContext")}constructor(t,r){super(t,r)}RANGE(){return this.getToken(i.RANGE,0)}LPAREN(){return this.getToken(i.LPAREN,0)}RPAREN(){return this.getToken(i.RPAREN,0)}MIN(){return this.getToken(i.MIN,0)}identifier(t){return t===void 0?this.getRuleContexts(c):this.getRuleContext(t,c)}MAX(){return this.getToken(i.MAX,0)}get ruleIndex(){return i.RULE_rangeClause}accept(t){return t.visitRangeClause?t.visitRangeClause(this):t.visitChildren(this)}},ht=class extends n.ParserRuleContext{static{l(this,"DictionarySettingsClauseContext")}constructor(t,r){super(t,r)}SETTINGS(){return this.getToken(i.SETTINGS,0)}LPAREN(){return this.getToken(i.LPAREN,0)}settingExpressionList(){return this.getRuleContext(0,z)}RPAREN(){return this.getToken(i.RPAREN,0)}get ruleIndex(){return i.RULE_dictionarySettingsClause}accept(t){return t.visitDictionarySettingsClause?t.visitDictionarySettingsClause(this):t.visitChildren(this)}},R=class extends n.ParserRuleContext{static{l(this,"ClusterClauseContext")}constructor(t,r){super(t,r)}ON(){return this.getToken(i.ON,0)}CLUSTER(){return this.getToken(i.CLUSTER,0)}identifier(){return this.getRuleContext(0,c)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}get ruleIndex(){return i.RULE_clusterClause}accept(t){return t.visitClusterClause?t.visitClusterClause(this):t.visitChildren(this)}},D=class extends n.ParserRuleContext{static{l(this,"UuidClauseContext")}constructor(t,r){super(t,r)}UUID(){return this.getToken(i.UUID,0)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}get ruleIndex(){return i.RULE_uuidClause}accept(t){return t.visitUuidClause?t.visitUuidClause(this):t.visitChildren(this)}},pt=class extends n.ParserRuleContext{static{l(this,"DestinationClauseContext")}constructor(t,r){super(t,r)}TO(){return this.getToken(i.TO,0)}tableIdentifier(){return this.getRuleContext(0,E)}get ruleIndex(){return i.RULE_destinationClause}accept(t){return t.visitDestinationClause?t.visitDestinationClause(this):t.visitChildren(this)}},V=class extends n.ParserRuleContext{static{l(this,"SubqueryClauseContext")}constructor(t,r){super(t,r)}AS(){return this.getToken(i.AS,0)}selectUnionStatement(){return this.getRuleContext(0,k)}get ruleIndex(){return i.RULE_subqueryClause}accept(t){return t.visitSubqueryClause?t.visitSubqueryClause(this):t.visitChildren(this)}},O=class extends n.ParserRuleContext{static{l(this,"TableSchemaClauseContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_tableSchemaClause}copyFrom(t){super.copyFrom(t)}},b1=class extends O{static{l(this,"SchemaAsTableClauseContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}AS(){return this.getToken(i.AS,0)}tableIdentifier(){return this.getRuleContext(0,E)}accept(t){return t.visitSchemaAsTableClause?t.visitSchemaAsTableClause(this):t.visitChildren(this)}},x1=class extends O{static{l(this,"SchemaAsFunctionClauseContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}AS(){return this.getToken(i.AS,0)}tableFunctionExpression(){return this.getRuleContext(0,Y)}accept(t){return t.visitSchemaAsFunctionClause?t.visitSchemaAsFunctionClause(this):t.visitChildren(this)}},A1=class extends O{static{l(this,"SchemaDescriptionClauseContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}LPAREN(){return this.getToken(i.LPAREN,0)}tableElementExpression(t){return t===void 0?this.getRuleContexts(H):this.getRuleContext(t,H)}RPAREN(){return this.getToken(i.RPAREN,0)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}accept(t){return t.visitSchemaDescriptionClause?t.visitSchemaDescriptionClause(this):t.visitChildren(this)}},Et=class extends n.ParserRuleContext{constructor(r,s){super(r,s);this.clauses=new Set}static{l(this,"EngineClauseContext")}engineExpression(){return this.getRuleContext(0,Tt)}orderByClause(r){return r===void 0?this.getRuleContexts(j):this.getRuleContext(r,j)}partitionByClause(r){return r===void 0?this.getRuleContexts(mt):this.getRuleContext(r,mt)}primaryKeyClause(r){return r===void 0?this.getRuleContexts(Ct):this.getRuleContext(r,Ct)}sampleByClause(r){return r===void 0?this.getRuleContexts(dt):this.getRuleContext(r,dt)}ttlClause(r){return r===void 0?this.getRuleContexts(X):this.getRuleContext(r,X)}settingsClause(r){return r===void 0?this.getRuleContexts(Z):this.getRuleContext(r,Z)}get ruleIndex(){return i.RULE_engineClause}accept(r){return r.visitEngineClause?r.visitEngineClause(this):r.visitChildren(this)}},mt=class extends n.ParserRuleContext{static{l(this,"PartitionByClauseContext")}constructor(t,r){super(t,r)}PARTITION(){return this.getToken(i.PARTITION,0)}BY(){return this.getToken(i.BY,0)}columnExpression(){return this.getRuleContext(0,o)}get ruleIndex(){return i.RULE_partitionByClause}accept(t){return t.visitPartitionByClause?t.visitPartitionByClause(this):t.visitChildren(this)}},Ct=class extends n.ParserRuleContext{static{l(this,"PrimaryKeyClauseContext")}constructor(t,r){super(t,r)}PRIMARY(){return this.getToken(i.PRIMARY,0)}KEY(){return this.getToken(i.KEY,0)}columnExpression(){return this.getRuleContext(0,o)}get ruleIndex(){return i.RULE_primaryKeyClause}accept(t){return t.visitPrimaryKeyClause?t.visitPrimaryKeyClause(this):t.visitChildren(this)}},dt=class extends n.ParserRuleContext{static{l(this,"SampleByClauseContext")}constructor(t,r){super(t,r)}SAMPLE(){return this.getToken(i.SAMPLE,0)}BY(){return this.getToken(i.BY,0)}columnExpression(){return this.getRuleContext(0,o)}get ruleIndex(){return i.RULE_sampleByClause}accept(t){return t.visitSampleByClause?t.visitSampleByClause(this):t.visitChildren(this)}},X=class extends n.ParserRuleContext{static{l(this,"TtlClauseContext")}constructor(t,r){super(t,r)}TTL(){return this.getToken(i.TTL,0)}ttlExpression(t){return t===void 0?this.getRuleContexts(Nt):this.getRuleContext(t,Nt)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_ttlClause}accept(t){return t.visitTtlClause?t.visitTtlClause(this):t.visitChildren(this)}},Tt=class extends n.ParserRuleContext{static{l(this,"EngineExpressionContext")}constructor(t,r){super(t,r)}ENGINE(){return this.getToken(i.ENGINE,0)}identifierOrNull(){return this.getRuleContext(0,wt)}EQ_SINGLE(){return this.getToken(i.EQ_SINGLE,0)}LPAREN(){return this.getToken(i.LPAREN,0)}RPAREN(){return this.getToken(i.RPAREN,0)}columnExpressionList(){return this.getRuleContext(0,T)}get ruleIndex(){return i.RULE_engineExpression}accept(t){return t.visitEngineExpression?t.visitEngineExpression(this):t.visitChildren(this)}},H=class extends n.ParserRuleContext{static{l(this,"TableElementExpressionContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_tableElementExpression}copyFrom(t){super.copyFrom(t)}},N1=class extends H{static{l(this,"TableElementExpressionColumnContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}tableColumnDefinition(){return this.getRuleContext(0,K)}accept(t){return t.visitTableElementExpressionColumn?t.visitTableElementExpressionColumn(this):t.visitChildren(this)}},S1=class extends H{static{l(this,"TableElementExpressionConstraintContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}CONSTRAINT(){return this.getToken(i.CONSTRAINT,0)}identifier(){return this.getRuleContext(0,c)}CHECK(){return this.getToken(i.CHECK,0)}columnExpression(){return this.getRuleContext(0,o)}accept(t){return t.visitTableElementExpressionConstraint?t.visitTableElementExpressionConstraint(this):t.visitChildren(this)}},L1=class extends H{static{l(this,"TableElementExpressionIndexContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}INDEX(){return this.getToken(i.INDEX,0)}tableIndexDefinition(){return this.getRuleContext(0,Rt)}accept(t){return t.visitTableElementExpressionIndex?t.visitTableElementExpressionIndex(this):t.visitChildren(this)}},I1=class extends H{static{l(this,"TableElementExpressionProjectionContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}PROJECTION(){return this.getToken(i.PROJECTION,0)}tableProjectionDefinition(){return this.getRuleContext(0,bt)}accept(t){return t.visitTableElementExpressionProjection?t.visitTableElementExpressionProjection(this):t.visitChildren(this)}},K=class extends n.ParserRuleContext{static{l(this,"TableColumnDefinitionContext")}constructor(t,r){super(t,r)}columnIdentifier(){return this.getRuleContext(0,m)}columnTypeExpression(){return this.getRuleContext(0,b)}tableColumnPropertyExpression(){return this.getRuleContext(0,ne)}COMMENT(){return this.getToken(i.COMMENT,0)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}codecExpression(){return this.getRuleContext(0,xt)}TTL(){return this.getToken(i.TTL,0)}columnExpression(){return this.getRuleContext(0,o)}get ruleIndex(){return i.RULE_tableColumnDefinition}accept(t){return t.visitTableColumnDefinition?t.visitTableColumnDefinition(this):t.visitChildren(this)}},ne=class extends n.ParserRuleContext{static{l(this,"TableColumnPropertyExpressionContext")}constructor(t,r){super(t,r)}columnExpression(){return this.getRuleContext(0,o)}DEFAULT(){return this.getToken(i.DEFAULT,0)}MATERIALIZED(){return this.getToken(i.MATERIALIZED,0)}ALIAS(){return this.getToken(i.ALIAS,0)}get ruleIndex(){return i.RULE_tableColumnPropertyExpression}accept(t){return t.visitTableColumnPropertyExpression?t.visitTableColumnPropertyExpression(this):t.visitChildren(this)}},Rt=class extends n.ParserRuleContext{static{l(this,"TableIndexDefinitionContext")}constructor(t,r){super(t,r)}columnIdentifier(){return this.getRuleContext(0,m)}columnExpression(){return this.getRuleContext(0,o)}TYPE(){return this.getToken(i.TYPE,0)}columnTypeExpression(){return this.getRuleContext(0,b)}GRANULARITY(){return this.getToken(i.GRANULARITY,0)}DECIMAL_LITERAL(){return this.getToken(i.DECIMAL_LITERAL,0)}get ruleIndex(){return i.RULE_tableIndexDefinition}accept(t){return t.visitTableIndexDefinition?t.visitTableIndexDefinition(this):t.visitChildren(this)}},bt=class extends n.ParserRuleContext{static{l(this,"TableProjectionDefinitionContext")}constructor(t,r){super(t,r)}columnIdentifier(){return this.getRuleContext(0,m)}projectionSelectStatement(){return this.getRuleContext(0,pe)}get ruleIndex(){return i.RULE_tableProjectionDefinition}accept(t){return t.visitTableProjectionDefinition?t.visitTableProjectionDefinition(this):t.visitChildren(this)}},xt=class extends n.ParserRuleContext{static{l(this,"CodecExpressionContext")}constructor(t,r){super(t,r)}CODEC(){return this.getToken(i.CODEC,0)}LPAREN(){return this.getToken(i.LPAREN,0)}codecArgExpression(t){return t===void 0?this.getRuleContexts(At):this.getRuleContext(t,At)}RPAREN(){return this.getToken(i.RPAREN,0)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_codecExpression}accept(t){return t.visitCodecExpression?t.visitCodecExpression(this):t.visitChildren(this)}},At=class extends n.ParserRuleContext{static{l(this,"CodecArgExpressionContext")}constructor(t,r){super(t,r)}identifier(){return this.getRuleContext(0,c)}LPAREN(){return this.getToken(i.LPAREN,0)}RPAREN(){return this.getToken(i.RPAREN,0)}columnExpressionList(){return this.getRuleContext(0,T)}get ruleIndex(){return i.RULE_codecArgExpression}accept(t){return t.visitCodecArgExpression?t.visitCodecArgExpression(this):t.visitChildren(this)}},Nt=class extends n.ParserRuleContext{static{l(this,"TtlExpressionContext")}constructor(t,r){super(t,r)}columnExpression(){return this.getRuleContext(0,o)}DELETE(){return this.getToken(i.DELETE,0)}TO(){return this.getToken(i.TO,0)}DISK(){return this.getToken(i.DISK,0)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}VOLUME(){return this.getToken(i.VOLUME,0)}get ruleIndex(){return i.RULE_ttlExpression}accept(t){return t.visitTtlExpression?t.visitTtlExpression(this):t.visitChildren(this)}},le=class extends n.ParserRuleContext{static{l(this,"DescribeStatementContext")}constructor(t,r){super(t,r)}tableExpression(){return this.getRuleContext(0,g)}DESCRIBE(){return this.getToken(i.DESCRIBE,0)}DESC(){return this.getToken(i.DESC,0)}TABLE(){return this.getToken(i.TABLE,0)}get ruleIndex(){return i.RULE_describeStatement}accept(t){return t.visitDescribeStatement?t.visitDescribeStatement(this):t.visitChildren(this)}},J=class extends n.ParserRuleContext{static{l(this,"DropStatementContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_dropStatement}copyFrom(t){super.copyFrom(t)}},g1=class extends J{static{l(this,"DropDatabaseStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}DATABASE(){return this.getToken(i.DATABASE,0)}databaseIdentifier(){return this.getRuleContext(0,P)}DETACH(){return this.getToken(i.DETACH,0)}DROP(){return this.getToken(i.DROP,0)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}clusterClause(){return this.getRuleContext(0,R)}accept(t){return t.visitDropDatabaseStatement?t.visitDropDatabaseStatement(this):t.visitChildren(this)}},y1=class extends J{static{l(this,"DropTableStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}tableIdentifier(){return this.getRuleContext(0,E)}DETACH(){return this.getToken(i.DETACH,0)}DROP(){return this.getToken(i.DROP,0)}DICTIONARY(){return this.getToken(i.DICTIONARY,0)}TABLE(){return this.getToken(i.TABLE,0)}VIEW(){return this.getToken(i.VIEW,0)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}clusterClause(){return this.getRuleContext(0,R)}NO(){return this.getToken(i.NO,0)}DELAY(){return this.getToken(i.DELAY,0)}TEMPORARY(){return this.getToken(i.TEMPORARY,0)}accept(t){return t.visitDropTableStatement?t.visitDropTableStatement(this):t.visitChildren(this)}},Q=class extends n.ParserRuleContext{static{l(this,"ExistsStatementContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_existsStatement}copyFrom(t){super.copyFrom(t)}},O1=class extends Q{static{l(this,"ExistsDatabaseStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}EXISTS(){return this.getToken(i.EXISTS,0)}DATABASE(){return this.getToken(i.DATABASE,0)}databaseIdentifier(){return this.getRuleContext(0,P)}accept(t){return t.visitExistsDatabaseStatement?t.visitExistsDatabaseStatement(this):t.visitChildren(this)}},k1=class extends Q{static{l(this,"ExistsTableStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}EXISTS(){return this.getToken(i.EXISTS,0)}tableIdentifier(){return this.getRuleContext(0,E)}DICTIONARY(){return this.getToken(i.DICTIONARY,0)}TABLE(){return this.getToken(i.TABLE,0)}VIEW(){return this.getToken(i.VIEW,0)}TEMPORARY(){return this.getToken(i.TEMPORARY,0)}accept(t){return t.visitExistsTableStatement?t.visitExistsTableStatement(this):t.visitChildren(this)}},I=class extends n.ParserRuleContext{static{l(this,"ExplainStatementContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_explainStatement}copyFrom(t){super.copyFrom(t)}},f1=class extends I{static{l(this,"ExplainASTStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}EXPLAIN(){return this.getToken(i.EXPLAIN,0)}AST(){return this.getToken(i.AST,0)}notInsertStatement(){return this.getRuleContext(0,S)}accept(t){return t.visitExplainASTStatement?t.visitExplainASTStatement(this):t.visitChildren(this)}},P1=class extends I{static{l(this,"ExplainQueryTreeStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}EXPLAIN(){return this.getToken(i.EXPLAIN,0)}QUERY(){return this.getToken(i.QUERY,0)}TREE(){return this.getToken(i.TREE,0)}notInsertStatement(){return this.getRuleContext(0,S)}accept(t){return t.visitExplainQueryTreeStatement?t.visitExplainQueryTreeStatement(this):t.visitChildren(this)}},v1=class extends I{static{l(this,"ExplainPlanStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}EXPLAIN(){return this.getToken(i.EXPLAIN,0)}PLAN(){return this.getToken(i.PLAN,0)}notInsertStatement(){return this.getRuleContext(0,S)}accept(t){return t.visitExplainPlanStatement?t.visitExplainPlanStatement(this):t.visitChildren(this)}},H1=class extends I{static{l(this,"ExplainDefaultStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}EXPLAIN(){return this.getToken(i.EXPLAIN,0)}notInsertStatement(){return this.getRuleContext(0,S)}accept(t){return t.visitExplainDefaultStatement?t.visitExplainDefaultStatement(this):t.visitChildren(this)}},D1=class extends I{static{l(this,"ExplainEstimateStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}EXPLAIN(){return this.getToken(i.EXPLAIN,0)}ESTIMATE(){return this.getToken(i.ESTIMATE,0)}notInsertStatement(){return this.getRuleContext(0,S)}accept(t){return t.visitExplainEstimateStatement?t.visitExplainEstimateStatement(this):t.visitChildren(this)}},U1=class extends I{static{l(this,"ExplainSyntaxStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}EXPLAIN(){return this.getToken(i.EXPLAIN,0)}SYNTAX(){return this.getToken(i.SYNTAX,0)}notInsertStatement(){return this.getRuleContext(0,S)}accept(t){return t.visitExplainSyntaxStatement?t.visitExplainSyntaxStatement(this):t.visitChildren(this)}},M1=class extends I{static{l(this,"ExplainPipelineStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}EXPLAIN(){return this.getToken(i.EXPLAIN,0)}PIPELINE(){return this.getToken(i.PIPELINE,0)}notInsertStatement(){return this.getRuleContext(0,S)}accept(t){return t.visitExplainPipelineStatement?t.visitExplainPipelineStatement(this):t.visitChildren(this)}},ae=class extends n.ParserRuleContext{static{l(this,"InsertStatementContext")}constructor(t,r){super(t,r)}INSERT(){return this.getToken(i.INSERT,0)}INTO(){return this.getToken(i.INTO,0)}dataClause(){return this.getRuleContext(0,G)}tableIdentifier(){return this.getRuleContext(0,E)}FUNCTION(){return this.getToken(i.FUNCTION,0)}tableFunctionExpression(){return this.getRuleContext(0,Y)}TABLE(){return this.getToken(i.TABLE,0)}columnsClause(){return this.getRuleContext(0,ue)}get ruleIndex(){return i.RULE_insertStatement}accept(t){return t.visitInsertStatement?t.visitInsertStatement(this):t.visitChildren(this)}},ue=class extends n.ParserRuleContext{static{l(this,"ColumnsClauseContext")}constructor(t,r){super(t,r)}LPAREN(){return this.getToken(i.LPAREN,0)}columnIdentifier(t){return t===void 0?this.getRuleContexts(m):this.getRuleContext(t,m)}RPAREN(){return this.getToken(i.RPAREN,0)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_columnsClause}accept(t){return t.visitColumnsClause?t.visitColumnsClause(this):t.visitChildren(this)}},G=class extends n.ParserRuleContext{static{l(this,"DataClauseContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_dataClause}copyFrom(t){super.copyFrom(t)}},F1=class extends G{static{l(this,"DataClauseValuesContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}valuesStatement(){return this.getRuleContext(0,oe)}accept(t){return t.visitDataClauseValues?t.visitDataClauseValues(this):t.visitChildren(this)}},w1=class extends G{static{l(this,"DataClauseFormatContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}FORMAT(){return this.getToken(i.FORMAT,0)}identifier(){return this.getRuleContext(0,c)}accept(t){return t.visitDataClauseFormat?t.visitDataClauseFormat(this):t.visitChildren(this)}},B1=class extends G{static{l(this,"DataClauseSelectContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}selectUnionStatement(){return this.getRuleContext(0,k)}EOF(){return this.getToken(i.EOF,0)}SEMICOLON(){return this.getToken(i.SEMICOLON,0)}accept(t){return t.visitDataClauseSelect?t.visitDataClauseSelect(this):t.visitChildren(this)}},oe=class extends n.ParserRuleContext{static{l(this,"ValuesStatementContext")}constructor(t,r){super(t,r)}VALUES(){return this.getToken(i.VALUES,0)}LPAREN(t){return t===void 0?this.getTokens(i.LPAREN):this.getToken(i.LPAREN,t)}RPAREN(t){return t===void 0?this.getTokens(i.RPAREN):this.getToken(i.RPAREN,t)}literal(t){return t===void 0?this.getRuleContexts(y):this.getRuleContext(t,y)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_valuesStatement}accept(t){return t.visitValuesStatement?t.visitValuesStatement(this):t.visitChildren(this)}},St=class extends n.ParserRuleContext{static{l(this,"KillStatementContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_killStatement}copyFrom(t){super.copyFrom(t)}},V1=class extends St{static{l(this,"KillMutationStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}KILL(){return this.getToken(i.KILL,0)}MUTATION(){return this.getToken(i.MUTATION,0)}whereClause(){return this.getRuleContext(0,U)}clusterClause(){return this.getRuleContext(0,R)}SYNC(){return this.getToken(i.SYNC,0)}ASYNC(){return this.getToken(i.ASYNC,0)}TEST(){return this.getToken(i.TEST,0)}accept(t){return t.visitKillMutationStatement?t.visitKillMutationStatement(this):t.visitChildren(this)}},ce=class extends n.ParserRuleContext{static{l(this,"OptimizeStatementContext")}constructor(t,r){super(t,r)}OPTIMIZE(){return this.getToken(i.OPTIMIZE,0)}TABLE(){return this.getToken(i.TABLE,0)}tableIdentifier(){return this.getRuleContext(0,E)}clusterClause(){return this.getRuleContext(0,R)}partitionClause(){return this.getRuleContext(0,x)}FINAL(){return this.getToken(i.FINAL,0)}DEDUPLICATE(){return this.getToken(i.DEDUPLICATE,0)}get ruleIndex(){return i.RULE_optimizeStatement}accept(t){return t.visitOptimizeStatement?t.visitOptimizeStatement(this):t.visitChildren(this)}},he=class extends n.ParserRuleContext{static{l(this,"RenameStatementContext")}constructor(t,r){super(t,r)}RENAME(){return this.getToken(i.RENAME,0)}TABLE(){return this.getToken(i.TABLE,0)}tableIdentifier(t){return t===void 0?this.getRuleContexts(E):this.getRuleContext(t,E)}TO(t){return t===void 0?this.getTokens(i.TO):this.getToken(i.TO,t)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}clusterClause(){return this.getRuleContext(0,R)}get ruleIndex(){return i.RULE_renameStatement}accept(t){return t.visitRenameStatement?t.visitRenameStatement(this):t.visitChildren(this)}},pe=class extends n.ParserRuleContext{static{l(this,"ProjectionSelectStatementContext")}constructor(t,r){super(t,r)}LPAREN(){return this.getToken(i.LPAREN,0)}SELECT(){return this.getToken(i.SELECT,0)}columnExpressionList(){return this.getRuleContext(0,T)}RPAREN(){return this.getToken(i.RPAREN,0)}withClause(){return this.getRuleContext(0,gt)}groupByClause(){return this.getRuleContext(0,yt)}projectionOrderByClause(){return this.getRuleContext(0,be)}get ruleIndex(){return i.RULE_projectionSelectStatement}accept(t){return t.visitProjectionSelectStatement?t.visitProjectionSelectStatement(this):t.visitChildren(this)}},k=class extends n.ParserRuleContext{static{l(this,"SelectUnionStatementContext")}constructor(t,r){super(t,r)}selectStatementWithParentheses(t){return t===void 0?this.getRuleContexts(Lt):this.getRuleContext(t,Lt)}UNION(t){return t===void 0?this.getTokens(i.UNION):this.getToken(i.UNION,t)}ALL(t){return t===void 0?this.getTokens(i.ALL):this.getToken(i.ALL,t)}get ruleIndex(){return i.RULE_selectUnionStatement}accept(t){return t.visitSelectUnionStatement?t.visitSelectUnionStatement(this):t.visitChildren(this)}},Lt=class extends n.ParserRuleContext{static{l(this,"SelectStatementWithParenthesesContext")}constructor(t,r){super(t,r)}selectStatement(){return this.getRuleContext(0,It)}LPAREN(){return this.getToken(i.LPAREN,0)}selectUnionStatement(){return this.getRuleContext(0,k)}RPAREN(){return this.getToken(i.RPAREN,0)}get ruleIndex(){return i.RULE_selectStatementWithParentheses}accept(t){return t.visitSelectStatementWithParentheses?t.visitSelectStatementWithParentheses(this):t.visitChildren(this)}},It=class extends n.ParserRuleContext{static{l(this,"SelectStatementContext")}constructor(t,r){super(t,r)}SELECT(){return this.getToken(i.SELECT,0)}columnExpressionList(){return this.getRuleContext(0,T)}withClause(){return this.getRuleContext(0,gt)}DISTINCT(){return this.getToken(i.DISTINCT,0)}topClause(){return this.getRuleContext(0,Ee)}fromClause(){return this.getRuleContext(0,me)}arrayJoinClause(){return this.getRuleContext(0,Ce)}windowClause(){return this.getRuleContext(0,de)}prewhereClause(){return this.getRuleContext(0,Te)}whereClause(){return this.getRuleContext(0,U)}groupByClause(){return this.getRuleContext(0,yt)}WITH(t){return t===void 0?this.getTokens(i.WITH):this.getToken(i.WITH,t)}TOTALS(){return this.getToken(i.TOTALS,0)}havingClause(){return this.getRuleContext(0,Re)}orderByClause(){return this.getRuleContext(0,j)}limitByClause(){return this.getRuleContext(0,xe)}limitClause(){return this.getRuleContext(0,Ot)}settingsClause(){return this.getRuleContext(0,Z)}CUBE(){return this.getToken(i.CUBE,0)}ROLLUP(){return this.getToken(i.ROLLUP,0)}get ruleIndex(){return i.RULE_selectStatement}accept(t){return t.visitSelectStatement?t.visitSelectStatement(this):t.visitChildren(this)}},gt=class extends n.ParserRuleContext{static{l(this,"WithClauseContext")}constructor(t,r){super(t,r)}WITH(){return this.getToken(i.WITH,0)}columnExpressionList(){return this.getRuleContext(0,T)}get ruleIndex(){return i.RULE_withClause}accept(t){return t.visitWithClause?t.visitWithClause(this):t.visitChildren(this)}},Ee=class extends n.ParserRuleContext{static{l(this,"TopClauseContext")}constructor(t,r){super(t,r)}TOP(){return this.getToken(i.TOP,0)}DECIMAL_LITERAL(){return this.getToken(i.DECIMAL_LITERAL,0)}WITH(){return this.getToken(i.WITH,0)}TIES(){return this.getToken(i.TIES,0)}get ruleIndex(){return i.RULE_topClause}accept(t){return t.visitTopClause?t.visitTopClause(this):t.visitChildren(this)}},me=class extends n.ParserRuleContext{static{l(this,"FromClauseContext")}constructor(t,r){super(t,r)}FROM(){return this.getToken(i.FROM,0)}joinExpression(){return this.getRuleContext(0,A)}get ruleIndex(){return i.RULE_fromClause}accept(t){return t.visitFromClause?t.visitFromClause(this):t.visitChildren(this)}},Ce=class extends n.ParserRuleContext{static{l(this,"ArrayJoinClauseContext")}constructor(t,r){super(t,r)}ARRAY(){return this.getToken(i.ARRAY,0)}JOIN(){return this.getToken(i.JOIN,0)}columnExpressionList(){return this.getRuleContext(0,T)}LEFT(){return this.getToken(i.LEFT,0)}INNER(){return this.getToken(i.INNER,0)}get ruleIndex(){return i.RULE_arrayJoinClause}accept(t){return t.visitArrayJoinClause?t.visitArrayJoinClause(this):t.visitChildren(this)}},de=class extends n.ParserRuleContext{static{l(this,"WindowClauseContext")}constructor(t,r){super(t,r)}WINDOW(){return this.getToken(i.WINDOW,0)}identifier(){return this.getRuleContext(0,c)}AS(){return this.getToken(i.AS,0)}LPAREN(){return this.getToken(i.LPAREN,0)}windowExpression(){return this.getRuleContext(0,Dt)}RPAREN(){return this.getToken(i.RPAREN,0)}get ruleIndex(){return i.RULE_windowClause}accept(t){return t.visitWindowClause?t.visitWindowClause(this):t.visitChildren(this)}},Te=class extends n.ParserRuleContext{static{l(this,"PrewhereClauseContext")}constructor(t,r){super(t,r)}PREWHERE(){return this.getToken(i.PREWHERE,0)}columnExpression(){return this.getRuleContext(0,o)}get ruleIndex(){return i.RULE_prewhereClause}accept(t){return t.visitPrewhereClause?t.visitPrewhereClause(this):t.visitChildren(this)}},U=class extends n.ParserRuleContext{static{l(this,"WhereClauseContext")}constructor(t,r){super(t,r)}WHERE(){return this.getToken(i.WHERE,0)}columnExpression(){return this.getRuleContext(0,o)}get ruleIndex(){return i.RULE_whereClause}accept(t){return t.visitWhereClause?t.visitWhereClause(this):t.visitChildren(this)}},yt=class extends n.ParserRuleContext{static{l(this,"GroupByClauseContext")}constructor(t,r){super(t,r)}GROUP(){return this.getToken(i.GROUP,0)}BY(){return this.getToken(i.BY,0)}LPAREN(){return this.getToken(i.LPAREN,0)}columnExpressionList(){return this.getRuleContext(0,T)}RPAREN(){return this.getToken(i.RPAREN,0)}CUBE(){return this.getToken(i.CUBE,0)}ROLLUP(){return this.getToken(i.ROLLUP,0)}get ruleIndex(){return i.RULE_groupByClause}accept(t){return t.visitGroupByClause?t.visitGroupByClause(this):t.visitChildren(this)}},Re=class extends n.ParserRuleContext{static{l(this,"HavingClauseContext")}constructor(t,r){super(t,r)}HAVING(){return this.getToken(i.HAVING,0)}columnExpression(){return this.getRuleContext(0,o)}get ruleIndex(){return i.RULE_havingClause}accept(t){return t.visitHavingClause?t.visitHavingClause(this):t.visitChildren(this)}},j=class extends n.ParserRuleContext{static{l(this,"OrderByClauseContext")}constructor(t,r){super(t,r)}ORDER(){return this.getToken(i.ORDER,0)}BY(){return this.getToken(i.BY,0)}orderExpressionList(){return this.getRuleContext(0,ft)}get ruleIndex(){return i.RULE_orderByClause}accept(t){return t.visitOrderByClause?t.visitOrderByClause(this):t.visitChildren(this)}},be=class extends n.ParserRuleContext{static{l(this,"ProjectionOrderByClauseContext")}constructor(t,r){super(t,r)}ORDER(){return this.getToken(i.ORDER,0)}BY(){return this.getToken(i.BY,0)}columnExpressionList(){return this.getRuleContext(0,T)}get ruleIndex(){return i.RULE_projectionOrderByClause}accept(t){return t.visitProjectionOrderByClause?t.visitProjectionOrderByClause(this):t.visitChildren(this)}},xe=class extends n.ParserRuleContext{static{l(this,"LimitByClauseContext")}constructor(t,r){super(t,r)}LIMIT(){return this.getToken(i.LIMIT,0)}limitExpression(){return this.getRuleContext(0,kt)}BY(){return this.getToken(i.BY,0)}columnExpressionList(){return this.getRuleContext(0,T)}get ruleIndex(){return i.RULE_limitByClause}accept(t){return t.visitLimitByClause?t.visitLimitByClause(this):t.visitChildren(this)}},Ot=class extends n.ParserRuleContext{static{l(this,"LimitClauseContext")}constructor(t,r){super(t,r)}LIMIT(){return this.getToken(i.LIMIT,0)}limitExpression(){return this.getRuleContext(0,kt)}WITH(){return this.getToken(i.WITH,0)}TIES(){return this.getToken(i.TIES,0)}get ruleIndex(){return i.RULE_limitClause}accept(t){return t.visitLimitClause?t.visitLimitClause(this):t.visitChildren(this)}},Z=class extends n.ParserRuleContext{static{l(this,"SettingsClauseContext")}constructor(t,r){super(t,r)}SETTINGS(){return this.getToken(i.SETTINGS,0)}settingExpressionList(){return this.getRuleContext(0,z)}get ruleIndex(){return i.RULE_settingsClause}accept(t){return t.visitSettingsClause?t.visitSettingsClause(this):t.visitChildren(this)}},A=class extends n.ParserRuleContext{static{l(this,"JoinExpressionContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_joinExpression}copyFrom(t){super.copyFrom(t)}},G1=class extends A{static{l(this,"JoinExpressionParensContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}LPAREN(){return this.getToken(i.LPAREN,0)}joinExpression(){return this.getRuleContext(0,A)}RPAREN(){return this.getToken(i.RPAREN,0)}accept(t){return t.visitJoinExpressionParens?t.visitJoinExpressionParens(this):t.visitChildren(this)}},W1=class extends A{static{l(this,"JoinExpressionTableContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}tableExpression(){return this.getRuleContext(0,g)}FINAL(){return this.getToken(i.FINAL,0)}sampleClause(){return this.getRuleContext(0,Se)}accept(t){return t.visitJoinExpressionTable?t.visitJoinExpressionTable(this):t.visitChildren(this)}},Y1=class extends A{static{l(this,"JoinExpressionCrossOpContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}joinExpression(t){return t===void 0?this.getRuleContexts(A):this.getRuleContext(t,A)}joinOperatorCross(){return this.getRuleContext(0,Ae)}accept(t){return t.visitJoinExpressionCrossOp?t.visitJoinExpressionCrossOp(this):t.visitChildren(this)}},X1=class extends A{static{l(this,"JoinExpressionOpContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}joinExpression(t){return t===void 0?this.getRuleContexts(A):this.getRuleContext(t,A)}JOIN(){return this.getToken(i.JOIN,0)}joinConstraintClause(){return this.getRuleContext(0,Ne)}joinOperator(){return this.getRuleContext(0,W)}GLOBAL(){return this.getToken(i.GLOBAL,0)}LOCAL(){return this.getToken(i.LOCAL,0)}accept(t){return t.visitJoinExpressionOp?t.visitJoinExpressionOp(this):t.visitChildren(this)}},W=class extends n.ParserRuleContext{static{l(this,"JoinOperatorContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_joinOperator}copyFrom(t){super.copyFrom(t)}},K1=class extends W{static{l(this,"JoinOpFullContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}FULL(){return this.getToken(i.FULL,0)}OUTER(){return this.getToken(i.OUTER,0)}ALL(){return this.getToken(i.ALL,0)}ANY(){return this.getToken(i.ANY,0)}accept(t){return t.visitJoinOpFull?t.visitJoinOpFull(this):t.visitChildren(this)}},J1=class extends W{static{l(this,"JoinOpInnerContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}INNER(){return this.getToken(i.INNER,0)}ALL(){return this.getToken(i.ALL,0)}ANY(){return this.getToken(i.ANY,0)}ASOF(){return this.getToken(i.ASOF,0)}accept(t){return t.visitJoinOpInner?t.visitJoinOpInner(this):t.visitChildren(this)}},Q1=class extends W{static{l(this,"JoinOpLeftRightContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}LEFT(){return this.getToken(i.LEFT,0)}RIGHT(){return this.getToken(i.RIGHT,0)}OUTER(){return this.getToken(i.OUTER,0)}SEMI(){return this.getToken(i.SEMI,0)}ALL(){return this.getToken(i.ALL,0)}ANTI(){return this.getToken(i.ANTI,0)}ANY(){return this.getToken(i.ANY,0)}ASOF(){return this.getToken(i.ASOF,0)}accept(t){return t.visitJoinOpLeftRight?t.visitJoinOpLeftRight(this):t.visitChildren(this)}},Ae=class extends n.ParserRuleContext{static{l(this,"JoinOperatorCrossContext")}constructor(t,r){super(t,r)}CROSS(){return this.getToken(i.CROSS,0)}JOIN(){return this.getToken(i.JOIN,0)}GLOBAL(){return this.getToken(i.GLOBAL,0)}LOCAL(){return this.getToken(i.LOCAL,0)}COMMA(){return this.getToken(i.COMMA,0)}get ruleIndex(){return i.RULE_joinOperatorCross}accept(t){return t.visitJoinOperatorCross?t.visitJoinOperatorCross(this):t.visitChildren(this)}},Ne=class extends n.ParserRuleContext{static{l(this,"JoinConstraintClauseContext")}constructor(t,r){super(t,r)}ON(){return this.getToken(i.ON,0)}columnExpressionList(){return this.getRuleContext(0,T)}USING(){return this.getToken(i.USING,0)}LPAREN(){return this.getToken(i.LPAREN,0)}RPAREN(){return this.getToken(i.RPAREN,0)}get ruleIndex(){return i.RULE_joinConstraintClause}accept(t){return t.visitJoinConstraintClause?t.visitJoinConstraintClause(this):t.visitChildren(this)}},Se=class extends n.ParserRuleContext{static{l(this,"SampleClauseContext")}constructor(t,r){super(t,r)}SAMPLE(){return this.getToken(i.SAMPLE,0)}ratioExpression(t){return t===void 0?this.getRuleContexts(vt):this.getRuleContext(t,vt)}OFFSET(){return this.getToken(i.OFFSET,0)}get ruleIndex(){return i.RULE_sampleClause}accept(t){return t.visitSampleClause?t.visitSampleClause(this):t.visitChildren(this)}},kt=class extends n.ParserRuleContext{static{l(this,"LimitExpressionContext")}constructor(t,r){super(t,r)}columnExpression(t){return t===void 0?this.getRuleContexts(o):this.getRuleContext(t,o)}COMMA(){return this.getToken(i.COMMA,0)}OFFSET(){return this.getToken(i.OFFSET,0)}get ruleIndex(){return i.RULE_limitExpression}accept(t){return t.visitLimitExpression?t.visitLimitExpression(this):t.visitChildren(this)}},ft=class extends n.ParserRuleContext{static{l(this,"OrderExpressionListContext")}constructor(t,r){super(t,r)}orderExpression(t){return t===void 0?this.getRuleContexts(Pt):this.getRuleContext(t,Pt)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_orderExpressionList}accept(t){return t.visitOrderExpressionList?t.visitOrderExpressionList(this):t.visitChildren(this)}},Pt=class extends n.ParserRuleContext{static{l(this,"OrderExpressionContext")}constructor(t,r){super(t,r)}columnExpression(){return this.getRuleContext(0,o)}NULLS(){return this.getToken(i.NULLS,0)}COLLATE(){return this.getToken(i.COLLATE,0)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}ASCENDING(){return this.getToken(i.ASCENDING,0)}DESCENDING(){return this.getToken(i.DESCENDING,0)}DESC(){return this.getToken(i.DESC,0)}FIRST(){return this.getToken(i.FIRST,0)}LAST(){return this.getToken(i.LAST,0)}get ruleIndex(){return i.RULE_orderExpression}accept(t){return t.visitOrderExpression?t.visitOrderExpression(this):t.visitChildren(this)}},vt=class extends n.ParserRuleContext{static{l(this,"RatioExpressionContext")}constructor(t,r){super(t,r)}numberLiteral(t){return t===void 0?this.getRuleContexts(F):this.getRuleContext(t,F)}SLASH(){return this.getToken(i.SLASH,0)}get ruleIndex(){return i.RULE_ratioExpression}accept(t){return t.visitRatioExpression?t.visitRatioExpression(this):t.visitChildren(this)}},z=class extends n.ParserRuleContext{static{l(this,"SettingExpressionListContext")}constructor(t,r){super(t,r)}settingExpression(t){return t===void 0?this.getRuleContexts(Ht):this.getRuleContext(t,Ht)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_settingExpressionList}accept(t){return t.visitSettingExpressionList?t.visitSettingExpressionList(this):t.visitChildren(this)}},Ht=class extends n.ParserRuleContext{static{l(this,"SettingExpressionContext")}constructor(t,r){super(t,r)}identifier(){return this.getRuleContext(0,c)}EQ_SINGLE(){return this.getToken(i.EQ_SINGLE,0)}literal(){return this.getRuleContext(0,y)}get ruleIndex(){return i.RULE_settingExpression}accept(t){return t.visitSettingExpression?t.visitSettingExpression(this):t.visitChildren(this)}},Dt=class extends n.ParserRuleContext{static{l(this,"WindowExpressionContext")}constructor(t,r){super(t,r)}windowPartitionByClause(){return this.getRuleContext(0,Le)}windowOrderByClause(){return this.getRuleContext(0,Ie)}windowFrameClause(){return this.getRuleContext(0,ge)}get ruleIndex(){return i.RULE_windowExpression}accept(t){return t.visitWindowExpression?t.visitWindowExpression(this):t.visitChildren(this)}},Le=class extends n.ParserRuleContext{static{l(this,"WindowPartitionByClauseContext")}constructor(t,r){super(t,r)}PARTITION(){return this.getToken(i.PARTITION,0)}BY(){return this.getToken(i.BY,0)}columnExpressionList(){return this.getRuleContext(0,T)}get ruleIndex(){return i.RULE_windowPartitionByClause}accept(t){return t.visitWindowPartitionByClause?t.visitWindowPartitionByClause(this):t.visitChildren(this)}},Ie=class extends n.ParserRuleContext{static{l(this,"WindowOrderByClauseContext")}constructor(t,r){super(t,r)}ORDER(){return this.getToken(i.ORDER,0)}BY(){return this.getToken(i.BY,0)}orderExpressionList(){return this.getRuleContext(0,ft)}get ruleIndex(){return i.RULE_windowOrderByClause}accept(t){return t.visitWindowOrderByClause?t.visitWindowOrderByClause(this):t.visitChildren(this)}},ge=class extends n.ParserRuleContext{static{l(this,"WindowFrameClauseContext")}constructor(t,r){super(t,r)}windowFrameExtend(){return this.getRuleContext(0,q)}ROWS(){return this.getToken(i.ROWS,0)}RANGE(){return this.getToken(i.RANGE,0)}get ruleIndex(){return i.RULE_windowFrameClause}accept(t){return t.visitWindowFrameClause?t.visitWindowFrameClause(this):t.visitChildren(this)}},q=class extends n.ParserRuleContext{static{l(this,"WindowFrameExtendContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_windowFrameExtend}copyFrom(t){super.copyFrom(t)}},j1=class extends q{static{l(this,"FrameStartContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}windowFrameBound(){return this.getRuleContext(0,$)}accept(t){return t.visitFrameStart?t.visitFrameStart(this):t.visitChildren(this)}},Z1=class extends q{static{l(this,"FrameBetweenContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}BETWEEN(){return this.getToken(i.BETWEEN,0)}windowFrameBound(t){return t===void 0?this.getRuleContexts($):this.getRuleContext(t,$)}AND(){return this.getToken(i.AND,0)}accept(t){return t.visitFrameBetween?t.visitFrameBetween(this):t.visitChildren(this)}},$=class extends n.ParserRuleContext{static{l(this,"WindowFrameBoundContext")}constructor(t,r){super(t,r)}CURRENT(){return this.getToken(i.CURRENT,0)}ROW(){return this.getToken(i.ROW,0)}UNBOUNDED(){return this.getToken(i.UNBOUNDED,0)}PRECEDING(){return this.getToken(i.PRECEDING,0)}FOLLOWING(){return this.getToken(i.FOLLOWING,0)}numberLiteral(){return this.getRuleContext(0,F)}get ruleIndex(){return i.RULE_windowFrameBound}accept(t){return t.visitWindowFrameBound?t.visitWindowFrameBound(this):t.visitChildren(this)}},ye=class extends n.ParserRuleContext{static{l(this,"SetStatementContext")}constructor(t,r){super(t,r)}SET(){return this.getToken(i.SET,0)}settingExpressionList(){return this.getRuleContext(0,z)}get ruleIndex(){return i.RULE_setStatement}accept(t){return t.visitSetStatement?t.visitSetStatement(this):t.visitChildren(this)}},f=class extends n.ParserRuleContext{static{l(this,"ShowStatementContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_showStatement}copyFrom(t){super.copyFrom(t)}},z1=class extends f{static{l(this,"ShowCreateTableStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}SHOW(){return this.getToken(i.SHOW,0)}CREATE(){return this.getToken(i.CREATE,0)}tableIdentifier(){return this.getRuleContext(0,E)}TEMPORARY(){return this.getToken(i.TEMPORARY,0)}TABLE(){return this.getToken(i.TABLE,0)}accept(t){return t.visitShowCreateTableStatement?t.visitShowCreateTableStatement(this):t.visitChildren(this)}},q1=class extends f{static{l(this,"ShowCreateDictionaryStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}SHOW(){return this.getToken(i.SHOW,0)}CREATE(){return this.getToken(i.CREATE,0)}DICTIONARY(){return this.getToken(i.DICTIONARY,0)}tableIdentifier(){return this.getRuleContext(0,E)}accept(t){return t.visitShowCreateDictionaryStatement?t.visitShowCreateDictionaryStatement(this):t.visitChildren(this)}},$1=class extends f{static{l(this,"ShowTablesStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}SHOW(){return this.getToken(i.SHOW,0)}TABLES(){return this.getToken(i.TABLES,0)}TEMPORARY(){return this.getToken(i.TEMPORARY,0)}databaseIdentifier(){return this.getRuleContext(0,P)}LIKE(){return this.getToken(i.LIKE,0)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}whereClause(){return this.getRuleContext(0,U)}limitClause(){return this.getRuleContext(0,Ot)}FROM(){return this.getToken(i.FROM,0)}IN(){return this.getToken(i.IN,0)}accept(t){return t.visitShowTablesStatement?t.visitShowTablesStatement(this):t.visitChildren(this)}},_1=class extends f{static{l(this,"ShowDictionariesStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}SHOW(){return this.getToken(i.SHOW,0)}DICTIONARIES(){return this.getToken(i.DICTIONARIES,0)}FROM(){return this.getToken(i.FROM,0)}databaseIdentifier(){return this.getRuleContext(0,P)}accept(t){return t.visitShowDictionariesStatement?t.visitShowDictionariesStatement(this):t.visitChildren(this)}},tr=class extends f{static{l(this,"ShowCreateDatabaseStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}SHOW(){return this.getToken(i.SHOW,0)}CREATE(){return this.getToken(i.CREATE,0)}DATABASE(){return this.getToken(i.DATABASE,0)}databaseIdentifier(){return this.getRuleContext(0,P)}accept(t){return t.visitShowCreateDatabaseStatement?t.visitShowCreateDatabaseStatement(this):t.visitChildren(this)}},er=class extends f{static{l(this,"ShowDatabasesStatementContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}SHOW(){return this.getToken(i.SHOW,0)}DATABASES(){return this.getToken(i.DATABASES,0)}accept(t){return t.visitShowDatabasesStatement?t.visitShowDatabasesStatement(this):t.visitChildren(this)}},Oe=class extends n.ParserRuleContext{static{l(this,"SystemStatementContext")}constructor(t,r){super(t,r)}SYSTEM(){return this.getToken(i.SYSTEM,0)}FLUSH(){return this.getToken(i.FLUSH,0)}DISTRIBUTED(){return this.getToken(i.DISTRIBUTED,0)}tableIdentifier(){return this.getRuleContext(0,E)}LOGS(){return this.getToken(i.LOGS,0)}RELOAD(){return this.getToken(i.RELOAD,0)}DICTIONARIES(){return this.getToken(i.DICTIONARIES,0)}DICTIONARY(){return this.getToken(i.DICTIONARY,0)}START(){return this.getToken(i.START,0)}STOP(){return this.getToken(i.STOP,0)}SENDS(){return this.getToken(i.SENDS,0)}FETCHES(){return this.getToken(i.FETCHES,0)}MERGES(){return this.getToken(i.MERGES,0)}TTL(){return this.getToken(i.TTL,0)}REPLICATED(){return this.getToken(i.REPLICATED,0)}SYNC(){return this.getToken(i.SYNC,0)}REPLICA(){return this.getToken(i.REPLICA,0)}get ruleIndex(){return i.RULE_systemStatement}accept(t){return t.visitSystemStatement?t.visitSystemStatement(this):t.visitChildren(this)}},ke=class extends n.ParserRuleContext{static{l(this,"TruncateStatementContext")}constructor(t,r){super(t,r)}TRUNCATE(){return this.getToken(i.TRUNCATE,0)}tableIdentifier(){return this.getRuleContext(0,E)}TEMPORARY(){return this.getToken(i.TEMPORARY,0)}TABLE(){return this.getToken(i.TABLE,0)}IF(){return this.getToken(i.IF,0)}EXISTS(){return this.getToken(i.EXISTS,0)}clusterClause(){return this.getRuleContext(0,R)}get ruleIndex(){return i.RULE_truncateStatement}accept(t){return t.visitTruncateStatement?t.visitTruncateStatement(this):t.visitChildren(this)}},fe=class extends n.ParserRuleContext{static{l(this,"UseStatementContext")}constructor(t,r){super(t,r)}USE(){return this.getToken(i.USE,0)}databaseIdentifier(){return this.getRuleContext(0,P)}get ruleIndex(){return i.RULE_useStatement}accept(t){return t.visitUseStatement?t.visitUseStatement(this):t.visitChildren(this)}},Pe=class extends n.ParserRuleContext{static{l(this,"WatchStatementContext")}constructor(t,r){super(t,r)}WATCH(){return this.getToken(i.WATCH,0)}tableIdentifier(){return this.getRuleContext(0,E)}EVENTS(){return this.getToken(i.EVENTS,0)}LIMIT(){return this.getToken(i.LIMIT,0)}DECIMAL_LITERAL(){return this.getToken(i.DECIMAL_LITERAL,0)}get ruleIndex(){return i.RULE_watchStatement}accept(t){return t.visitWatchStatement?t.visitWatchStatement(this):t.visitChildren(this)}},b=class extends n.ParserRuleContext{static{l(this,"ColumnTypeExpressionContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_columnTypeExpression}copyFrom(t){super.copyFrom(t)}},rr=class extends b{static{l(this,"ColumnTypeExpressionComplexContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}identifier(){return this.getRuleContext(0,c)}LPAREN(){return this.getToken(i.LPAREN,0)}columnTypeExpression(t){return t===void 0?this.getRuleContexts(b):this.getRuleContext(t,b)}RPAREN(){return this.getToken(i.RPAREN,0)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}accept(t){return t.visitColumnTypeExpressionComplex?t.visitColumnTypeExpressionComplex(this):t.visitChildren(this)}},ir=class extends b{static{l(this,"ColumnTypeExpressionEnumContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}identifier(){return this.getRuleContext(0,c)}LPAREN(){return this.getToken(i.LPAREN,0)}enumValue(t){return t===void 0?this.getRuleContexts(Bt):this.getRuleContext(t,Bt)}RPAREN(){return this.getToken(i.RPAREN,0)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}accept(t){return t.visitColumnTypeExpressionEnum?t.visitColumnTypeExpressionEnum(this):t.visitChildren(this)}},sr=class extends b{static{l(this,"ColumnTypeExpressionNestedContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}identifier(t){return t===void 0?this.getRuleContexts(c):this.getRuleContext(t,c)}LPAREN(){return this.getToken(i.LPAREN,0)}columnTypeExpression(t){return t===void 0?this.getRuleContexts(b):this.getRuleContext(t,b)}RPAREN(){return this.getToken(i.RPAREN,0)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}accept(t){return t.visitColumnTypeExpressionNested?t.visitColumnTypeExpressionNested(this):t.visitChildren(this)}},nr=class extends b{static{l(this,"ColumnTypeExpressionParamContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}identifier(){return this.getRuleContext(0,c)}LPAREN(){return this.getToken(i.LPAREN,0)}RPAREN(){return this.getToken(i.RPAREN,0)}columnExpressionList(){return this.getRuleContext(0,T)}accept(t){return t.visitColumnTypeExpressionParam?t.visitColumnTypeExpressionParam(this):t.visitChildren(this)}},lr=class extends b{static{l(this,"ColumnTypeExpressionSimpleContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}identifier(){return this.getRuleContext(0,c)}accept(t){return t.visitColumnTypeExpressionSimple?t.visitColumnTypeExpressionSimple(this):t.visitChildren(this)}},T=class extends n.ParserRuleContext{static{l(this,"ColumnExpressionListContext")}constructor(t,r){super(t,r)}columnsExpression(t){return t===void 0?this.getRuleContexts(M):this.getRuleContext(t,M)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_columnExpressionList}accept(t){return t.visitColumnExpressionList?t.visitColumnExpressionList(this):t.visitChildren(this)}},M=class extends n.ParserRuleContext{static{l(this,"ColumnsExpressionContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_columnsExpression}copyFrom(t){super.copyFrom(t)}},ar=class extends M{static{l(this,"ColumnsExpressionAsteriskContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}ASTERISK(){return this.getToken(i.ASTERISK,0)}tableIdentifier(){return this.getRuleContext(0,E)}DOT(){return this.getToken(i.DOT,0)}accept(t){return t.visitColumnsExpressionAsterisk?t.visitColumnsExpressionAsterisk(this):t.visitChildren(this)}},ur=class extends M{static{l(this,"ColumnsExpressionSubqueryContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}LPAREN(){return this.getToken(i.LPAREN,0)}selectUnionStatement(){return this.getRuleContext(0,k)}RPAREN(){return this.getToken(i.RPAREN,0)}accept(t){return t.visitColumnsExpressionSubquery?t.visitColumnsExpressionSubquery(this):t.visitChildren(this)}},or=class extends M{static{l(this,"ColumnsExpressionColumnContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnExpression(){return this.getRuleContext(0,o)}accept(t){return t.visitColumnsExpressionColumn?t.visitColumnsExpressionColumn(this):t.visitChildren(this)}},o=class extends n.ParserRuleContext{static{l(this,"ColumnExpressionContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_columnExpression}copyFrom(t){super.copyFrom(t)}},cr=class extends o{static{l(this,"ColumnExpressionIsNullContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnExpression(){return this.getRuleContext(0,o)}IS(){return this.getToken(i.IS,0)}NULL_SQL(){return this.getToken(i.NULL_SQL,0)}NOT(){return this.getToken(i.NOT,0)}accept(t){return t.visitColumnExpressionIsNull?t.visitColumnExpressionIsNull(this):t.visitChildren(this)}},hr=class extends o{static{l(this,"ColumnExpressionTupleContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}LPAREN(){return this.getToken(i.LPAREN,0)}columnExpressionList(){return this.getRuleContext(0,T)}RPAREN(){return this.getToken(i.RPAREN,0)}accept(t){return t.visitColumnExpressionTuple?t.visitColumnExpressionTuple(this):t.visitChildren(this)}},pr=class extends o{static{l(this,"ColumnExpressionAndContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnExpression(t){return t===void 0?this.getRuleContexts(o):this.getRuleContext(t,o)}AND(){return this.getToken(i.AND,0)}accept(t){return t.visitColumnExpressionAnd?t.visitColumnExpressionAnd(this):t.visitChildren(this)}},Er=class extends o{static{l(this,"ColumnExpressionDateContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}DATE(){return this.getToken(i.DATE,0)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}accept(t){return t.visitColumnExpressionDate?t.visitColumnExpressionDate(this):t.visitChildren(this)}},mr=class extends o{static{l(this,"ColumnExpressionBetweenContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnExpression(t){return t===void 0?this.getRuleContexts(o):this.getRuleContext(t,o)}BETWEEN(){return this.getToken(i.BETWEEN,0)}AND(){return this.getToken(i.AND,0)}NOT(){return this.getToken(i.NOT,0)}accept(t){return t.visitColumnExpressionBetween?t.visitColumnExpressionBetween(this):t.visitChildren(this)}},Cr=class extends o{static{l(this,"ColumnExpressionTrimContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}TRIM(){return this.getToken(i.TRIM,0)}LPAREN(){return this.getToken(i.LPAREN,0)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}FROM(){return this.getToken(i.FROM,0)}columnExpression(){return this.getRuleContext(0,o)}RPAREN(){return this.getToken(i.RPAREN,0)}BOTH(){return this.getToken(i.BOTH,0)}LEADING(){return this.getToken(i.LEADING,0)}TRAILING(){return this.getToken(i.TRAILING,0)}accept(t){return t.visitColumnExpressionTrim?t.visitColumnExpressionTrim(this):t.visitChildren(this)}},dr=class extends o{static{l(this,"ColumnExpressionNotContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}NOT(){return this.getToken(i.NOT,0)}columnExpression(){return this.getRuleContext(0,o)}accept(t){return t.visitColumnExpressionNot?t.visitColumnExpressionNot(this):t.visitChildren(this)}},Tr=class extends o{static{l(this,"ColumnExpressionSubstringContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}SUBSTRING(){return this.getToken(i.SUBSTRING,0)}LPAREN(){return this.getToken(i.LPAREN,0)}columnExpression(t){return t===void 0?this.getRuleContexts(o):this.getRuleContext(t,o)}FROM(){return this.getToken(i.FROM,0)}RPAREN(){return this.getToken(i.RPAREN,0)}FOR(){return this.getToken(i.FOR,0)}accept(t){return t.visitColumnExpressionSubstring?t.visitColumnExpressionSubstring(this):t.visitChildren(this)}},Rr=class extends o{static{l(this,"ColumnExpressionCaseContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}CASE(){return this.getToken(i.CASE,0)}END(){return this.getToken(i.END,0)}columnExpression(t){return t===void 0?this.getRuleContexts(o):this.getRuleContext(t,o)}WHEN(t){return t===void 0?this.getTokens(i.WHEN):this.getToken(i.WHEN,t)}THEN(t){return t===void 0?this.getTokens(i.THEN):this.getToken(i.THEN,t)}ELSE(){return this.getToken(i.ELSE,0)}accept(t){return t.visitColumnExpressionCase?t.visitColumnExpressionCase(this):t.visitChildren(this)}},br=class extends o{static{l(this,"ColumnExpressionIdentifierContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnIdentifier(){return this.getRuleContext(0,m)}accept(t){return t.visitColumnExpressionIdentifier?t.visitColumnExpressionIdentifier(this):t.visitChildren(this)}},xr=class extends o{static{l(this,"ColumnExpressionArrayAccessContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnExpression(t){return t===void 0?this.getRuleContexts(o):this.getRuleContext(t,o)}LBRACKET(){return this.getToken(i.LBRACKET,0)}RBRACKET(){return this.getToken(i.RBRACKET,0)}accept(t){return t.visitColumnExpressionArrayAccess?t.visitColumnExpressionArrayAccess(this):t.visitChildren(this)}},Ar=class extends o{static{l(this,"ColumnExpressionFunctionContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}identifier(){return this.getRuleContext(0,c)}LPAREN(t){return t===void 0?this.getTokens(i.LPAREN):this.getToken(i.LPAREN,t)}RPAREN(t){return t===void 0?this.getTokens(i.RPAREN):this.getToken(i.RPAREN,t)}DISTINCT(){return this.getToken(i.DISTINCT,0)}columnArgumentList(){return this.getRuleContext(0,ve)}columnExpressionList(){return this.getRuleContext(0,T)}accept(t){return t.visitColumnExpressionFunction?t.visitColumnExpressionFunction(this):t.visitChildren(this)}},Nr=class extends o{static{l(this,"ColumnExpressionAsteriskContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}ASTERISK(){return this.getToken(i.ASTERISK,0)}tableIdentifier(){return this.getRuleContext(0,E)}DOT(){return this.getToken(i.DOT,0)}accept(t){return t.visitColumnExpressionAsterisk?t.visitColumnExpressionAsterisk(this):t.visitChildren(this)}},Sr=class extends o{static{l(this,"ColumnExpressionLiteralContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}literal(){return this.getRuleContext(0,y)}accept(t){return t.visitColumnExpressionLiteral?t.visitColumnExpressionLiteral(this):t.visitChildren(this)}},Lr=class extends o{static{l(this,"ColumnExpressionWinFunctionContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}identifier(){return this.getRuleContext(0,c)}OVER(){return this.getToken(i.OVER,0)}LPAREN(t){return t===void 0?this.getTokens(i.LPAREN):this.getToken(i.LPAREN,t)}windowExpression(){return this.getRuleContext(0,Dt)}RPAREN(t){return t===void 0?this.getTokens(i.RPAREN):this.getToken(i.RPAREN,t)}columnExpressionList(){return this.getRuleContext(0,T)}accept(t){return t.visitColumnExpressionWinFunction?t.visitColumnExpressionWinFunction(this):t.visitChildren(this)}},Ir=class extends o{static{l(this,"ColumnExpressionTernaryOpContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnExpression(t){return t===void 0?this.getRuleContexts(o):this.getRuleContext(t,o)}QUESTIONMARK(){return this.getToken(i.QUESTIONMARK,0)}COLON(){return this.getToken(i.COLON,0)}accept(t){return t.visitColumnExpressionTernaryOp?t.visitColumnExpressionTernaryOp(this):t.visitChildren(this)}},gr=class extends o{static{l(this,"ColumnExpressionArrayContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}LBRACKET(){return this.getToken(i.LBRACKET,0)}RBRACKET(){return this.getToken(i.RBRACKET,0)}columnExpressionList(){return this.getRuleContext(0,T)}accept(t){return t.visitColumnExpressionArray?t.visitColumnExpressionArray(this):t.visitChildren(this)}},yr=class extends o{static{l(this,"ColumnExpressionTupleAccessContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnExpression(){return this.getRuleContext(0,o)}DOT(){return this.getToken(i.DOT,0)}DECIMAL_LITERAL(){return this.getToken(i.DECIMAL_LITERAL,0)}accept(t){return t.visitColumnExpressionTupleAccess?t.visitColumnExpressionTupleAccess(this):t.visitChildren(this)}},Or=class extends o{static{l(this,"ColumnExpressionParensContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}LPAREN(){return this.getToken(i.LPAREN,0)}columnExpression(){return this.getRuleContext(0,o)}RPAREN(){return this.getToken(i.RPAREN,0)}accept(t){return t.visitColumnExpressionParens?t.visitColumnExpressionParens(this):t.visitChildren(this)}},kr=class extends o{static{l(this,"ColumnExpressionWinFunctionTargetContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}identifier(t){return t===void 0?this.getRuleContexts(c):this.getRuleContext(t,c)}OVER(){return this.getToken(i.OVER,0)}LPAREN(){return this.getToken(i.LPAREN,0)}RPAREN(){return this.getToken(i.RPAREN,0)}columnExpressionList(){return this.getRuleContext(0,T)}accept(t){return t.visitColumnExpressionWinFunctionTarget?t.visitColumnExpressionWinFunctionTarget(this):t.visitChildren(this)}},fr=class extends o{static{l(this,"ColumnExpressionAliasContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnExpression(){return this.getRuleContext(0,o)}alias(){return this.getRuleContext(0,Ft)}AS(){return this.getToken(i.AS,0)}identifier(){return this.getRuleContext(0,c)}accept(t){return t.visitColumnExpressionAlias?t.visitColumnExpressionAlias(this):t.visitChildren(this)}},Pr=class extends o{static{l(this,"ColumnExpressionPrecedence3Context")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnExpression(t){return t===void 0?this.getRuleContexts(o):this.getRuleContext(t,o)}EQ_DOUBLE(){return this.getToken(i.EQ_DOUBLE,0)}EQ_SINGLE(){return this.getToken(i.EQ_SINGLE,0)}NOT_EQ(){return this.getToken(i.NOT_EQ,0)}LE(){return this.getToken(i.LE,0)}GE(){return this.getToken(i.GE,0)}LT(){return this.getToken(i.LT,0)}GT(){return this.getToken(i.GT,0)}IN(){return this.getToken(i.IN,0)}LIKE(){return this.getToken(i.LIKE,0)}ILIKE(){return this.getToken(i.ILIKE,0)}GLOBAL(){return this.getToken(i.GLOBAL,0)}NOT(){return this.getToken(i.NOT,0)}accept(t){return t.visitColumnExpressionPrecedence3?t.visitColumnExpressionPrecedence3(this):t.visitChildren(this)}},vr=class extends o{static{l(this,"ColumnExpressionTimestampContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}TIMESTAMP(){return this.getToken(i.TIMESTAMP,0)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}accept(t){return t.visitColumnExpressionTimestamp?t.visitColumnExpressionTimestamp(this):t.visitChildren(this)}},Hr=class extends o{static{l(this,"ColumnExpressionPrecedence2Context")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnExpression(t){return t===void 0?this.getRuleContexts(o):this.getRuleContext(t,o)}PLUS(){return this.getToken(i.PLUS,0)}DASH(){return this.getToken(i.DASH,0)}CONCAT(){return this.getToken(i.CONCAT,0)}accept(t){return t.visitColumnExpressionPrecedence2?t.visitColumnExpressionPrecedence2(this):t.visitChildren(this)}},Dr=class extends o{static{l(this,"ColumnExpressionPrecedence1Context")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnExpression(t){return t===void 0?this.getRuleContexts(o):this.getRuleContext(t,o)}ASTERISK(){return this.getToken(i.ASTERISK,0)}SLASH(){return this.getToken(i.SLASH,0)}PERCENT(){return this.getToken(i.PERCENT,0)}accept(t){return t.visitColumnExpressionPrecedence1?t.visitColumnExpressionPrecedence1(this):t.visitChildren(this)}},Ur=class extends o{static{l(this,"ColumnExpressionIntervalContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}INTERVAL(){return this.getToken(i.INTERVAL,0)}columnExpression(){return this.getRuleContext(0,o)}interval(){return this.getRuleContext(0,_)}accept(t){return t.visitColumnExpressionInterval?t.visitColumnExpressionInterval(this):t.visitChildren(this)}},Mr=class extends o{static{l(this,"ColumnExpressionSubqueryContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}LPAREN(){return this.getToken(i.LPAREN,0)}selectUnionStatement(){return this.getRuleContext(0,k)}RPAREN(){return this.getToken(i.RPAREN,0)}accept(t){return t.visitColumnExpressionSubquery?t.visitColumnExpressionSubquery(this):t.visitChildren(this)}},Fr=class extends o{static{l(this,"ColumnExpressionNegateContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}DASH(){return this.getToken(i.DASH,0)}columnExpression(){return this.getRuleContext(0,o)}accept(t){return t.visitColumnExpressionNegate?t.visitColumnExpressionNegate(this):t.visitChildren(this)}},wr=class extends o{static{l(this,"ColumnExpressionExtractContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}EXTRACT(){return this.getToken(i.EXTRACT,0)}LPAREN(){return this.getToken(i.LPAREN,0)}interval(){return this.getRuleContext(0,_)}FROM(){return this.getToken(i.FROM,0)}columnExpression(){return this.getRuleContext(0,o)}RPAREN(){return this.getToken(i.RPAREN,0)}accept(t){return t.visitColumnExpressionExtract?t.visitColumnExpressionExtract(this):t.visitChildren(this)}},Br=class extends o{static{l(this,"ColumnExpressionCastContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}CAST(){return this.getToken(i.CAST,0)}LPAREN(){return this.getToken(i.LPAREN,0)}columnExpression(){return this.getRuleContext(0,o)}AS(){return this.getToken(i.AS,0)}columnTypeExpression(){return this.getRuleContext(0,b)}RPAREN(){return this.getToken(i.RPAREN,0)}accept(t){return t.visitColumnExpressionCast?t.visitColumnExpressionCast(this):t.visitChildren(this)}},Vr=class extends o{static{l(this,"ColumnExpressionOrContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}columnExpression(t){return t===void 0?this.getRuleContexts(o):this.getRuleContext(t,o)}OR(){return this.getToken(i.OR,0)}accept(t){return t.visitColumnExpressionOr?t.visitColumnExpressionOr(this):t.visitChildren(this)}},ve=class extends n.ParserRuleContext{static{l(this,"ColumnArgumentListContext")}constructor(t,r){super(t,r)}columnArgumentExpression(t){return t===void 0?this.getRuleContexts(Ut):this.getRuleContext(t,Ut)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_columnArgumentList}accept(t){return t.visitColumnArgumentList?t.visitColumnArgumentList(this):t.visitChildren(this)}},Ut=class extends n.ParserRuleContext{static{l(this,"ColumnArgumentExpressionContext")}constructor(t,r){super(t,r)}columnLambdaExpression(){return this.getRuleContext(0,He)}columnExpression(){return this.getRuleContext(0,o)}get ruleIndex(){return i.RULE_columnArgumentExpression}accept(t){return t.visitColumnArgumentExpression?t.visitColumnArgumentExpression(this):t.visitChildren(this)}},He=class extends n.ParserRuleContext{static{l(this,"ColumnLambdaExpressionContext")}constructor(t,r){super(t,r)}ARROW(){return this.getToken(i.ARROW,0)}columnExpression(){return this.getRuleContext(0,o)}LPAREN(){return this.getToken(i.LPAREN,0)}identifier(t){return t===void 0?this.getRuleContexts(c):this.getRuleContext(t,c)}RPAREN(){return this.getToken(i.RPAREN,0)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_columnLambdaExpression}accept(t){return t.visitColumnLambdaExpression?t.visitColumnLambdaExpression(this):t.visitChildren(this)}},m=class extends n.ParserRuleContext{static{l(this,"ColumnIdentifierContext")}constructor(t,r){super(t,r)}identifier(t){return t===void 0?this.getRuleContexts(c):this.getRuleContext(t,c)}tableIdentifier(){return this.getRuleContext(0,E)}DOT(t){return t===void 0?this.getTokens(i.DOT):this.getToken(i.DOT,t)}get ruleIndex(){return i.RULE_columnIdentifier}accept(t){return t.visitColumnIdentifier?t.visitColumnIdentifier(this):t.visitChildren(this)}},g=class extends n.ParserRuleContext{static{l(this,"TableExpressionContext")}constructor(t,r){super(t,r)}get ruleIndex(){return i.RULE_tableExpression}copyFrom(t){super.copyFrom(t)}},Gr=class extends g{static{l(this,"TableExpressionFunctionContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}tableFunctionExpression(){return this.getRuleContext(0,Y)}accept(t){return t.visitTableExpressionFunction?t.visitTableExpressionFunction(this):t.visitChildren(this)}},Wr=class extends g{static{l(this,"TableExpressionIdentifierContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}tableIdentifier(){return this.getRuleContext(0,E)}accept(t){return t.visitTableExpressionIdentifier?t.visitTableExpressionIdentifier(this):t.visitChildren(this)}},Yr=class extends g{static{l(this,"TableExpressionAliasContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}tableExpression(){return this.getRuleContext(0,g)}alias(){return this.getRuleContext(0,Ft)}AS(){return this.getToken(i.AS,0)}identifier(){return this.getRuleContext(0,c)}accept(t){return t.visitTableExpressionAlias?t.visitTableExpressionAlias(this):t.visitChildren(this)}},Xr=class extends g{static{l(this,"TableExpressionSubqueryContext")}constructor(t){super(t.parent,t.invokingState),super.copyFrom(t)}LPAREN(){return this.getToken(i.LPAREN,0)}selectUnionStatement(){return this.getRuleContext(0,k)}RPAREN(){return this.getToken(i.RPAREN,0)}accept(t){return t.visitTableExpressionSubquery?t.visitTableExpressionSubquery(this):t.visitChildren(this)}},Y=class extends n.ParserRuleContext{static{l(this,"TableFunctionExpressionContext")}constructor(t,r){super(t,r)}identifier(){return this.getRuleContext(0,c)}LPAREN(){return this.getToken(i.LPAREN,0)}RPAREN(){return this.getToken(i.RPAREN,0)}tableArgList(){return this.getRuleContext(0,De)}get ruleIndex(){return i.RULE_tableFunctionExpression}accept(t){return t.visitTableFunctionExpression?t.visitTableFunctionExpression(this):t.visitChildren(this)}},E=class extends n.ParserRuleContext{static{l(this,"TableIdentifierContext")}constructor(t,r){super(t,r)}identifier(){return this.getRuleContext(0,c)}databaseIdentifier(){return this.getRuleContext(0,P)}DOT(){return this.getToken(i.DOT,0)}get ruleIndex(){return i.RULE_tableIdentifier}accept(t){return t.visitTableIdentifier?t.visitTableIdentifier(this):t.visitChildren(this)}},De=class extends n.ParserRuleContext{static{l(this,"TableArgListContext")}constructor(t,r){super(t,r)}tableArgExpression(t){return t===void 0?this.getRuleContexts(Mt):this.getRuleContext(t,Mt)}COMMA(t){return t===void 0?this.getTokens(i.COMMA):this.getToken(i.COMMA,t)}get ruleIndex(){return i.RULE_tableArgList}accept(t){return t.visitTableArgList?t.visitTableArgList(this):t.visitChildren(this)}},Mt=class extends n.ParserRuleContext{static{l(this,"TableArgExpressionContext")}constructor(t,r){super(t,r)}columnIdentifier(){return this.getRuleContext(0,m)}tableFunctionExpression(){return this.getRuleContext(0,Y)}literal(){return this.getRuleContext(0,y)}get ruleIndex(){return i.RULE_tableArgExpression}accept(t){return t.visitTableArgExpression?t.visitTableArgExpression(this):t.visitChildren(this)}},P=class extends n.ParserRuleContext{static{l(this,"DatabaseIdentifierContext")}constructor(t,r){super(t,r)}identifier(){return this.getRuleContext(0,c)}get ruleIndex(){return i.RULE_databaseIdentifier}accept(t){return t.visitDatabaseIdentifier?t.visitDatabaseIdentifier(this):t.visitChildren(this)}},Ue=class extends n.ParserRuleContext{static{l(this,"FloatingLiteralContext")}constructor(t,r){super(t,r)}FLOATING_LITERAL(){return this.getToken(i.FLOATING_LITERAL,0)}DOT(){return this.getToken(i.DOT,0)}DECIMAL_LITERAL(t){return t===void 0?this.getTokens(i.DECIMAL_LITERAL):this.getToken(i.DECIMAL_LITERAL,t)}OCTAL_LITERAL(){return this.getToken(i.OCTAL_LITERAL,0)}get ruleIndex(){return i.RULE_floatingLiteral}accept(t){return t.visitFloatingLiteral?t.visitFloatingLiteral(this):t.visitChildren(this)}},F=class extends n.ParserRuleContext{static{l(this,"NumberLiteralContext")}constructor(t,r){super(t,r)}floatingLiteral(){return this.getRuleContext(0,Ue)}OCTAL_LITERAL(){return this.getToken(i.OCTAL_LITERAL,0)}DECIMAL_LITERAL(){return this.getToken(i.DECIMAL_LITERAL,0)}HEXADECIMAL_LITERAL(){return this.getToken(i.HEXADECIMAL_LITERAL,0)}INF(){return this.getToken(i.INF,0)}NAN_SQL(){return this.getToken(i.NAN_SQL,0)}PLUS(){return this.getToken(i.PLUS,0)}DASH(){return this.getToken(i.DASH,0)}get ruleIndex(){return i.RULE_numberLiteral}accept(t){return t.visitNumberLiteral?t.visitNumberLiteral(this):t.visitChildren(this)}},y=class extends n.ParserRuleContext{static{l(this,"LiteralContext")}constructor(t,r){super(t,r)}numberLiteral(){return this.getRuleContext(0,F)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}NULL_SQL(){return this.getToken(i.NULL_SQL,0)}get ruleIndex(){return i.RULE_literal}accept(t){return t.visitLiteral?t.visitLiteral(this):t.visitChildren(this)}},_=class extends n.ParserRuleContext{static{l(this,"IntervalContext")}constructor(t,r){super(t,r)}SECOND(){return this.getToken(i.SECOND,0)}MINUTE(){return this.getToken(i.MINUTE,0)}HOUR(){return this.getToken(i.HOUR,0)}DAY(){return this.getToken(i.DAY,0)}WEEK(){return this.getToken(i.WEEK,0)}MONTH(){return this.getToken(i.MONTH,0)}QUARTER(){return this.getToken(i.QUARTER,0)}YEAR(){return this.getToken(i.YEAR,0)}get ruleIndex(){return i.RULE_interval}accept(t){return t.visitInterval?t.visitInterval(this):t.visitChildren(this)}},Me=class extends n.ParserRuleContext{static{l(this,"KeywordContext")}constructor(t,r){super(t,r)}AFTER(){return this.getToken(i.AFTER,0)}ALIAS(){return this.getToken(i.ALIAS,0)}ALL(){return this.getToken(i.ALL,0)}ALTER(){return this.getToken(i.ALTER,0)}AND(){return this.getToken(i.AND,0)}ANTI(){return this.getToken(i.ANTI,0)}ANY(){return this.getToken(i.ANY,0)}ARRAY(){return this.getToken(i.ARRAY,0)}AS(){return this.getToken(i.AS,0)}ASCENDING(){return this.getToken(i.ASCENDING,0)}ASOF(){return this.getToken(i.ASOF,0)}AST(){return this.getToken(i.AST,0)}ASYNC(){return this.getToken(i.ASYNC,0)}ATTACH(){return this.getToken(i.ATTACH,0)}BETWEEN(){return this.getToken(i.BETWEEN,0)}BOTH(){return this.getToken(i.BOTH,0)}BY(){return this.getToken(i.BY,0)}CASE(){return this.getToken(i.CASE,0)}CAST(){return this.getToken(i.CAST,0)}CHECK(){return this.getToken(i.CHECK,0)}CLEAR(){return this.getToken(i.CLEAR,0)}CLUSTER(){return this.getToken(i.CLUSTER,0)}CODEC(){return this.getToken(i.CODEC,0)}COLLATE(){return this.getToken(i.COLLATE,0)}COLUMN(){return this.getToken(i.COLUMN,0)}COMMENT(){return this.getToken(i.COMMENT,0)}CONSTRAINT(){return this.getToken(i.CONSTRAINT,0)}CREATE(){return this.getToken(i.CREATE,0)}CROSS(){return this.getToken(i.CROSS,0)}CUBE(){return this.getToken(i.CUBE,0)}CURRENT(){return this.getToken(i.CURRENT,0)}DATABASE(){return this.getToken(i.DATABASE,0)}DATABASES(){return this.getToken(i.DATABASES,0)}DATE(){return this.getToken(i.DATE,0)}DEDUPLICATE(){return this.getToken(i.DEDUPLICATE,0)}DEFAULT(){return this.getToken(i.DEFAULT,0)}DELAY(){return this.getToken(i.DELAY,0)}DELETE(){return this.getToken(i.DELETE,0)}DESCRIBE(){return this.getToken(i.DESCRIBE,0)}DESC(){return this.getToken(i.DESC,0)}DESCENDING(){return this.getToken(i.DESCENDING,0)}DETACH(){return this.getToken(i.DETACH,0)}DICTIONARIES(){return this.getToken(i.DICTIONARIES,0)}DICTIONARY(){return this.getToken(i.DICTIONARY,0)}DISK(){return this.getToken(i.DISK,0)}DISTINCT(){return this.getToken(i.DISTINCT,0)}DISTRIBUTED(){return this.getToken(i.DISTRIBUTED,0)}DROP(){return this.getToken(i.DROP,0)}ELSE(){return this.getToken(i.ELSE,0)}END(){return this.getToken(i.END,0)}ENGINE(){return this.getToken(i.ENGINE,0)}EVENTS(){return this.getToken(i.EVENTS,0)}EXISTS(){return this.getToken(i.EXISTS,0)}EXPLAIN(){return this.getToken(i.EXPLAIN,0)}EXPRESSION(){return this.getToken(i.EXPRESSION,0)}EXTRACT(){return this.getToken(i.EXTRACT,0)}FETCHES(){return this.getToken(i.FETCHES,0)}FINAL(){return this.getToken(i.FINAL,0)}FIRST(){return this.getToken(i.FIRST,0)}FLUSH(){return this.getToken(i.FLUSH,0)}FOR(){return this.getToken(i.FOR,0)}FOLLOWING(){return this.getToken(i.FOLLOWING,0)}FORMAT(){return this.getToken(i.FORMAT,0)}FREEZE(){return this.getToken(i.FREEZE,0)}FROM(){return this.getToken(i.FROM,0)}FULL(){return this.getToken(i.FULL,0)}FUNCTION(){return this.getToken(i.FUNCTION,0)}GLOBAL(){return this.getToken(i.GLOBAL,0)}GRANULARITY(){return this.getToken(i.GRANULARITY,0)}GROUP(){return this.getToken(i.GROUP,0)}HAVING(){return this.getToken(i.HAVING,0)}HIERARCHICAL(){return this.getToken(i.HIERARCHICAL,0)}ID(){return this.getToken(i.ID,0)}IF(){return this.getToken(i.IF,0)}ILIKE(){return this.getToken(i.ILIKE,0)}IN(){return this.getToken(i.IN,0)}INDEX(){return this.getToken(i.INDEX,0)}INJECTIVE(){return this.getToken(i.INJECTIVE,0)}INNER(){return this.getToken(i.INNER,0)}INSERT(){return this.getToken(i.INSERT,0)}INTERVAL(){return this.getToken(i.INTERVAL,0)}INTO(){return this.getToken(i.INTO,0)}IS(){return this.getToken(i.IS,0)}IS_OBJECT_ID(){return this.getToken(i.IS_OBJECT_ID,0)}JOIN(){return this.getToken(i.JOIN,0)}JSON_FALSE(){return this.getToken(i.JSON_FALSE,0)}JSON_TRUE(){return this.getToken(i.JSON_TRUE,0)}KEY(){return this.getToken(i.KEY,0)}KILL(){return this.getToken(i.KILL,0)}LAST(){return this.getToken(i.LAST,0)}LAYOUT(){return this.getToken(i.LAYOUT,0)}LEADING(){return this.getToken(i.LEADING,0)}LEFT(){return this.getToken(i.LEFT,0)}LIFETIME(){return this.getToken(i.LIFETIME,0)}LIKE(){return this.getToken(i.LIKE,0)}LIMIT(){return this.getToken(i.LIMIT,0)}LIVE(){return this.getToken(i.LIVE,0)}LOCAL(){return this.getToken(i.LOCAL,0)}LOGS(){return this.getToken(i.LOGS,0)}MATERIALIZE(){return this.getToken(i.MATERIALIZE,0)}MATERIALIZED(){return this.getToken(i.MATERIALIZED,0)}MAX(){return this.getToken(i.MAX,0)}MERGES(){return this.getToken(i.MERGES,0)}MIN(){return this.getToken(i.MIN,0)}MODIFY(){return this.getToken(i.MODIFY,0)}MOVE(){return this.getToken(i.MOVE,0)}MUTATION(){return this.getToken(i.MUTATION,0)}NO(){return this.getToken(i.NO,0)}NOT(){return this.getToken(i.NOT,0)}NULLS(){return this.getToken(i.NULLS,0)}OFFSET(){return this.getToken(i.OFFSET,0)}ON(){return this.getToken(i.ON,0)}OPTIMIZE(){return this.getToken(i.OPTIMIZE,0)}OR(){return this.getToken(i.OR,0)}ORDER(){return this.getToken(i.ORDER,0)}OUTER(){return this.getToken(i.OUTER,0)}OUTFILE(){return this.getToken(i.OUTFILE,0)}OVER(){return this.getToken(i.OVER,0)}PARTITION(){return this.getToken(i.PARTITION,0)}POPULATE(){return this.getToken(i.POPULATE,0)}PRECEDING(){return this.getToken(i.PRECEDING,0)}PREWHERE(){return this.getToken(i.PREWHERE,0)}PRIMARY(){return this.getToken(i.PRIMARY,0)}RANGE(){return this.getToken(i.RANGE,0)}RELOAD(){return this.getToken(i.RELOAD,0)}REMOVE(){return this.getToken(i.REMOVE,0)}RENAME(){return this.getToken(i.RENAME,0)}REPLACE(){return this.getToken(i.REPLACE,0)}REPLICA(){return this.getToken(i.REPLICA,0)}REPLICATED(){return this.getToken(i.REPLICATED,0)}RIGHT(){return this.getToken(i.RIGHT,0)}ROLLUP(){return this.getToken(i.ROLLUP,0)}ROW(){return this.getToken(i.ROW,0)}ROWS(){return this.getToken(i.ROWS,0)}SAMPLE(){return this.getToken(i.SAMPLE,0)}SELECT(){return this.getToken(i.SELECT,0)}SEMI(){return this.getToken(i.SEMI,0)}SENDS(){return this.getToken(i.SENDS,0)}SET(){return this.getToken(i.SET,0)}SETTINGS(){return this.getToken(i.SETTINGS,0)}SHOW(){return this.getToken(i.SHOW,0)}SOURCE(){return this.getToken(i.SOURCE,0)}START(){return this.getToken(i.START,0)}STOP(){return this.getToken(i.STOP,0)}SUBSTRING(){return this.getToken(i.SUBSTRING,0)}SYNC(){return this.getToken(i.SYNC,0)}SYNTAX(){return this.getToken(i.SYNTAX,0)}SYSTEM(){return this.getToken(i.SYSTEM,0)}TABLE(){return this.getToken(i.TABLE,0)}TABLES(){return this.getToken(i.TABLES,0)}TEMPORARY(){return this.getToken(i.TEMPORARY,0)}TEST(){return this.getToken(i.TEST,0)}THEN(){return this.getToken(i.THEN,0)}TIES(){return this.getToken(i.TIES,0)}TIMEOUT(){return this.getToken(i.TIMEOUT,0)}TIMESTAMP(){return this.getToken(i.TIMESTAMP,0)}TOTALS(){return this.getToken(i.TOTALS,0)}TRAILING(){return this.getToken(i.TRAILING,0)}TRIM(){return this.getToken(i.TRIM,0)}TRUNCATE(){return this.getToken(i.TRUNCATE,0)}TO(){return this.getToken(i.TO,0)}TOP(){return this.getToken(i.TOP,0)}TTL(){return this.getToken(i.TTL,0)}TYPE(){return this.getToken(i.TYPE,0)}UNBOUNDED(){return this.getToken(i.UNBOUNDED,0)}UNION(){return this.getToken(i.UNION,0)}UPDATE(){return this.getToken(i.UPDATE,0)}USE(){return this.getToken(i.USE,0)}USING(){return this.getToken(i.USING,0)}UUID(){return this.getToken(i.UUID,0)}VALUES(){return this.getToken(i.VALUES,0)}VIEW(){return this.getToken(i.VIEW,0)}VOLUME(){return this.getToken(i.VOLUME,0)}WATCH(){return this.getToken(i.WATCH,0)}WHEN(){return this.getToken(i.WHEN,0)}WHERE(){return this.getToken(i.WHERE,0)}WINDOW(){return this.getToken(i.WINDOW,0)}WITH(){return this.getToken(i.WITH,0)}get ruleIndex(){return i.RULE_keyword}accept(t){return t.visitKeyword?t.visitKeyword(this):t.visitChildren(this)}},Fe=class extends n.ParserRuleContext{static{l(this,"KeywordForAliasContext")}constructor(t,r){super(t,r)}DATE(){return this.getToken(i.DATE,0)}FIRST(){return this.getToken(i.FIRST,0)}ID(){return this.getToken(i.ID,0)}KEY(){return this.getToken(i.KEY,0)}get ruleIndex(){return i.RULE_keywordForAlias}accept(t){return t.visitKeywordForAlias?t.visitKeywordForAlias(this):t.visitChildren(this)}},Ft=class extends n.ParserRuleContext{static{l(this,"AliasContext")}constructor(t,r){super(t,r)}IDENTIFIER(){return this.getToken(i.IDENTIFIER,0)}keywordForAlias(){return this.getRuleContext(0,Fe)}get ruleIndex(){return i.RULE_alias}accept(t){return t.visitAlias?t.visitAlias(this):t.visitChildren(this)}},c=class extends n.ParserRuleContext{static{l(this,"IdentifierContext")}constructor(t,r){super(t,r)}IDENTIFIER(){return this.getToken(i.IDENTIFIER,0)}interval(){return this.getRuleContext(0,_)}keyword(){return this.getRuleContext(0,Me)}get ruleIndex(){return i.RULE_identifier}accept(t){return t.visitIdentifier?t.visitIdentifier(this):t.visitChildren(this)}},wt=class extends n.ParserRuleContext{static{l(this,"IdentifierOrNullContext")}constructor(t,r){super(t,r)}identifier(){return this.getRuleContext(0,c)}NULL_SQL(){return this.getToken(i.NULL_SQL,0)}get ruleIndex(){return i.RULE_identifierOrNull}accept(t){return t.visitIdentifierOrNull?t.visitIdentifierOrNull(this):t.visitChildren(this)}},Bt=class extends n.ParserRuleContext{static{l(this,"EnumValueContext")}constructor(t,r){super(t,r)}STRING_LITERAL(){return this.getToken(i.STRING_LITERAL,0)}EQ_SINGLE(){return this.getToken(i.EQ_SINGLE,0)}numberLiteral(){return this.getRuleContext(0,F)}get ruleIndex(){return i.RULE_enumValue}accept(t){return t.visitEnumValue?t.visitEnumValue(this):t.visitChildren(this)}};import{AbstractParseTreeVisitor as ii}from"antlr4ng";var we=class extends ii{static{l(this,"ClickHouseParserVisitor")}};var si=["Null","Set","Log","Memory","TinyLog","StripeLog"],ni=["MergeTree()","Merge()","ReplacingMergeTree()","CollapsingMergeTree()","AggregatingMergeTree()","Buffer()","Dictionary()","Distributed()","File()","GraphiteMergeTree()","Join()","Kafka()","MySQL()","URL()","ReplicatedAggregatingMergeTree()","ReplicatedCollapsingMergeTree()","ReplicatedGraphiteMergeTree()","ReplicatedMergeTree()","ReplicatedReplacingMergeTree()","ReplicatedSummingMergeTree()","ReplicatedVersionedCollapsingMergeTree()","SummingMergeTree()","VersionedCollapsingMergeTree()","PostgreSQL()"],Be={SPACE:i.WHITESPACE,FROM:i.FROM,OPENING_BRACKET:i.LPAREN,CLOSING_BRACKET:i.RPAREN,ALTER:i.ALTER,INSERT:i.INSERT,UPDATE:i.UPDATE,JOIN:i.JOIN,SEMICOLON:i.SEMICOLON,SELECT:i.SELECT};function li(){let e=[],t=i.JSON_FALSE,r=i.WHITESPACE;for(let s=t;s<=r;s++)s!==i.ASTERISK&&e.push(s);return e.push(i.EOF),e.push(i.QUESTIONMARK),e}l(li,"getIgnoredTokens");var ai=new Set(li()),ui=new Set([i.RULE_databaseIdentifier,i.RULE_tableIdentifier,i.RULE_identifier,i.RULE_columnIdentifier,i.RULE_identifierOrNull,i.RULE_literal]),Kr=class extends we{constructor(){super();this.visitTableIdentifier=r=>{try{this.symbolTable.addNewSymbolOfType(Ve,this.scope,r.getText())}catch(s){if(!(s instanceof w.DuplicateSymbolError))throw s}return this.visitChildren(r)};this.visitTableExpressionAlias=r=>{try{this.symbolTable.addNewSymbolOfType(Ve,this.scope,r.tableExpression()?.getText(),r.alias()?.getText()||r.identifier()?.getText()||void 0)}catch(s){if(!(s instanceof w.DuplicateSymbolError))throw s}return this.visitChildren(r)};this.visitColumnExpressionAlias=r=>{try{let s=r.alias()?.getText()||r.identifier()?.getText();s&&this.symbolTable.addNewSymbolOfType(jr,this.scope,s)}catch(s){if(!(s instanceof w.DuplicateSymbolError))throw s}return this.visitChildren(r)};this.symbolTable=new w.SymbolTable("",{allowDuplicateSymbols:!0}),this.scope=this.symbolTable.addNewSymbolOfType(w.ScopedSymbol,void 0)}static{l(this,"ClickHouseSymbolTableVisitor")}};function oi(e,t,r){let s,u=!1,h=!1,d=!1,a=!1,C=!1,Vt;for(let[tt,v]of e)if(Zr(t,v))switch(tt){case i.RULE_tableIdentifier:{if(v.ruleList.includes(i.RULE_createStatement)||v.ruleList.includes(i.RULE_columnsExpression))break;Ge(r,Be,t,i.VIEW)?s="VIEWS":Ge(r,Be,t,i.TABLE)?s="TABLES":s="ALL";break}case i.RULE_identifier:{v.ruleList.includes(i.RULE_columnExpression)&&(h=!0,u=!0),v.ruleList.includes(i.RULE_alterTableClause)&&(a=!0);break}case i.RULE_columnIdentifier:{a=!0,(v.ruleList.includes(i.RULE_orderExpression)||v.ruleList.includes(i.RULE_groupByClause))&&(C=!0);break}case i.RULE_identifierOrNull:{v.ruleList.includes(i.RULE_engineClause)&&(Vt={engines:si,functionalEngines:ni});break}case i.RULE_databaseIdentifier:{d=!0;break}}return{suggestViewsOrTables:s,suggestAggregateFunctions:u,suggestFunctions:h,suggestEngines:Vt,suggestDatabases:d,shouldSuggestColumns:a,shouldSuggestColumnAliases:C}}l(oi,"processVisitedRules");function ei(e,t){if(!t||t==="update")return e.root();switch(t){case"from":return e.fromClause();case"alter":return e.alterStatement();case"insert":return e.insertStatement();case"select":return e.selectStatement()}}l(ei,"getParseTree");function ci(e,t,r,s,u,h){let{shouldSuggestColumns:d,shouldSuggestColumnAliases:a,...C}=oi(t,s,r),Vt=zr(h,u),tt={...e,...C,suggestTemplates:Vt};if(d||a){let ri=new Kr,{tableContextSuggestion:Jr,suggestColumnAliases:Qr}=qr(et,i,ri,Be,ei,r,u,h);d&&Jr&&(tt.suggestColumns=Jr),a&&Qr&&(tt.suggestColumnAliases=Qr)}return tt}l(ci,"enrichAutocompleteResult");var L={Lexer:et,Parser:i,tokenDictionary:Be,ignoredTokens:ai,rulesToVisit:ui,getParseTree:ei,enrichAutocompleteResult:ci};function Yi(e){return $r(L.Lexer,L.Parser,L.tokenDictionary.SPACE,L.getParseTree,e)}l(Yi,"parseClickHouseQueryWithoutCursor");function hi(e,t){return _r(L.Lexer,L.Parser,L.tokenDictionary.SPACE,L.ignoredTokens,L.rulesToVisit,L.getParseTree,L.enrichAutocompleteResult,e,t)}l(hi,"parseClickHouseQuery");function Xi(e){return hi(...ti(e))}l(Xi,"parseClickHouseQueryWithCursor");export{hi as parseClickHouseQuery,Xi as parseClickHouseQueryWithCursor,Yi as parseClickHouseQueryWithoutCursor};
