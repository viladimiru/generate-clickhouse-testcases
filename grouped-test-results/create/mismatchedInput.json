[
  {
    "query": "CREATE DATABASE IF NOT EXISTS replicated_database_test ENGINE = Replicated('some/path/' || currentDatabase() || '/replicated_database_test', 'shard_1', 'replica_1') SETTINGS max_broken_tables_ratio=1;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02483_add_engine_full_column_to_system_databases.sql",
    "error": "mismatched input 'SETTINGS' expecting <EOF>"
  },
  {
    "query": "CREATE DATABASE test_02184 ORDER BY kek; -- {serverError INCORRECT_QUERY} CREATE DATABASE test_02184 SETTINGS x=1; -- {serverError UNKNOWN_SETTING}\nCREATE TABLE table_02184 (x UInt8, y int, PRIMARY KEY (x)) ENGINE=MergeTree PRIMARY KEY y; -- {clientError BAD_ARGUMENTS}\nSET default_table_engine = 'MergeTree';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql",
    "error": "mismatched input 'ORDER' expecting <EOF>"
  },
  {
    "query": "CREATE DICTIONARY 2024_dictionary_with_comment (\nid UInt64,\nvalue String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() TABLE 'source_table'))\nLAYOUT(FLAT())\nLIFETIME(MIN 0 MAX 1000)\nCOMMENT 'Test dictionary with comment';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02024_create_dictionary_with_comment.sql",
    "error": "mismatched input 'COMMENT' expecting <EOF>"
  },
  {
    "query": "CREATE FUNCTION hasValidSizes17 AS (arr1, arr2) -> length(arr1) = length(arr2) AND arrayAll((x, y) -> length(x) = length(y), arr1, arr2);",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01825_type_json_17.sql",
    "error": "mismatched input '=' expecting <EOF>"
  },
  {
    "query": "create or replace table t_temp ( a UInt32,\ntimestamp DateTime\n)\nengine = MergeTree\norder by a\nTTL timestamp + INTERVAL 2 SECOND WHERE a in (select number from system.numbers limit 100_000);",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02932_set_ttl_where.sql",
    "error": "mismatched input 'WHERE' expecting <EOF>"
  },
  {
    "query": "CREATE QUOTA q17_01297 FOR INTERVAL 1 MINUTE MAX query_selects = '1.5'; -- { clientError CANNOT_PARSE_INPUT_ASSERTION_FAILED } CREATE QUOTA q18_01297 FOR INTERVAL 1 MINUTE MAX execution_time = '1.5'; -- { clientError CANNOT_PARSE_INPUT_ASSERTION_FAILED }\nSHOW CREATE QUOTA q1_01297;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql",
    "error": "mismatched input 'q1_01297' expecting <EOF>"
  },
  {
    "query": "CREATE QUOTA q3_01297 FOR INTERVAL 1 HOUR NO LIMITS NOT KEYED TO NONE;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01297_create_quota.sql",
    "error": "mismatched input 'NOT' expecting <EOF>"
  },
  {
    "query": "CREATE ROLE r1_01293@'%';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01293_create_role.sql",
    "error": "mismatched input '@' expecting <EOF>"
  },
  {
    "query": "CREATE ROLE r2_01293@'%.myhost.com';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01293_create_role.sql",
    "error": "mismatched input '@' expecting <EOF>"
  },
  {
    "query": "CREATE ROW POLICY IF NOT EXISTS row_policy ON table_with_dot_column USING toDate(date) >= today() - 30 TO ALL;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02720_row_policy_column_with_dots.sql",
    "error": "mismatched input '-' expecting <EOF>"
  },
  {
    "query": "CREATE ROW POLICY test_rlp_policy ON test_rlp FOR SELECT USING c%2 == 0 TO default;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02481_default_value_used_in_row_level_filter.sql",
    "error": "mismatched input '%' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE auto_assign_enum2 (x enum('a' = -1000, 'b', 'c' = -99)) ENGINE=MergeTree() order by x; -- { serverError UNEXPECTED_AST_STRUCTURE } CREATE TABLE auto_assign_enum2 (x Enum8(\n'00' = -128 ,'01','02','03','04','05','06','07','08','09','0A','0B','0C','0D','0E','0F',\n'10','11','12','13','14','15','16','17','18','19','1A','1B','1C','1D','1E','1F',\n'20','21','22','23','24','25','26','27','28','29','2A','2B','2C','2D','2E','2F',\n'30','31','32','33','34','35','36','37','38','39','3A','3B','3C','3D','3E','3F',\n'40','41','42','43','44','45','46','47','48','49','4A','4B','4C','4D','4E','4F',\n'50','51','52','53','54','55','56','57','58','59','5A','5B','5C','5D','5E','5F',\n'60','61','62','63','64','65','66','67','68','69','6A','6B','6C','6D','6E','6F',\n'70','71','72','73','74','75','76','77','78','79','7A','7B','7C','7D','7E','7F'\n)) ENGINE=MergeTree() order by x;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/00757_enum_defaults.sql",
    "error": "mismatched input ''00'' expecting <EOF>"
  },
  {
    "query": "create table b empty as a;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03168_inconsistent_ast_formatting.sql",
    "error": "mismatched input 'empty' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE base (a Int32) ENGINE = TinyLog COMMENT 'original comment';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03033_create_as_copies_comment.sql",
    "error": "mismatched input 'COMMENT' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE clone_as_foo_file CLONE AS foo_file; -- { serverError SUPPORT_IS_DISABLED }  CREATE TABLE foo_merge_tree (x Int8, y String) ENGINE=MergeTree PRIMARY KEY x;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03231_create_with_clone_as.sql",
    "error": "mismatched input 'CLONE' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE clone_as_foo_memory CLONE AS foo_memory; -- { serverError SUPPORT_IS_DISABLED }  CREATE TABLE foo_file (x Int8, y String) ENGINE=File(TabSeparated);",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03231_create_with_clone_as.sql",
    "error": "mismatched input 'CLONE' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE clone_as_foo_merge_tree CLONE AS foo_merge_tree;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03231_create_with_clone_as.sql",
    "error": "mismatched input 'CLONE' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE clone_as_foo_merge_tree CLONE AS foo_merge_tree; -- { serverError SUPPORT_IS_DISABLED } DROP TABLE IF EXISTS clone_as_foo_merge_tree;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03231_create_with_clone_as.sql",
    "error": "mismatched input 'CLONE' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE clone_as_foo_merge_tree_p_x CLONE AS foo_merge_tree ENGINE=MergeTree PRIMARY KEY x;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03231_create_with_clone_as.sql",
    "error": "mismatched input 'CLONE' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE clone_as_foo_merge_tree_p_y CLONE AS foo_merge_tree ENGINE=MergeTree PRIMARY KEY y; -- { serverError BAD_ARGUMENTS } CREATE TABLE foo_replacing_merge_tree (x Int8, y String) ENGINE=ReplacingMergeTree PRIMARY KEY x;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03231_create_with_clone_as.sql",
    "error": "mismatched input 'CLONE' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE clone_as_foo_replacing_merge_tree CLONE AS foo_replacing_merge_tree;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03231_create_with_clone_as.sql",
    "error": "mismatched input 'CLONE' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE clone_as_foo_replacing_merge_tree_p_x CLONE AS foo_replacing_merge_tree ENGINE=ReplacingMergeTree PRIMARY KEY x;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03231_create_with_clone_as.sql",
    "error": "mismatched input 'CLONE' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE clone_as_foo_replacing_merge_tree_p_y CLONE AS foo_replacing_merge_tree ENGINE=ReplacingMergeTree PRIMARY KEY y; -- { serverError BAD_ARGUMENTS } CREATE TABLE foo_replicated_merge_tree (x Int8, y String) ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/test_foo_replicated_merge_tree', 'r1') PRIMARY KEY x;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03231_create_with_clone_as.sql",
    "error": "mismatched input 'CLONE' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE clone_as_foo_replicated_merge_tree CLONE AS foo_replicated_merge_tree; -- { serverError REPLICA_ALREADY_EXISTS } CREATE TABLE clone_as_foo_replicated_merge_tree_p_x CLONE AS foo_replicated_merge_tree ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/clone_as_foo_replicated_merge_tree_p_x', 'r1') PRIMARY KEY x;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03231_create_with_clone_as.sql",
    "error": "mismatched input 'CLONE' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE clone_as_foo_replicated_merge_tree_p_y CLONE AS foo_replicated_merge_tree ENGINE=ReplicatedMergeTree('/clickhouse/tables/{database}/clone_as_foo_replicated_merge_tree_p_y', 'r1') PRIMARY KEY y; -- { serverError BAD_ARGUMENTS } DROP TABLE IF EXISTS foo_memory;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03231_create_with_clone_as.sql",
    "error": "mismatched input 'CLONE' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE copy_with_comment AS base COMMENT 'new comment';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03033_create_as_copies_comment.sql",
    "error": "mismatched input 'COMMENT' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE derived_metrics_local  (\ntimestamp DateTime,\ntimestamp_h DateTime materialized toStartOfHour(timestamp),\nbytes UInt64\n)\nENGINE=SummingMergeTree()\nPARTITION BY toYYYYMMDD(timestamp)\nORDER BY (timestamp_h, timestamp)\nTTL toStartOfHour(timestamp) + INTERVAL 1 HOUR GROUP BY timestamp_h\nSET bytes=max(bytes), timestamp = toStartOfHour(any(timestamp));",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01506_ttl_same_with_order_by.sql",
    "error": "mismatched input 'GROUP' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE derived_metrics_local (\ntimestamp DateTime,\nbytes UInt64\n)\nENGINE=SummingMergeTree()\nPARTITION BY toYYYYMMDD(timestamp)\nORDER BY (toStartOfHour(timestamp), timestamp)\nTTL toStartOfHour(timestamp) + INTERVAL 1 HOUR GROUP BY toStartOfHour(timestamp)\nSET bytes=max(bytes);",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01506_ttl_same_with_order_by.sql",
    "error": "mismatched input 'GROUP' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE full_duplicates  ( pk Int32, sk Int32, val UInt32, partition_key UInt32, mat UInt32 MATERIALIZED 12345, alias UInt32 ALIAS 2,\nPRIMARY KEY (pk)\n) ENGINE=MergeTree\nPARTITION BY (partition_key + 1) -- ensure that column in expression is properly handled when deduplicating. See [1] below.\nORDER BY (pk, toString(sk * 10)); -- silly order key to ensure that key column is checked even when it is a part of expression. See [1] below.\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY pk, sk, val, mat, alias; -- { serverError NO_SUCH_COLUMN_IN_TABLE } -- alias column is present\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY sk, val; -- { serverError THERE_IS_NO_COLUMN } -- primary key column is missing\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY * EXCEPT(pk, sk, val, mat, alias, partition_key); -- { serverError EMPTY_LIST_OF_COLUMNS_QUERIED } -- list is empty\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY * EXCEPT(pk); -- { serverError THERE_IS_NO_COLUMN } -- primary key column is missing [1]\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY * EXCEPT(sk); -- { serverError THERE_IS_NO_COLUMN } -- sorting key column is missing [1]\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY * EXCEPT(partition_key); -- { serverError THERE_IS_NO_COLUMN } -- partitioning column is missing [1]\nOPTIMIZE TABLE full_duplicates DEDUPLICATE BY; -- { clientError SYNTAX_ERROR } -- empty list is a syntax error\nOPTIMIZE TABLE partial_duplicates DEDUPLICATE BY pk,sk,val,mat EXCEPT mat; -- { clientError SYNTAX_ERROR } -- invalid syntax\nOPTIMIZE TABLE partial_duplicates DEDUPLICATE BY pk APPLY(pk + 1); -- { clientError SYNTAX_ERROR } -- APPLY column transformer is not supported\nOPTIMIZE TABLE partial_duplicates DEDUPLICATE BY pk REPLACE(pk + 1); -- { clientError SYNTAX_ERROR } -- REPLACE column transformer is not supported\nSELECT 'OLD DEDUPLICATE';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01581_deduplicate_by_columns_local.sql",
    "error": "mismatched input 'BY' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE kek (n int) SETTINGS log_queries=1;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql",
    "error": "mismatched input 'SETTINGS' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE left (x UUID) ORDER BY tuple();",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03206_is_null_constant_result_old_analyzer_bug.sql",
    "error": "mismatched input 'ORDER' expecting <EOF>"
  },
  {
    "query": "create table m (n int) engine=Memory; -- { serverError NOT_IMPLEMENTED } commit; -- { serverError INVALID_TRANSACTION } -- after 48\nrollback;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01173_transaction_control_queries.sql",
    "error": "mismatched input 'rollback' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE mem ORDER BY n AS SELECT 1 as n; -- {serverError BAD_ARGUMENTS} SET default_table_engine = 'MergeTree';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql",
    "error": "mismatched input 'ORDER' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE mt ORDER BY n AS SELECT 1 as n;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql",
    "error": "mismatched input 'ORDER' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE numbers2 ORDER BY intHash32(number) SAMPLE BY intHash32(number) AS SELECT number FROM numbers(10);",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql",
    "error": "mismatched input 'ORDER' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE recompression_table (\ndt DateTime,\nkey UInt64,\nvalue String\n) ENGINE MergeTree()\nORDER BY tuple()\nPARTITION BY key\nTTL dt + INTERVAL 1 MONTH RECOMPRESS CODEC(ZSTD(17)), dt + INTERVAL 1 YEAR RECOMPRESS CODEC(LZ4HC(10))\nSETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01465_ttl_recompression.sql",
    "error": "mismatched input 'CODEC' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE recompression_table_compact (\ndt DateTime,\nkey UInt64,\nvalue String\n) ENGINE MergeTree()\nORDER BY tuple()\nPARTITION BY key\nTTL dt + INTERVAL 1 MONTH RECOMPRESS CODEC(ZSTD(17)), dt + INTERVAL 1 YEAR RECOMPRESS CODEC(LZ4HC(10))\nSETTINGS min_rows_for_wide_part = 10000;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01465_ttl_recompression.sql",
    "error": "mismatched input 'CODEC' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE right (x UUID) ORDER BY tuple();",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03206_is_null_constant_result_old_analyzer_bug.sql",
    "error": "mismatched input 'ORDER' expecting <EOF>"
  },
  {
    "query": "create table t engine=Memory empty; -- { clientError SYNTAX_ERROR } create table t engine=Memory empty as; -- { clientError SYNTAX_ERROR }\ncreate table t engine=Memory as; -- { clientError SYNTAX_ERROR }\ncreate table t engine=Memory empty as select 1;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02343_create_empty_as_select.sql",
    "error": "mismatched input 'empty' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE t_merge AS t ENGINE = Merge('02111_modify_table_comment', 't')\nCOMMENT 'this is a Merge table';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02111_modify_table_comment.sql",
    "error": "mismatched input 'COMMENT' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE table_02184 (x UInt8) PARTITION BY x; --{serverError BAD_ARGUMENTS} CREATE TABLE table_02184 (x UInt8) ORDER BY x;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql",
    "error": "mismatched input 'PARTITION' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE table_02184 (x UInt8) PRIMARY KEY x;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql",
    "error": "mismatched input 'PRIMARY' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE table_02184 (x UInt8, y int, PRIMARY KEY (x)) PRIMARY KEY y; -- {clientError BAD_ARGUMENTS} CREATE TABLE mt (a UInt64, b Nullable(String), PRIMARY KEY (a, coalesce(b, 'test')), INDEX b_index b TYPE set(123) GRANULARITY 1);",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql",
    "error": "mismatched input 'PRIMARY' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE test2 (x UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/test', 'replica-{server_uuid}') ORDER BY x; -- { serverError REPLICA_ALREADY_EXISTS } SELECT getMacro('server_uuid'); -- { serverError NO_ELEMENTS_IN_CONFIG }\nDROP TABLE test SYNC;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02711_server_uuid_macro.sql",
    "error": "mismatched input 'SYNC' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE test_optimize_exception (date Date) PARTITION BY toYYYYMM(date) ORDER BY date;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql",
    "error": "mismatched input 'PARTITION' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE test_table (EventDate Date, CounterID UInt32,  UserID UInt64,  EventTime DateTime('America/Los_Angeles'), UTCEventTime DateTime('UTC')) PARTITION BY EventDate PRIMARY KEY CounterID;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql",
    "error": "mismatched input 'PARTITION' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE test_table_1 (\nid UInt64,\nvalue String\n) ENGINE=MergeTree ORDER BY id\nSETTINGS index_granularity = 16 # We have number of granules in the \\`EXPLAIN\\` output in reference file\n;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03130_convert_outer_join_to_inner_join.sql",
    "error": "mismatched input '#' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE test_ttl_group_by01763 (key UInt32, ts DateTime, value UInt32, min_value UInt32 default value, max_value UInt32 default value)\nENGINE = MergeTree() PARTITION BY toYYYYMM(ts)\nORDER BY (key, toStartOfInterval(ts, toIntervalMinute(3)), ts) \nTTL ts + INTERVAL 5 MINUTE GROUP BY key, toStartOfInterval(ts, toIntervalMinute(3)) \nSET value = sum(value), min_value = min(min_value), max_value = max(max_value),  ts=min(toStartOfInterval(ts, toIntervalMinute(3)));",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01763_long_ttl_group_by.sql",
    "error": "mismatched input 'GROUP' expecting <EOF>"
  },
  {
    "query": "create table ttl_01280_error (a Int, b Int, x Int64, y Int64, d DateTime) engine = MergeTree order by (a, b) ttl d + interval 1 second group by x set y = max(y); -- { serverError BAD_TTL_EXPRESSION} create table ttl_01280_error (a Int, b Int, x Int64, y Int64, d DateTime) engine = MergeTree order by (a, b) ttl d + interval 1 second group by b set y = max(y); -- { serverError BAD_TTL_EXPRESSION}\ncreate table ttl_01280_error (a Int, b Int, x Int64, y Int64, d DateTime) engine = MergeTree order by (a, b) ttl d + interval 1 second group by a, b, x set y = max(y); -- { serverError BAD_TTL_EXPRESSION}\ncreate table ttl_01280_error (a Int, b Int, x Int64, y Int64, d DateTime) engine = MergeTree order by (a, b) ttl d + interval 1 second group by a, b set y = max(y), y = max(y); -- { serverError BAD_TTL_EXPRESSION}\n",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01280_ttl_where_group_by_negative.sql",
    "error": "mismatched input 'group' expecting <EOF>"
  },
  {
    "query": "CREATE TABLE ttl_group_by_bug (key UInt32, ts DateTime, value UInt32, min_value UInt32 default value, max_value UInt32 default value)\nENGINE = MergeTree()\nORDER BY (key, toStartOfInterval(ts, toIntervalMinute(3)), ts)\nTTL ts + INTERVAL 5 MINUTE GROUP BY key, toStartOfInterval(ts, toIntervalMinute(3))\nSET value = sum(value), min_value = min(min_value), max_value = max(max_value),  ts=min(toStartOfInterval(ts, toIntervalMinute(3)));",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02949_ttl_group_by_bug.sql",
    "error": "mismatched input 'GROUP' expecting <EOF>"
  },
  {
    "query": "CREATE TEMPORARY TABLE tmp2 (n int) ORDER BY n; -- {serverError BAD_ARGUMENTS} CREATE TEMPORARY TABLE tmp2 (n int, PRIMARY KEY (n)); -- {serverError BAD_ARGUMENTS}\nCREATE TABLE log (n int);",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02184_default_table_engine.sql",
    "error": "mismatched input 'ORDER' expecting <EOF>"
  },
  {
    "query": "CREATE USER test_user_01075_x@localhost;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01075_allowed_client_hosts.sql",
    "error": "mismatched input '@' expecting <EOF>"
  },
  {
    "query": "CREATE USER u1_01292 IDENTIFIED WITH plaintext_password by 'qwe123', kerberos REALM 'qwerty10', bcrypt_password by '123qwe', ldap SERVER 'abc';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01292_create_user.sql",
    "error": "mismatched input ',' expecting <EOF>"
  },
  {
    "query": "CREATE USER u1_01292@'%';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01292_create_user.sql",
    "error": "mismatched input '@' expecting <EOF>"
  },
  {
    "query": "CREATE USER u2_01292@'%.myhost.com';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01292_create_user.sql",
    "error": "mismatched input '@' expecting <EOF>"
  },
  {
    "query": "CREATE USER u3_01292 DEFAULT ROLE ALL IDENTIFIED WITH no_password SETTINGS NONE HOST ANY;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01292_create_user.sql",
    "error": "mismatched input 'IDENTIFIED' expecting <EOF>"
  },
  {
    "query": "CREATE USER u3_01292@'192.168.%.%';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01292_create_user.sql",
    "error": "mismatched input '@' expecting <EOF>"
  },
  {
    "query": "CREATE USER u4_01292 IDENTIFIED WITH double_sha1_password BY 'qwe123' HOST ANY DEFAULT ROLE ALL EXCEPT r1_01292;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01292_create_user.sql",
    "error": "mismatched input 'EXCEPT' expecting <EOF>"
  },
  {
    "query": "CREATE USER u4_01292@'::1';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01292_create_user.sql",
    "error": "mismatched input '@' expecting <EOF>"
  },
  {
    "query": "CREATE USER u5_01292 DEFAULT ROLE ALL EXCEPT r2_01292;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01292_create_user.sql",
    "error": "mismatched input 'EXCEPT' expecting <EOF>"
  },
  {
    "query": "CREATE USER u5_01292@'%.host.com', u6_01292@'%.host.com';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01292_create_user.sql",
    "error": "mismatched input '@' expecting <EOF>"
  },
  {
    "query": "CREATE USER u5_01292@'65:ff0c::/96';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01292_create_user.sql",
    "error": "mismatched input '@' expecting <EOF>"
  },
  {
    "query": "CREATE USER u6_01292 DEFAULT ROLE ALL EXCEPT r1_01292, r2_01292;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01292_create_user.sql",
    "error": "mismatched input 'EXCEPT' expecting <EOF>"
  },
  {
    "query": "CREATE USER u7_01292@'%.host.com', u8_01292@'%.otherhost.com';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01292_create_user.sql",
    "error": "mismatched input '@' expecting <EOF>"
  },
  {
    "query": "CREATE USER u_03174_multiple_auth_show_create IDENTIFIED by '1', plaintext_password by '2', bcrypt_password by '3', by '4';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03174_multiple_authentication_methods_show_create.sql",
    "error": "mismatched input ',' expecting <EOF>"
  },
  {
    "query": "CREATE USER u_03174_multiple_auth_show_create IDENTIFIED WITH plaintext_password by '1', by '2', bcrypt_password by '3', by '4';",
    "fileName": "../ClickHouse/tests/queries/0_stateless/03174_multiple_authentication_methods_show_create.sql",
    "error": "mismatched input ',' expecting <EOF>"
  },
  {
    "query": "CREATE VIEW fx_5m AS SELECT\nsymbol,\ntoStartOfInterval(dt_close, INTERVAL 300 SECOND) AS dt_close,\nargMin(open, dt_close) open,\nmax(high) high,\nmin(low) low,\nargMax(close, dt_close) close,\nsum(volume) volume\nFROM fx_1m\nGROUP BY symbol, dt_close;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/02796_projection_date_filter_on_view.sql",
    "error": "mismatched input 'volume' expecting <EOF>"
  },
  {
    "query": "create view my_view as select * replace arrayMap(x -> x + 1,\\`Object.Key\\`) as \\`Object.Key\\` from my_table;",
    "fileName": "../ClickHouse/tests/queries/0_stateless/01913_fix_column_transformer_replace_format.sql",
    "error": "mismatched input 'replace' expecting <EOF>"
  }
]